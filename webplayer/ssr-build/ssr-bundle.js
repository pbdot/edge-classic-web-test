module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/webplayer/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "qVkA");
/******/ })
/************************************************************************/
/******/ ({

/***/ "HteQ":
/***/ (function(module, exports) {

module.exports = require("preact");

/***/ }),

/***/ "RoC8":
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};
    module.paths = [];
    // module.parent = undefined by default
    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }
  return module;
};

/***/ }),

/***/ "fZh3":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;},_typeof(obj);}var createEdgeModule=function(){var _scriptDir=typeof document!=='undefined'&&document.currentScript?document.currentScript.src:undefined;return function(){var _this=this;var createEdgeModule=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// include: shell.js
// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module=typeof createEdgeModule!='undefined'?createEdgeModule:{};// Set up the promise that indicates the Module is initialized
var readyPromiseResolve,readyPromiseReject;Module['ready']=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject;});["_main","_fflush","_I_WebMain","onRuntimeInitialized"].forEach(function(prop){if(!Object.getOwnPropertyDescriptor(Module['ready'],prop)){Object.defineProperty(Module['ready'],prop,{get:function get(){return abort('You are getting '+prop+' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js');},set:function set(){return abort('You are setting '+prop+' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js');}});}});// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
var Module=typeof Module!=='undefined'?Module:{};if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0;}Module.expectedDataFileDownloads++;(function(){// When running as a pthread, FS operations are proxied to the main thread, so we don't need to
// fetch the .data bundle on the worker
if(Module['ENVIRONMENT_IS_PTHREAD'])return;var loadPackage=function loadPackage(metadata){var PACKAGE_PATH='';if((typeof window==="undefined"?"undefined":_typeof(window))==='object'){PACKAGE_PATH=window['encodeURIComponent'](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf('/'))+'/');}else if(typeof process==='undefined'&&typeof location!=='undefined'){// web worker
PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf('/'))+'/');}var PACKAGE_NAME='C:/Dev/edge-classic-web-player/src/edge-classic.data';var REMOTE_PACKAGE_BASE='edge-classic.data';if(typeof Module['locateFilePackage']==='function'&&!Module['locateFile']){Module['locateFile']=Module['locateFilePackage'];err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');}var REMOTE_PACKAGE_NAME=Module['locateFile']?Module['locateFile'](REMOTE_PACKAGE_BASE,''):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata['remote_package_size'];function fetchRemotePackage(packageName,packageSize,callback,errback){var xhr=new XMLHttpRequest();xhr.open('GET',packageName,true);xhr.responseType='arraybuffer';xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size};}else{Module.dataFileDownloads[url].loaded=event.loaded;}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++;}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module['setStatus'])Module['setStatus']('Downloading data... ('+loaded+'/'+total+')');}else if(!Module.dataFileDownloads){if(Module['setStatus'])Module['setStatus']('Downloading data...');}};xhr.onerror=function(event){throw new Error("NetworkError for: "+packageName);};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){// file URLs can return 0
var packageData=xhr.response;callback(packageData);}else{throw new Error(xhr.statusText+" : "+xhr.responseURL);}};xhr.send(null);};function handleError(error){console.error('package error:',error);};function runWithFS(){function assert(check,msg){if(!check)throw msg+new Error().stack;}Module['FS_createPath']("/","soundfont",true,true);var PACKAGE_UUID=metadata['package_uuid'];var indexedDB;if((typeof window==="undefined"?"undefined":_typeof(window))==='object'){indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;}else if(typeof location!=='undefined'){// worker
indexedDB=self.indexedDB;}else{throw'using IndexedDB to cache data can only be done on a web page or in a web worker';}var IDB_RO="readonly";var IDB_RW="readwrite";var DB_NAME="EM_PRELOAD_CACHE";var DB_VERSION=1;var METADATA_STORE_NAME='METADATA';var PACKAGE_STORE_NAME='PACKAGES';function openDatabase(callback,errback){try{var openRequest=indexedDB.open(DB_NAME,DB_VERSION);}catch(e){return errback(e);}openRequest.onupgradeneeded=function(event){var db=/** @type {IDBDatabase} */event.target.result;if(db.objectStoreNames.contains(PACKAGE_STORE_NAME)){db.deleteObjectStore(PACKAGE_STORE_NAME);}var packages=db.createObjectStore(PACKAGE_STORE_NAME);if(db.objectStoreNames.contains(METADATA_STORE_NAME)){db.deleteObjectStore(METADATA_STORE_NAME);}var metadata=db.createObjectStore(METADATA_STORE_NAME);};openRequest.onsuccess=function(event){var db=/** @type {IDBDatabase} */event.target.result;callback(db);};openRequest.onerror=function(error){errback(error);};};// This is needed as chromium has a limit on per-entry files in IndexedDB
// https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177
// https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60
// We set the chunk size to 64MB to stay well-below the limit
var CHUNK_SIZE=64*1024*1024;function cacheRemotePackage(db,packageName,packageData,packageMeta,callback,errback){var transactionPackages=db.transaction([PACKAGE_STORE_NAME],IDB_RW);var packages=transactionPackages.objectStore(PACKAGE_STORE_NAME);var chunkSliceStart=0;var nextChunkSliceStart=0;var chunkCount=Math.ceil(packageData.byteLength/CHUNK_SIZE);var finishedChunks=0;for(var chunkId=0;chunkId<chunkCount;chunkId++){nextChunkSliceStart+=CHUNK_SIZE;var putPackageRequest=packages.put(packageData.slice(chunkSliceStart,nextChunkSliceStart),'package/'+packageName+'/'+chunkId);chunkSliceStart=nextChunkSliceStart;putPackageRequest.onsuccess=function(event){finishedChunks++;if(finishedChunks==chunkCount){var transaction_metadata=db.transaction([METADATA_STORE_NAME],IDB_RW);var metadata=transaction_metadata.objectStore(METADATA_STORE_NAME);var putMetadataRequest=metadata.put({'uuid':packageMeta.uuid,'chunkCount':chunkCount},'metadata/'+packageName);putMetadataRequest.onsuccess=function(event){callback(packageData);};putMetadataRequest.onerror=function(error){errback(error);};}};putPackageRequest.onerror=function(error){errback(error);};}}/* Check if there's a cached package, and if so whether it's the latest available */function checkCachedPackage(db,packageName,callback,errback){var transaction=db.transaction([METADATA_STORE_NAME],IDB_RO);var metadata=transaction.objectStore(METADATA_STORE_NAME);var getRequest=metadata.get('metadata/'+packageName);getRequest.onsuccess=function(event){var result=event.target.result;if(!result){return callback(false,null);}else{return callback(PACKAGE_UUID===result['uuid'],result);}};getRequest.onerror=function(error){errback(error);};}function fetchCachedPackage(db,packageName,metadata,callback,errback){var transaction=db.transaction([PACKAGE_STORE_NAME],IDB_RO);var packages=transaction.objectStore(PACKAGE_STORE_NAME);var chunksDone=0;var totalSize=0;var chunkCount=metadata['chunkCount'];var chunks=new Array(chunkCount);for(var chunkId=0;chunkId<chunkCount;chunkId++){var getRequest=packages.get('package/'+packageName+'/'+chunkId);getRequest.onsuccess=function(event){// If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now
if(chunkCount==1){callback(event.target.result);}else{chunksDone++;totalSize+=event.target.result.byteLength;chunks.push(event.target.result);if(chunksDone==chunkCount){if(chunksDone==1){callback(event.target.result);}else{var tempTyped=new Uint8Array(totalSize);var byteOffset=0;for(var chunkId in chunks){var buffer=chunks[chunkId];tempTyped.set(new Uint8Array(buffer),byteOffset);byteOffset+=buffer.byteLength;buffer=undefined;}chunks=undefined;callback(tempTyped.buffer);tempTyped=undefined;}}}};getRequest.onerror=function(error){errback(error);};}}function processPackageData(arrayBuffer){assert(arrayBuffer,'Loading data file failed.');assert(arrayBuffer.constructor.name===ArrayBuffer.name,'bad input to processPackageData');var byteArray=new Uint8Array(arrayBuffer);var curr;var compressedData={"data":null,"cachedOffset":28877531,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1150,2274,3169,4186,5106,5959,6893,7993,8958,9937,10812,11759,12659,13833,15001,16089,17217,18084,19216,20517,21707,22672,23764,25096,26500,28045,29543,30832,32189,33280,34541,36070,37316,38558,39686,41025,42402,43839,45353,46659,47923,49061,50214,51588,52961,54370,55910,57369,58402,59511,60714,62068,63479,64930,66498,67807,68881,70001,71160,72651,74030,75553,77082,78133,79217,80332,81569,83069,84540,86062,87491,88553,89816,90954,92389,93715,94913,95930,96818,97778,98714,99637,100536,101490,102434,103031,104005,104778,105478,106488,107398,108317,109277,110307,110892,111323,111659,111999,112426,112789,113162,113919,114485,115044,115762,116376,116994,117602,118237,119196,120137,120983,121725,122435,123364,124361,125186,125768,126680,127513,128375,128888,129533,130290,130864,131617,132429,133141,133951,134624,135458,135992,136662,137309,137725,138462,139084,139777,140564,141111,142019,142597,143066,143692,144449,145115,145624,146113,146791,147244,147686,148126,148732,149374,150164,150588,151021,151911,152766,153934,154442,154922,155429,156182,156927,157819,158499,159158,159812,160591,161375,161888,162758,163589,164205,164826,165513,166379,167079,167568,168100,168914,169610,170429,171400,172393,173208,174046,174561,175406,176307,177168,178054,178930,179791,180628,181454,182370,183139,183948,184822,185649,186538,187363,188393,189168,190087,191002,191922,192847,193776,194721,195688,196667,197645,198622,199590,200551,201511,202478,203434,204439,205327,206164,206967,207770,208638,209481,210285,211107,211927,212623,213470,214320,215198,215886,216708,217427,218219,218924,219616,220195,221268,222026,222774,223560,223977,224605,226588,228397,229200,230337,232385,233717,234324,236022,237955,238837,239780,241495,242836,244719,246767,248772,250786,252803,254836,256884,258896,260944,262977,265007,267055,269108,271149,273197,275249,277288,279342,281145,283193,285245,287293,289346,291394,293425,294994,295334,295782,296188,297398,298598,299905,301130,302032,302919,304008,305086,306135,306893,307998,309188,310390,311368,313416,315473,317521,319576,321631,323679,325727,327783,329831,331879,333927,335975,338028,340085,341544,343096,344582,345928,347422,348733,350110,351601,353649,355697,357745,359793,361841,363889,365937,367985,370033,372081,373976,376024,378072,380120,382168,384216,386264,388312,390360,392259,394307,396355,398403,400451,402499,404547,406569,408526,410574,412622,414670,416718,418766,420814,422713,424761,426809,428857,430905,432953,435001,436901,438949,440997,443045,445093,447141,449189,451237,453262,455197,457245,459293,461341,463389,465437,467485,469533,471581,473629,474830,476877,478925,480982,483030,485078,487126,489174,491222,493277,493435,493999,496023,498065,500113,502170,504053,505518,507575,509266,510608,512146,513316,513524,513744,514053,514273,514522,514735,514955,515169,515381,515612,515826,517220,518869,520431,522229,524176,526080,527975,529845,531747,533402,534513,535931,537039,538018,539049,540196,541237,542298,543391,544468,545651,546990,548127,549504,550497,551575,552685,553716,554886,556242,557373,558606,559610,560765,561822,562883,564006,565139,566162,567207,568517,569707,571054,572100,573649,575281,577157,579061,581109,583157,585205,587253,589301,591349,593397,595426,597281,599329,601377,603425,605473,607487,609379,611310,612801,613968,614799,615352,615853,617347,619328,621378,623115,624545,625762,626953,628061,629978,631975,633320,634526,635710,636540,638453,639746,641187,642653,643275,643392,643679,645076,647124,649176,651161,653209,655257,657292,659343,661387,663337,664874,666650,668698,670746,672794,674842,676890,678938,680986,683034,685082,687139,689196,691252,693300,695220,696779,698579,700437,702485,704533,706454,708455,710503,712560,714416,716464,718512,720560,722608,724656,726704,728752,730800,732848,734896,736944,738992,741040,743088,745136,747184,749232,751280,753328,755376,757424,759472,761520,763568,765616,767664,769712,771760,773808,775856,777904,779952,782000,784048,786096,788144,790192,792240,794288,796336,798384,800432,802480,804528,806576,808624,810672,812720,814768,816816,818864,820912,822960,825008,827056,829104,831152,833200,835248,837296,839344,841392,843440,845488,847536,849584,851632,853680,855728,857776,859824,861872,863920,865968,868016,870064,872112,874160,876208,878256,880304,882352,884400,886285,888333,890381,892429,894477,896525,898573,900621,902669,904717,906765,908813,910861,912909,914957,917005,919053,921101,923149,925197,927245,929293,931341,933389,935437,937485,939531,941579,943619,945637,947622,949598,950945,952317,953734,955145,956531,957919,959399,960851,962386,964053,965713,967194,968660,970079,971396,972974,974659,976389,978117,979762,981399,982882,984346,985945,987585,989234,990897,992554,994117,995672,997109,998716,1000601,1001881,1003229,1004520,1005724,1006922,1008135,1009267,1010502,1011968,1013399,1014787,1016101,1017398,1018630,1019933,1021391,1022926,1024588,1026156,1027728,1029328,1030863,1032420,1034009,1035527,1037053,1038558,1040014,1041414,1042789,1044156,1045633,1046945,1048200,1049592,1050858,1051927,1053181,1054307,1055569,1056744,1057934,1059206,1060319,1061598,1063503,1065560,1067590,1069577,1071604,1073646,1075657,1077681,1079656,1081691,1083689,1085745,1087787,1089767,1091815,1093832,1095856,1097884,1099863,1101911,1103960,1105931,1107964,1109990,1112038,1114072,1116047,1118095,1120130,1122124,1124172,1126229,1128211,1130259,1132293,1134288,1136336,1138376,1140349,1142397,1144445,1146471,1148499,1150555,1152525,1154550,1156531,1158579,1160627,1162654,1164702,1166753,1168616,1170412,1172460,1174462,1176341,1178183,1180231,1182086,1183874,1185922,1187970,1190018,1191893,1193653,1195697,1197577,1199359,1201411,1203190,1204949,1206815,1208510,1210119,1211608,1212905,1214407,1215962,1217475,1218960,1220462,1221999,1223527,1225041,1226558,1227263,1228000,1228555,1229165,1229871,1230597,1231259,1231868,1232472,1233076,1233618,1234249,1234996,1235608,1236316,1237036,1237752,1238427,1239217,1239979,1240762,1241330,1241914,1242419,1243965,1246000,1247859,1249595,1251337,1253000,1254680,1256381,1258096,1259810,1261510,1263210,1264898,1266922,1268782,1270562,1272310,1274002,1275737,1277498,1279242,1280844,1281816,1282806,1284373,1286049,1287630,1289420,1291152,1292622,1294104,1295589,1297070,1298532,1300014,1301504,1302973,1304475,1305367,1305986,1306509,1307154,1307816,1308377,1308845,1309427,1310059,1310605,1311240,1311855,1312505,1313029,1313491,1313777,1314289,1314870,1315145,1315516,1316043,1316501,1316799,1317278,1317530,1318045,1318369,1320321,1322207,1323948,1325604,1327261,1328946,1330604,1332266,1333923,1335611,1337314,1339009,1340680,1342366,1344400,1346125,1347803,1349488,1351212,1352967,1354719,1356419,1358081,1358714,1359443,1360186,1361929,1363814,1365446,1367086,1368713,1370517,1372280,1373803,1375291,1376791,1378306,1379788,1381285,1382771,1384264,1385770,1387261,1388776,1390269,1391751,1393255,1394740,1396252,1397726,1399230,1400716,1402187,1403381,1403947,1404305,1404862,1405451,1406161,1406649,1407242,1407842,1408409,1408705,1409260,1409779,1410260,1410649,1411119,1411483,1411912,1412505,1413104,1413784,1414377,1415013,1415633,1416356,1416975,1417480,1418177,1418589,1419087,1419410,1420063,1420478,1420919,1421290,1421784,1422257,1422630,1423205,1423719,1424197,1424541,1425139,1425706,1426286,1426910,1427319,1427784,1428289,1428654,1429260,1429686,1429999,1430445,1431040,1431375,1431926,1432347,1432614,1433039,1434017,1436009,1438028,1440050,1442052,1444077,1445998,1447702,1449386,1451086,1452777,1454492,1456207,1457922,1459589,1461284,1462966,1464669,1466362,1468025,1469710,1471398,1473113,1474795,1476512,1478239,1479950,1481658,1483333,1485042,1486744,1488455,1490141,1491833,1493881,1495929,1497984,1499683,1501283,1502984,1504672,1506351,1508074,1509764,1511432,1513139,1514864,1516597,1518246,1519886,1521613,1523339,1525063,1526698,1528323,1530015,1531624,1532981,1533876,1534843,1535692,1536466,1537149,1538153,1539189,1540218,1541223,1542454,1543627,1544716,1545641,1546734,1547691,1548695,1549593,1550575,1551546,1552952,1554941,1556889,1558729,1560430,1561904,1563429,1564982,1566468,1567995,1569527,1571013,1572463,1573976,1575470,1576964,1578055,1578654,1579057,1579518,1579968,1580409,1580825,1581251,1581712,1582309,1582962,1583471,1584051,1584676,1585120,1585553,1585895,1586029,1586147,1586698,1587265,1587910,1588426,1588803,1589401,1589742,1590204,1590701,1590982,1591330,1591936,1593956,1595953,1597779,1599488,1601177,1602870,1604561,1606267,1607983,1609657,1611353,1613075,1614832,1616519,1618198,1620026,1622074,1623838,1625549,1627229,1628902,1630689,1632407,1634100,1635945,1637721,1639347,1640681,1641652,1643062,1644316,1646097,1647975,1649530,1651071,1652592,1654077,1655581,1657070,1658551,1660034,1661520,1662979,1664448,1665571,1665831,1666023,1666250,1666601,1667118,1667428,1667670,1667890,1668339,1668643,1669028,1669478,1669846,1670038,1670136,1670355,1670564,1671024,1671326,1671771,1672202,1672518,1672833,1673306,1673792,1674275,1674568,1674952,1676951,1678973,1680860,1682557,1684241,1685954,1687623,1689322,1690996,1692658,1694324,1696020,1697737,1699433,1701153,1703155,1705110,1706920,1708812,1710486,1712275,1713954,1715633,1717418,1719247,1721029,1722918,1723878,1724371,1724996,1725902,1726903,1727727,1729382,1731047,1732790,1734455,1735937,1737434,1738922,1740426,1741899,1743369,1743766,1744206,1744522,1744987,1745328,1745631,1745935,1746439,1746873,1747260,1747578,1748062,1748347,1748575,1748887,1749296,1749747,1751584,1753529,1755229,1756929,1758614,1760283,1761962,1763655,1765352,1767108,1769143,1770868,1772587,1774246,1775953,1777765,1779613,1781162,1781991,1783522,1784749,1786471,1788065,1789587,1791079,1792578,1793661,1794291,1794695,1795191,1795685,1796099,1796644,1797140,1797664,1797940,1798247,1798672,1800142,1801941,1803604,1805254,1806891,1808577,1810336,1812178,1813873,1815478,1817231,1818241,1819987,1821629,1823190,1824705,1826169,1827686,1829195,1830684,1832177,1833670,1835155,1836638,1838160,1839660,1841165,1842657,1844144,1845659,1847136,1848172,1848689,1849173,1849625,1849975,1850344,1850839,1851315,1851683,1851972,1852509,1852953,1853401,1853891,1854264,1854677,1855110,1855548,1855978,1856429,1856690,1856885,1857134,1857515,1857813,1858042,1858237,1858437,1858798,1859101,1859314,1859762,1860012,1860413,1860582,1861029,1861379,1861802,1862228,1862488,1862913,1863315,1863839,1864066,1864492,1864766,1865033,1865413,1865772,1866030,1866554,1867078,1867503,1868769,1870745,1872671,1874626,1876643,1878393,1880057,1881732,1883398,1885086,1886778,1888472,1890147,1891813,1893538,1895240,1896906,1898578,1900242,1901916,1903579,1905253,1906920,1908602,1910257,1911935,1913623,1915301,1916986,1919038,1921086,1922960,1924572,1926211,1927841,1929511,1931132,1932911,1934621,1936346,1938085,1939765,1941422,1943011,1944709,1946377,1948082,1949775,1951409,1952007,1952652,1953259,1953904,1954530,1955350,1956321,1957861,1959240,1960278,1961359,1962506,1964054,1965465,1967003,1968269,1969639,1970987,1972704,1974551,1976364,1978207,1979932,1981546,1983020,1984486,1985970,1987449,1988954,1990440,1991948,1993437,1994933,1996437,1997929,1998810,1999291,1999799,2000434,2001082,2001663,2002107,2002565,2002944,2003262,2003538,2004040,2004274,2004780,2005277,2005823,2006294,2006691,2007169,2007752,2008336,2008980,2009579,2010131,2010497,2010949,2011219,2011725,2012258,2012928,2013610,2014188,2014463,2014970,2015295,2015864,2016086,2016231,2018208,2020182,2022194,2024029,2025735,2027424,2029103,2030807,2032506,2034183,2035872,2037588,2039278,2040969,2042688,2044437,2046133,2047856,2049545,2051364,2053412,2055398,2057172,2058940,2060691,2062469,2064277,2066008,2067842,2069533,2071250,2073096,2074848,2076588,2078426,2079603,2080528,2081395,2082832,2084328,2085864,2087437,2089099,2091007,2092718,2094270,2095874,2097602,2099075,2100564,2102055,2103562,2105041,2106541,2108033,2109511,2110990,2112492,2113990,2115484,2116966,2118451,2119918,2121397,2122870,2124342,2125830,2127343,2128846,2129895,2130521,2131110,2131801,2132291,2132867,2133408,2133987,2134607,2135190,2135783,2136274,2136689,2137119,2137676,2138238,2138722,2139101,2139613,2140164,2140690,2141202,2141742,2142337,2142803,2143172,2143573,2144160,2144586,2145180,2145662,2145999,2146548,2146981,2147331,2147869,2148257,2148608,2149082,2149334,2149900,2150340,2150888,2151371,2151611,2151992,2152486,2152810,2153126,2153628,2153865,2154185,2154564,2154891,2155345,2155863,2156310,2156640,2157035,2157603,2158036,2158277,2158676,2159063,2159538,2159894,2160140,2160487,2161119,2161621,2161977,2162389,2162875,2163158,2163891,2164460,2165563,2167619,2169675,2171723,2173771,2175828,2177885,2179862,2181585,2183318,2185056,2186818,2188587,2190340,2192080,2193787,2195521,2197274,2198990,2200738,2202432,2204187,2205947,2207687,2209463,2211210,2212946,2214693,2216455,2218209,2219921,2221617,2223358,2225130,2226913,2228678,2230424,2232170,2233938,2235696,2237418,2239162,2241103,2243151,2245199,2247247,2249295,2251149,2252839,2254654,2256476,2258349,2260236,2261935,2263795,2265573,2267370,2269155,2270853,2272632,2274469,2276278,2278104,2279876,2281722,2283549,2285420,2287268,2289011,2290798,2292645,2294510,2296357,2298202,2300057,2301894,2303749,2305632,2307482,2309180,2310309,2311172,2312030,2312790,2313511,2314632,2315953,2317328,2318538,2319867,2321061,2322567,2323693,2324523,2325331,2326319,2327664,2328944,2330464,2331968,2333939,2335885,2337694,2339424,2340996,2342521,2344152,2345717,2347311,2348810,2350291,2351795,2353306,2354827,2356337,2357807,2359256,2360743,2362253,2363722,2365193,2366690,2368172,2369719,2371196,2372690,2374191,2375686,2377186,2378662,2379238,2379679,2380341,2380837,2381387,2381826,2382202,2382796,2383425,2384043,2384622,2385264,2385884,2386521,2386999,2387528,2388037,2388603,2389176,2389522,2389992,2390424,2390981,2391512,2392088,2392485,2392959,2393377,2393797,2394432,2394695,2394939,2395151,2395581,2396113,2396441,2396791,2397214,2397496,2397926,2398417,2398869,2399127,2399498,2399888,2400262,2400762,2401022,2401382,2401585,2402027,2402549,2402813,2402976,2403154,2403506,2403719,2404108,2404624,2405156,2405592,2406180,2406610,2407091,2408083,2410122,2412061,2414007,2415977,2417993,2419798,2421434,2423120,2424796,2426469,2428143,2429863,2431574,2433260,2434950,2436619,2438269,2439919,2441619,2443322,2445009,2446685,2448394,2450095,2451789,2453471,2455146,2456822,2458473,2460157,2461815,2463484,2465156,2467001,2469049,2471097,2472931,2474588,2476288,2477994,2479742,2481558,2483272,2484917,2486566,2488260,2490028,2491783,2493572,2495262,2497004,2498706,2500473,2502100,2503784,2505535,2507270,2508404,2509291,2509891,2510487,2511079,2511778,2512549,2513541,2514687,2515459,2516249,2516821,2517542,2518319,2519024,2519573,2520321,2521129,2521803,2522100,2522643,2523302,2523991,2524887,2525522,2525984,2526574,2527736,2528916,2529798,2531435,2533122,2534926,2536698,2538465,2540096,2541720,2543277,2544906,2546526,2548025,2549493,2550984,2552462,2553940,2555404,2556887,2558360,2559835,2561288,2562782,2564262,2565729,2567202,2568689,2570150,2571619,2573099,2574563,2576028,2577506,2578990,2580476,2581961,2583449,2584937,2586417,2587885,2589339,2590797,2592265,2593716,2595185,2596625,2598107,2599581,2601039,2602501,2603966,2605431,2606908,2608403,2609891,2611369,2612829,2614289,2615766,2617247,2618703,2620137,2621562,2622987,2624439,2625904,2627403,2628876,2630311,2631783,2633266,2634730,2636201,2637672,2639163,2640651,2642105,2643594,2645031,2646506,2647977,2649456,2650944,2652414,2653884,2655297,2656398,2656987,2657398,2657971,2658522,2659019,2659419,2659825,2660295,2660685,2660937,2661388,2662029,2662516,2663019,2663517,2663973,2664530,2665191,2665756,2666330,2666975,2667364,2667960,2668472,2668815,2669382,2669950,2670532,2671083,2671454,2671921,2672409,2672926,2673457,2673838,2674321,2674818,2675352,2675851,2676416,2677056,2677624,2678220,2678707,2679005,2679234,2679872,2680378,2680873,2681446,2682056,2682691,2683202,2683755,2684293,2684761,2685306,2685686,2686124,2686673,2687125,2687633,2688029,2688536,2689060,2689404,2689825,2690340,2690780,2691321,2691762,2692203,2692699,2693198,2693793,2694369,2694997,2695610,2696219,2696732,2697341,2697828,2698367,2698994,2699425,2699687,2700129,2700550,2701060,2701528,2701997,2702481,2702795,2703101,2703603,2703943,2704320,2704747,2705312,2705849,2706043,2706580,2707107,2707661,2708149,2708650,2709165,2709550,2709840,2710392,2710681,2710899,2711091,2711563,2712152,2712719,2713261,2713503,2713950,2714407,2714732,2715042,2715353,2715721,2716153,2716614,2717080,2717565,2718108,2718530,2719095,2719705,2720186,2720754,2721316,2721834,2722344,2722774,2723157,2723639,2724266,2724799,2725309,2725888,2726311,2726823,2727316,2727571,2727799,2728402,2728821,2729330,2729856,2730372,2730892,2731397,2731812,2732149,2732604,2733146,2733711,2734178,2734653,2735123,2735545,2736019,2736533,2737118,2737615,2738102,2738569,2739032,2739478,2739951,2740621,2741232,2741657,2742039,2742442,2742913,2743409,2743794,2744386,2744894,2745280,2745649,2746096,2746402,2746692,2747070,2747441,2747799,2748216,2748505,2748825,2749370,2749895,2750518,2750933,2751423,2751803,2752232,2752818,2753294,2753775,2754302,2754792,2755285,2755778,2756271,2756780,2757185,2757679,2757884,2758253,2758751,2759145,2759725,2760282,2760761,2761216,2761754,2762296,2762733,2763175,2763787,2764357,2764824,2765244,2765802,2766301,2766806,2767327,2767762,2768242,2768707,2768798,2769112,2769681,2770215,2770699,2771284,2771755,2772337,2772863,2773357,2773872,2774183,2775422,2777340,2779301,2781225,2783142,2785063,2787025,2789025,2790975,2792983,2794931,2796891,2798913,2800832,2802816,2804810,2806772,2808680,2810724,2812777,2814529,2816192,2817813,2819445,2821125,2822818,2824543,2826253,2827959,2829653,2831336,2833017,2834687,2836380,2838059,2839748,2841419,2843114,2844790,2846474,2848153,2849837,2851517,2853217,2854907,2856601,2858288,2859966,2861643,2863322,2865010,2866706,2868384,2870067,2871751,2873412,2875089,2876770,2878448,2880132,2881822,2883477,2885135,2886787,2888477,2890161,2891836,2893506,2895177,2896843,2898457,2900134,2901828,2903494,2905158,2906836,2908546,2910225,2911905,2913587,2915264,2916935,2918612,2920302,2921960,2923653,2925364,2927088,2928744,2930412,2932074,2933720,2935411,2937107,2938748,2940424,2942084,2943729,2945392,2947056,2948731,2950404,2952082,2953742,2955417,2957079,2958792,2960506,2962191,2963880,2965573,2967277,2968974,2970653,2972319,2974032,2975735,2977423,2979098,2980773,2982438,2984113,2985799,2987493,2989184,2990853,2992527,2994531,2996579,2998627,3000675,3002723,3004771,3006819,3008867,3010924,3012972,3015020,3016764,3018357,3019995,3021698,3023447,3025216,3026984,3028655,3030378,3032120,3033803,3035445,3037142,3038836,3040566,3042230,3043947,3045685,3047351,3049088,3050804,3052559,3054314,3056020,3057719,3059338,3061092,3062809,3064465,3066118,3067788,3069429,3071083,3072746,3074482,3076116,3077778,3079533,3081253,3082998,3084759,3086491,3088246,3089955,3091653,3093314,3095066,3096780,3098486,3100178,3101799,3103528,3105293,3106868,3108413,3109909,3111443,3113136,3114838,3116565,3118278,3120057,3121849,3123577,3125290,3126979,3128634,3130443,3132146,3133752,3135453,3137205,3138958,3140735,3142470,3144184,3145861,3146676,3147543,3148312,3149079,3149882,3150552,3151368,3152082,3152682,3153294,3153813,3154589,3155104,3155728,3155953,3156327,3157036,3157748,3158577,3159314,3160002,3160681,3161230,3161957,3162730,3163556,3164271,3165030,3165824,3166649,3167283,3168129,3169123,3169793,3170511,3171367,3172199,3172921,3173651,3174284,3175025,3175673,3176317,3177133,3177905,3178698,3179447,3180043,3180762,3181547,3182059,3182618,3182976,3183448,3184220,3184701,3185552,3186211,3186603,3187428,3187898,3188858,3189690,3190593,3191336,3191895,3192318,3192857,3193488,3194112,3194930,3195570,3196157,3196763,3197273,3197793,3198334,3198952,3199743,3200489,3201174,3201985,3202725,3203283,3203924,3204813,3205413,3205864,3206586,3207474,3208334,3209144,3209830,3210409,3211147,3211737,3212440,3213207,3213919,3214536,3215057,3215811,3216554,3217228,3218027,3218581,3219118,3219666,3220103,3221051,3221892,3222773,3223648,3224331,3225022,3225971,3226464,3226883,3227724,3228532,3229325,3230024,3230793,3231534,3232169,3232898,3233623,3234327,3234998,3235563,3236253,3236746,3237241,3237896,3238655,3239032,3239433,3239712,3240048,3240333,3240631,3241053,3241357,3241603,3241915,3242222,3242511,3242823,3243257,3243805,3244260,3245020,3245383,3245904,3246387,3247066,3247630,3248301,3248927,3249467,3250272,3250997,3251542,3252233,3253051,3253885,3254436,3254747,3255169,3255675,3256019,3256346,3256779,3257068,3257412,3257876,3258187,3258484,3258798,3259029,3259364,3259955,3260469,3261033,3261624,3262337,3262861,3263137,3263312,3263568,3263822,3264067,3264218,3264376,3264626,3265445,3267040,3268752,3270251,3272163,3274081,3276012,3277918,3279857,3281762,3283702,3285656,3287571,3289525,3291474,3293354,3295151,3297031,3298936,3300740,3302598,3304072,3305568,3307035,3308526,3310017,3311516,3313003,3314488,3315985,3317476,3318494,3319004,3319440,3319947,3320465,3320854,3321355,3321866,3322282,3322701,3323018,3323562,3323992,3324519,3324962,3325480,3326032,3326234,3326616,3326968,3327391,3327799,3328176,3328511,3328945,3329217,3329516,3330065,3330209,3330560,3330938,3331379,3332524,3334481,3336480,3338355,3340041,3341735,3343429,3345140,3346860,3348558,3350244,3351953,3353645,3355333,3357009,3358672,3360343,3362015,3363940,3365988,3367735,3369528,3371225,3373008,3374825,3376481,3378293,3380053,3381860,3383582,3385268,3386984,3387918,3388608,3389378,3390760,3392256,3393526,3394866,3396195,3397701,3399413,3401135,3402665,3404127,3405637,3407116,3408579,3410037,3411538,3413033,3414533,3416029,3417169,3417451,3417879,3418381,3418769,3419225,3419914,3420364,3420960,3421578,3422140,3422652,3423093,3423567,3423982,3424145,3424665,3425080,3425366,3425747,3426095,3426388,3426941,3427489,3427657,3428104,3428565,3428791,3429040,3430797,3432816,3434804,3436472,3438163,3439854,3441565,3443298,3444990,3446697,3448375,3450094,3451784,3453483,3455190,3456870,3458890,3460895,3462526,3464187,3466010,3467847,3469684,3471428,3473150,3474961,3476783,3478524,3480307,3481994,3482577,3483361,3484286,3485347,3486478,3487946,3489242,3490852,3492595,3494289,3495815,3497432,3498958,3500472,3501945,3503435,3504923,3506410,3507906,3509400,3510886,3512329,3513809,3515280,3516782,3518235,3519703,3521183,3522688,3524167,3525647,3527140,3528594,3530043,3531512,3532985,3534481,3535943,3537415,3538901,3540385,3541871,3543345,3544838,3546336,3547835,3549323,3550803,3552226,3552800,3553370,3553878,3554582,3555317,3555984,3556562,3557080,3557696,3558203,3558862,3559528,3560158,3560743,3561352,3561975,3562625,3563177,3563753,3564382,3565060,3565608,3566162,3566760,3567266,3567930,3568515,3569140,3569746,3570342,3570737,3571346,3571858,3572522,3573081,3573575,3574165,3574710,3575200,3575783,3576312,3576894,3577426,3578051,3578570,3579006,3579312,3579496,3579956,3580437,3580766,3581319,3581768,3582132,3582579,3583211,3583880,3584449,3584694,3584918,3585268,3585489,3585622,3585807,3586302,3586691,3587220,3587671,3588145,3588696,3589335,3589841,3590402,3591054,3591700,3592293,3592796,3593246,3593701,3594229,3594866,3595367,3595926,3596526,3597009,3597310,3597883,3598358,3598888,3599344,3599694,3599870,3600283,3600906,3601566,3602133,3602670,3603071,3603535,3604146,3604689,3605188,3605704,3606376,3606996,3607564,3608073,3608491,3609103,3611101,3613112,3615078,3617078,3619075,3620995,3622961,3624914,3626922,3628811,3630529,3632248,3633960,3635663,3637381,3639108,3640799,3642506,3644219,3645893,3647601,3649275,3650987,3652693,3654397,3656081,3657758,3659442,3661144,3662836,3664463,3666131,3667773,3669441,3671114,3672790,3674462,3676164,3677863,3679539,3681205,3682886,3684578,3686273,3687969,3689664,3691313,3692985,3694664,3696364,3698036,3699705,3701362,3703035,3704706,3706431,3708479,3710527,3712575,3714623,3716534,3718258,3720007,3721725,3723362,3725064,3726816,3728566,3730304,3732123,3733842,3735537,3737229,3738946,3740632,3742240,3743941,3745607,3747312,3749031,3750783,3752487,3754190,3755941,3757716,3759399,3761013,3762684,3764385,3766094,3767808,3769492,3771077,3772043,3772933,3773788,3774632,3775417,3776251,3777088,3777849,3778653,3779467,3780563,3781555,3782430,3783299,3784216,3785250,3786558,3787666,3788689,3789785,3790929,3792119,3793262,3794469,3795533,3796935,3798321,3799753,3801096,3802077,3803355,3804402,3805143,3805849,3806505,3807165,3807786,3808139,3808617,3809495,3810474,3811374,3812516,3813661,3814601,3815450,3816050,3816624,3817589,3819047,3819822,3820982,3822193,3823677,3825507,3827365,3829228,3831126,3833044,3834976,3836881,3838819,3840571,3842155,3843628,3845116,3846597,3848083,3849571,3851074,3852524,3854009,3855489,3856982,3858478,3859067,3859441,3859655,3860170,3860691,3861081,3861461,3862014,3862447,3862746,3862905,3863063,3863297,3863641,3863914,3864380,3864790,3865234,3865704,3866016,3866319,3866683,3867082,3867452,3867911,3868215,3868529,3868872,3869174,3869590,3869917,3870393,3870728,3871037,3872496,3874479,3876472,3878390,3880070,3881771,3883424,3885127,3886812,3888492,3890192,3891904,3893618,3895316,3897011,3898729,3900413,3902095,3903936,3905984,3907798,3909515,3911207,3912995,3914704,3916439,3918225,3920075,3921814,3923564,3925270,3926977,3928295,3928929,3929732,3931282,3932713,3933297,3934101,3935301,3937042,3938868,3940580,3942183,3943721,3945192,3946697,3948191,3949694,3951199,3952548,3953040,3953581,3954128,3954735,3955115,3955606,3956159,3956570,3956987,3957427,3957834,3958179,3958443,3958769,3959102,3959614,3960073,3960255,3960708,3961151,3961429,3961758,3963030,3964987,3966844,3968552,3970267,3971947,3973651,3975347,3976993,3978677,3980360,3982059,3983873,3985921,3987598,3989414,3991154,3992971,3994676,3996412,3998221,4000061,4001209,4002000,4003028,4004763,4006327,4007882,4009266,4010881,4012518,4013970,4015465,4016844,4018313,4019794,4021282,4022780,4024243,4025727,4027206,4028694,4030207,4031714,4033189,4034697,4036186,4037131,4037661,4038085,4038673,4039241,4039745,4040316,4040800,4041166,4041830,4042367,4042875,4043468,4044092,4044517,4044837,4045321,4045665,4046039,4046501,4046961,4047465,4047880,4048394,4048645,4048884,4049192,4049795,4050399,4051045,4051634,4052194,4052718,4053210,4053737,4054056,4054578,4055014,4055555,4056167,4056738,4057121,4057649,4058136,4058572,4059566,4061564,4063565,4065561,4067481,4069162,4070884,4072589,4074296,4075990,4077670,4079339,4081004,4082732,4084443,4086123,4087802,4089492,4091230,4092943,4094655,4096379,4098119,4099827,4101554,4103602,4105650,4107440,4109160,4110836,4112575,4114357,4116007,4117699,4119396,4121019,4122684,4124448,4126219,4127947,4129707,4131508,4133225,4134169,4135057,4135826,4136900,4138656,4140170,4141469,4143004,4144456,4146144,4147565,4149400,4151207,4152896,4154498,4155880,4157363,4158865,4160338,4161811,4163278,4164767,4166251,4167727,4169198,4170678,4172159,4173662,4175127,4176607,4177739,4178236,4178849,4179441,4179957,4180377,4180826,4181371,4181931,4182522,4182849,4183282,4183753,4184180,4184513,4184854,4185298,4185826,4186336,4186856,4187343,4187846,4188376,4188804,4189100,4189347,4189536,4189812,4190353,4190789,4191038,4191235,4191313,4191534,4191926,4192239,4192464,4192889,4193371,4193684,4194166,4194481,4194754,4195013,4195379,4195965,4197900,4199832,4201780,4203782,4205457,4207137,4208828,4210505,4212189,4213872,4215545,4217267,4218927,4220591,4222246,4223933,4225631,4227291,4228973,4230641,4232317,4234000,4235689,4237352,4239394,4241442,4243329,4245044,4246757,4248453,4250235,4251906,4253734,4255395,4257074,4258773,4260468,4262106,4263856,4265546,4267257,4269089,4270070,4270816,4271360,4271980,4272914,4273773,4274551,4275314,4276184,4277043,4277684,4278194,4279657,4281043,4282813,4284498,4286146,4287767,4289417,4290864,4292349,4293857,4295362,4296854,4298366,4299811,4301267,4302749,4304239,4305758,4307249,4308752,4310241,4311736,4313234,4314713,4316144,4317617,4319147,4320660,4322064,4322553,4323119,4323637,4323940,4324410,4324910,4325454,4326014,4326566,4326929,4327288,4327813,4328380,4328655,4328881,4329479,4330015,4330539,4331017,4331410,4331849,4332077,4332254,4332451,4333053,4333602,4334099,4334653,4335186,4335687,4336157,4336614,4336986,4337408,4337905,4338484,4339046,4339405,4339802,4340228,4340627,4340988,4341380,4341507,4341659,4342057,4342622,4343014,4343593,4344122,4344476,4344811,4345226,4345706,4346048,4346406,4346687,4346817,4347248,4347634,4348062,4348468,4348882,4349345,4349672,4350071,4350531,4350908,4351383,4351702,4353597,4355609,4357623,4359613,4361670,4363719,4365485,4367197,4368873,4370524,4372182,4373889,4375575,4377227,4378936,4380633,4382305,4384012,4385699,4387386,4389057,4390754,4392427,4394120,4395828,4397512,4399217,4400895,4402553,4404213,4405921,4407655,4409339,4411030,4412740,4414458,4416166,4417939,4419987,4422035,4424083,4425940,4427676,4429324,4431019,4432740,4434403,4436026,4437854,4439593,4441384,4443119,4444862,4446538,4448238,4450000,4451714,4453420,4455155,4456866,4458546,4460370,4462139,4463835,4465561,4467401,4469235,4469995,4470473,4471124,4471731,4472242,4473057,4473713,4474521,4475047,4475357,4475544,4476249,4476939,4477528,4477985,4478456,4478849,4479131,4479642,4480095,4480417,4480516,4481109,4482300,4483288,4484180,4485757,4487471,4489283,4491039,4492824,4494522,4495999,4497443,4498927,4500422,4501941,4503440,4504252,4504701,4504909,4505150,4505486,4505879,4506130,4506275,4506572,4506804,4507099,4507585,4508027,4508322,4508756,4509215,4509752,4511764,4513642,4515332,4517014,4518738,4520405,4522089,4523748,4525423,4527429,4529179,4530941,4532729,4534444,4536118,4537726,4538488,4539332,4540580,4542002,4543717,4545285,4546913,4548416,4549932,4551438,4552928,4554405,4555897,4557370,4558868,4560356,4561823,4563303,4564790,4566289,4567797,4569268,4570757,4572237,4573657,4574218,4574839,4575466,4575919,4576475,4577029,4577564,4578022,4578606,4579169,4579741,4580207,4580740,4581308,4581917,4582372,4582969,4583359,4583888,4584483,4585014,4585536,4586090,4586694,4587253,4587557,4588037,4588659,4589116,4589542,4589943,4590361,4590853,4591330,4591914,4592253,4592690,4593202,4593724,4594107,4594667,4595155,4595679,4596269,4596780,4597367,4597950,4598438,4598766,4599438,4599884,4600332,4600916,4601459,4601927,4602481,4603147,4603732,4604333,4604888,4606780,4608810,4610839,4612853,4614876,4616604,4618316,4620022,4621741,4623434,4625128,4626835,4628532,4630245,4631947,4633607,4635284,4636996,4638668,4640378,4642058,4643788,4645477,4647171,4648840,4650488,4652156,4653836,4655533,4657243,4658962,4660875,4662923,4664971,4666733,4668429,4670234,4671942,4673640,4675289,4676966,4678667,4680395,4682271,4684039,4685877,4687673,4689291,4690966,4692774,4694530,4696275,4697409,4698140,4698945,4699724,4700385,4701544,4703279,4704725,4706012,4707522,4709302,4710905,4712300,4713541,4714891,4716748,4718594,4720393,4722172,4723972,4725553,4726973,4728563,4730068,4731555,4733032,4734513,4735992,4737484,4738951,4740430,4741919,4743411,4744871,4746356,4747843,4749344,4750860,4752359,4753853,4755351,4756835,4758330,4759406,4759781,4759893,4760162,4760472,4760933,4761488,4761973,4762390,4762916,4763443,4764090,4764623,4764898,4765372,4765750,4766218,4766601,4766986,4767539,4768140,4768603,4768954,4769285,4769379,4769964,4770138,4770438,4770940,4771422,4772006,4772525,4773052,4773432,4774008,4774499,4774786,4775170,4775702,4776074,4776624,4777242,4777778,4778365,4778757,4778979,4779245,4779670,4780145,4780535,4781016,4781426,4782016,4782575,4783152,4783825,4784343,4784912,4785427,4785837,4786206,4786651,4787090,4787249,4787489,4787857,4788241,4788706,4788990,4789448,4791460,4793517,4795519,4797536,4799587,4801475,4803135,4804825,4806536,4808217,4809866,4811538,4813224,4814870,4816555,4818248,4819920,4821605,4823286,4824992,4826716,4828396,4830088,4831764,4833445,4835157,4836848,4838531,4840239,4841961,4843664,4845342,4847040,4848693,4850383,4852243,4854291,4856339,4858377,4860012,4861790,4863560,4865252,4866987,4868655,4870377,4872120,4873827,4875562,4877316,4879118,4880891,4882606,4884355,4886120,4887835,4889460,4891238,4892921,4894577,4896074,4897844,4898593,4899325,4900059,4900869,4901720,4902447,4903081,4903819,4904488,4905163,4906071,4907082,4908064,4909131,4909876,4910703,4911441,4912482,4913564,4914476,4915510,4916455,4917494,4918340,4919250,4920170,4920971,4921411,4922165,4922618,4922799,4923663,4924962,4926555,4928336,4930171,4932005,4933847,4935593,4937129,4938648,4940177,4941688,4943173,4944664,4946154,4947667,4949158,4950632,4952152,4953673,4954246,4954690,4954931,4955199,4955589,4956144,4956615,4957043,4957500,4957908,4958322,4958857,4959185,4959560,4959981,4960358,4960736,4961179,4961606,4961891,4962245,4962689,4963080,4963476,4963852,4964167,4964387,4964726,4964987,4965260,4965757,4966250,4966509,4966760,4967033,4967416,4969423,4971397,4973409,4975116,4976804,4978507,4980189,4981851,4983516,4985196,4986866,4988554,4990207,4991885,4993571,4995267,4996980,4998665,5000461,5002509,5004454,5006198,5007946,5009687,5011447,5013111,5014829,5016515,5018128,5019859,5021631,5023355,5025102,5026722,5027453,5028090,5028783,5029716,5030870,5031985,5032865,5034165,5036029,5037920,5039753,5041287,5042835,5044304,5045805,5047305,5048793,5050295,5051790,5053296,5054788,5056284,5057774,5059269,5060772,5062279,5063800,5065292,5066774,5068265,5069768,5071270,5072769,5074249,5075754,5077246,5078732,5080211,5081734,5083261,5084748,5086238,5087763,5089268,5090728,5092077,5092458,5092996,5093545,5093836,5094412,5094989,5095503,5096132,5096683,5097329,5097935,5098384,5098818,5099364,5099879,5100328,5100727,5101318,5101864,5102488,5103029,5103560,5104099,5104704,5105109,5105611,5106134,5106722,5107366,5107812,5108213,5108683,5109165,5109755,5110273,5110734,5111213,5111715,5112259,5112819,5113215,5113793,5114250,5114668,5115016,5115262,5115642,5116149,5116506,5116820,5117174,5117683,5117937,5118459,5118811,5119312,5119896,5120499,5120873,5121282,5121806,5122387,5123042,5123596,5124173,5124721,5125143,5125670,5126127,5126683,5127185,5127617,5128066,5128421,5128949,5129471,5129894,5130379,5130837,5131209,5131620,5132173,5132595,5133002,5133561,5133864,5134266,5134557,5134787,5135417,5135908,5136272,5136665,5137070,5137442,5137812,5138451,5138741,5139226,5139606,5139865,5140132,5140453,5140833,5141187,5141489,5141919,5142171,5142438,5142883,5143167,5145078,5147075,5149112,5151098,5153067,5155097,5157101,5159118,5161168,5163163,5164852,5166542,5168231,5169904,5171606,5173299,5174980,5176694,5178393,5180110,5181841,5183552,5185278,5187008,5188724,5190458,5192187,5193935,5195649,5197389,5199087,5200770,5202479,5204150,5205846,5207531,5209195,5210875,5212584,5214263,5215972,5217657,5219324,5220980,5222659,5224357,5226061,5227785,5229497,5231240,5232973,5234724,5236429,5238090,5239812,5241516,5243211,5244863,5246545,5248199,5250237,5252285,5254333,5256381,5258429,5260385,5262073,5263761,5265414,5267064,5268735,5270403,5272122,5273819,5275654,5277400,5279127,5280874,5282627,5284344,5286028,5287704,5289442,5291108,5292830,5294492,5296118,5297842,5299496,5301283,5303002,5304660,5306347,5307954,5309635,5311307,5313037,5314833,5316532,5318281,5320043,5321659,5323299,5324807,5325586,5326377,5327110,5327919,5328794,5329319,5330132,5330818,5331369,5332421,5333260,5334122,5335129,5336066,5336417,5337009,5337568,5338318,5339240,5339745,5340495,5341089,5341821,5342504,5343187,5343812,5344426,5345079,5345331,5345678,5346494,5347253,5348125,5349099,5350155,5351237,5352117,5353002,5353864,5354549,5355088,5355830,5357372,5358730,5360535,5362372,5364183,5366062,5367871,5369671,5371524,5373382,5375012,5376656,5378197,5379696,5381210,5382695,5384192,5385680,5387170,5388646,5390129,5391615,5392539,5392947,5393472,5393996,5394379,5394955,5395395,5395927,5396263,5396666,5397038,5397412,5397542,5397657,5397731,5398284,5398867,5399520,5400042,5400590,5401196,5401756,5402041,5402175,5402235,5402627,5402976,5403335,5403621,5404057,5404126,5404257,5405058,5407106,5409147,5411099,5412792,5414467,5416170,5417863,5419574,5421311,5423043,5424743,5426424,5428108,5429828,5431545,5433248,5435038,5437086,5439099,5440912,5442745,5444586,5446349,5448127,5449855,5451639,5453363,5455114,5456919,5458738,5460589,5461153,5461883,5462725,5463528,5464302,5465065,5466619,5467161,5468671,5470286,5471925,5473461,5475038,5476608,5478115,5479574,5481074,5482563,5484073,5485555,5487051,5488520,5490017,5491503,5492994,5494458,5495959,5497446,5497889,5498266,5498584,5498850,5499219,5499672,5499996,5500360,5500759,5500980,5501350,5501905,5502413,5502959,5503562,5504033,5504479,5504818,5505098,5505515,5505805,5506190,5506555,5506983,5507544,5507831,5508211,5508539,5508933,5509435,5509779,5510091,5510563,5510973,5511439,5511894,5512336,5512540,5513857,5515863,5517911,5519873,5521528,5523192,5524853,5526562,5528259,5529945,5531636,5533356,5535071,5536781,5538487,5540154,5541814,5543462,5545139,5546776,5548573,5550621,5552522,5554170,5555884,5557723,5559583,5561449,5563237,5565023,5566856,5568683,5570447,5572112,5573812,5575400,5576017,5576680,5577336,5578052,5578509,5578854,5579151,5579625,5580006,5580345,5580774,5581267,5582125,5583620,5584618,5584961,5586017,5587506,5589029,5590538,5592037,5593805,5595435,5597028,5598660,5600146,5601661,5603180,5604692,5606213,5607734,5609249,5610773,5612275,5613794,5615301,5616814,5618327,5619845,5621334,5622858,5624384,5625894,5627394,5628903,5630414,5631928,5633454,5634958,5636466,5637997,5639502,5640998,5642544,5644085,5645611,5647163,5648680,5650205,5651729,5653233,5654738,5656240,5657742,5659247,5660737,5662223,5663681,5665166,5666666,5668151,5669655,5670865,5671403,5671887,5672471,5672893,5673414,5674005,5674487,5674835,5675475,5676125,5676797,5677502,5678220,5678869,5679590,5680259,5680898,5681544,5682200,5682923,5683661,5684217,5684888,5685490,5685951,5686394,5687011,5687554,5688103,5688806,5689487,5690080,5690786,5691399,5692032,5692610,5693264,5693750,5694405,5694993,5695491,5696172,5696747,5697310,5697901,5698382,5698930,5699495,5699977,5700566,5701170,5701811,5702390,5702939,5703512,5704109,5704715,5705234,5705820,5706360,5707032,5707495,5707940,5708503,5708987,5709541,5710156,5710713,5711303,5711877,5712502,5713080,5713703,5714243,5714721,5715343,5716043,5716659,5717112,5717682,5718228,5718699,5719214,5719775,5720301,5720941,5721461,5721898,5722358,5722997,5723556,5724118,5724833,5725392,5726109,5726853,5727580,5728201,5728836,5729526,5730230,5730952,5731556,5732130,5732776,5733463,5734085,5734693,5735178,5735669,5736256,5736871,5737419,5738071,5738696,5739259,5739868,5740475,5741038,5741646,5742237,5742802,5743307,5743783,5744158,5744686,5745259,5745844,5746366,5746935,5747467,5747994,5748511,5748960,5749542,5750099,5750741,5751243,5751656,5752066,5752650,5753174,5753686,5754259,5754565,5755011,5755573,5756064,5756567,5757069,5757492,5757834,5759722,5761773,5763827,5765863,5767908,5769947,5771995,5774047,5776095,5778143,5780196,5782222,5784275,5786151,5787866,5789567,5791247,5792950,5794659,5796389,5798077,5799776,5801489,5803185,5804898,5806595,5808297,5810001,5811699,5813413,5815152,5816877,5818589,5820313,5822039,5823784,5825525,5827275,5829032,5830797,5832557,5834305,5836029,5837744,5839429,5841134,5842827,5844525,5846200,5847867,5849578,5851313,5853000,5854693,5856387,5858110,5859809,5861513,5863249,5865007,5866767,5868530,5870266,5872019,5873729,5875446,5877167,5878906,5880634,5882376,5884109,5885870,5887622,5889357,5891112,5892859,5894605,5896356,5898085,5899926,5901982,5904030,5906078,5908126,5910174,5912222,5914270,5916144,5917857,5919499,5921210,5922999,5924656,5926359,5928090,5929845,5931543,5933311,5935104,5936910,5938747,5940528,5942359,5944171,5946003,5947767,5949547,5951279,5953093,5954881,5956504,5958103,5959876,5961604,5963254,5964829,5966543,5968305,5969952,5971698,5973368,5975093,5976821,5978682,5980505,5982330,5984157,5985974,5987711,5989416,5991106,5992722,5994400,5996182,5998020,5999830,6001648,6003521,6005386,6007190,6008954,6009760,6010686,6011667,6012559,6013556,6014374,6015142,6015972,6016932,6017757,6018987,6020307,6021682,6022842,6024064,6025266,6026510,6027805,6029129,6030368,6031592,6032748,6033869,6034578,6035300,6036128,6037005,6037940,6038942,6040019,6041358,6042089,6042569,6043538,6045228,6046538,6048440,6050345,6052014,6053866,6055735,6057648,6059473,6061287,6063099,6064907,6066800,6068512,6070158,6071610,6073112,6074601,6076101,6077592,6079085,6080594,6082084,6083570,6084639,6084739,6084902,6085198,6085245,6085405,6085709,6086068,6086358,6086741,6087028,6087381,6087602,6087865,6088185,6088398,6088579,6088666,6088959,6089426,6089888,6090049,6090365,6090895,6091315,6091753,6092074,6092329,6092467,6094297,6096325,6098306,6099983,6101687,6103366,6105073,6106801,6108455,6110127,6111836,6113565,6115297,6116997,6118670,6120331,6122315,6124358,6126152,6127936,6129522,6131238,6132974,6134728,6136500,6138275,6140146,6142022,6143693,6145076,6145767,6146984,6148603,6150170,6151754,6153345,6154962,6156483,6157864,6159155,6160664,6161902,6162332,6162773,6163305,6163845,6164380,6164875,6165509,6167398,6169128,6170816,6172631,6174421,6176196,6177477,6178089,6179085,6180563,6182107,6183597,6185093,6186594,6187281,6187526,6187995,6188381,6188939,6189238,6189348,6189728,6190186,6190636,6190805,6191114,6191666,6192790,6194704,6196382,6198056,6199746,6201440,6203106,6204879,6206732,6208335,6210074,6211826,6213496,6214399,6215557,6217289,6219076,6220714,6222149,6223643,6225127,6226633,6228131,6228857,6229299,6229710,6230116,6230544,6230995,6231328,6231626,6232154,6232583,6233049,6233407,6233950,6234448,6234894,6235469,6236887,6238791,6240446,6242121,6243791,6245471,6247150,6248836,6250612,6252464,6254175,6255880,6257585,6259390,6260357,6260947,6262088,6263114,6264099,6265688,6267308,6269347,6271402,6273458,6275509,6277559,6279230,6280834,6282361,6283719,6284665,6285472,6286312,6287087,6287949,6288808,6290331,6292326,6294345,6296255,6298198,6299650,6300166,6301344,6302476,6303975,6305176,6306530,6307909,6309180,6310332,6311182,6311808,6312905,6314093,6315278,6316349,6317330,6318059,6319055,6320023,6321036,6322106,6323096,6324235,6325320,6326481,6327245,6327920,6328668,6329593,6330543,6331281,6332203,6332952,6333791,6335408,6337456,6338483,6339572,6340631,6341549,6342505,6343569,6344690,6345693,6346716,6347681,6348880,6349749,6350790,6351861,6352787,6353802,6354723,6355604,6356349,6357143,6358014,6359317,6360728,6362319,6363613,6365410,6367431,6369479,6371530,6373250,6374875,6376899,6378947,6380995,6383052,6384798,6386840,6388896,6390487,6392502,6394550,6396598,6398646,6400694,6402742,6404790,6406838,6408893,6410925,6412949,6414975,6417012,6419033,6421008,6422922,6424698,6426345,6428393,6430441,6432489,6434537,6436585,6438633,6440681,6442729,6444777,6446825,6448873,6450929,6452896,6454810,6456627,6458343,6459548,6461599,6463543,6465278,6467137,6469135,6471190,6473241,6475289,6477337,6479394,6481451,6483499,6485547,6487595,6489643,6491691,6493739,6495787,6497844,6499691,6500909,6502396,6504451,6506499,6508547,6510595,6512643,6514691,6516739,6518787,6520835,6522883,6524931,6526979,6529027,6531075,6533123,6535171,6537219,6539267,6541320,6543306,6544910,6546958,6549006,6551054,6553074,6554840,6556315,6557632,6558801,6559738,6560347,6561255,6563312,6565360,6567408,6569456,6571504,6573561,6575617,6577674,6579731,6581779,6583427,6584753,6585861,6587909,6589959,6591963,6593872,6595692,6597323,6598757,6599800,6600613,6601057,6601235,6602209,6604239,6606287,6608335,6610383,6612431,6614479,6616535,6618583,6620631,6622679,6624727,6626778,6628820,6630726,6632466,6634037,6635467,6637021,6639069,6641117,6643174,6645222,6647275,6649323,6651371,6653419,6655467,6657515,6659563,6661590,6663604,6665415,6667028,6668383,6669164,6670788,6672587,6674617,6676633,6678681,6680735,6682774,6684630,6686209,6687292,6688684,6690736,6692792,6694840,6696554,6698602,6700650,6702657,6704221,6704338,6704486,6704609,6704634,6706157,6708205,6710262,6712318,6714366,6716414,6718462,6720517,6722546,6724497,6726545,6728593,6730641,6732664,6734712,6736760,6738808,6740856,6742904,6744952,6747000,6749055,6751111,6753159,6754899,6756597,6758613,6760385,6762265,6763905,6765962,6767864,6769304,6770633,6772351,6774325,6776360,6778417,6780465,6782518,6784567,6786584,6788323,6789462,6789548,6791357,6793405,6795453,6797509,6799562,6801617,6803673,6805730,6807787,6809822,6811864,6813810,6815639,6817551,6819391,6820982,6823030,6825078,6827126,6829182,6831230,6833278,6835326,6837374,6839294,6841342,6843390,6845438,6847486,6849543,6851600,6853648,6855696,6857294,6859334,6861295,6863265,6864611,6866264,6868312,6870368,6872351,6874058,6876013,6878061,6880109,6882157,6884214,6886270,6888318,6890366,6892414,6894466,6896106,6897387,6899235,6901208,6903207,6905232,6907286,6909327,6911354,6913384,6915427,6917475,6919530,6921573,6923595,6925604,6927594,6929560,6931576,6933624,6935675,6937717,6939773,6941797,6943840,6945872,6947918,6949966,6951999,6954047,6956059,6957933,6959661,6961199,6962568,6963802,6964976,6966108,6967246,6968277,6969349,6970447,6971416,6972432,6973272,6974161,6975075,6975749,6976414,6976850,6977281,6977483,6977668,6977740,6977804,6978452,6980500,6982535,6984589,6986646,6988635,6990444,6992186,6993688,6994658,6995979,6998027,7000075,7002123,7004171,7006061,7008109,7010157,7012205,7014167,7016215,7018263,7020311,7022325,7024382,7026430,7028478,7030533,7032585,7034630,7036678,7038734,7040788,7042822,7044875,7046878,7048814,7050682,7052463,7054227,7056002,7057582,7059634,7061682,7063730,7065778,7067826,7069878,7071929,7073670,7075725,7077782,7079830,7081878,7083933,7085988,7088040,7090067,7092030,7094078,7096114,7098014,7099440,7101494,7103542,7105506,7106944,7108969,7111026,7113074,7115122,7117170,7119218,7121273,7123329,7125386,7127380,7129142,7130888,7132368,7133752,7135006,7136137,7138002,7140050,7142098,7144155,7146208,7148211,7150046,7151592,7152279,7152765,7153917,7155476,7157265,7159192,7161123,7163077,7165021,7167047,7168918,7170579,7172046,7173348,7174281,7174793,7175458,7177335,7179377,7181400,7182647,7183528,7185576,7187624,7189672,7191720,7193768,7195816,7197864,7199912,7201916,7203917,7205969,7207963,7209688,7211031,7211841,7213881,7215898,7217574,7218925,7220899,7222947,7224995,7227045,7229093,7231144,7233201,7235254,7237258,7239222,7240852,7242727,7244775,7246195,7246799,7248718,7250766,7252814,7254862,7256910,7258958,7261006,7263009,7264765,7266790,7268838,7270895,7272943,7274991,7277048,7279096,7280700,7281765,7283366,7285317,7287358,7289414,7291462,7293426,7294593,7296488,7298290,7300344,7302392,7304440,7306488,7308527,7310532,7312193,7313455,7314311,7315054,7315453,7315806,7315994,7316627,7318675,7320723,7322771,7324819,7326867,7328915,7330963,7333011,7335059,7337107,7339155,7341203,7343251,7345299,7347347,7349395,7351443,7353404,7354808,7356856,7358904,7360952,7363000,7365048,7367096,7369144,7371162,7371582,7372227,7373751,7375550,7377590,7379647,7381695,7383743,7385791,7387839,7389887,7391935,7393983,7396031,7398036,7399780,7401355,7402757,7404084,7405218,7406212,7407258,7408010,7408776,7409641,7410576,7411305,7412464,7414335,7416392,7418440,7420488,7422536,7424584,7426632,7428680,7430728,7432776,7434824,7436872,7438920,7440968,7442564,7443607,7444291,7445063,7447052,7449100,7451148,7453205,7455183,7456407,7458464,7460350,7462029,7463146,7464064,7464724,7465306,7467010,7469064,7470710,7471457,7472557,7474434,7476378,7478411,7480468,7482519,7484563,7486602,7488648,7490471,7492087,7493867,7495813,7497674,7499725,7501779,7503827,7505875,7507923,7509977,7512025,7514073,7516114,7518031,7519682,7520871,7521467,7522562,7524461,7526518,7528566,7530614,7532662,7534710,7536758,7538815,7540871,7542921,7544808,7546448,7547788,7548649,7549429,7549675,7550824,7552872,7554917,7556841,7558749,7560451,7562190,7564113,7566161,7568089,7569736,7571054,7572780,7574519,7576354,7578405,7580453,7582370,7584054,7585473,7587347,7589234,7590907,7592953,7594889,7596619,7598405,7599779,7601071,7602264,7604229,7606207,7608216,7610245,7612202,7614220,7616127,7618175,7620223,7622278,7624268,7625626,7626399,7628304,7630352,7632400,7634448,7636496,7638473,7639049,7640921,7642969,7645026,7647074,7649128,7650004,7650804,7652858,7654913,7656968,7659016,7661071,7663119,7665167,7667098,7669155,7670952,7672673,7674721,7676548,7678568,7680616,7682430,7684290,7686342,7688219,7689491,7690865,7692918,7693804,7695183,7697231,7699279,7701327,7703312,7703909,7703987,7704554,7706350,7708398,7710455,7712512,7714560,7716615,7718672,7720615,7722663,7724711,7726741,7728707,7730755,7732730,7734778,7736828,7738853,7740901,7742954,7745002,7746841,7748890,7750519,7752523,7753924,7755867,7757166,7758656,7760287,7761999,7763394,7764709,7766323,7768380,7770268,7772179,7774227,7776275,7778323,7780371,7782253,7783472,7784386,7785040,7787088,7788646,7789952,7791939,7793987,7796035,7798092,7800140,7802197,7804245,7806300,7808348,7810404,7812452,7814480,7816392,7818068,7819579,7820882,7821905,7822625,7824608,7826656,7828704,7830752,7832800,7834848,7835581,7837019,7839060,7841108,7843156,7845060,7847016,7849067,7851123,7853171,7855228,7857276,7859324,7861380,7863416,7865310,7866929,7868147,7868492,7870336,7872384,7874432,7876480,7878475,7879193,7879387,7881129,7883186,7885234,7887282,7889339,7891387,7893443,7895491,7897539,7899242,7900211,7900474,7901351,7903036,7905081,7907129,7909177,7911225,7913273,7915321,7917369,7919425,7921473,7923528,7925581,7927535,7929354,7931134,7932906,7934578,7936082,7937415,7938665,7939896,7941035,7941944,7942611,7943179,7943728,7944229,7944697,7945150,7945562,7945994,7946407,7946876,7947446,7947926,7948382,7948537,7949088,7950247,7951441,7952656,7953863,7954963,7955943,7956870,7957679,7958277,7958672,7958883,7958965,7959433,7960826,7962550,7964535,7966591,7968639,7970680,7972709,7974670,7976572,7978447,7980329,7982239,7984226,7986180,7987571,7989497,7991547,7993594,7995651,7997649,7999686,8001737,8003767,8005801,8007817,8009780,8011837,8013781,8015703,8017732,8019777,8021825,8023765,8025470,8027407,8029312,8031069,8033063,8035094,8036516,8038001,8039853,8041909,8043963,8045886,8047784,8049759,8051517,8053516,8055413,8057461,8059518,8061575,8063521,8065478,8067526,8069451,8070901,8072528,8074032,8075325,8076114,8076565,8077100,8077451,8078155,8078726,8079550,8080956,8082489,8083925,8085357,8086642,8088045,8089584,8091237,8093039,8094873,8096686,8098638,8100676,8102698,8104753,8106810,8108858,8110913,8112970,8115026,8117074,8119129,8121149,8123131,8125125,8127118,8129110,8130950,8132644,8134363,8136062,8137751,8139361,8140840,8142270,8143716,8145138,8146550,8147827,8149024,8150234,8151457,8152661,8153747,8154733,8155629,8156594,8157735,8159286,8160701,8162172,8163676,8165097,8166577,8168140,8169697,8171109,8172680,8174146,8175699,8177399,8179054,8180640,8182288,8183828,8185284,8187014,8188661,8190501,8192199,8193960,8195778,8197627,8199512,8201391,8203296,8205268,8207211,8209229,8211272,8213329,8215386,8217434,8219482,8221536,8223581,8225554,8227406,8229104,8230583,8231456,8233207,8235038,8237092,8239140,8241188,8243195,8243900,8244108,8245830,8247878,8249934,8251798,8253399,8255260,8256518,8258571,8260619,8261880,8263754,8265802,8267850,8269906,8271904,8273538,8275587,8277460,8278813,8280408,8282456,8284504,8286552,8288600,8290648,8292696,8294637,8296694,8298742,8300790,8302838,8304886,8306934,8308982,8311030,8313078,8315126,8317183,8319216,8321256,8323304,8325352,8327400,8329456,8331504,8333451,8335430,8337460,8339508,8341556,8343608,8345656,8347712,8349760,8351808,8353864,8355912,8357950,8359236,8361086,8363137,8365185,8367238,8369286,8371333,8373389,8375426,8377297,8379239,8380910,8382448,8384034,8385500,8387308,8389061,8390554,8391978,8393230,8394324,8395062,8395467,8397524,8399581,8401629,8403683,8405733,8407628,8409145,8409801,8410193,8411662,8413710,8415767,8417523,8419101,8420576,8422392,8424222,8424582,8424782,8425875,8426527,8426776,8427319,8427708,8428069,8428435,8428825,8429052,8429637,8430389,8431211,8432080,8432651,8433193,8434031,8434982,8435644,8436461,8437910,8439360,8440768,8441963,8443146,8444333,8445135,8445754,8446403,8446678,8447009,8447520,8447959,8448522,8449596,8450267,8450695,8451168,8451495,8452339,8453051,8453611,8454193,8454799,8455279,8455690,8456516,8457331,8458287,8459071,8459892,8460531,8461327,8462206,8462846,8463619,8464490,8465318,8465536,8466273,8466800,8467395,8468300,8468811,8469120,8469404,8469721,8470008,8470519,8470776,8471218,8471371,8471753,8472223,8472677,8473395,8473999,8474293,8474700,8474974,8475449,8476140,8476491,8476926,8477582,8477924,8478258,8478473,8479095,8479797,8480056,8480510,8480959,8481461,8482334,8483101,8483263,8483378,8483750,8483968,8484666,8485542,8485858,8486255,8486704,8486993,8487333,8487998,8488301,8488900,8489850,8490418,8490655,8491018,8491261,8491722,8491996,8492247,8492559,8492890,8493831,8494299,8494797,8495249,8495911,8496377,8496870,8497292,8497528,8498202,8498537,8498868,8499517,8500072,8500858,8501121,8501306,8501706,8502163,8502820,8503183,8503919,8504148,8504928,8505399,8505781,8506030,8506712,8507048,8507714,8508256,8508726,8509214,8509652,8510401,8510921,8511311,8511732,8512316,8513142,8513569,8514544,8515715,8516894,8518024,8519189,8520407,8521039,8521454,8522109,8523203,8524348,8525137,8525606,8526299,8527473,8527920,8528226,8528452,8528636,8528953,8529161,8529393,8529522,8529752,8530197,8530520,8530671,8530804,8530937,8531335,8531862,8532481,8532811,8533499,8534124,8534645,8535453,8535746,8536347,8536541,8537011,8537410,8537685,8537975,8538440,8539019,8539444,8539947,8540476,8540745,8541029,8541453,8541946,8542165,8542397,8542658,8542891,8543229,8543420,8543583,8544049,8544372,8544639,8544819,8545103,8545290,8545541,8546072,8546559,8547205,8547494,8548081,8549059,8549331,8549841,8550295,8550823,8551462,8551980,8552395,8552982,8553724,8554689,8555706,8556138,8556661,8556967,8557357,8557775,8558077,8558505,8558883,8559202,8559449,8559745,8560006,8560135,8561055,8562128,8562772,8563442,8564300,8564708,8565370,8565806,8566094,8566595,8567210,8567685,8567911,8568221,8568628,8569565,8570169,8571119,8571799,8572194,8572800,8573001,8573275,8573609,8573787,8574109,8574321,8574947,8575460,8576100,8576445,8576892,8577621,8578106,8578810,8579210,8579276,8579750,8580359,8580951,8581665,8582098,8582520,8583089,8583455,8583797,8584163,8584693,8585840,8587108,8588476,8589566,8590971,8592250,8593768,8595134,8595516,8595636,8595815,8596249,8596780,8596941,8597063,8597350,8597815,8598094,8598571,8599079,8599726,8600835,8601570,8601923,8602349,8602527,8602890,8603087,8603420,8603634,8603823,8604204,8604485,8604898,8605235,8605712,8606083,8606390,8606871,8607480,8608158,8608540,8608933,8609216,8609655,8609987,8610356,8610595,8610887,8611091,8611600,8611931,8612267,8612449,8612631,8612937,8613448,8613816,8614095,8614486,8614643,8615262,8615453,8615884,8616004,8616572,8617149,8617796,8618080,8618203,8618505,8618951,8619320,8619761,8620224,8620566,8621219,8621842,8622365,8622635,8623217,8624000,8624214,8624836,8625621,8625875,8626005,8626199,8626390,8626523,8626746,8627197,8627358,8627508,8627673,8627854,8628045,8628322,8628476,8628776,8629027,8629443,8629957,8630448,8630582,8630821,8631088,8631316,8631856,8632338,8632617,8633242,8633752,8633933,8634170,8634318,8634812,8635141,8635486,8635855,8636064,8636429,8636630,8636837,8637060,8637460,8637754,8638136,8638510,8638636,8639009,8639157,8639344,8639588,8639717,8639917,8640571,8641116,8641555,8641969,8642417,8642799,8643067,8643270,8643705,8644165,8644296,8644691,8645525,8645789,8646244,8646599,8647018,8647382,8647997,8648834,8649823,8650699,8651367,8652133,8653850,8654863,8656049,8657381,8658820,8660288,8661728,8663186,8664716,8666187,8667722,8669290,8670719,8672241,8673737,8675261,8676829,8678351,8679875,8681386,8682950,8684427,8685853,8687156,8688437,8689630,8690922,8692353,8693681,8694900,8696071,8697181,8698269,8699753,8701199,8702859,8704771,8706482,8708259,8709975,8711648,8713366,8715105,8716814,8718555,8720271,8721983,8723710,8725479,8727263,8729009,8730711,8732281,8733962,8735614,8737259,8738968,8740670,8742370,8744089,8745799,8747464,8749123,8750775,8752447,8754109,8755653,8757280,8758888,8760818,8762429,8764171,8765814,8767448,8769099,8770769,8772500,8774264,8776112,8777890,8779719,8781550,8783371,8785136,8786815,8788577,8790330,8792125,8793942,8795723,8797472,8799109,8800937,8802756,8804420,8806215,8807979,8809715,8811433,8813053,8814685,8816252,8818106,8819639,8821312,8822908,8824482,8826118,8827744,8829414,8831075,8832781,8834461,8836171,8837880,8839569,8841292,8843067,8844777,8846417,8848175,8849890,8851612,8853328,8854968,8856584,8858287,8859954,8861614,8863236,8864839,8866430,8867986,8869456,8870982,8872634,8874032,8875213,8876176,8876982,8877514,8878621,8879991,8881396,8882861,8884119,8885168,8886387,8887609,8888812,8890227,8891558,8892818,8894121,8895383,8896681,8897786,8898735,8899557,8900393,8901257,8902198,8902832,8903479,8904415,8905473,8906487,8907666,8908867,8910673,8912108,8913563,8914929,8916351,8917957,8919347,8920830,8922314,8923897,8925318,8926653,8927941,8929300,8929692,8929900,8930284,8930507,8930727,8931407,8932384,8933738,8934958,8935846,8937173,8938572,8939786,8941363,8943055,8944287,8945454,8946987,8948145,8948896,8950224,8951556,8953093,8954419,8956006,8957546,8959167,8960696,8962228,8963663,8964934,8966553,8967880,8969550,8970881,8972326,8974100,8975318,8977017,8978651,8979851,8981340,8982701,8984160,8985648,8987192,8988965,8990283,8991345,8993046,8994622,8996001,8997657,8998993,9000345,9001815,9003444,9005164,9006523,9007912,9009581,9010922,9012689,9014044,9015637,9017128,9018415,9019976,9021550,9022923,9024243,9025541,9027024,9028547,9030263,9031638,9033307,9034900,9036048,9037667,9039050,9040639,9041606,9043130,9044739,9046307,9047731,9049237,9050668,9051944,9053665,9055078,9056180,9057481,9058975,9060320,9061497,9062968,9064468,9065858,9067128,9068756,9070346,9072024,9073605,9075030,9076230,9077499,9079121,9080554,9082391,9083701,9085398,9086728,9088538,9089868,9091491,9092879,9094480,9095995,9097908,9099227,9100881,9102509,9104274,9105861,9107255,9108763,9110283,9111983,9113344,9115102,9116811,9118239,9119852,9121425,9123168,9124945,9126481,9128093,9129364,9131164,9132715,9134264,9135912,9137694,9139112,9140662,9142489,9143805,9145388,9147127,9148680,9150170,9151928,9153555,9155381,9157273,9159100,9161000,9163040,9165074,9167093,9169143,9171177,9173204,9175227,9177253,9179285,9181312,9183362,9185408,9187456,9189504,9191516,9193514,9195383,9197397,9199410,9201435,9203477,9205524,9207571,9209599,9211639,9213674,9215711,9217727,9219760,9221802,9223853,9225895,9227931,9229970,9231990,9233997,9236018,9237952,9239946,9241986,9244042,9246096,9248118,9250152,9252200,9254220,9256221,9258210,9260214,9262214,9264195,9266203,9268204,9270213,9272245,9274282,9276314,9278318,9280346,9282340,9284325,9286325,9288329,9290337,9292344,9294388,9296416,9298454,9300468,9302456,9304463,9306449,9308431,9310443,9312439,9314488,9316539,9318567,9320599,9322609,9324591,9326607,9328621,9330622,9332676,9334704,9336749,9338802,9340844,9342879,9344912,9346968,9348994,9351040,9353028,9355039,9357066,9359114,9361091,9363080,9365078,9367029,9369019,9370985,9373002,9375000,9376917,9378887,9380860,9382840,9384818,9386824,9388789,9390771,9392759,9394747,9396709,9398699,9400676,9402672,9404663,9406642,9408609,9410596,9412568,9414583,9416541,9418515,9420484,9422473,9424462,9426447,9428408,9430386,9432378,9434375,9436358,9438359,9440325,9442336,9444328,9446325,9448299,9450197,9452165,9454160,9456152,9458111,9460118,9462102,9464097,9466044,9468024,9469984,9471974,9473960,9475956,9477966,9479951,9481942,9483946,9485961,9487962,9489968,9491952,9493922,9495868,9497875,9499883,9501883,9503822,9505752,9507793,9509814,9511750,9513766,9515803,9517814,9519762,9521777,9523793,9525805,9527776,9529807,9531791,9533824,9535868,9537897,9539881,9541915,9543969,9545987,9547986,9549962,9551962,9553984,9555985,9557991,9559904,9561773,9563811,9565859,9567906,9569913,9571840,9573752,9575716,9577594,9579342,9581302,9583198,9585047,9586840,9588724,9590648,9592621,9594619,9596575,9598423,9600313,9602284,9604035,9605946,9607870,9609823,9611743,9613752,9615643,9617580,9619473,9621382,9623290,9625140,9627110,9629103,9631018,9632963,9634869,9636798,9638653,9640508,9642379,9644267,9646249,9648230,9650133,9652142,9654170,9655983,9657914,9659691,9661700,9663511,9665472,9667430,9669390,9671299,9673306,9675294,9677165,9679035,9680823,9682752,9684714,9686606,9688586,9690491,9692429,9694358,9696319,9698263,9700092,9702077,9704069,9705913,9707743,9709542,9711300,9713060,9714939,9716829,9718750,9720520,9722447,9724282,9726154,9728151,9730063,9732001,9733926,9735800,9737708,9739571,9741504,9743388,9745317,9747179,9749146,9751101,9752991,9754948,9756804,9758788,9760700,9762568,9764497,9766327,9768173,9770058,9771912,9773822,9775657,9777508,9779077,9780788,9782226,9783921,9785817,9787462,9789419,9791385,9793321,9795307,9797322,9799282,9801249,9803198,9805152,9807151,9809120,9811077,9813065,9814649,9816043,9817396,9818828,9820240,9821716,9823244,9824634,9826216,9827738,9829222,9830827,9832452,9834174,9835773,9837379,9839364,9841367,9843312,9845295,9847243,9849237,9851063,9852972,9854941,9856935,9858936,9860831,9862826,9864752,9866647,9868526,9870372,9872360,9874392,9876395,9878288,9880287,9882233,9884093,9886007,9887894,9889874,9891873,9893852,9895821,9897837,9899784,9901640,9903547,9905445,9907413,9909396,9911353,9913298,9915210,9917103,9918938,9920837,9922748,9924710,9926708,9928633,9930591,9932520,9934494,9936286,9938204,9940139,9942130,9944135,9946094,9948075,9950034,9951960,9953833,9955726,9957671,9959630,9961560,9963521,9965407,9967379,9969317,9971226,9973157,9974980,9976735,9978426,9980076,9981735,9983461,9985175,9986918,9988624,9990304,9992014,9993673,9995409,9997135,9998853,10000578,10002252,10003919,10005586,10007275,10009004,10010752,10012405,10014006,10015679,10017393,10019085,10020814,10022578,10024193,10025773,10027404,10029093,10030846,10032526,10034198,10035865,10037478,10039117,10040844,10042560,10044334,10045985,10047670,10049349,10051010,10052784,10054559,10056310,10057923,10059539,10061286,10063087,10064953,10066757,10068496,10070259,10072015,10073893,10075735,10077593,10079417,10081224,10083025,10084818,10086532,10088403,10090032,10091720,10093352,10095100,10096872,10098500,10100086,10101789,10103582,10105234,10106898,10108726,10110330,10112041,10113822,10115523,10117044,10118780,10120509,10122176,10123869,10125643,10127440,10129165,10130861,10132668,10134472,10136187,10137877,10139601,10141333,10143068,10144877,10146640,10148423,10150398,10152297,10154305,10156279,10158247,10160185,10162123,10164078,10165995,10168004,10169987,10171952,10173956,10175955,10177931,10179942,10181938,10183922,10185883,10187853,10189816,10191783,10193783,10195790,10197784,10199747,10201718,10203700,10205659,10207636,10209660,10211651,10213658,10215611,10217599,10219582,10221552,10223528,10225500,10227475,10229440,10231404,10233390,10235358,10237331,10239311,10241260,10243235,10245182,10247131,10249096,10251055,10253024,10254982,10256957,10258917,10260898,10262848,10264823,10266764,10268752,10270673,10272663,10274586,10276572,10278486,10280478,10282399,10284386,10286312,10288293,10290225,10292205,10294136,10296115,10298051,10299983,10301884,10303791,10305715,10307617,10309518,10311435,10313345,10315246,10317185,10319075,10320990,10322904,10324797,10326718,10328623,10330529,10332392,10334345,10336234,10338059,10340000,10341881,10343702,10345631,10347530,10349363,10351287,10353185,10355009,10356933,10358836,10360663,10362583,10364489,10366320,10368224,10370148,10371985,10373872,10375807,10377630,10379493,10381383,10383125,10384997,10386889,10388651,10390532,10392404,10394187,10396078,10397919,10399709,10401606,10403420,10405250,10407139,10408953,10410777,10412660,10414458,10416287,10418189,10419974,10421850,10423764,10425570,10427462,10429315,10431163,10433075,10434901,10436751,10438664,10440469,10442354,10444219,10446058,10447972,10449814,10451661,10453573,10455390,10457276,10459162,10461045,10462892,10464773,10466655,10468501,10470383,10472269,10474113,10475987,10477874,10479722,10481605,10483492,10485333,10487211,10489106,10490948,10492826,10494718,10496561,10498437,10500338,10502186,10504057,10505961,10507832,10509702,10511574,10513451,10515331,10517190,10519076,10520966,10522813,10524698,10526597,10528431,10530316,10532223,10534053,10535951,10537862,10539699,10541605,10543512,10545352,10547270,10549177,10551052,10552975,10554894,10556812,10558735,10560666,10562583,10564491,10566404,10568305,10570232,10572151,10574066,10575977,10577928,10579843,10581752,10583666,10585617,10587618,10589606,10591594,10593561,10595554,10597541,10599523,10601508,10603500,10605478,10607443,10609351,10611321,10613191,10615149,10617023,10619013,10620859,10622804,10624654,10626536,10628490,10630405,10632323,10634297,10636224,10638214,10640140,10642118,10644055,10646025,10647961,10649922,10651869,10653831,10655802,10657768,10659726,10661696,10663596,10665484,10667379,10669310,10671158,10673135,10674963,10676933,10678790,10680717,10682611,10684484,10686396,10688271,10690220,10692056,10694043,10695789,10697710,10699529,10701404,10703268,10705109,10706997,10708797,10710728,10712526,10714406,10716266,10718105,10719971,10721781,10723697,10725480,10727408,10729277,10731327,10733378,10735404,10737408,10739426,10741448,10743473,10745486,10747521,10749550,10751591,10753622,10755650,10757691,10759708,10761690,10763656,10765623,10767647,10769695,10771751,10773800,10775812,10777857,10779869,10781868,10783874,10785897,10787923,10789972,10792003,10794051,10796103,10798144,10800171,10802161,10804125,10806147,10808162,10810171,10812185,10814218,10816269,10818250,10820243,10822265,10824250,10826203,10828185,10830205,10832250,10834279,10836299,10838311,10840300,10842331,10844332,10846326,10848295,10850287,10852289,10854320,10856354,10858383,10860386,10862394,10864412,10866399,10868385,10870378,10872350,10874343,10876371,10878416,10880443,10882483,10884512,10886561,10888548,10890570,10892577,10894572,10896571,10898599,10900635,10902692,10904735,10906792,10908835,10910866,10912870,10914884,10916923,10918944,10920996,10923033,10925055,10927085,10929108,10931121,10933105,10935091,10937096,10939073,10941075,10943060,10945021,10947000,10948993,10950912,10952893,10954854,10956827,10958846,10960832,10962837,10964811,10966756,10968750,10970710,10972608,10974414,10976373,10978390,10980395,10982386,10984390,10986351,10988314,10990320,10992322,10994314,10996292,10998170,11000072,11001974,11003941,11005917,11007818,11009740,11011682,11013643,11015604,11017486,11019328,11021280,11023287,11025276,11027122,11029030,11030952,11032911,11034827,11036668,11038559,11040436,11042298,11044252,11046209,11048150,11050114,11052023,11053870,11055784,11057626,11059527,11061476,11063402,11065439,11067360,11069221,11071023,11072892,11074793,11076759,11078737,11080643,11082447,11084358,11086205,11088131,11090080,11092013,11093899,11095765,11097583,11099245,11101177,11103068,11104953,11106875,11108733,11110611,11112495,11114394,11116239,11118131,11120043,11121886,11123750,11125565,11127355,11129263,11131266,11133219,11135147,11137032,11138915,11140727,11142585,11144434,11146262,11148182,11150133,11152082,11154056,11155982,11157861,11159704,11161580,11163571,11165490,11167529,11169556,11171570,11173453,11175439,11177460,11179467,11181477,11183450,11185411,11187383,11189416,11191394,11193395,11195107,11197088,11199087,11201131,11203081,11204857,11206865,11208869,11210914,11212877,11214691,11216702,11218697,11220718,11222730,11224718,11226514,11228469,11230486,11232511,11234508,11236518,11238543,11240573,11242579,11244581,11246591,11248517,11250530,11252523,11254506,11256471,11258498,11260527,11262510,11264376,11266122,11267966,11269902,11271895,11273890,11275867,11277884,11279842,11281831,11283771,11285735,11287696,11289640,11291525,11293496,11295435,11297408,11299360,11301349,11303345,11305369,11307344,11309333,11311279,11313237,11315216,11317230,11319173,11321005,11322963,11324899,11326883,11328738,11330645,11332597,11334533,11336422,11338373,11340373,11342372,11344344,11346329,11348326,11350356,11352355,11354347,11356268,11358158,11360117,11362031,11363950,11365837,11367814,11369751,11371671,11373627,11375601,11377614,11379604,11381601,11383572,11385547,11387532,11389533,11391528,11393519,11395495,11397423,11399391,11401335,11403299,11405242,11407197,11409194,11411147,11413154,11415187,11417181,11419183,11421168,11423118,11425144,11427094,11429038,11431023,11433003,11434935,11436965,11438858,11440819,11442809,11444812,11446792,11448736,11450699,11452698,11454710,11456724,11458593,11460589,11462533,11464568,11466501,11468515,11470482,11472477,11474504,11476474,11478462,11480493,11482463,11484461,11486467,11488402,11490445,11492380,11494342,11496344,11498268,11500297,11502296,11504253,11506159,11508157,11510098,11512082,11513993,11515954,11517925,11519885,11521824,11523790,11525776,11527795,11529731,11531708,11533635,11535613,11537554,11539503,11541442,11543391,11545281,11547137,11549049,11551048,11552977,11554879,11556827,11558683,11560622,11562571,11564538,11566481,11568490,11570453,11572404,11574410,11576379,11578347,11580367,11582251,11584237,11586174,11588177,11590196,11592185,11594209,11596227,11598253,11600136,11602147,11604124,11606122,11608156,11610195,11612228,11614269,11616276,11618238,11620250,11622219,11624251,11626285,11628306,11630321,11632312,11634341,11636345,11638379,11640388,11642429,11644469,11646487,11648537,11650579,11652595,11654553,11656570,11658534,11660569,11662602,11664632,11666682,11668730,11670753,11672722,11674747,11676724,11678754,11680781,11682819,11684854,11686890,11688915,11690864,11692798,11694721,11696539,11698495,11700490,11702469,11704460,11706486,11708493,11710501,11712528,11714366,11716373,11718348,11720318,11722281,11724287,11726297,11728188,11730200,11732120,11734091,11736071,11738082,11740090,11742002,11744012,11745931,11747863,11749731,11751547,11753123,11754838,11756343,11757902,11759588,11761052,11762522,11764102,11765477,11766991,11768325,11769817,11771199,11772303,11773924,11775058,11776476,11777688,11779276,11780331,11781674,11782976,11783954,11785198,11786659,11788083,11789170,11790504,11792017,11792936,11794016,11795380,11796611,11797914,11799357,11800505,11801869,11803007,11804587,11805759,11807115,11808596,11810032,11811441,11812837,11814403,11815852,11817444,11818950,11820293,11821707,11823202,11824610,11825833,11827442,11828682,11830062,11831153,11832774,11833957,11835426,11836722,11837597,11839197,11840558,11841903,11843044,11844295,11845922,11846879,11847960,11849351,11850653,11852121,11853337,11854586,11855907,11857045,11858709,11859994,11861458,11862970,11864232,11865879,11867275,11868783,11870313,11871742,11873361,11874621,11876104,11877656,11878892,11880403,11881722,11883056,11884381,11885508,11887141,11888368,11889811,11891084,11891966,11893585,11894996,11896296,11897502,11898745,11900346,11901207,11902368,11903790,11905028,11906515,11907639,11908939,11910274,11911430,11913081,11914381,11915852,11917346,11918578,11920247,11921618,11923146,11924699,11926050,11927633,11928959,11930458,11931942,11933035,11934633,11935866,11937322,11938635,11939925,11941439,11942580,11944036,11945242,11946105,11947679,11949054,11950244,11951480,11952776,11954267,11955152,11956401,11957751,11958854,11960406,11961511,11962899,11964040,11965693,11966778,11968093,11969544,11970991,11972361,11973865,11975442,11976875,11978445,11979836,11981291,11982662,11984145,11985650,11986843,11988479,11989642,11991073,11992224,11993790,11994942,11996411,11997742,11998689,12000063,12001445,12002884,12003970,12005294,12006831,12007901,12008940,12010259,12011614,12012872,12014304,12015494,12016793,12017931,12019581,12020790,12022305,12023801,12025106,12026714,12028025,12029542,12031078,12032510,12034180,12035439,12036920,12038436,12039804,12041250,12042631,12043969,12045322,12046467,12048046,12049235,12050677,12051913,12052757,12054358,12055712,12057061,12058231,12059526,12061128,12061948,12063175,12064628,12065811,12067291,12068458,12069787,12071105,12072291,12073942,12075223,12076741,12078262,12079541,12081164,12082526,12084108,12085696,12087094,12088687,12090044,12091590,12093144,12094401,12095736,12097170,12098451,12099730,12100876,12102459,12103649,12105077,12106377,12107217,12108799,12110155,12111482,12112633,12113879,12115456,12116306,12117505,12118901,12120093,12121499,12122627,12123931,12125287,12126515,12128128,12129252,12130736,12132281,12133671,12135284,12136704,12138257,12139816,12141288,12142876,12144229,12145771,12147346,12148608,12149843,12151433,12152720,12154037,12155178,12156766,12157948,12159346,12160664,12161597,12162930,12164359,12165801,12166876,12168254,12169796,12170731,12171808,12173178,12174458,12175568,12177061,12178206,12179608,12180791,12182506,12183625,12184983,12186558,12188021,12189405,12191001,12192528,12193960,12195535,12197005,12198558,12199907,12201409,12202892,12204034,12205718,12206895,12208330,12209498,12211098,12212306,12213678,12215073,12216064,12217312,12218721,12220170,12221291,12222564,12223836,12225307,12226202,12227549,12228985,12230169,12231793,12232852,12234235,12235437,12237083,12238318,12239718,12241158,12242579,12243955,12245494,12247081,12248581,12250158,12251677,12253169,12254590,12256134,12257591,12258761,12260449,12261668,12263114,12264298,12265869,12267105,12268466,12269866,12270882,12272043,12273496,12274910,12276040,12277342,12278509,12280141,12280951,12282224,12283733,12285074,12286707,12287785,12289156,12290483,12291922,12293400,12294717,12296240,12297806,12299050,12300745,12302353,12303961,12305576,12306991,12308734,12309919,12311188,12312471,12313802,12315117,12316916,12318423,12319882,12321061,12322321,12323909,12325407,12326874,12328679,12330097,12331424,12332669,12334225,12335651,12337102,12338926,12340357,12341787,12343083,12344379,12345872,12347257,12348647,12350483,12351898,12353495,12354881,12356137,12357603,12358846,12360111,12361520,12363289,12364381,12365626,12366898,12368306,12369975,12371320,12372702,12374136,12375702,12377091,12378779,12380489,12382237,12384153,12385762,12387723,12389610,12391406,12393158,12395020,12396849,12398621,12400532,12401930,12403409,12405100,12406788,12408556,12410232,12411907,12413505,12415089,12415833,12417577,12419572,12421545,12423316,12424880,12425644,12427430,12429289,12431082,12432926,12434735,12436493,12438352,12439675,12441307,12443174,12444728,12446623,12448497,12450379,12452213,12453875,12455656,12457521,12459471,12461465,12463087,12465046,12466917,12468832,12470725,12472599,12474346,12475870,12477716,12479555,12481445,12483314,12485081,12486718,12488494,12490018,12491828,12493465,12495145,12496803,12498376,12499952,12501306,12503024,12504948,12506965,12508972,12510917,12512850,12514874,12516918,12518886,12520847,12522889,12524921,12526900,12528859,12530905,12532942,12534882,12536898,12538818,12540763,12542732,12544723,12546700,12548697,12550694,12552721,12554739,12556739,12558752,12560777,12562785,12564799,12566721,12568591,12570629,12572683,12574714,12576757,12578745,12580653,12582555,12584499,12586394,12588304,12590269,12592140,12594078,12595966,12597867,12599788,12601634,12603569,12605517,12607361,12609296,12611271,12613147,12615030,12616967,12618871,12620768,12622101,12623999,12625889,12627647,12629057,12630472,12631717,12633466,12635104,12636751,12638368,12640224,12641710,12643322,12644896,12646480,12647947,12649507,12651168,12652863,12654323,12655521,12656970,12658670,12660120,12661323,12663009,12664908,12666714,12668440,12670220,12672014,12673605,12675517,12677366,12679072,12680745,12682428,12684163,12685723,12687457,12689206,12690718,12692207,12693709,12695529,12696803,12698161,12699416,12700937,12702587,12704110,12705256,12706388,12707997,12709643,12711148,12712552,12714568,12716526,12718506,12720512,12722472,12724334,12726110,12727807,12729679,12731564,12733410,12734981,12736869,12738875,12740684,12742571,12744474,12746320,12748108,12749836,12751658,12753430,12754852,12756309,12758086,12759497,12760888,12762578,12764113,12765550,12767275,12768797,12770579,12772046,12773677,12775301,12777157,12778628,12780445,12781999,12783689,12785131,12786805,12788573,12790061,12791853,12793125,12794734,12796129,12797968,12799880,12801670,12803407,12804758,12806121,12807850,12809545,12811179,12812664,12814248,12815974,12817597,12819115,12820776,12822316,12824007,12825626,12826893,12828491,12829960,12831579,12833268,12834517,12836146,12837605,12839308,12840957,12842329,12843820,12845409,12846986,12848150,12849388,12850770,12851950,12853418,12854658,12856232,12857360,12858731,12860166,12861455,12862977,12864238,12865545,12867062,12868522,12870030,12871716,12873646,12875092,12876817,12878614,12880476,12882338,12884282,12885828,12887774,12889314,12890854,12892801,12894428,12896367,12897611,12899517,12901366,12902826,12904517,12906219,12907971,12909537,12911030,12912626,12914200,12915737,12917320,12918699,12920313,12921805,12923343,12924875,12926397,12927917,12929466,12930987,12932506,12934041,12935655,12937480,12939149,12941101,12942862,12944722,12946298,12947868,12949330,12951016,12952620,12954625,12956449,12958336,12960185,12962036,12963969,12965823,12967749,12968294,12968874,12969288,12969825,12970640,12971295,12971934,12972501,12973385,12975423,12977395,12979375,12981312,12983256,12985213,12987190,12989124,12991034,12992677,12994316,12995956,12997701,12999267,13000875,13002658,13004205,13005912,13007492,13009214,13010654,13012140,13013609,13015181,13016537,13017983,13019417,13021052,13022452,13023736,13024894,13026388,13027765,13029327,13030774,13032116,13033635,13035112,13036562,13038134,13039542,13040909,13042305,13043698,13045145,13046529,13047924,13049588,13051327,13053101,13054942,13056837,13058711,13060605,13062350,13064067,13065865,13067502,13069247,13071038,13072864,13074643,13076381,13078073,13079758,13080592,13081400,13082225,13082978,13084734,13086455,13088088,13089717,13091428,13093017,13094674,13096333,13098004,13099755,13101412,13103150,13104794,13106520,13108300,13110099,13112020,13113324,13115115,13116672,13118483,13119625,13121430,13122993,13124886,13126697,13128545,13130311,13132159,13133998,13135752,13137600,13139463,13140958,13142007,13143077,13144099,13145164,13146251,13147311,13148338,13149690,13151219,13152781,13154311,13155886,13157446,13159007,13160581,13162109,13163740,13165181,13166788,13168362,13170025,13171081,13172118,13173202,13174219,13175695,13177124,13178835,13180665,13182211,13183506,13184639,13186160,13187598,13188682,13190074,13191638,13193083,13194571,13196181,13197776,13199323,13200928,13202532,13203929,13205280,13206083,13207109,13207862,13208521,13209477,13210181,13211484,13212872,13214326,13214847,13215376,13216155,13216709,13217579,13218110,13218969,13219644,13220530,13221041,13221551,13222483,13223122,13223980,13224498,13225359,13225980,13226631,13227361,13227901,13228825,13229573,13230506,13230984,13231709,13232369,13233061,13233680,13233984,13234624,13234866,13235470,13235742,13235974,13236421,13236622,13237281,13237468,13238009,13238197,13238660,13238775,13238815,13239410,13239578,13240219,13240432,13241214,13242677,13244099,13245404,13246630,13247859,13249065,13250342,13251327,13252343,13253329,13254279,13255270,13256257,13257245,13258534,13259879,13261271,13262657,13264128,13265609,13267026,13268428,13269823,13271422,13272891,13274367,13275886,13277485,13279114,13280594,13282111,13283693,13285158,13286561,13287965,13289378,13290784,13292183,13293669,13295091,13296450,13297861,13299253,13300604,13302010,13302947,13303888,13304809,13305738,13306848,13307816,13308761,13309707,13310772,13311671,13312644,13313530,13314733,13316105,13317539,13318913,13320356,13321287,13322215,13323146,13324091,13325748,13327346,13328984,13330576,13332102,13333627,13335152,13336752,13338460,13339830,13341218,13342567,13343925,13345137,13346453,13347774,13349092,13350717,13352270,13353822,13355076,13356602,13358063,13359329,13360752,13362303,13363860,13365494,13367068,13368675,13370358,13372085,13373808,13375536,13377108,13378329,13379707,13381081,13382522,13383965,13385160,13386580,13387996,13389393,13390986,13392426,13394033,13395450,13397108,13398738,13400396,13402036,13403692,13405306,13406956,13408610,13410244,13411987,13413649,13415294,13416950,13418440,13420072,13421697,13423303,13424962,13426557,13428241,13429868,13431528,13433085,13434733,13436393,13437974,13439656,13441330,13443034,13444724,13446279,13447926,13449613,13451248,13452833,13454566,13456185,13457805,13459421,13461260,13462910,13464540,13466175,13467866,13469714,13471397,13473064,13474730,13476532,13478159,13479833,13481490,13483205,13484155,13485106,13486068,13487006,13488566,13490046,13491597,13493077,13494658,13495902,13497148,13498499,13499915,13501026,13502190,13503453,13504747,13506094,13507118,13508003,13509064,13510462,13511650,13512751,13513838,13515076,13516174,13517059,13518058,13519155,13520759,13522255,13523802,13525345,13526852,13528377,13529893,13531420,13533077,13534485,13535873,13537228,13538594,13539976,13541366,13542726,13544134,13545824,13547320,13548889,13550445,13552045,13553612,13555154,13556703,13558441,13560034,13561635,13563293,13564942,13566553,13568179,13569795,13571433,13573130,13574595,13576003,13577414,13578857,13580337,13581743,13583133,13584827,13586590,13588334,13590030,13591734,13593464,13595187,13596919,13598627,13600501,13602247,13603943,13605589,13607313,13609032,13610715,13612384,13614210,13615277,13616192,13617517,13618581,13619667,13620726,13621992,13623127,13624165,13625221,13626156,13626812,13627461,13628198,13628933,13630802,13632447,13634157,13635843,13637562,13639227,13640942,13642633,13644489,13646266,13648002,13649676,13651310,13653019,13654694,13656434,13658144,13660048,13661791,13663552,13665298,13667081,13668804,13670573,13672313,13674185,13675947,13677662,13679326,13680965,13682650,13684308,13686032,13687691,13689301,13690778,13692212,13693626,13695201,13696202,13697205,13698199,13699557,13701375,13703156,13704975,13706833,13708484,13710323,13712108,13713964,13715681,13716920,13718101,13719335,13721033,13722288,13723282,13724353,13725878,13727576,13729206,13730795,13732402,13733899,13735520,13737111,13738697,13740350,13741880,13743310,13744751,13746086,13747653,13749112,13750551,13751943,13753472,13755123,13756528,13758192,13759449,13760936,13762398,13763902,13765339,13767004,13768631,13770235,13771890,13773494,13775112,13776705,13778402,13779963,13781433,13782871,13784294,13785682,13787163,13788603,13790013,13791590,13793396,13795190,13797037,13798918,13800607,13802411,13804225,13806074,13807747,13809385,13811027,13812655,13814233,13815903,13817552,13819162,13820864,13822487,13823949,13825390,13826894,13828328,13829821,13831269,13832724,13834315,13836174,13838007,13839867,13841584,13843462,13845266,13847138,13848947,13850698,13852341,13853930,13855552,13857066,13858707,13860315,13861927,13863616,13865154,13866631,13868077,13869457,13870970,13872425,13873896,13875391,13877120,13878924,13880765,13882615,13884290,13886148,13887956,13889805,13891590,13892592,13893998,13895326,13896021,13896961,13897819,13898538,13899704,13900385,13901156,13902894,13903586,13904258,13904959,13906285,13907537,13908530,13909789,13911140,13912237,13913104,13914363,13915455,13916742,13918065,13919475,13921226,13922670,13923680,13924680,13926478,13928026,13929714,13931367,13933044,13934678,13936193,13937920,13939545,13940733,13942062,13943364,13944560,13946172,13947521,13948507,13949505,13950525,13951866,13952983,13954102,13955201,13956300,13957771,13959802,13961847,13963848,13965838,13967866,13969880,13971897,13973868,13975899,13977935,13979959,13981967,13983972,13985978,13987989,13989986,13991979,13994007,13996045,13998045,14000050,14002076,14004057,14006066,14008024,14010047,14012072,14014121,14016119,14018098,14020119,14022117,14024085,14026088,14028140,14030026,14031956,14033851,14035752,14037673,14039534,14041390,14043271,14045144,14047049,14048933,14050793,14052655,14054490,14056311,14058209,14060100,14061770,14063449,14065108,14066785,14068453,14070109,14071746,14073371,14075182,14076841,14078499,14080153,14081781,14083450,14085091,14086683,14088433,14089864,14091302,14092731,14094145,14095591,14097019,14098412,14099772,14101373,14102801,14104274,14105865,14107265,14108734,14110249,14111868,14113416,14114738,14116312,14117844,14119471,14120894,14122482,14123968,14125656,14126977,14128383,14129778,14131503,14133366,14134937,14136505,14138182,14139767,14141344,14142859,14144553,14146223,14147771,14149341,14151011,14152731,14154447,14156021,14157613,14159260,14160801,14162354,14163912,14165490,14167017,14168536,14170097,14171622,14173151,14174645,14176168,14177897,14179424,14181092,14182781,14184410,14186001,14187735,14189592,14191157,14192666,14194523,14196456,14198216,14199918,14201655,14203599,14205538,14207469,14209441,14211399,14213355,14215266,14217184,14219077,14220880,14222725,14224613,14226612,14228479,14230349,14232219,14234048,14235825,14237599,14239376,14241169,14243187,14245146,14247127,14249081,14251002,14252903,14254824,14256737,14258774,14260635,14262533,14264415,14266253,14268058,14269886,14271687,14273501,14275528,14277519,14279516,14281472,14283420,14285352,14287308,14289234,14291252,14293068,14294877,14296674,14298426,14300201,14301986,14303724,14305512,14307451,14309294,14311107,14312900,14314738,14316568,14318396,14320205,14322025,14323527,14324949,14326413,14327873,14329274,14330714,14332139,14333536,14335311,14337284,14339223,14341233,14343178,14345124,14347009,14348950,14350855,14352769,14354640,14356560,14358544,14360502,14362450,14364364,14366292,14368200,14370131,14372032,14374010,14375581,14377098,14378671,14380273,14381856,14383499,14385043,14386548,14388536,14390333,14392143,14393904,14395681,14397390,14399130,14400844,14402691,14404025,14405362,14406673,14407983,14409360,14410695,14412064,14413442,14415052,14416540,14417995,14419522,14421092,14422623,14424109,14425569,14427082,14428749,14430380,14431951,14433572,14435243,14436741,14438415,14439813,14441175,14442520,14443822,14445084,14446307,14447501,14448846,14450714,14452607,14454476,14456369,14458260,14460134,14461994,14463879,14465827,14467725,14469600,14471450,14473339,14475236,14477115,14478996,14480857,14482666,14484065,14485491,14486862,14488280,14489746,14491220,14492689,14494231,14495974,14497654,14499354,14501093,14502737,14504356,14505943,14507476,14508711,14510251,14511832,14513436,14515072,14516828,14518528,14520226,14521908,14523499,14524949,14526425,14527926,14529349,14530681,14532090,14533507,14535187,14536661,14538190,14539685,14541196,14542752,14544252,14545766,14547224,14548900,14550389,14551911,14553378,14554268,14555741,14557269,14558755,14560464,14562440,14564377,14566345,14567816,14569223,14570643,14572053,14573200,14574641,14576038,14577427,14578954,14580122,14581292,14582364,14583307,14584427,14585563,14586695,14587955,14589471,14590881,14592364,14594381,14596274,14598179,14600080,14601987,14603885,14605792,14607676,14609328,14611005,14612452,14613951,14615404,14616597,14617515,14618355,14619217,14620102,14620914,14621805,14622611,14623462,14624426,14625348,14626179,14627047,14628017,14629008,14629975,14631145,14632470,14633732,14635032,14636329,14636812,14637303,14637942,14638550,14638820,14639222,14639410,14640399,14641763,14642471,14643462,14644235,14645553,14646594,14647561,14648908,14649308,14649545,14649984,14650358,14650932,14652253,14653759,14655250,14657115,14658945,14660702,14662522,14664344,14666161,14667943,14669695,14671497,14673127,14674781,14676430,14677969,14679591,14681197,14682828,14684382,14686012,14687331,14688651,14690011,14691336,14693038,14694716,14696391,14698082,14699741,14701411,14703085,14704742,14706381,14708056,14709734,14711399,14712754,14714589,14716425,14718260,14720025,14721823,14723651,14725507,14727282,14729122,14730608,14732037,14733509,14734966,14736710,14738603,14740436,14742298,14744152,14745999,14747859,14749723,14751592,14753432,14754962,14756775,14757800,14758864,14760054,14761217,14762683,14764681,14766682,14768642,14770600,14772556,14774522,14776399,14778290,14780197,14782155,14784089,14786026,14787972,14789895,14791806,14793751,14795771,14797437,14799113,14800870,14802697,14804513,14806280,14807929,14809530,14811529,14813573,14815622,14817658,14819705,14821748,14823792,14825846,14827902,14829956,14832012,14834062,14836105,14838152,14840204,14842236,14844282,14846293,14848175,14850085,14851901,14853751,14855586,14857434,14859270,14861181,14863082,14864991,14866866,14868722,14870568,14872418,14874260,14876127,14877913,14879254,14880568,14881297,14882108,14882853,14883455,14884042,14884788,14885647,14886493,14887002,14887501,14888272,14889102,14890041,14890537,14890955,14891794,14892626,14893492,14894048,14894456,14895263,14896164,14896960,14897398,14898223,14899371,14900399,14901361,14901756,14902805,14903927,14905020,14905747,14906148,14907313,14908447,14909639,14910158,14910766,14911948,14912968,14914179,14914882,14916200,14917627,14919194,14920612,14922503,14923558,14924604,14925740,14926914,14928019,14929177,14930215,14931363,14932448,14933598,14934683,14935855,14937022,14938085,14939157,14940264,14941776,14942887,14943975,14945083,14946225,14947290,14948329,14949441,14950458,14951430,14952449,14953384,14954461,14955514,14956315,14957126,14957985,14959193,14960035,14960516,14961064,14961596,14962124,14962687,14963187,14963744,14964278,14964775,14965287,14965778,14966274,14966791,14967313,14967898,14968664,14970145,14971606,14973108,14974613,14976126,14977630,14979171,14980665,14982075,14983124,14984117,14985230,14986864,14988343,14989777,14991146,14992478,14993903,14995417,14997188,14998822,15000506,15002157,15003757,15005384,15007048,15008701,15010494,15011988,15013460,15014940,15016462,15017911,15019449,15020959,15022443,15023863,15024942,15026115,15027371,15028742,15030047,15031370,15032609,15033816,15035201,15036638,15038054,15039485,15041045,15042615,15044113,15045678,15047522,15048575,15049618,15050741,15051909,15053032,15054192,15055236,15056339,15057414,15058543,15059668,15060854,15062015,15063085,15064133,15065227,15066809,15067846,15068909,15070024,15071191,15072246,15073292,15074440,15075441,15076453,15077419,15078386,15079436,15080473,15081296,15082099,15082944,15084233,15084963,15085451,15086005,15086509,15087051,15087591,15088105,15088669,15089162,15089682,15090182,15090665,15091172,15091695,15092203,15092760,15093650,15095413,15097256,15099049,15100804,15102613,15104392,15106172,15107709,15109111,15110514,15111898,15113304,15114912,15116100,15117292,15118560,15120156,15121529,15122829,15124154,15125760,15126837,15127878,15128903,15129939,15131562,15133254,15134832,15136478,15138062,15139369,15140538,15141636,15142955,15144375,15145949,15147607,15149300,15150860,15152568,15154247,15155839,15157499,15159084,15160650,15161789,15163348,15164354,15166001,15167789,15169613,15171491,15173273,15174892,15176581,15178292,15180046,15181665,15183420,15185266,15186862,15188406,15189899,15191480,15193023,15194551,15196132,15197679,15199013,15200648,15202265,15203883,15205487,15207059,15208638,15210207,15211830,15213519,15215108,15216878,15218613,15219975,15221522,15223314,15225048,15226559,15228051,15229040,15230194,15231348,15232490,15233655,15234765,15235855,15236959,15238104,15239237,15240411,15241571,15242667,15243781,15244830,15245904,15246918,15248116,15249324,15250487,15250878,15251842,15253061,15254168,15255126,15256148,15257314,15258445,15259603,15260082,15260990,15262250,15263377,15264393,15265398,15266492,15267702,15268827,15269507,15270359,15271514,15272635,15273643,15274663,15275709,15276946,15278092,15278919,15279623,15280751,15281896,15282986,15283954,15284914,15286149,15287250,15288176,15288764,15289894,15291137,15292284,15293667,15294695,15295788,15296903,15298070,15299121,15300153,15301301,15302300,15303311,15304279,15305228,15306269,15307305,15308118,15308919,15309779,15311028,15311853,15313006,15314116,15315151,15315572,15316792,15317985,15319139,15320058,15321191,15322322,15323527,15324702,15325973,15327122,15328264,15329500,15330624,15331932,15333077,15334251,15335473,15336646,15337907,15339003,15340165,15341380,15342545,15343899,15344997,15345971,15347021,15348311,15349540,15350580,15351596,15352684,15353956,15355206,15356290,15357233,15358356,15359646,15360797,15361850,15362840,15363940,15365461,15365902,15366419,15367077,15368500,15370118,15371908,15373767,15375628,15377413,15378938,15380046,15380546,15381063,15381581,15382120,15382649,15383874,15385084,15386125,15387464,15388968,15390037,15391256,15392746,15393980,15395009,15396325,15397849,15398934,15400132,15401759,15403511,15405348,15407099,15408953,15410704,15412499,15414360,15416128,15417875,15419749,15421482,15423326,15425104,15426857,15428750,15430444,15432276,15434059,15436109,15437844,15439694,15441433,15443165,15445155,15446822,15448627,15450518,15452250,15454040,15455859,15457688,15459408,15461264,15463057,15464807,15466703,15468421,15470181,15472218,15473965,15475726,15477531,15479281,15481159,15482990,15484810,15486483,15488386,15490127,15491972,15493761,15495509,15497393,15499086,15500917,15502765,15504558,15506313,15508129,15509983,15511695,15513499,15515378,15517086,15518992,15520722,15522484,15524364,15526104,15527845,15529659,15531512,15533249,15535061,15536885,15538564,15540457,15541528,15542806,15543918,15545216,15546487,15547607,15548867,15549909,15550597,15551351,15552187,15553076,15553576,15554081,15554859,15555695,15556597,15557150,15557520,15558326,15559187,15560042,15560574,15561015,15561796,15562685,15563485,15564526,15565643,15566700,15567841,15569020,15570121,15571288,15572326,15573449,15574516,15575646,15576733,15577944,15579123,15580218,15581262,15582373,15583819,15585290,15586823,15588073,15589208,15590269,15591462,15592520,15593570,15594704,15595741,15596736,15597761,15598656,15599692,15600738,15601592,15602422,15603252,15604259,15605682,15607105,15608825,15609494,15610003,15610562,15611058,15611613,15612146,15612681,15613253,15613741,15614254,15614765,15615230,15615754,15616270,15616799,15617352,15618285,15619878,15621544,15623126,15624810,15626518,15628137,15629782,15631474,15633144,15634848,15636639,15638279,15639864,15641473,15643146,15644805,15645244,15645889,15647203,15647517,15647981,15648331,15649396,15650904,15652935,15654971,15656981,15659007,15661012,15663014,15664985,15666989,15669006,15671031,15673035,15675053,15677077,15679062,15681068,15683043,15684899,15686277,15687727,15689332,15690602,15691984,15693469,15694590,15695711,15696835,15697958,15699082,15700204,15701324,15701834,15701914,15703360,15705383,15707391,15709269,15711165,15713060,15714890,15716762,15718654,15720549,15722436,15724375,15726265,15728227,15730154,15732016,15733935,15735858,15737758,15739606,15741515,15743478,15745361,15747266,15749210,15751133,15752861,15754637,15756463,15758191,15760177,15762091,15763953,15765829,15767718,15769640,15771551,15773444,15775309,15777287,15779061,15780881,15782747,15784663,15786483,15788010,15789793,15791248,15792806,15794421,15796035,15797612,15799100,15800571,15802163,15803765,15805394,15807048,15808516,15810056,15811613,15813179,15814733,15816612,15818120,15819662,15821314,15822842,15824785,15826578,15828338,15830146,15832013,15833878,15835725,15837568,15839448,15840749,15842038,15843326,15844715,15846019,15847351,15848686,15849916,15851573,15853032,15854481,15855910,15857434,15858922,15860354,15861792,15863398,15864854,15866301,15867758,15869227,15870724,15872201,15873648,15875077,15876703,15878168,15879614,15881042,15882540,15884016,15885508,15886941,15888489,15890003,15891438,15892858,15894311,15895809,15897263,15898697,15900122,15901706,15903123,15904505,15905945,15907386,15908866,15910264,15911676,15913115,15914693,15916061,15917444,15918914,15920388,15921834,15923213,15924614,15926215,15927639,15929038,15930443,15931889,15933331,15934765,15936166,15937573,15939190,15940576,15941994,15943478,15944971,15946469,15947911,15949306,15950947,15952428,15953868,15955325,15956824,15958310,15959797,15961268,15962657,15964243,15965605,15966922,15968284,15969668,15971014,15972338,15973625,15975113,15976503,15977818,15979118,15980491,15981830,15983230,15984558,15985842,15987413,15988752,15990037,15991397,15992749,15994062,15995368,15996698,15998031,15999627,16001092,16002535,16004013,16005486,16007001,16008448,16009841,16011461,16012893,16014285,16015742,16017231,16018671,16020146,16021562,16022978,16024575,16025922,16027337,16028789,16030229,16031696,16033094,16034479,16036105,16037531,16038948,16040331,16041806,16043295,16044731,16046132,16047536,16049155,16050539,16051916,16053322,16054811,16056274,16057689,16059131,16060701,16062176,16063613,16065020,16066459,16067959,16069414,16070850,16072256,16074012,16075688,16077529,16079246,16081118,16082801,16084510,16086298,16088128,16089953,16091747,16093449,16095098,16096872,16098633,16100384,16102116,16103984,16105749,16107643,16109493,16111371,16113236,16115126,16116984,16118853,16120789,16122611,16124398,16126187,16127999,16129801,16131577,16133355,16135310,16137094,16138876,16140597,16142364,16144101,16145854,16147558,16149321,16151220,16153030,16154820,16156560,16158334,16160082,16161824,16163566,16165461,16167341,16169188,16171016,16172825,16174612,16176472,16178265,16180080,16182008,16183732,16185516,16187253,16188986,16190700,16192449,16194236,16196059,16197786,16199705,16201547,16203373,16205200,16206991,16208752,16210542,16212312,16214198,16215859,16217619,16219336,16220893,16222663,16224393,16226021,16227791,16229605,16231341,16233111,16234826,16236434,16238119,16239705,16241531,16243430,16245060,16246700,16248333,16249978,16251675,16253353,16255033,16256688,16258455,16260140,16261757,16263376,16265077,16266784,16268477,16270123,16271880,16273687,16275499,16277235,16279014,16280846,16282643,16284460,16286246,16288098,16289886,16291607,16293334,16295095,16296889,16298653,16300446,16302201,16304065,16305870,16307761,16309629,16311476,16313406,16315379,16317175,16319020,16320677,16322346,16324115,16325863,16327593,16329385,16331098,16332817,16334623,16336287,16338069,16339864,16341649,16343461,16345333,16347045,16348867,16350271,16351783,16353281,16354828,16356338,16357835,16359331,16360857,16362820,16364803,16366728,16368693,16370714,16372652,16374626,16376605,16378500,16380439,16382431,16384455,16386430,16388370,16390343,16392337,16394361,16396149,16397053,16397093,16397133,16397171,16397489,16397527,16397567,16397607,16397704,16399639,16401423,16403262,16405095,16406930,16408770,16410575,16412366,16414250,16415695,16417157,16418588,16420048,16421484,16422926,16424330,16425797,16427703,16429544,16431355,16433107,16434890,16436666,16438472,16440239,16441817,16442672,16442735,16442774,16442814,16442849,16443167,16443207,16443246,16443286,16444022,16445142,16446714,16448443,16450162,16451911,16453685,16455415,16457122,16458875,16460629,16462409,16463589,16464819,16466269,16467789,16468306,16469853,16471345,16472659,16473686,16475467,16477198,16478814,16479785,16479825,16479865,16479904,16480222,16480260,16480300,16480340,16480442,16481794,16483216,16484243,16485437,16487029,16488698,16490297,16491978,16493651,16495329,16496976,16498605,16500221,16500666,16500706,16500746,16500784,16501804,16502563,16502627,16503329,16505242,16507172,16509065,16510752,16512363,16513991,16515636,16517330,16519040,16520764,16522471,16524198,16525922,16527662,16529401,16531120,16532814,16534502,16536152,16537475,16538452,16539351,16539872,16541692,16543471,16545205,16546897,16548659,16550438,16552137,16553873,16555725,16557611,16559402,16561284,16563127,16564986,16566849,16568717,16570502,16572374,16574136,16575757,16577554,16579187,16580966,16582723,16584448,16586255,16588079,16590018,16591868,16593746,16595638,16597493,16599424,16601257,16603264,16604649,16605841,16606984,16608010,16609077,16610462,16611844,16613185,16614569,16616001,16617238,16618413,16619511,16620665,16621778,16622990,16624479,16625464,16626232,16627167,16628162,16629410,16631119,16632506,16633310,16633927,16634706,16635930,16637566,16639270,16640970,16641934,16643129,16644572,16646155,16647404,16648465,16649247,16650182,16651034,16651523,16652320,16653479,16654822,16656101,16657259,16658629,16660011,16661418,16662737,16664030,16665884,16667777,16669643,16671554,16673404,16675250,16677178,16679052,16680880,16682787,16684713,16686635,16688554,16690405,16692282,16694218,16695733,16696639,16697575,16698491,16699760,16701709,16703628,16705337,16707329,16708624,16709791,16710995,16712206,16714051,16716062,16718033,16720075,16722061,16723964,16725861,16727764,16729638,16731674,16733708,16735755,16737779,16739631,16741441,16743188,16745045,16746842,16748654,16750373,16752186,16753989,16755937,16757876,16759833,16761746,16763515,16764824,16766123,16767672,16769192,16770373,16771653,16772893,16774282,16775486,16776725,16777971,16779376,16781034,16782225,16783429,16785039,16786768,16787623,16788366,16789633,16790908,16792021,16792755,16793747,16795342,16796836,16797577,16798424,16800096,16801854,16803218,16804615,16806190,16808081,16809824,16811595,16813407,16815217,16816983,16818822,16820685,16822506,16824153,16825844,16827533,16829207,16831030,16832777,16834598,16836395,16838102,16839551,16840981,16842411,16843992,16845452,16846846,16848308,16849791,16851375,16852859,16854309,16855839,16857473,16858973,16860438,16861959,16863771,16865743,16867708,16869645,16871607,16873570,16875565,16877534,16879520,16881373,16883133,16884899,16886631,16888470,16890088,16891655,16893215,16894969,16896888,16898734,16900563,16902470,16904286,16906126,16907893,16909725,16911713,16913578,16915406,16917298,16919221,16921008,16922822,16924611,16926460,16928100,16929693,16931230,16932902,16934077,16935313,16936749,16938296,16939462,16940724,16941960,16943447,16944849,16946020,16947293,16948918,16950684,16952472,16954249,16956023,16957953,16959743,16961521,16963290,16965163,16966983,16968822,16970650,16972355,16973198,16974101,16974954,16975643,16976935,16978089,16979263,16980423,16981702,16982922,16984086,16985289,16986630,16987940,16989344,16990654,16992033,16993886,16995721,16997574,16999402,17001291,17003101,17004935,17006778,17008709,17010608,17012535,17014456,17016386,17018283,17020217,17022167,17024105,17025892,17027723,17029565,17031349,17033168,17035028,17036745,17038326,17040058,17041748,17043650,17045453,17047334,17049221,17051049,17052905,17054785,17056417,17057889,17059293,17060771,17062318,17063835,17065591,17067266,17068824,17070398,17072075,17073773,17075429,17077224,17078998,17080743,17082537,17084394,17086431,17088484,17090540,17092436,17094437,17096415,17098384,17100342,17102304,17104245,17106177,17108049,17109481,17110645,17112117,17113192,17114719,17116488,17118231,17119978,17121717,17123300,17124879,17126420,17127964,17129768,17131536,17133327,17135063,17136904,17138713,17140528,17142339,17144131,17145823,17147543,17149240,17150932,17152484,17154302,17156090,17157756,17159171,17160159,17161363,17162281,17163734,17164743,17165635,17166514,17167813,17168815,17169984,17171004,17172122,17172971,17173488,17174098,17174608,17175449,17176203,17176888,17177619,17178441,17179418,17180727,17181927,17182963,17184209,17185589,17187034,17188391,17189739,17191212,17192721,17194440,17195807,17197181,17198806,17200407,17201828,17203443,17205070,17206749,17208314,17208897,17209135,17209316,17209536,17210435,17210937,17211373,17211814,17213087,17215136,17217174,17219222,17221258,17223293,17225341,17227379,17229388,17231430,17233394,17235340,17237300,17239182,17241103,17243026,17244942,17246798,17248187,17249547,17250982,17252386,17253646,17254833,17255991,17257048,17258419,17259814,17261229,17262704,17264271,17266142,17267960,17269772,17271643,17273510,17275324,17277106,17278962,17280816,17282565,17284306,17286023,17287787,17289534,17291296,17292999,17294669,17296055,17297482,17299023,17300451,17301921,17303419,17304971,17306472,17308183,17310058,17311959,17313823,17315582,17316805,17318048,17319280,17320701,17322547,17324355,17326131,17327969,17329496,17330954,17332381,17333852,17335596,17337617,17339648,17341689,17343715,17345724,17347718,17349695,17351684,17353301,17354821,17356319,17357807,17359590,17361273,17362931,17364608,17366485,17368462,17370441,17372417,17374416,17376125,17377839,17379593,17381326,17383368,17385416,17387455,17389512,17391215,17392487,17393792,17394315,17394851,17395389,17395917,17397159,17398576,17399993,17401378,17402427,17403854,17405271,17406823,17408000,17409488,17411081,17412725,17414153,17415571,17417121,17418968,17420631,17422523,17424255,17425516,17426797,17428070,17429426,17430396,17431360,17432386,17433360,17434619,17435522,17436607,17437445,17438382,17440291,17442265,17444206,17446168,17448189,17450203,17452211,17454200,17456206,17457892,17459372,17460943,17462571,17464354,17466012,17467712,17469314,17471141,17472674,17474169,17475826,17477594,17479238,17480953,17482666,17484323,17485787,17487477,17489100,17490536,17492026,17493590,17495164,17496639,17498382,17500283,17502181,17504022,17505915,17507792,17509667,17511518,17513391,17515213,17516674,17518144,17519685,17521625,17523608,17525568,17527562,17529556,17531374,17533172,17534969,17536785,17538654,17540556,17542458,17544310,17545872,17547301,17548764,17550131,17551628,17553098,17554631,17556108,17557604,17559117,17560868,17562550,17564155,17565682,17567259,17568807,17570307,17571990,17573720,17575328,17577087,17578819,17580499,17582166,17583956,17585653,17587321,17588997,17590526,17592225,17593861,17595508,17597032,17598736,17600414,17601937,17603414,17605001,17606505,17608195,17609586,17611290,17613000,17614482,17616005,17617519,17619053,17620515,17622038,17623688,17625360,17626779,17628120,17629329,17630892,17632461,17634163,17635739,17637257,17638947,17640370,17642039,17643803,17645552,17647085,17648719,17650018,17651274,17652422,17653688,17655013,17656303,17657519,17659083,17660620,17662139,17663448,17664836,17666011,17667154,17668310,17669585,17670864,17672246,17673681,17675035,17676417,17678000,17679292,17680476,17681863,17683706,17685529,17687231,17688716,17689931,17690936,17691949,17692828,17693853,17694939,17696124,17697440,17698780,17700418,17701986,17703621,17705387,17707143,17708272,17709351,17710366,17711349,17712124,17712779,17714105,17715118,17716522,17717733,17719000,17720272,17721719,17723306,17725041,17726863,17728845,17730529,17732306,17734080,17735591,17736867,17738104,17739375,17740640,17741945,17743236,17744606,17745817,17747045,17748349,17749628,17750853,17752632,17754154,17755852,17757490,17759009,17760395,17761970,17763706,17765317,17766846,17768080,17769279,17770616,17771825,17773091,17774412,17775918,17777666,17779184,17780465,17781821,17783112,17784384,17785466,17786715,17788124,17789606,17791342,17792989,17794647,17796163,17797530,17799028,17800375,17802040,17803571,17805080,17806325,17807598,17808834,17810006,17811235,17812548,17814125,17815882,17817549,17819284,17820807,17822350,17824091,17825664,17827276,17828844,17830176,17830438,17831053,17832638,17834015,17834287,17834858,17836435,17837800,17838072,17838652,17840245,17841641,17841913,17842458,17844058,17845450,17845722,17846238,17847810,17849215,17849499,17849991,17851290,17852520,17853851,17855079,17856506,17857786,17859071,17860336,17861750,17863025,17864316,17865612,17867028,17868352,17869642,17870988,17872257,17873681,17875167,17876420,17877659,17878909,17880127,17881404,17882646,17883885,17885353,17886575,17887800,17889001,17890216,17891420,17892595,17893822,17895041,17896533,17897800,17899057,17900321,17901573,17902874,17904139,17905373,17906767,17908617,17910335,17912120,17913782,17915421,17917096,17919020,17921036,17922295,17923608,17924956,17926323,17927677,17929069,17930378,17931707,17933046,17934372,17935774,17937077,17938453,17939812,17941202,17942573,17944241,17945939,17947549,17949159,17950795,17952395,17953992,17955475,17956779,17958159,17959507,17960896,17962419,17963918,17965413,17966911,17968541,17970401,17972159,17973778,17975399,17976976,17978576,17980183,17981657,17983003,17984350,17985749,17987150,17988668,17990197,17991726,17993184,17994784,17996597,17998440,18000067,18001664,18003241,18004873,18006473,18007975,18009355,18010674,18012070,18013475,18014971,18016489,18018022,18019464,18021059,18022797,18024679,18026348,18027940,18029510,18031147,18032733,18034216,18035635,18036924,18038312,18039719,18041175,18042733,18044251,18045667,18047241,18048952,18050708,18051895,18053121,18054180,18055033,18055909,18056966,18057945,18059007,18060137,18061411,18062623,18063766,18064670,18065684,18066682,18067745,18069359,18070520,18071727,18072791,18073633,18074497,18075590,18076624,18077656,18078792,18080073,18081312,18082501,18083384,18084391,18085432,18086495,18088250,18090211,18092103,18094033,18096006,18097973,18099887,18101855,18103732,18105610,18107382,18109178,18111061,18112957,18114914,18116848,18118796,18120255,18122202,18124155,18126099,18128082,18130073,18132047,18133978,18135952,18137929,18139680,18141441,18143205,18144972,18146739,18148500,18150356,18152101,18153907,18155671,18157474,18159269,18161062,18162625,18164598,18166567,18168492,18170394,18172264,18174237,18175948,18176607,18177458,18179376,18181322,18183318,18185295,18187280,18189229,18191233,18193192,18195161,18197141,18199089,18201070,18203052,18204994,18206966,18208897,18210864,18212777,18214383,18215952,18217522,18219099,18220676,18222224,18223793,18225387,18227147,18228772,18230435,18232100,18233672,18235529,18237335,18239164,18240979,18242754,18244236,18245832,18247312,18248942,18250588,18252330,18253978,18255639,18257336,18258983,18260711,18262428,18264286,18266098,18267920,18269797,18271671,18273330,18275051,18276639,18278297,18280135,18281929,18283793,18285626,18287314,18288903,18290500,18292028,18293682,18295332,18297101,18298721,18300469,18302177,18303954,18305712,18307497,18309145,18310694,18312445,18314149,18315879,18317380,18319232,18320956,18322663,18324293,18326104,18327819,18329441,18331121,18332732,18334456,18335985,18337576,18339238,18340960,18342605,18344183,18345466,18347363,18349231,18350367,18352105,18354051,18355935,18357838,18359409,18361411,18363412,18365427,18366999,18368659,18370011,18371170,18372433,18373591,18375010,18376613,18378216,18379717,18381189,18382663,18384167,18385655,18387177,18388747,18389999,18390995,18391859,18392881,18394171,18395293,18396211,18397309,18398370,18400017,18401871,18403703,18405603,18407352,18409252,18411023,18412856,18414736,18416578,18418214,18419819,18421483,18423163,18424973,18426721,18428396,18430285,18432119,18433937,18435810,18437560,18439466,18441240,18443086,18444945,18446777,18448452,18450112,18451856,18453487,18455266,18457030,18458734,18460611,18462351,18464275,18466037,18467951,18469763,18471654,18473515,18475376,18477339,18479262,18481235,18483229,18485120,18487083,18489046,18491028,18493000,18494930,18496629,18498347,18500116,18501894,18503758,18505621,18507415,18509136,18510821,18512174,18513438,18515036,18516557,18518329,18519670,18520667,18521816,18522833,18523529,18523822,18524841,18526126,18527387,18528729,18530051,18531483,18532786,18534131,18535486,18536796,18538274,18539567,18540868,18542192,18543542,18544932,18546280,18547616,18548950,18550484,18551884,18553366,18554440,18556025,18557650,18559535,18561497,18563526,18565577,18567581,18569580,18571573,18573504,18575290,18576914,18578437,18579952,18581639,18583230,18584936,18586646,18588427,18590194,18591960,18593625,18595344,18596935,18598516,18600128,18601769,18603179,18604911,18606779,18608718,18610563,18612215,18613899,18615678,18617649,18619620,18621483,18623248,18624929,18626781,18628700,18630585,18632370,18633768,18635547,18637483,18639376,18641256,18642911,18644592,18646506,18648473,18650476,18652423,18654206,18655831,18657711,18659576,18661466,18663309,18664794,18665810,18666806,18667746,18669002,18670455,18672022,18673629,18675278,18676890,18678516,18680163,18681877,18683308,18685235,18686940,18688655,18690395,18692002,18693717,18695365,18696993,18698693,18700385,18702255,18704035,18705789,18707540,18709290,18710975,18712757,18714374,18716046,18717744,18719466,18721211,18722830,18724499,18726168,18727773,18729687,18731559,18733404,18735339,18737298,18739228,18741127,18742859,18744560,18746272,18747956,18749660,18751609,18753523,18755431,18757323,18759233,18761222,18763139,18765059,18767012,18768950,18770785,18772568,18774357,18776147,18777987,18779952,18781853,18783766,18785642,18787566,18789400,18791268,18793094,18794419,18795485,18796829,18798513,18800120,18801792,18803395,18805230,18807089,18808932,18810802,18812629,18814487,18816308,18818140,18820061,18821901,18823805,18825700,18826972,18827564,18828158,18828825,18830084,18831098,18832406,18833662,18834901,18835847,18837630,18839360,18841010,18842586,18844327,18845947,18847557,18849247,18850940,18852267,18853992,18855485,18856840,18857974,18859544,18861168,18862881,18864613,18866343,18868044,18869825,18871415,18873031,18874518,18875868,18877394,18878862,18880380,18881838,18883352,18884783,18886195,18887676,18889063,18890640,18892201,18894006,18895837,18897698,18899584,18901437,18903283,18905108,18906989,18908832,18910658,18912491,18914418,18916331,18918206,18920079,18921942,18923905,18925929,18927904,18929827,18931712,18933614,18935553,18937470,18939379,18941312,18943257,18945171,18947042,18948916,18950755,18952655,18954545,18956353,18957914,18959407,18960812,18962565,18964170,18965766,18967412,18969017,18970631,18972287,18973903,18975638,18977288,18978947,18980589,18982228,18983859,18985518,18987142,18988782,18990536,18992206,18993839,18995486,18997136,18998766,19000405,19002066,19003856,19005708,19007591,19009442,19011303,19013162,19015008,19016875,19018713,19020661,19022502,19024339,19026161,19028015,19029858,19031699,19033544,19035466,19037355,19039217,19041065,19042929,19044785,19046618,19048473,19050344,19052125,19053467,19054893,19056315,19057651,19059066,19060502,19062109,19063502,19064859,19066296,19067790,19069215,19070661,19072363,19074228,19076093,19077934,19079691,19081493,19083296,19085203,19087102,19088850,19090556,19092290,19094011,19095776,19097415,19099156,19100814,19102518,19104161,19105871,19107603,19109273,19111043,19112787,19114522,19116111,19117809,19119629,19121466,19123265,19125141,19126794,19128522,19130400,19132324,19134213,19136065,19137818,19139483,19141257,19143038,19144827,19146622,19147964,19149686,19151390,19153041,19154878,19156522,19158185,19159989,19161756,19163576,19165335,19167092,19168718,19170449,19172066,19173709,19175475,19176969,19178132,19179383,19180639,19181873,19183187,19184419,19185598,19187269,19188848,19190344,19191962,19193651,19195260,19196761,19198335,19199944,19201450,19203035,19204568,19206391,19208222,19210162,19212053,19213907,19214987,19216780,19218181,19219613,19221391,19223201,19224999,19226742,19228444,19229989,19231476,19233126,19234868,19236587,19238209,19239565,19240876,19242787,19244627,19246355,19247692,19249327,19250748,19252228,19253880,19255310,19257017,19258505,19259976,19261491,19263017,19264553,19266110,19267601,19268921,19270417,19271953,19273533,19275081,19276573,19278077,19279646,19281246,19282733,19284294,19285652,19287095,19288548,19290037,19291855,19293696,19295569,19297370,19299189,19301026,19302814,19304543,19306277,19307760,19309574,19311333,19313043,19314842,19316498,19318258,19320029,19321760,19323499,19325422,19327327,19329197,19331074,19332821,19334719,19336479,19338239,19339987,19341605,19343343,19345063,19346856,19348544,19350243,19351973,19353756,19355492,19357169,19358959,19360659,19362384,19364048,19365709,19367392,19369127,19370784,19372566,19374240,19376009,19377670,19379335,19381051,19382772,19384471,19386164,19387822,19389622,19391239,19392681,19394118,19395864,19397610,19399255,19400975,19402632,19404059,19405579,19407108,19408651,19410070,19411564,19413104,19414613,19416207,19418005,19419748,19421411,19423178,19424831,19426577,19428339,19430075,19431685,19433350,19435005,19436687,19438303,19439887,19441508,19443218,19444840,19446535,19448172,19449793,19451497,19453120,19454807,19456436,19458179,19459833,19461487,19463119,19464791,19466417,19468061,19469710,19471364,19473060,19474694,19476348,19478001,19479719,19481363,19482970,19484563,19486321,19487936,19489600,19491272,19493053,19494724,19496357,19497970,19499607,19501312,19502918,19504580,19506251,19508063,19509688,19511305,19512922,19514604,19516253,19518080,19519921,19521587,19523216,19524962,19526797,19528446,19530165,19531949,19533798,19535540,19537360,19539272,19541143,19543046,19545068,19547048,19548991,19550930,19552888,19554702,19556548,19558467,19560451,19562469,19564472,19566475,19568340,19570259,19572113,19573936,19575801,19577795,19579811,19581828,19583839,19585817,19587804,19589705,19591606,19593490,19595409,19597319,19599249,19601199,19603222,19604925,19606807,19608707,19610633,19612477,19614293,19615876,19617483,19619360,19621174,19622986,19624602,19626223,19627824,19629479,19631097,19632874,19634257,19635628,19636979,19638318,19639753,19641292,19642744,19644151,19645601,19647074,19648574,19650059,19651464,19652867,19654407,19655922,19657261,19658991,19660685,19662445,19664174,19665846,19667562,19669252,19671005,19672661,19674354,19676061,19677841,19679549,19681207,19682852,19684557,19686192,19687912,19689577,19691269,19692935,19694677,19696359,19698026,19699643,19701379,19703044,19704679,19706332,19707967,19709933,19711798,19713708,19715651,19717544,19719460,19721348,19723242,19725186,19726968,19728738,19730553,19732391,19734416,19736409,19738440,19740482,19742537,19744570,19746603,19748620,19750642,19752688,19754722,19756776,19758829,19760875,19762929,19764970,19767013,19768967,19770819,19772687,19774596,19776516,19778401,19780283,19782154,19783989,19785453,19786930,19788327,19789929,19791638,19793247,19794796,19796384,19798005,19799529,19801136,19802692,19804149,19805650,19807248,19808855,19810329,19811972,19813471,19814899,19816473,19817909,19819617,19821379,19823262,19824973,19826633,19828274,19830021,19831969,19833835,19835691,19837486,19839258,19840964,19842785,19844615,19846489,19847975,19849994,19851954,19853977,19855912,19857824,19859720,19861402,19863151,19864808,19866590,19868290,19870066,19871855,19873615,19875289,19877057,19878749,19880458,19882152,19883853,19885144,19886657,19888146,19889652,19891219,19892734,19894238,19895764,19897261,19898845,19900354,19901860,19903381,19904929,19906468,19907994,19909506,19911005,19912311,19913655,19914940,19916220,19918005,19919922,19921833,19923731,19925624,19927604,19929531,19931475,19933447,19934799,19936092,19937375,19938676,19940015,19941307,19942622,19944044,19945708,19947177,19948643,19950217,19951883,19953388,19954923,19956540,19958147,19959942,19961591,19963278,19964968,19966509,19968162,19969835,19971510,19973331,19974575,19975864,19977160,19978396,19979676,19980971,19982152,19983359,19984842,19985970,19986954,19988129,19989275,19990542,19991519,19992747,19994238,19995462,19996760,19998013,19999189,20000487,20001714,20003115,20004409,20006051,20007409,20008721,20010031,20011393,20012686,20013968,20015277,20016872,20018715,20020173,20021851,20023599,20025250,20026790,20028220,20029841,20031802,20033530,20034545,20035815,20036953,20038279,20039472,20040846,20042805,20044777,20046460,20048125,20049947,20051755,20053535,20055047,20056981,20058512,20058930,20059591,20060114,20060634,20061208,20061667,20062174,20062622,20063474,20064343,20065664,20067115,20068434,20069637,20070796,20071417,20072271,20072649,20073971,20075368,20076895,20078394,20079783,20081106,20081546,20083052,20084008,20085378,20086668,20088088,20089467,20090698,20091855,20093552,20095365,20097104,20098860,20100651,20101411,20101481,20102263,20103161,20103921,20104509,20105114,20105551,20106369,20106912,20107544,20108692,20109603,20110375,20111784,20113186,20114573,20115986,20117415,20118875,20120532,20122207,20123839,20125473,20127008,20128535,20130353,20132031,20133247,20134310,20135479,20136670,20137980,20139310,20140555,20141807,20143229,20144702,20146289,20147890,20149555,20151228,20152607,20153947,20155376,20156565,20156590,20156620,20156645,20156791,20157688,20158676,20159696,20160887,20162509,20164142,20165742,20167327,20168712,20170196,20171773,20173347,20174883,20176462,20178359,20180271,20182187,20184108,20185993,20187897,20188745,20189730,20191208,20192667,20193544,20194473,20195722,20197015,20198446,20199896,20201391,20202879,20204440,20205993,20207733,20209505,20211015,20212601,20214087,20215652,20217227,20218777,20220308,20221911,20223964,20226021,20228057,20230078,20231951,20233826,20235869,20237880,20239621,20241446,20243339,20245239,20247245,20249266,20251293,20253314,20255328,20257345,20259341,20261336,20263388,20265437,20267166,20268910,20270911,20272899,20274890,20276893,20278573,20280228,20281462,20282674,20283867,20285117,20287103,20289100,20290784,20292516,20294402,20296295,20298059,20299845,20301602,20303375,20305332,20307275,20309255,20311217,20313177,20315156,20317172,20319123,20320643,20322208,20323738,20325262,20326810,20328357,20329926,20331462,20332823,20334233,20335493,20336838,20338154,20339431,20340784,20342127,20344133,20346144,20348136,20350094,20352096,20354067,20356004,20357903,20359905,20361831,20363527,20365203,20366862,20368552,20370198,20371768,20372034,20372307,20373458,20374838,20376181,20377287,20378302,20379337,20380345,20381404,20383004,20384733,20386304,20387976,20389697,20391412,20392919,20394452,20396032,20397622,20399164,20400719,20402222,20403716,20405086,20406455,20407523,20408626,20409939,20411266,20412494,20413772,20415239,20416653,20418247,20419856,20421309,20422787,20424172,20425586,20426480,20427446,20429035,20430609,20431541,20432556,20433857,20435201,20436682,20438094,20439565,20441103,20442261,20443451,20444894,20446375,20448036,20449694,20451535,20453383,20455157,20456977,20458562,20460152,20461757,20463380,20464962,20466550,20468068,20469595,20471088,20472571,20473806,20475151,20476686,20478284,20479644,20480994,20482375,20483763,20485160,20486593,20487140,20487746,20488141,20488615,20490078,20491616,20493235,20494835,20496224,20497674,20499196,20500727,20502132,20503496,20504644,20505785,20507040,20508380,20509885,20511343,20512397,20513316,20513580,20513983,20515751,20517605,20519396,20521209,20522756,20524260,20525208,20526231,20527798,20529367,20530936,20532516,20534101,20535682,20537240,20538851,20540685,20542499,20544301,20546088,20547939,20549784,20551613,20553448,20554766,20556160,20557565,20558960,20560403,20561827,20563484,20565176,20566744,20568299,20569810,20571283,20572836,20574364,20575832,20577387,20579267,20581185,20582720,20584211,20584827,20585479,20586334,20587309,20588544,20590069,20591723,20593434,20594915,20596454,20597861,20599219,20600383,20601418,20602096,20602839,20603656,20604504,20605119,20605741,20607236,20608624,20609138,20609674,20610187,20610796,20612572,20614397,20615504,20616633,20617673,20618752,20620135,20621510,20622631,20623662,20624569,20625553,20627002,20628458,20629907,20631340,20632758,20634223,20635916,20637646,20639284,20640966,20642837,20644731,20646279,20647819,20648795,20649789,20650936,20652083,20652992,20653935,20654813,20655712,20656724,20657739,20658953,20660156,20660663,20661178,20661821,20662471,20662995,20663527,20664161,20664802,20665314,20665834,20666471,20667115,20667639,20668171,20668777,20669390,20669874,20670362,20670929,20671626,20673510,20675341,20676384,20677459,20678491,20679562,20680592,20681658,20682744,20683883,20685684,20687385,20689057,20690772,20692410,20694094,20695825,20697459,20698602,20699834,20701496,20703149,20704836,20706573,20708460,20710256,20710503,20710789,20711074,20711420,20711607,20711813,20712115,20712426,20712514,20712779,20712822,20712956,20713098,20713324,20713564,20713772,20713989,20714329,20715773,20717250,20718818,20720466,20721550,20722643,20723704,20724801,20725975,20727198,20728681,20730186,20731645,20733129,20734987,20736842,20738528,20740227,20741679,20743206,20744824,20746478,20747855,20749273,20750557,20751841,20753335,20754968,20756622,20757769,20759398,20760867,20762336,20763831,20765305,20766490,20767936,20769389,20770797,20772322,20773844,20775347,20776777,20777768,20779079,20780446,20781811,20782954,20784283,20785443,20786592,20787651,20789183,20791231,20793279,20795327,20797375,20799423,20801471,20803519,20805567,20807615,20809663,20811711,20813759,20815807,20817855,20819903,20821951,20823999,20826047,20828095,20830143,20832191,20834239,20836287,20838335,20840391,20842439,20844383,20846431,20848479,20850527,20852575,20854623,20856671,20858719,20860767,20862815,20864863,20866911,20868959,20871007,20873055,20875103,20877151,20879199,20881247,20883295,20885343,20887391,20889439,20891496,20893544,20895592,20897640,20899631,20901540,20903588,20905636,20907611,20909659,20911707,20913682,20915730,20917778,20919826,20921874,20923922,20925970,20927947,20929995,20932043,20934091,20936139,20938187,20940235,20942283,20944254,20946302,20948350,20950398,20952377,20954425,20956473,20958521,20960569,20962541,20964589,20966637,20968685,20970733,20972781,20974829,20976800,20978848,20980896,20982944,20984821,20986869,20988917,20990965,20993013,20994912,20996960,20998937,21000985,21002959,21005007,21007055,21009103,21011151,21013199,21015247,21017295,21019343,21021391,21023439,21025487,21027535,21029583,21031631,21033685,21035741,21037789,21039823,21041800,21043669,21045717,21047765,21049813,21051861,21053909,21055957,21058005,21060053,21062101,21064149,21066197,21068245,21070293,21072341,21074389,21076437,21078493,21080526,21082407,21084374,21086422,21088470,21090518,21092573,21094611,21096428,21098476,21100524,21102572,21104620,21106669,21108699,21110532,21112580,21114628,21116676,21118724,21120772,21122820,21124868,21126916,21128964,21131012,21133060,21135108,21137156,21139204,21141252,21143300,21145348,21147396,21149444,21151492,21153540,21155588,21157636,21159684,21161732,21163780,21165828,21167853,21169702,21171636,21173684,21175732,21177780,21179828,21181876,21183924,21185972,21188020,21190068,21192116,21194164,21196212,21198260,21200308,21202356,21204404,21206452,21208500,21210548,21212596,21214644,21216692,21218740,21220788,21222839,21224895,21226942,21228845,21230667,21232715,21234689,21236737,21238710,21240758,21242806,21244854,21246902,21248950,21250998,21253046,21255094,21257142,21259190,21261238,21263286,21265334,21267382,21269430,21271478,21273526,21275574,21277622,21279670,21281718,21283766,21285814,21287862,21289910,21291963,21293815,21295863,21297911,21299959,21302007,21304055,21306103,21308151,21310199,21312247,21314295,21316343,21318391,21320439,21322487,21324535,21326583,21328631,21330679,21332727,21334775,21336823,21338871,21340919,21342967,21345023,21347071,21349102,21351008,21353056,21355104,21357152,21359200,21361154,21363202,21365250,21367298,21369349,21371311,21373359,21375407,21377455,21379503,21381551,21383564,21385592,21387640,21389688,21391736,21393784,21395832,21397809,21399857,21401905,21403953,21406001,21408049,21410028,21412076,21414124,21416172,21418220,21420268,21422316,21424364,21426412,21428460,21430508,21432556,21434604,21436652,21438700,21440748,21442796,21444768,21446816,21448864,21450912,21452960,21455008,21457056,21459104,21461152,21463200,21465248,21467296,21469344,21471392,21473440,21475488,21477466,21479514,21481562,21483610,21485658,21487706,21489754,21491802,21493850,21495898,21497946,21499994,21502042,21504090,21506138,21508186,21510234,21512282,21514330,21516305,21518353,21520401,21522449,21524497,21526545,21528593,21530641,21532689,21534737,21536785,21538833,21540881,21542929,21544977,21547025,21549073,21551121,21553100,21555148,21557196,21559244,21561292,21563340,21565388,21567436,21569484,21571532,21573580,21575628,21577676,21579724,21581772,21583820,21585868,21587916,21589892,21591940,21593988,21596036,21598084,21600132,21602180,21604228,21606276,21608324,21610372,21612420,21614468,21616516,21618564,21620612,21622660,21624708,21626682,21628730,21630705,21632753,21634729,21636777,21638753,21640801,21642779,21644827,21646802,21648850,21650509,21652504,21654555,21656607,21658580,21660450,21662435,21664483,21666531,21668531,21670428,21672356,21674412,21676460,21678485,21680402,21682306,21684342,21686398,21688431,21690374,21692274,21694283,21696331,21698387,21700369,21702302,21704284,21706332,21708387,21710395,21712254,21714302,21716350,21718398,21720446,21722494,21724542,21726590,21728638,21730686,21732734,21734782,21736830,21738878,21740856,21742904,21744952,21747000,21749048,21751096,21753144,21755192,21757240,21759288,21761336,21763384,21765432,21767480,21769456,21771504,21773552,21775600,21777648,21779696,21781744,21783792,21785840,21787888,21789936,21791911,21793959,21796007,21798055,21800103,21802151,21804199,21806247,21808295,21810343,21812391,21814367,21816415,21818463,21820511,21822494,21824542,21826590,21828638,21830686,21832664,21834712,21836691,21838739,21840712,21842688,21844736,21846706,21848754,21850802,21852850,21854898,21856870,21858918,21860966,21863014,21865062,21866990,21868948,21870996,21873044,21875092,21877140,21879188,21881236,21883284,21885332,21887380,21889428,21891476,21893524,21895572,21897620,21899668,21901716,21903764,21905812,21907787,21909835,21911883,21913931,21915979,21918027,21920075,21922123,21924171,21926219,21928267,21930315,21932363,21934411,21936459,21938507,21940555,21942603,21944633,21946661,21948639,21950687,21952664,21954712,21956683,21958663,21960711,21962759,21964739,21966787,21968835,21970816,21972864,21974843,21976891,21978868,21980916,21982894,21984942,21986916,21988964,21991012,21993060,21995108,21997156,21999204,22001252,22003300,22005348,22007396,22009444,22011492,22013540,22015588,22017636,22019684,22021732,22023704,22025752,22027800,22029848,22031896,22033944,22035992,22038040,22040088,22042136,22044184,22046232,22048280,22050328,22052376,22054424,22056472,22058450,22060498,22062546,22064594,22066571,22068619,22070667,22072715,22074688,22076736,22078784,22080832,22082817,22084865,22086913,22088961,22091009,22092992,22095040,22097088,22099136,22101184,22103232,22105280,22107328,22109376,22111424,22113472,22115520,22117496,22119544,22121592,22123640,22125688,22127736,22129784,22131765,22133813,22135861,22137909,22139957,22142005,22144053,22146033,22148081,22150129,22152177,22154225,22156273,22158321,22160369,22162417,22164465,22166513,22168561,22170609,22172657,22174705,22176753,22178801,22180849,22182826,22184874,22186922,22188970,22191018,22193066,22195114,22197162,22199210,22201258,22203306,22205354,22207402,22209450,22211498,22213546,22215594,22217575,22219623,22221671,22223719,22225767,22227815,22229863,22231911,22233959,22236007,22238063,22240120,22242168,22244216,22246264,22248312,22250360,22252408,22254456,22256504,22258552,22260594,22262585,22264468,22266516,22268564,22270612,22272660,22274708,22276756,22278804,22280852,22282900,22284948,22287004,22289060,22291108,22293156,22295212,22297266,22299312,22301346,22303380,22305381,22307327,22309013,22311061,22313109,22315157,22317205,22319253,22321301,22323349,22325397,22327445,22329493,22331541,22333589,22335637,22337685,22339733,22341781,22343829,22345877,22347925,22349973,22352021,22354069,22356037,22358085,22360133,22362181,22364229,22366277,22368325,22370373,22372421,22374469,22376517,22378565,22380613,22382661,22384709,22386757,22388805,22390853,22392901,22394949,22396997,22399045,22401011,22403059,22405107,22407155,22409203,22411251,22413299,22415347,22417395,22419443,22421491,22423539,22425587,22427635,22429683,22431731,22433779,22435827,22437875,22439854,22441902,22443950,22445998,22448046,22450094,22452142,22454190,22456238,22458286,22460334,22462382,22464430,22466478,22468526,22470574,22472622,22474670,22476718,22478608,22480656,22482704,22484752,22486800,22488848,22490896,22492944,22494992,22497040,22499088,22501136,22503184,22505232,22507280,22509328,22511376,22513355,22515403,22517451,22519499,22521547,22523595,22525643,22527691,22529739,22531787,22533835,22535883,22537931,22539979,22542027,22544075,22546123,22548171,22550147,22552195,22554243,22556291,22558339,22560387,22562435,22564323,22566371,22568419,22570395,22572443,22574491,22576539,22578587,22580643,22582691,22584739,22586787,22588768,22590816,22592864,22594912,22596960,22599008,22601056,22603104,22605152,22607200,22609248,22611296,22613344,22615392,22617440,22619488,22621536,22623584,22625632,22627680,22629728,22631776,22633824,22635872,22637920,22639968,22642016,22644064,22646112,22648160,22650208,22652256,22654304,22656283,22658331,22660379,22662427,22664475,22666523,22668571,22670619,22672667,22674715,22676763,22678811,22680859,22682907,22684955,22687003,22689051,22691099,22693147,22695195,22697243,22699291,22701339,22703387,22705435,22707483,22709531,22711579,22713627,22715675,22717723,22719771,22721819,22723791,22725839,22727887,22729935,22731983,22734031,22736079,22738127,22740105,22742153,22744201,22746249,22748297,22750345,22752393,22754441,22756419,22758467,22760515,22762491,22764539,22766587,22768565,22770613,22772661,22774709,22776757,22778805,22780853,22782901,22784949,22786997,22789045,22791093,22793141,22795189,22797169,22799217,22801265,22803313,22805361,22807409,22809457,22811505,22813553,22815601,22817656,22819704,22821752,22823800,22825775,22827823,22829871,22831919,22833967,22836015,22838063,22840111,22842159,22844207,22846255,22848229,22850277,22852325,22854373,22856421,22858469,22860517,22862565,22864622,22866670,22868718,22870688,22872660,22874708,22876685,22878733,22880781,22882757,22884805,22886696,22888744,22890739,22892703,22894751,22896730,22898778,22900756,22902804,22904782,22906830,22908806,22910854,22912902,22914950,22916998,22919046,22921094,22923142,22925190,22927238,22929286,22931334,22933382,22935430,22937478,22939526,22941574,22943622,22945670,22947718,22949766,22951814,22953862,22955910,22957958,22960006,22961980,22964028,22966076,22968124,22970172,22972220,22974268,22976316,22978364,22980412,22982460,22984508,22986556,22988604,22990652,22992700,22994748,22996796,22998844,23000892,23002940,23004988,23007036,23009084,23011132,23013180,23015161,23017209,23019257,23021305,23023353,23025401,23027449,23029432,23031480,23033528,23035576,23037624,23039672,23041720,23043700,23045748,23047726,23049774,23051747,23053795,23055843,23057891,23059939,23061918,23063966,23066014,23068062,23070110,23072091,23074139,23076187,23078235,23080283,23082331,23084379,23086427,23088475,23090523,23092571,23094619,23096667,23098715,23100763,23102811,23104791,23106839,23108887,23110935,23112983,23115031,23117079,23119127,23121175,23123223,23125271,23127319,23129367,23131415,23133463,23135511,23137488,23139536,23141584,23143550,23145598,23147579,23149627,23151675,23153723,23155771,23157819,23159867,23161915,23163963,23166011,23168059,23170107,23172155,23174203,23176251,23178299,23180347,23182403,23184460,23186508,23188558,23190614,23192668,23194686,23196558,23198398,23200446,23202494,23204542,23206590,23208638,23210686,23212734,23214782,23216830,23218878,23220926,23222974,23225022,23227070,23229118,23231166,23233214,23235268,23237316,23239364,23241412,23243450,23245485,23247234,23249282,23251330,23253378,23255426,23257474,23259522,23261570,23263618,23265666,23267714,23269762,23271810,23273858,23275906,23277954,23280002,23282050,23284098,23286154,23288202,23290252,23292258,23294155,23296203,23298251,23300299,23302347,23304395,23306443,23308491,23310539,23312587,23314635,23316683,23318731,23320779,23322827,23324875,23326923,23328971,23331019,23333067,23335115,23337159,23338968,23341016,23343064,23345112,23347160,23349208,23351256,23353234,23355213,23357194,23359242,23361290,23363338,23365386,23367434,23369482,23371530,23373578,23375557,23377605,23379653,23381701,23383749,23385797,23387845,23389893,23391941,23393918,23395966,23398014,23400062,23402110,23404158,23406129,23408177,23410225,23412273,23414321,23416369,23418335,23420383,23422431,23424479,23426527,23428575,23430623,23432671,23434719,23436767,23438815,23440863,23442911,23444959,23447007,23449055,23451103,23453151,23455199,23457247,23459295,23461343,23463391,23465322,23467370,23469418,23471466,23473514,23475562,23477610,23479658,23481706,23483754,23485802,23487850,23489898,23491946,23493994,23496042,23498090,23500138,23502186,23504234,23506282,23508330,23510378,23512426,23514381,23516429,23518477,23520525,23522573,23524621,23526669,23528717,23530765,23532813,23534861,23536909,23538957,23541005,23543053,23545101,23547149,23549197,23551245,23553293,23555349,23557397,23559418,23561276,23563324,23565372,23567420,23569468,23571516,23573564,23575612,23577660,23579708,23581756,23583804,23585852,23587900,23589948,23591996,23594044,23596092,23598140,23600188,23602236,23604284,23606332,23608251,23610172,23612220,23614190,23616238,23618211,23620190,23622238,23624213,23626261,23628309,23630357,23632405,23634461,23636487,23638430,23640478,23642526,23644574,23646622,23648670,23650715,23652676,23654724,23656772,23658820,23660868,23662916,23664964,23667012,23669060,23671108,23673082,23675130,23677178,23679226,23681274,23683322,23685370,23687418,23689466,23691514,23693489,23695470,23697518,23699403,23701451,23703424,23705402,23707290,23709338,23711386,23713434,23715482,23717530,23719578,23721626,23723674,23725722,23727770,23729818,23731866,23733914,23735962,23738010,23740058,23742106,23744083,23746131,23748179,23750227,23752275,23754323,23756371,23758419,23760467,23762515,23764563,23766611,23768659,23770707,23772755,23774803,23776851,23778832,23780880,23782928,23784976,23787024,23789072,23791120,23793168,23795216,23797264,23799312,23801360,23803408,23805456,23807504,23809552,23811528,23813576,23815624,23817672,23819720,23821768,23823816,23825864,23827912,23829960,23832008,23834056,23836104,23838152,23840200,23842248,23844225,23846273,23848321,23850369,23852417,23854394,23856442,23858490,23860538,23862586,23864567,23866615,23868663,23870711,23872759,23874807,23876855,23878903,23880951,23882999,23885047,23887095,23889143,23891191,23893239,23895287,23897335,23899383,23901431,23903479,23905451,23907499,23909547,23911595,23913643,23915691,23917739,23919787,23921835,23923883,23925931,23927979,23930027,23932075,23934123,23936171,23938219,23940267,23942315,23944294,23946342,23948390,23950438,23952486,23954534,23956512,23958560,23960608,23962656,23964704,23966752,23968729,23970777,23972825,23974873,23976921,23978969,23981017,23983065,23985113,23987161,23989209,23991257,23993305,23995353,23997401,23999449,24001497,24003482,24005530,24007578,24009626,24011674,24013722,24015770,24017818,24019866,24021914,24023962,24026010,24028058,24030106,24032154,24034202,24036250,24038298,24040275,24042323,24044371,24046419,24048467,24050515,24052563,24054611,24056659,24058633,24060681,24062729,24064777,24066825,24068873,24070921,24072969,24074949,24076997,24079045,24081093,24083141,24085189,24087237,24089285,24091333,24093381,24095429,24097477,24099525,24101573,24103621,24105669,24107717,24109692,24111740,24113788,24115836,24117884,24119932,24121980,24124028,24126076,24128133,24130181,24132229,24134277,24136325,24138373,24140421,24142469,24144461,24146509,24148402,24150450,24152498,24154554,24156506,24158554,24160602,24162650,24164603,24166582,24168559,24170542,24172590,24174307,24176355,24178328,24180308,24182356,24184404,24186452,24188500,24190548,24192602,24194658,24196706,24198754,24200735,24202672,24204464,24206512,24208560,24210608,24212656,24214704,24216752,24218800,24220848,24222896,24224948,24226929,24228844,24230892,24232940,24234988,24237036,24239084,24241132,24243180,24245228,24247276,24249249,24251297,24253345,24255393,24257441,24259489,24261537,24263585,24265633,24267616,24269664,24271712,24273760,24275808,24277787,24279835,24281883,24283931,24285979,24287961,24290009,24292057,24294114,24296170,24298226,24300264,24302188,24304236,24306284,24308332,24310380,24312428,24314298,24316291,24318346,24320394,24322442,24324490,24326538,24328586,24330634,24332682,24334730,24336778,24338826,24340874,24342922,24344970,24347018,24349066,24351114,24353162,24355210,24357258,24359306,24361354,24363402,24365450,24367498,24369546,24371415,24373462,24375518,24377566,24379614,24381662,24383710,24385758,24387806,24389854,24391902,24393950,24395998,24398046,24400094,24402142,24404190,24406238,24408286,24410334,24412382,24414430,24416478,24418526,24420574,24422622,24424670,24426336,24427386,24428702,24430201,24431496,24433252,24434534,24435504,24436790,24438203,24439613,24441021,24442513,24444367,24446220,24448116,24450094,24451989,24453786,24455760,24457808,24459856,24461904,24463952,24466000,24468048,24470096,24472144,24474192,24476240,24478288,24480336,24482384,24484432,24486480,24488528,24490576,24492624,24494602,24496650,24498698,24500746,24502794,24504842,24506890,24508938,24510986,24513034,24515082,24517130,24519178,24521226,24523274,24525322,24527370,24529418,24531466,24533514,24535492,24537540,24539588,24541636,24543684,24545732,24547780,24549828,24551876,24553924,24555972,24558020,24560068,24562116,24564164,24566212,24568260,24570308,24572356,24574409,24576407,24578455,24580503,24582551,24584599,24586647,24588695,24590743,24592791,24594839,24596887,24598935,24600983,24603031,24605079,24607127,24609175,24611223,24613271,24615252,24617300,24619348,24621396,24623444,24625492,24627540,24629588,24631636,24633684,24635732,24637780,24639828,24641876,24643924,24645972,24648020,24650068,24652116,24654164,24656139,24658187,24660235,24662283,24664331,24666379,24668427,24670475,24672523,24674571,24676619,24678667,24680715,24682763,24684811,24686859,24688907,24690955,24693003,24694983,24697031,24699079,24701127,24703175,24705223,24707271,24709319,24711367,24713415,24715463,24717511,24719559,24721607,24723655,24725703,24727751,24729799,24731847,24733895,24735872,24737920,24739968,24742016,24744064,24746112,24748160,24750208,24752256,24754304,24756352,24758400,24760448,24762496,24764544,24766592,24768640,24770688,24772736,24774719,24776767,24778815,24780863,24782840,24784888,24786863,24788853,24790164,24791520,24793302,24794586,24795726,24797372,24798704,24800001,24800815,24801622,24802419,24803264,24804171,24805286,24807342,24808960,24808985,24809010,24809392,24811440,24813497,24814229,24814254,24814496,24815620,24816795,24817953,24819092,24820598,24821691,24822468,24823337,24824155,24825966,24827938,24829986,24831929,24833977,24836025,24838073,24840121,24842169,24844168,24846216,24848264,24850265,24852313,24854245,24856293,24858341,24860389,24862437,24864485,24866533,24868581,24870465,24872404,24874343,24876290,24878289,24880246,24882193,24884138,24886079,24888127,24890175,24892223,24894271,24896309,24898244,24900114,24902162,24904210,24906258,24908306,24910305,24912175,24914223,24916271,24918319,24920321,24922369,24924372,24926420,24928468,24930516,24932564,24934612,24936660,24938708,24940672,24942720,24944768,24946816,24948864,24950912,24952960,24954967,24957015,24959063,24961007,24962882,24964930,24966978,24969026,24971074,24973122,24975170,24977218,24979217,24981265,24983313,24985361,24987409,24989384,24991261,24993309,24995357,24997245,24999141,25001189,25003190,25005099,25007020,25008964,25010766,25012814,25014862,25016910,25018958,25021006,25023054,25025102,25027150,25029132,25031180,25033228,25035173,25037221,25039172,25041220,25043166,25045076,25047061,25049003,25050962,25052906,25054738,25056786,25058834,25060882,25062881,25064929,25066977,25069025,25071024,25073072,25074998,25077046,25079094,25081142,25083190,25085238,25087286,25089334,25091382,25093430,25095478,25097526,25099574,25101573,25103621,25105669,25107717,25109765,25111772,25113820,25115868,25117916,25119964,25122012,25124060,25126108,25128111,25130159,25132207,25134255,25136303,25138351,25140399,25142447,25144451,25146394,25148447,25150329,25152377,25154425,25156473,25158521,25160569,25162617,25164665,25166713,25168696,25170744,25172792,25174729,25176777,25178825,25180831,25182832,25184880,25186928,25188976,25191024,25193072,25195120,25197123,25199171,25201219,25203267,25205315,25207363,25209411,25211459,25213507,25215555,25217603,25219651,25221699,25223747,25225795,25227843,25229891,25231939,25233832,25235776,25237728,25239670,25241718,25243663,25245711,25247584,25249461,25251509,25253557,25255605,25257653,25259701,25261701,25263749,25265797,25267845,25269893,25271941,25273760,25275768,25277724,25279772,25281709,25283654,25285483,25287482,25289530,25291578,25293626,25295674,25297679,25299727,25301656,25303531,25305579,25307627,25309675,25311723,25313771,25315819,25317867,25319915,25321920,25323968,25326016,25328064,25330112,25332160,25334208,25336256,25338304,25340352,25342400,25344448,25346451,25348499,25350547,25352595,25354643,25356691,25358629,25360677,25362725,25364669,25366544,25368360,25370168,25372216,25374264,25376312,25378360,25380360,25382408,25384456,25386401,25388449,25390497,25392476,25394527,25396575,25398579,25400588,25402535,25404513,25406561,25408609,25410390,25412386,25414434,25416299,25418347,25420395,25422443,25424491,25426539,25428505,25430553,25432601,25434649,25436697,25438745,25440793,25442841,25444844,25446892,25448940,25450988,25453036,25455084,25457042,25459090,25461138,25463186,25465234,25467112,25469160,25471208,25473179,25475227,25477130,25479178,25481185,25483125,25485087,25487135,25489183,25491122,25493170,25495218,25497266,25499314,25501362,25503252,25505249,25507297,25509242,25511290,25513338,25515386,25517434,25519436,25521484,25523532,25525580,25527628,25529631,25531679,25533727,25535775,25537718,25539766,25541634,25543682,25545730,25547778,25549787,25551835,25553883,25555931,25557936,25559984,25562032,25563965,25566013,25568061,25570062,25571991,25573995,25576048,25577990,25580038,25582086,25584025,25586073,25588121,25590101,25591973,25593918,25595767,25597815,25599863,25601911,25603959,25606007,25607971,25610019,25611900,25613850,25615857,25617756,25619804,25621852,25623900,25625948,25627996,25630044,25632047,25634095,25636045,25638052,25640057,25641949,25643775,25645823,25647871,25649919,25651967,25654015,25656063,25657968,25659911,25661959,25664007,25666055,25668057,25670105,25672153,25674201,25676202,25678195,25680243,25682198,25684246,25686294,25688296,25690344,25692392,25694440,25696442,25698490,25700538,25702547,25704595,25706643,25708691,25710739,25712787,25714792,25716840,25718888,25720893,25722941,25724989,25727037,25728913,25730961,25733009,25735057,25737105,25739153,25741098,25743146,25745194,25747242,25749185,25751233,25753195,25755243,25757191,25759066,25761006,25763054,25765102,25766978,25768917,25770965,25773013,25775018,25777066,25779114,25781123,25783171,25785111,25787159,25789207,25791255,25793311,25795359,25797407,25799455,25801503,25803447,25805503,25807551,25809599,25811647,25813695,25815644,25817692,25819730,25821773,25823821,25825869,25827917,25829965,25831840,25833888,25835936,25837759,25839596,25841644,25843692,25845740,25847788,25849836,25851648,25853019,25854942,25856990,25859038,25861086,25863085,25865133,25867181,25869186,25871234,25873282,25875199,25877247,25879155,25881008,25883056,25885104,25886977,25888853,25890901,25892949,25894997,25896958,25898831,25900879,25902927,25904975,25907023,25909071,25911074,25913122,25915170,25917090,25919138,25921186,25923120,25925043,25927091,25929022,25931070,25933118,25935166,25937058,25939063,25941111,25943159,25945207,25947255,25949303,25951351,25953355,25955403,25957451,25959499,25961547,25963550,25965598,25967646,25969694,25971699,25973747,25975795,25977395,25979323,25981371,25983419,25985467,25987474,25989522,25991570,25993618,25995622,25997670,25999718,26001766,26003814,26005862,26007910,26009909,26011957,26014005,26016053,26018101,26020149,26022151,26024199,26026247,26028295,26030343,26032276,26034324,26036372,26038420,26040468,26042471,26044519,26046567,26048615,26050663,26052664,26054712,26056760,26058735,26060783,26062831,26064834,26066882,26068930,26070978,26073026,26074715,26076729,26078665,26080670,26082718,26084652,26086577,26088543,26090591,26092639,26094687,26096735,26098783,26100657,26102705,26104753,26106801,26108849,26110897,26112945,26114993,26117041,26119089,26121137,26123185,26125233,26127281,26129329,26131377,26133434,26135303,26137351,26139229,26141277,26143325,26145373,26147251,26149299,26151347,26153395,26155443,26157491,26159539,26161587,26163463,26165346,26167222,26169270,26171144,26172913,26174726,26176678,26178673,26180713,26182761,26184765,26186813,26188861,26190818,26192784,26194832,26196705,26198753,26200760,26202808,26204749,26206695,26208647,26210619,26212667,26214613,26216661,26218709,26220757,26222730,26224778,26226826,26228874,26230815,26232863,26234911,26236869,26238917,26240965,26242970,26244911,26246864,26248912,26250960,26253008,26255012,26257060,26259108,26261156,26263093,26265141,26267189,26269237,26271236,26273284,26275269,26277317,26279325,26281264,26283312,26285360,26287408,26289357,26291405,26293409,26295457,26297396,26299407,26301365,26303301,26305349,26307397,26309339,26311274,26313139,26315187,26317201,26319139,26321187,26323059,26325107,26327155,26329203,26331251,26333299,26335347,26337395,26339443,26341452,26343500,26345548,26347596,26349644,26351562,26353610,26355658,26357706,26359658,26361706,26363754,26365755,26367803,26369851,26371899,26373851,26375859,26377907,26379848,26381784,26383713,26385724,26387665,26389713,26391761,26393809,26395857,26397905,26399953,26402001,26404049,26406097,26408145,26410193,26412241,26414289,26416337,26418337,26420385,26422386,26424384,26426432,26428480,26430528,26432576,26434624,26436672,26438671,26440719,26442767,26444815,26446863,26448911,26450860,26452908,26454956,26457004,26458950,26460998,26463046,26465094,26467142,26469190,26471238,26473286,26475334,26477382,26479430,26481478,26483526,26485574,26487592,26489640,26491688,26493736,26495784,26497832,26499880,26501928,26503976,26506024,26508072,26510120,26512128,26514176,26516224,26518272,26520320,26522368,26524416,26526464,26528512,26530560,26532608,26534613,26536661,26538709,26540757,26542805,26544853,26546901,26548949,26550997,26553045,26555050,26557098,26559146,26561194,26563242,26565290,26567338,26569386,26571434,26573482,26575485,26577533,26579581,26581629,26583677,26585725,26587773,26589821,26591821,26593869,26595917,26597965,26600013,26602061,26604109,26606115,26608163,26610211,26612259,26614307,26616355,26618403,26620451,26622450,26624498,26626546,26628594,26630642,26632690,26634692,26636740,26638788,26640836,26642884,26644841,26646799,26648745,26650793,26652841,26654889,26656765,26658709,26660757,26662805,26664804,26666852,26668900,26670908,26672956,26675004,26677052,26679100,26681148,26683196,26685135,26687183,26689231,26691279,26693327,26695375,26697314,26699362,26701410,26703458,26705465,26707513,26709472,26711520,26713568,26715559,26717607,26719609,26721657,26723705,26725753,26727752,26729800,26731848,26733848,26735896,26737944,26739818,26741866,26743914,26745962,26748010,26750058,26752106,26754154,26756202,26758205,26760253,26762301,26764349,26766397,26768445,26770493,26772541,26774589,26776590,26778529,26780532,26782580,26784585,26786633,26788577,26790625,26792673,26794491,26796330,26798271,26800319,26802367,26804415,26806463,26808511,26810559,26812615,26814663,26816711,26818759,26820807,26822855,26824903,26826951,26828958,26831006,26833054,26835102,26837150,26839198,26841246,26843294,26845342,26847390,26849393,26851441,26853489,26855537,26857585,26859633,26861681,26863729,26865777,26867825,26869813,26870982,26873030,26875078,26877079,26879049,26880901,26882949,26884997,26887045,26889093,26891141,26893189,26895158,26897206,26899254,26901302,26903350,26905398,26907405,26909453,26911501,26913549,26915597,26917645,26919693,26921741,26923744,26925792,26927840,26929888,26931936,26933984,26935985,26938033,26940081,26942129,26944177,26946225,26948226,26950274,26952322,26954370,26956263,26958311,26960359,26962407,26964455,26966503,26968551,26970599,26972647,26974591,26976639,26978687,26980735,26982783,26984840,26986783,26988831,26990879,26992927,26994866,26996914,26998962,27001010,27003058,27005106,27006979,27009027,27011075,27013123,27015171,27017219,27019267,27021115,27023163,27025211,27027259,27029307,27031355,27033403,27035451,27037499,27039366,27041414,27043462,27045510,27047378,27049426,27051474,27053522,27055570,27057618,27059666,27061714,27063762,27065810,27067858,27069906,27071954,27073898,27075771,27077819,27079867,27081915,27083963,27086011,27088013,27090061,27092109,27094157,27096205,27098202,27100250,27102298,27104346,27106350,27108358,27110361,27112409,27114457,27116505,27118341,27120389,27122437,27124485,27126448,27128496,27129807,27131855,27133903,27135951,27137826,27139874,27141922,27143970,27146018,27148066,27150114,27152162,27154170,27156218,27158181,27160188,27162140,27163993,27166017,27168065,27169941,27171989,27174037,27176085,27178133,27180181,27182229,27184277,27186278,27188326,27190374,27192422,27194470,27196474,27198522,27200397,27202445,27204450,27206498,27208546,27210415,27212463,27214511,27216559,27218607,27220655,27222703,27224751,27226799,27228847,27230895,27232898,27234946,27236994,27239042,27241090,27243138,27245186,27247234,27249282,27251330,27253329,27255377,27257425,27259473,27261521,27263569,27265578,27267626,27269502,27271436,27273456,27275504,27277552,27279600,27281648,27283653,27285701,27287749,27289797,27291845,27293893,27295941,27297989,27299995,27302043,27304099,27306147,27308195,27310243,27312291,27314339,27316338,27318386,27320434,27322482,27324530,27326578,27328626,27330640,27332688,27334736,27336784,27338832,27340880,27342885,27344933,27346981,27348984,27351032,27353080,27355128,27357176,27359224,27361272,27363320,27365368,27367416,27369464,27371464,27373512,27375560,27377608,27379656,27381704,27383752,27385800,27387848,27389896,27391909,27393957,27396005,27398053,27400101,27402149,27404197,27406245,27408293,27410341,27412343,27414391,27416439,27418487,27420535,27422583,27424631,27426679,27428727,27430775,27432823,27434871,27436919,27438967,27440973,27443021,27445069,27447117,27449165,27451213,27453215,27455263,27457311,27459359,27461407,27463287,27465160,27467208,27469080,27471128,27473176,27475179,27477227,27479275,27481323,27483371,27485419,27487467,27489515,27491563,27493567,27495615,27497663,27499711,27501759,27503807,27505811,27507859,27509907,27511955,27514003,27515948,27517996,27520044,27522092,27524140,27526089,27528137,27530185,27532233,27534174,27536222,27538270,27540273,27542321,27544369,27546417,27548465,27550513,27552561,27554609,27556657,27558664,27560712,27562760,27564808,27566856,27568904,27570952,27573000,27575048,27577096,27579100,27581148,27583196,27585244,27587292,27589340,27591388,27593436,27595484,27597532,27599580,27601585,27603633,27605681,27607729,27609777,27611825,27613873,27615921,27617918,27619883,27621931,27623979,27626027,27628075,27630080,27632128,27633995,27636043,27638099,27640147,27642195,27644243,27646291,27648339,27650387,27652435,27654483,27656531,27658579,27660627,27662679,27664727,27666693,27668741,27670789,27672837,27674786,27676834,27678887,27680839,27682887,27684935,27686983,27689031,27691079,27693127,27695183,27697231,27699279,27701279,27703327,27705375,27707022,27709070,27711118,27713086,27715134,27717182,27719230,27721278,27723326,27725374,27727422,27729470,27731470,27733518,27735566,27737614,27739670,27741726,27743205,27745253,27747301,27749230,27751169,27753217,27755265,27757313,27759361,27761344,27763392,27765391,27767439,27769364,27771371,27773419,27775467,27777515,27779433,27781481,27783529,27785469,27787461,27789509,27791557,27793614,27795608,27797656,27799704,27801699,27803747,27805638,27807650,27809337,27811385,27813377,27815425,27817481,27819468,27821516,27823564,27825612,27827660,27829708,27831695,27833743,27835791,27837769,27839817,27841865,27843913,27845961,27848009,27850065,27851921,27853969,27856017,27858065,27860113,27862161,27864209,27866257,27868305,27870353,27872409,27874457,27876448,27878496,27880489,27882537,27884540,27886588,27888636,27890684,27892732,27894780,27896828,27898876,27900924,27902972,27905020,27907068,27909116,27911164,27913212,27915260,27917308,27919356,27921404,27923452,27925500,27927495,27929543,27931591,27933639,27935687,27937735,27939783,27941831,27943879,27945927,27947975,27950023,27952071,27954119,27956167,27958215,27960263,27962311,27964359,27966407,27968455,27970503,27972551,27974599,27976647,27978650,27980698,27982746,27984794,27986842,27988890,27990938,27992986,27995034,27997034,27999082,28001130,28003178,28005226,28007274,28009322,28011370,28013418,28015413,28017461,28019509,28021557,28023605,28025653,28027701,28029749,28031797,28033845,28035902,28037950,28039998,28042046,28044094,28046142,28048190,28050238,28052286,28054334,28056382,28058430,28060434,28062482,28064530,28066578,28068578,28070626,28072674,28074670,28076718,28078717,28080765,28082813,28084870,28086871,28088810,28090858,28092905,28094801,28096849,28098882,28100536,28102584,28104632,28106680,28108728,28110784,28112780,28114828,28116876,28118924,28120972,28122974,28125022,28127070,28129118,28131166,28133214,28135262,28137310,28139358,28141351,28143399,28145447,28147495,28149543,28151591,28153639,28155692,28157744,28159737,28161785,28163833,28165881,28167886,28169934,28171982,28173977,28176025,28178027,28180075,28182069,28184117,28186165,28188126,28190174,28192222,28194270,28196318,28198366,28200414,28202410,28204458,28206372,28208420,28210407,28212455,28214503,28216496,28218544,28220592,28222583,28224631,28226624,28228672,28230672,28232720,28234768,28236816,28238864,28240912,28242960,28244958,28247006,28249054,28251102,28253150,28255198,28257246,28259294,28261342,28263390,28265395,28267443,28269491,28271414,28273462,28275510,28277558,28279606,28281654,28283702,28285695,28287743,28289791,28291839,28293832,28295880,28297928,28299976,28302024,28304072,28306120,28308168,28310216,28312264,28314312,28316360,28318408,28320456,28322453,28324501,28326549,28328597,28330598,28332646,28334694,28336742,28338790,28340838,28342886,28344934,28346982,28349030,28351078,28353126,28355174,28357222,28359270,28361323,28363283,28365331,28367379,28369427,28371475,28373523,28375571,28377619,28379667,28381666,28383714,28385762,28387810,28389803,28391851,28393899,28395947,28397995,28400043,28402091,28404139,28406187,28408182,28410230,28412278,28414326,28416374,28418422,28420470,28422471,28424519,28426567,28428615,28430583,28432631,28434626,28436674,28438722,28440770,28442818,28444866,28446914,28448962,28451010,28453058,28455106,28457154,28459202,28461250,28463298,28465346,28467394,28469389,28471437,28473485,28475533,28477581,28479629,28481677,28483725,28485720,28487768,28489816,28491864,28493912,28495960,28498016,28500064,28502003,28504051,28506099,28508147,28510195,28512243,28514291,28516339,28518337,28520385,28522433,28524481,28526529,28528577,28530625,28532673,28534675,28536723,28538771,28540819,28542867,28544915,28546963,28549011,28551059,28553107,28555155,28557203,28559198,28561246,28563294,28565342,28567390,28569438,28571486,28573534,28575582,28577630,28579678,28581726,28583774,28585822,28587870,28589868,28591916,28593964,28596012,28598060,28600108,28602156,28604204,28606252,28608300,28610348,28612396,28614441,28616257,28618305,28620353,28622353,28624401,28626449,28628497,28630545,28632593,28634641,28636689,28638737,28640785,28642833,28644881,28646929,28648977,28651025,28653073,28655121,28657117,28659165,28661213,28663261,28665309,28667357,28669405,28671406,28673454,28675502,28677550,28679549,28681597,28683596,28685644,28687692,28689685,28691733,28693781,28695836,28697884,28699925,28701916,28703964,28706012,28708060,28710108,28712156,28714154,28716202,28718250,28720298,28722346,28724394,28726442,28728490,28730538,28732586,28734634,28736682,28738730,28740778,28742826,28744874,28746922,28748922,28750970,28753018,28755066,28757114,28759162,28761210,28763258,28765306,28767354,28769402,28771450,28773498,28775546,28777594,28779642,28780673,28781817,28782928,28784091,28785632,28787017,28787712,28788405,28790386,28792434,28794408,28794442,28794476,28794510,28794544,28794578,28794612,28794987,28795366,28795773,28796314,28796843,28797554,28798175,28798738,28799312,28799864,28800502,28801114,28801708,28802379,28803043,28803656,28804300,28804918,28805702,28806535,28807220,28808048,28808714,28809629,28810718,28811676,28812618,28813551,28814450,28815428,28816367,28817376,28818371,28819315,28820312,28821146,28822077,28823298,28824538,28825720,28827029,28828371,28829673,28830862,28832007,28833183,28834335,28835490,28836628,28837791,28838942,28840104,28841082,28842146,28843623,28845052,28846057,28846731,28847565,28848239,28849491,28850785,28852055,28853374,28853841,28854048,28854201,28854248,28854429,28854612,28854659,28854786,28854829,28854870,28854917,28855027,28855074,28855183,28855423,28855473,28855523,28855572,28855682,28855726,28855768,28855809,28855923,28855971,28856019,28856067,28856195,28856243,28856291,28856392,28856525,28856574,28856623,28856670,28856717,28856822,28856869,28856980,28857027,28857074,28857121,28857235,28857274,28857324,28857374,28857424,28857534,28857576,28857629,28857682,28857732,28857781,28857890,28857933,28857977,28858023,28858069,28858180,28858226,28858272,28858371,28858417,28858522,28858569,28858616,28858663,28858708,28858816,28858861,28858906,28858951,28859046,28859091,28859136,28859177,28859216,28859266,28859373,28859423,28859473,28859515,28859626,28859679,28859729,28859778,28859886,28859942,28860363,28861550,28862343,28862391,28862598,28863763,28864688,28864736,28864834,28865961,28867031,28867080,28867805,28868594,28869346,28870238,28871123,28871802,28872995,28874249,28875088,28875983,28876897],"sizes":[1150,1124,895,1017,920,853,934,1100,965,979,875,947,900,1174,1168,1088,1128,867,1132,1301,1190,965,1092,1332,1404,1545,1498,1289,1357,1091,1261,1529,1246,1242,1128,1339,1377,1437,1514,1306,1264,1138,1153,1374,1373,1409,1540,1459,1033,1109,1203,1354,1411,1451,1568,1309,1074,1120,1159,1491,1379,1523,1529,1051,1084,1115,1237,1500,1471,1522,1429,1062,1263,1138,1435,1326,1198,1017,888,960,936,923,899,954,944,597,974,773,700,1010,910,919,960,1030,585,431,336,340,427,363,373,757,566,559,718,614,618,608,635,959,941,846,742,710,929,997,825,582,912,833,862,513,645,757,574,753,812,712,810,673,834,534,670,647,416,737,622,693,787,547,908,578,469,626,757,666,509,489,678,453,442,440,606,642,790,424,433,890,855,1168,508,480,507,753,745,892,680,659,654,779,784,513,870,831,616,621,687,866,700,489,532,814,696,819,971,993,815,838,515,845,901,861,886,876,861,837,826,916,769,809,874,827,889,825,1030,775,919,915,920,925,929,945,967,979,978,977,968,961,960,967,956,1005,888,837,803,803,868,843,804,822,820,696,847,850,878,688,822,719,792,705,692,579,1073,758,748,786,417,628,1983,1809,803,1137,2048,1332,607,1698,1933,882,943,1715,1341,1883,2048,2005,2014,2017,2033,2048,2012,2048,2033,2030,2048,2053,2041,2048,2052,2039,2054,1803,2048,2052,2048,2053,2048,2031,1569,340,448,406,1210,1200,1307,1225,902,887,1089,1078,1049,758,1105,1190,1202,978,2048,2057,2048,2055,2055,2048,2048,2056,2048,2048,2048,2048,2053,2057,1459,1552,1486,1346,1494,1311,1377,1491,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1895,2048,2048,2048,2048,2048,2048,2048,2048,1899,2048,2048,2048,2048,2048,2048,2022,1957,2048,2048,2048,2048,2048,2048,1899,2048,2048,2048,2048,2048,2048,1900,2048,2048,2048,2048,2048,2048,2048,2025,1935,2048,2048,2048,2048,2048,2048,2048,2048,2048,1201,2047,2048,2057,2048,2048,2048,2048,2048,2055,158,564,2024,2042,2048,2057,1883,1465,2057,1691,1342,1538,1170,208,220,309,220,249,213,220,214,212,231,214,1394,1649,1562,1798,1947,1904,1895,1870,1902,1655,1111,1418,1108,979,1031,1147,1041,1061,1093,1077,1183,1339,1137,1377,993,1078,1110,1031,1170,1356,1131,1233,1004,1155,1057,1061,1123,1133,1023,1045,1310,1190,1347,1046,1549,1632,1876,1904,2048,2048,2048,2048,2048,2048,2048,2029,1855,2048,2048,2048,2048,2014,1892,1931,1491,1167,831,553,501,1494,1981,2050,1737,1430,1217,1191,1108,1917,1997,1345,1206,1184,830,1913,1293,1441,1466,622,117,287,1397,2048,2052,1985,2048,2048,2035,2051,2044,1950,1537,1776,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,2056,2048,1920,1559,1800,1858,2048,2048,1921,2001,2048,2057,1856,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1885,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2046,2048,2040,2018,1985,1976,1347,1372,1417,1411,1386,1388,1480,1452,1535,1667,1660,1481,1466,1419,1317,1578,1685,1730,1728,1645,1637,1483,1464,1599,1640,1649,1663,1657,1563,1555,1437,1607,1885,1280,1348,1291,1204,1198,1213,1132,1235,1466,1431,1388,1314,1297,1232,1303,1458,1535,1662,1568,1572,1600,1535,1557,1589,1518,1526,1505,1456,1400,1375,1367,1477,1312,1255,1392,1266,1069,1254,1126,1262,1175,1190,1272,1113,1279,1905,2057,2030,1987,2027,2042,2011,2024,1975,2035,1998,2056,2042,1980,2048,2017,2024,2028,1979,2048,2049,1971,2033,2026,2048,2034,1975,2048,2035,1994,2048,2057,1982,2048,2034,1995,2048,2040,1973,2048,2048,2026,2028,2056,1970,2025,1981,2048,2048,2027,2048,2051,1863,1796,2048,2002,1879,1842,2048,1855,1788,2048,2048,2048,1875,1760,2044,1880,1782,2052,1779,1759,1866,1695,1609,1489,1297,1502,1555,1513,1485,1502,1537,1528,1514,1517,705,737,555,610,706,726,662,609,604,604,542,631,747,612,708,720,716,675,790,762,783,568,584,505,1546,2035,1859,1736,1742,1663,1680,1701,1715,1714,1700,1700,1688,2024,1860,1780,1748,1692,1735,1761,1744,1602,972,990,1567,1676,1581,1790,1732,1470,1482,1485,1481,1462,1482,1490,1469,1502,892,619,523,645,662,561,468,582,632,546,635,615,650,524,462,286,512,581,275,371,527,458,298,479,252,515,324,1952,1886,1741,1656,1657,1685,1658,1662,1657,1688,1703,1695,1671,1686,2034,1725,1678,1685,1724,1755,1752,1700,1662,633,729,743,1743,1885,1632,1640,1627,1804,1763,1523,1488,1500,1515,1482,1497,1486,1493,1506,1491,1515,1493,1482,1504,1485,1512,1474,1504,1486,1471,1194,566,358,557,589,710,488,593,600,567,296,555,519,481,389,470,364,429,593,599,680,593,636,620,723,619,505,697,412,498,323,653,415,441,371,494,473,373,575,514,478,344,598,567,580,624,409,465,505,365,606,426,313,446,595,335,551,421,267,425,978,1992,2019,2022,2002,2025,1921,1704,1684,1700,1691,1715,1715,1715,1667,1695,1682,1703,1693,1663,1685,1688,1715,1682,1717,1727,1711,1708,1675,1709,1702,1711,1686,1692,2048,2048,2055,1699,1600,1701,1688,1679,1723,1690,1668,1707,1725,1733,1649,1640,1727,1726,1724,1635,1625,1692,1609,1357,895,967,849,774,683,1004,1036,1029,1005,1231,1173,1089,925,1093,957,1004,898,982,971,1406,1989,1948,1840,1701,1474,1525,1553,1486,1527,1532,1486,1450,1513,1494,1494,1091,599,403,461,450,441,416,426,461,597,653,509,580,625,444,433,342,134,118,551,567,645,516,377,598,341,462,497,281,348,606,2020,1997,1826,1709,1689,1693,1691,1706,1716,1674,1696,1722,1757,1687,1679,1828,2048,1764,1711,1680,1673,1787,1718,1693,1845,1776,1626,1334,971,1410,1254,1781,1878,1555,1541,1521,1485,1504,1489,1481,1483,1486,1459,1469,1123,260,192,227,351,517,310,242,220,449,304,385,450,368,192,98,219,209,460,302,445,431,316,315,473,486,483,293,384,1999,2022,1887,1697,1684,1713,1669,1699,1674,1662,1666,1696,1717,1696,1720,2002,1955,1810,1892,1674,1789,1679,1679,1785,1829,1782,1889,960,493,625,906,1001,824,1655,1665,1743,1665,1482,1497,1488,1504,1473,1470,397,440,316,465,341,303,304,504,434,387,318,484,285,228,312,409,451,1837,1945,1700,1700,1685,1669,1679,1693,1697,1756,2035,1725,1719,1659,1707,1812,1848,1549,829,1531,1227,1722,1594,1522,1492,1499,1083,630,404,496,494,414,545,496,524,276,307,425,1470,1799,1663,1650,1637,1686,1759,1842,1695,1605,1753,1010,1746,1642,1561,1515,1464,1517,1509,1489,1493,1493,1485,1483,1522,1500,1505,1492,1487,1515,1477,1036,517,484,452,350,369,495,476,368,289,537,444,448,490,373,413,433,438,430,451,261,195,249,381,298,229,195,200,361,303,213,448,250,401,169,447,350,423,426,260,425,402,524,227,426,274,267,380,359,258,524,524,425,1266,1976,1926,1955,2017,1750,1664,1675,1666,1688,1692,1694,1675,1666,1725,1702,1666,1672,1664,1674,1663,1674,1667,1682,1655,1678,1688,1678,1685,2052,2048,1874,1612,1639,1630,1670,1621,1779,1710,1725,1739,1680,1657,1589,1698,1668,1705,1693,1634,598,645,607,645,626,820,971,1540,1379,1038,1081,1147,1548,1411,1538,1266,1370,1348,1717,1847,1813,1843,1725,1614,1474,1466,1484,1479,1505,1486,1508,1489,1496,1504,1492,881,481,508,635,648,581,444,458,379,318,276,502,234,506,497,546,471,397,478,583,584,644,599,552,366,452,270,506,533,670,682,578,275,507,325,569,222,145,1977,1974,2012,1835,1706,1689,1679,1704,1699,1677,1689,1716,1690,1691,1719,1749,1696,1723,1689,1819,2048,1986,1774,1768,1751,1778,1808,1731,1834,1691,1717,1846,1752,1740,1838,1177,925,867,1437,1496,1536,1573,1662,1908,1711,1552,1604,1728,1473,1489,1491,1507,1479,1500,1492,1478,1479,1502,1498,1494,1482,1485,1467,1479,1473,1472,1488,1513,1503,1049,626,589,691,490,576,541,579,620,583,593,491,415,430,557,562,484,379,512,551,526,512,540,595,466,369,401,587,426,594,482,337,549,433,350,538,388,351,474,252,566,440,548,483,240,381,494,324,316,502,237,320,379,327,454,518,447,330,395,568,433,241,399,387,475,356,246,347,632,502,356,412,486,283,733,569,1103,2056,2056,2048,2048,2057,2057,1977,1723,1733,1738,1762,1769,1753,1740,1707,1734,1753,1716,1748,1694,1755,1760,1740,1776,1747,1736,1747,1762,1754,1712,1696,1741,1772,1783,1765,1746,1746,1768,1758,1722,1744,1941,2048,2048,2048,2048,1854,1690,1815,1822,1873,1887,1699,1860,1778,1797,1785,1698,1779,1837,1809,1826,1772,1846,1827,1871,1848,1743,1787,1847,1865,1847,1845,1855,1837,1855,1883,1850,1698,1129,863,858,760,721,1121,1321,1375,1210,1329,1194,1506,1126,830,808,988,1345,1280,1520,1504,1971,1946,1809,1730,1572,1525,1631,1565,1594,1499,1481,1504,1511,1521,1510,1470,1449,1487,1510,1469,1471,1497,1482,1547,1477,1494,1501,1495,1500,1476,576,441,662,496,550,439,376,594,629,618,579,642,620,637,478,529,509,566,573,346,470,432,557,531,576,397,474,418,420,635,263,244,212,430,532,328,350,423,282,430,491,452,258,371,390,374,500,260,360,203,442,522,264,163,178,352,213,389,516,532,436,588,430,481,992,2039,1939,1946,1970,2016,1805,1636,1686,1676,1673,1674,1720,1711,1686,1690,1669,1650,1650,1700,1703,1687,1676,1709,1701,1694,1682,1675,1676,1651,1684,1658,1669,1672,1845,2048,2048,1834,1657,1700,1706,1748,1816,1714,1645,1649,1694,1768,1755,1789,1690,1742,1702,1767,1627,1684,1751,1735,1134,887,600,596,592,699,771,992,1146,772,790,572,721,777,705,549,748,808,674,297,543,659,689,896,635,462,590,1162,1180,882,1637,1687,1804,1772,1767,1631,1624,1557,1629,1620,1499,1468,1491,1478,1478,1464,1483,1473,1475,1453,1494,1480,1467,1473,1487,1461,1469,1480,1464,1465,1478,1484,1486,1485,1488,1488,1480,1468,1454,1458,1468,1451,1469,1440,1482,1474,1458,1462,1465,1465,1477,1495,1488,1478,1460,1460,1477,1481,1456,1434,1425,1425,1452,1465,1499,1473,1435,1472,1483,1464,1471,1471,1491,1488,1454,1489,1437,1475,1471,1479,1488,1470,1470,1413,1101,589,411,573,551,497,400,406,470,390,252,451,641,487,503,498,456,557,661,565,574,645,389,596,512,343,567,568,582,551,371,467,488,517,531,381,483,497,534,499,565,640,568,596,487,298,229,638,506,495,573,610,635,511,553,538,468,545,380,438,549,452,508,396,507,524,344,421,515,440,541,441,441,496,499,595,576,628,613,609,513,609,487,539,627,431,262,442,421,510,468,469,484,314,306,502,340,377,427,565,537,194,537,527,554,488,501,515,385,290,552,289,218,192,472,589,567,542,242,447,457,325,310,311,368,432,461,466,485,543,422,565,610,481,568,562,518,510,430,383,482,627,533,510,579,423,512,493,255,228,603,419,509,526,516,520,505,415,337,455,542,565,467,475,470,422,474,514,585,497,487,467,463,446,473,670,611,425,382,403,471,496,385,592,508,386,369,447,306,290,378,371,358,417,289,320,545,525,623,415,490,380,429,586,476,481,527,490,493,493,493,509,405,494,205,369,498,394,580,557,479,455,538,542,437,442,612,570,467,420,558,499,505,521,435,480,465,91,314,569,534,484,585,471,582,526,494,515,311,1239,1918,1961,1924,1917,1921,1962,2000,1950,2008,1948,1960,2022,1919,1984,1994,1962,1908,2044,2053,1752,1663,1621,1632,1680,1693,1725,1710,1706,1694,1683,1681,1670,1693,1679,1689,1671,1695,1676,1684,1679,1684,1680,1700,1690,1694,1687,1678,1677,1679,1688,1696,1678,1683,1684,1661,1677,1681,1678,1684,1690,1655,1658,1652,1690,1684,1675,1670,1671,1666,1614,1677,1694,1666,1664,1678,1710,1679,1680,1682,1677,1671,1677,1690,1658,1693,1711,1724,1656,1668,1662,1646,1691,1696,1641,1676,1660,1645,1663,1664,1675,1673,1678,1660,1675,1662,1713,1714,1685,1689,1693,1704,1697,1679,1666,1713,1703,1688,1675,1675,1665,1675,1686,1694,1691,1669,1674,2004,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1744,1593,1638,1703,1749,1769,1768,1671,1723,1742,1683,1642,1697,1694,1730,1664,1717,1738,1666,1737,1716,1755,1755,1706,1699,1619,1754,1717,1656,1653,1670,1641,1654,1663,1736,1634,1662,1755,1720,1745,1761,1732,1755,1709,1698,1661,1752,1714,1706,1692,1621,1729,1765,1575,1545,1496,1534,1693,1702,1727,1713,1779,1792,1728,1713,1689,1655,1809,1703,1606,1701,1752,1753,1777,1735,1714,1677,815,867,769,767,803,670,816,714,600,612,519,776,515,624,225,374,709,712,829,737,688,679,549,727,773,826,715,759,794,825,634,846,994,670,718,856,832,722,730,633,741,648,644,816,772,793,749,596,719,785,512,559,358,472,772,481,851,659,392,825,470,960,832,903,743,559,423,539,631,624,818,640,587,606,510,520,541,618,791,746,685,811,740,558,641,889,600,451,722,888,860,810,686,579,738,590,703,767,712,617,521,754,743,674,799,554,537,548,437,948,841,881,875,683,691,949,493,419,841,808,793,699,769,741,635,729,725,704,671,565,690,493,495,655,759,377,401,279,336,285,298,422,304,246,312,307,289,312,434,548,455,760,363,521,483,679,564,671,626,540,805,725,545,691,818,834,551,311,422,506,344,327,433,289,344,464,311,297,314,231,335,591,514,564,591,713,524,276,175,256,254,245,151,158,250,819,1595,1712,1499,1912,1918,1931,1906,1939,1905,1940,1954,1915,1954,1949,1880,1797,1880,1905,1804,1858,1474,1496,1467,1491,1491,1499,1487,1485,1497,1491,1018,510,436,507,518,389,501,511,416,419,317,544,430,527,443,518,552,202,382,352,423,408,377,335,434,272,299,549,144,351,378,441,1145,1957,1999,1875,1686,1694,1694,1711,1720,1698,1686,1709,1692,1688,1676,1663,1671,1672,1925,2048,1747,1793,1697,1783,1817,1656,1812,1760,1807,1722,1686,1716,934,690,770,1382,1496,1270,1340,1329,1506,1712,1722,1530,1462,1510,1479,1463,1458,1501,1495,1500,1496,1140,282,428,502,388,456,689,450,596,618,562,512,441,474,415,163,520,415,286,381,348,293,553,548,168,447,461,226,249,1757,2019,1988,1668,1691,1691,1711,1733,1692,1707,1678,1719,1690,1699,1707,1680,2020,2005,1631,1661,1823,1837,1837,1744,1722,1811,1822,1741,1783,1687,583,784,925,1061,1131,1468,1296,1610,1743,1694,1526,1617,1526,1514,1473,1490,1488,1487,1496,1494,1486,1443,1480,1471,1502,1453,1468,1480,1505,1479,1480,1493,1454,1449,1469,1473,1496,1462,1472,1486,1484,1486,1474,1493,1498,1499,1488,1480,1423,574,570,508,704,735,667,578,518,616,507,659,666,630,585,609,623,650,552,576,629,678,548,554,598,506,664,585,625,606,596,395,609,512,664,559,494,590,545,490,583,529,582,532,625,519,436,306,184,460,481,329,553,449,364,447,632,669,569,245,224,350,221,133,185,495,389,529,451,474,551,639,506,561,652,646,593,503,450,455,528,637,501,559,600,483,301,573,475,530,456,350,176,413,623,660,567,537,401,464,611,543,499,516,672,620,568,509,418,612,1998,2011,1966,2000,1997,1920,1966,1953,2008,1889,1718,1719,1712,1703,1718,1727,1691,1707,1713,1674,1708,1674,1712,1706,1704,1684,1677,1684,1702,1692,1627,1668,1642,1668,1673,1676,1672,1702,1699,1676,1666,1681,1692,1695,1696,1695,1649,1672,1679,1700,1672,1669,1657,1673,1671,1725,2048,2048,2048,2048,1911,1724,1749,1718,1637,1702,1752,1750,1738,1819,1719,1695,1692,1717,1686,1608,1701,1666,1705,1719,1752,1704,1703,1751,1775,1683,1614,1671,1701,1709,1714,1684,1585,966,890,855,844,785,834,837,761,804,814,1096,992,875,869,917,1034,1308,1108,1023,1096,1144,1190,1143,1207,1064,1402,1386,1432,1343,981,1278,1047,741,706,656,660,621,353,478,878,979,900,1142,1145,940,849,600,574,965,1458,775,1160,1211,1484,1830,1858,1863,1898,1918,1932,1905,1938,1752,1584,1473,1488,1481,1486,1488,1503,1450,1485,1480,1493,1496,589,374,214,515,521,390,380,553,433,299,159,158,234,344,273,466,410,444,470,312,303,364,399,370,459,304,314,343,302,416,327,476,335,309,1459,1983,1993,1918,1680,1701,1653,1703,1685,1680,1700,1712,1714,1698,1695,1718,1684,1682,1841,2048,1814,1717,1692,1788,1709,1735,1786,1850,1739,1750,1706,1707,1318,634,803,1550,1431,584,804,1200,1741,1826,1712,1603,1538,1471,1505,1494,1503,1505,1349,492,541,547,607,380,491,553,411,417,440,407,345,264,326,333,512,459,182,453,443,278,329,1272,1957,1857,1708,1715,1680,1704,1696,1646,1684,1683,1699,1814,2048,1677,1816,1740,1817,1705,1736,1809,1840,1148,791,1028,1735,1564,1555,1384,1615,1637,1452,1495,1379,1469,1481,1488,1498,1463,1484,1479,1488,1513,1507,1475,1508,1489,945,530,424,588,568,504,571,484,366,664,537,508,593,624,425,320,484,344,374,462,460,504,415,514,251,239,308,603,604,646,589,560,524,492,527,319,522,436,541,612,571,383,528,487,436,994,1998,2001,1996,1920,1681,1722,1705,1707,1694,1680,1669,1665,1728,1711,1680,1679,1690,1738,1713,1712,1724,1740,1708,1727,2048,2048,1790,1720,1676,1739,1782,1650,1692,1697,1623,1665,1764,1771,1728,1760,1801,1717,944,888,769,1074,1756,1514,1299,1535,1452,1688,1421,1835,1807,1689,1602,1382,1483,1502,1473,1473,1467,1489,1484,1476,1471,1480,1481,1503,1465,1480,1132,497,613,592,516,420,449,545,560,591,327,433,471,427,333,341,444,528,510,520,487,503,530,428,296,247,189,276,541,436,249,197,78,221,392,313,225,425,482,313,482,315,273,259,366,586,1935,1932,1948,2002,1675,1680,1691,1677,1684,1683,1673,1722,1660,1664,1655,1687,1698,1660,1682,1668,1676,1683,1689,1663,2042,2048,1887,1715,1713,1696,1782,1671,1828,1661,1679,1699,1695,1638,1750,1690,1711,1832,981,746,544,620,934,859,778,763,870,859,641,510,1463,1386,1770,1685,1648,1621,1650,1447,1485,1508,1505,1492,1512,1445,1456,1482,1490,1519,1491,1503,1489,1495,1498,1479,1431,1473,1530,1513,1404,489,566,518,303,470,500,544,560,552,363,359,525,567,275,226,598,536,524,478,393,439,228,177,197,602,549,497,554,533,501,470,457,372,422,497,579,562,359,397,426,399,361,392,127,152,398,565,392,579,529,354,335,415,480,342,358,281,130,431,386,428,406,414,463,327,399,460,377,475,319,1895,2012,2014,1990,2057,2049,1766,1712,1676,1651,1658,1707,1686,1652,1709,1697,1672,1707,1687,1687,1671,1697,1673,1693,1708,1684,1705,1678,1658,1660,1708,1734,1684,1691,1710,1718,1708,1773,2048,2048,2048,1857,1736,1648,1695,1721,1663,1623,1828,1739,1791,1735,1743,1676,1700,1762,1714,1706,1735,1711,1680,1824,1769,1696,1726,1840,1834,760,478,651,607,511,815,656,808,526,310,187,705,690,589,457,471,393,282,511,453,322,99,593,1191,988,892,1577,1714,1812,1756,1785,1698,1477,1444,1484,1495,1519,1499,812,449,208,241,336,393,251,145,297,232,295,486,442,295,434,459,537,2012,1878,1690,1682,1724,1667,1684,1659,1675,2006,1750,1762,1788,1715,1674,1608,762,844,1248,1422,1715,1568,1628,1503,1516,1506,1490,1477,1492,1473,1498,1488,1467,1480,1487,1499,1508,1471,1489,1480,1420,561,621,627,453,556,554,535,458,584,563,572,466,533,568,609,455,597,390,529,595,531,522,554,604,559,304,480,622,457,426,401,418,492,477,584,339,437,512,522,383,560,488,524,590,511,587,583,488,328,672,446,448,584,543,468,554,666,585,601,555,1892,2030,2029,2014,2023,1728,1712,1706,1719,1693,1694,1707,1697,1713,1702,1660,1677,1712,1672,1710,1680,1730,1689,1694,1669,1648,1668,1680,1697,1710,1719,1913,2048,2048,1762,1696,1805,1708,1698,1649,1677,1701,1728,1876,1768,1838,1796,1618,1675,1808,1756,1745,1134,731,805,779,661,1159,1735,1446,1287,1510,1780,1603,1395,1241,1350,1857,1846,1799,1779,1800,1581,1420,1590,1505,1487,1477,1481,1479,1492,1467,1479,1489,1492,1460,1485,1487,1501,1516,1499,1494,1498,1484,1495,1076,375,112,269,310,461,555,485,417,526,527,647,533,275,474,378,468,383,385,553,601,463,351,331,94,585,174,300,502,482,584,519,527,380,576,491,287,384,532,372,550,618,536,587,392,222,266,425,475,390,481,410,590,559,577,673,518,569,515,410,369,445,439,159,240,368,384,465,284,458,2012,2057,2002,2017,2051,1888,1660,1690,1711,1681,1649,1672,1686,1646,1685,1693,1672,1685,1681,1706,1724,1680,1692,1676,1681,1712,1691,1683,1708,1722,1703,1678,1698,1653,1690,1860,2048,2048,2038,1635,1778,1770,1692,1735,1668,1722,1743,1707,1735,1754,1802,1773,1715,1749,1765,1715,1625,1778,1683,1656,1497,1770,749,732,734,810,851,727,634,738,669,675,908,1011,982,1067,745,827,738,1041,1082,912,1034,945,1039,846,910,920,801,440,754,453,181,864,1299,1593,1781,1835,1834,1842,1746,1536,1519,1529,1511,1485,1491,1490,1513,1491,1474,1520,1521,573,444,241,268,390,555,471,428,457,408,414,535,328,375,421,377,378,443,427,285,354,444,391,396,376,315,220,339,261,273,497,493,259,251,273,383,2007,1974,2012,1707,1688,1703,1682,1662,1665,1680,1670,1688,1653,1678,1686,1696,1713,1685,1796,2048,1945,1744,1748,1741,1760,1664,1718,1686,1613,1731,1772,1724,1747,1620,731,637,693,933,1154,1115,880,1300,1864,1891,1833,1534,1548,1469,1501,1500,1488,1502,1495,1506,1492,1496,1490,1495,1503,1507,1521,1492,1482,1491,1503,1502,1499,1480,1505,1492,1486,1479,1523,1527,1487,1490,1525,1505,1460,1349,381,538,549,291,576,577,514,629,551,646,606,449,434,546,515,449,399,591,546,624,541,531,539,605,405,502,523,588,644,446,401,470,482,590,518,461,479,502,544,560,396,578,457,418,348,246,380,507,357,314,354,509,254,522,352,501,584,603,374,409,524,581,655,554,577,548,422,527,457,556,502,432,449,355,528,522,423,485,458,372,411,553,422,407,559,303,402,291,230,630,491,364,393,405,372,370,639,290,485,380,259,267,321,380,354,302,430,252,267,445,284,1911,1997,2037,1986,1969,2030,2004,2017,2050,1995,1689,1690,1689,1673,1702,1693,1681,1714,1699,1717,1731,1711,1726,1730,1716,1734,1729,1748,1714,1740,1698,1683,1709,1671,1696,1685,1664,1680,1709,1679,1709,1685,1667,1656,1679,1698,1704,1724,1712,1743,1733,1751,1705,1661,1722,1704,1695,1652,1682,1654,2038,2048,2048,2048,2048,1956,1688,1688,1653,1650,1671,1668,1719,1697,1835,1746,1727,1747,1753,1717,1684,1676,1738,1666,1722,1662,1626,1724,1654,1787,1719,1658,1687,1607,1681,1672,1730,1796,1699,1749,1762,1616,1640,1508,779,791,733,809,875,525,813,686,551,1052,839,862,1007,937,351,592,559,750,922,505,750,594,732,683,683,625,614,653,252,347,816,759,872,974,1056,1082,880,885,862,685,539,742,1542,1358,1805,1837,1811,1879,1809,1800,1853,1858,1630,1644,1541,1499,1514,1485,1497,1488,1490,1476,1483,1486,924,408,525,524,383,576,440,532,336,403,372,374,130,115,74,553,583,653,522,548,606,560,285,134,60,392,349,359,286,436,69,131,801,2048,2041,1952,1693,1675,1703,1693,1711,1737,1732,1700,1681,1684,1720,1717,1703,1790,2048,2013,1813,1833,1841,1763,1778,1728,1784,1724,1751,1805,1819,1851,564,730,842,803,774,763,1554,542,1510,1615,1639,1536,1577,1570,1507,1459,1500,1489,1510,1482,1496,1469,1497,1486,1491,1464,1501,1487,443,377,318,266,369,453,324,364,399,221,370,555,508,546,603,471,446,339,280,417,290,385,365,428,561,287,380,328,394,502,344,312,472,410,466,455,442,204,1317,2006,2048,1962,1655,1664,1661,1709,1697,1686,1691,1720,1715,1710,1706,1667,1660,1648,1677,1637,1797,2048,1901,1648,1714,1839,1860,1866,1788,1786,1833,1827,1764,1665,1700,1588,617,663,656,716,457,345,297,474,381,339,429,493,858,1495,998,343,1056,1489,1523,1509,1499,1768,1630,1593,1632,1486,1515,1519,1512,1521,1521,1515,1524,1502,1519,1507,1513,1513,1518,1489,1524,1526,1510,1500,1509,1511,1514,1526,1504,1508,1531,1505,1496,1546,1541,1526,1552,1517,1525,1524,1504,1505,1502,1502,1505,1490,1486,1458,1485,1500,1485,1504,1210,538,484,584,422,521,591,482,348,640,650,672,705,718,649,721,669,639,646,656,723,738,556,671,602,461,443,617,543,549,703,681,593,706,613,633,578,654,486,655,588,498,681,575,563,591,481,548,565,482,589,604,641,579,549,573,597,606,519,586,540,672,463,445,563,484,554,615,557,590,574,625,578,623,540,478,622,700,616,453,570,546,471,515,561,526,640,520,437,460,639,559,562,715,559,717,744,727,621,635,690,704,722,604,574,646,687,622,608,485,491,587,615,548,652,625,563,609,607,563,608,591,565,505,476,375,528,573,585,522,569,532,527,517,449,582,557,642,502,413,410,584,524,512,573,306,446,562,491,503,502,423,342,1888,2051,2054,2036,2045,2039,2048,2052,2048,2048,2053,2026,2053,1876,1715,1701,1680,1703,1709,1730,1688,1699,1713,1696,1713,1697,1702,1704,1698,1714,1739,1725,1712,1724,1726,1745,1741,1750,1757,1765,1760,1748,1724,1715,1685,1705,1693,1698,1675,1667,1711,1735,1687,1693,1694,1723,1699,1704,1736,1758,1760,1763,1736,1753,1710,1717,1721,1739,1728,1742,1733,1761,1752,1735,1755,1747,1746,1751,1729,1841,2056,2048,2048,2048,2048,2048,2048,1874,1713,1642,1711,1789,1657,1703,1731,1755,1698,1768,1793,1806,1837,1781,1831,1812,1832,1764,1780,1732,1814,1788,1623,1599,1773,1728,1650,1575,1714,1762,1647,1746,1670,1725,1728,1861,1823,1825,1827,1817,1737,1705,1690,1616,1678,1782,1838,1810,1818,1873,1865,1804,1764,806,926,981,892,997,818,768,830,960,825,1230,1320,1375,1160,1222,1202,1244,1295,1324,1239,1224,1156,1121,709,722,828,877,935,1002,1077,1339,731,480,969,1690,1310,1902,1905,1669,1852,1869,1913,1825,1814,1812,1808,1893,1712,1646,1452,1502,1489,1500,1491,1493,1509,1490,1486,1069,100,163,296,47,160,304,359,290,383,287,353,221,263,320,213,181,87,293,467,462,161,316,530,420,438,321,255,138,1830,2028,1981,1677,1704,1679,1707,1728,1654,1672,1709,1729,1732,1700,1673,1661,1984,2043,1794,1784,1586,1716,1736,1754,1772,1775,1871,1876,1671,1383,691,1217,1619,1567,1584,1591,1617,1521,1381,1291,1509,1238,430,441,532,540,535,495,634,1889,1730,1688,1815,1790,1775,1281,612,996,1478,1544,1490,1496,1501,687,245,469,386,558,299,110,380,458,450,169,309,552,1124,1914,1678,1674,1690,1694,1666,1773,1853,1603,1739,1752,1670,903,1158,1732,1787,1638,1435,1494,1484,1506,1498,726,442,411,406,428,451,333,298,528,429,466,358,543,498,446,575,1418,1904,1655,1675,1670,1680,1679,1686,1776,1852,1711,1705,1705,1805,967,590,1141,1026,985,1589,1620,2039,2055,2056,2051,2050,1671,1604,1527,1358,946,807,840,775,862,859,1523,1995,2019,1910,1943,1452,516,1178,1132,1499,1201,1354,1379,1271,1152,850,626,1097,1188,1185,1071,981,729,996,968,1013,1070,990,1139,1085,1161,764,675,748,925,950,738,922,749,839,1617,2048,1027,1089,1059,918,956,1064,1121,1003,1023,965,1199,869,1041,1071,926,1015,921,881,745,794,871,1303,1411,1591,1294,1797,2021,2048,2051,1720,1625,2024,2048,2048,2057,1746,2042,2056,1591,2015,2048,2048,2048,2048,2048,2048,2048,2055,2032,2024,2026,2037,2021,1975,1914,1776,1647,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1967,1914,1817,1716,1205,2051,1944,1735,1859,1998,2055,2051,2048,2048,2057,2057,2048,2048,2048,2048,2048,2048,2048,2057,1847,1218,1487,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1986,1604,2048,2048,2048,2020,1766,1475,1317,1169,937,609,908,2057,2048,2048,2048,2048,2057,2056,2057,2057,2048,1648,1326,1108,2048,2050,2004,1909,1820,1631,1434,1043,813,444,178,974,2030,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2051,2042,1906,1740,1571,1430,1554,2048,2048,2057,2048,2053,2048,2048,2048,2048,2048,2048,2027,2014,1811,1613,1355,781,1624,1799,2030,2016,2048,2054,2039,1856,1579,1083,1392,2052,2056,2048,1714,2048,2048,2007,1564,117,148,123,25,1523,2048,2057,2056,2048,2048,2048,2055,2029,1951,2048,2048,2048,2023,2048,2048,2048,2048,2048,2048,2048,2055,2056,2048,1740,1698,2016,1772,1880,1640,2057,1902,1440,1329,1718,1974,2035,2057,2048,2053,2049,2017,1739,1139,86,1809,2048,2048,2056,2053,2055,2056,2057,2057,2035,2042,1946,1829,1912,1840,1591,2048,2048,2048,2056,2048,2048,2048,2048,1920,2048,2048,2048,2048,2057,2057,2048,2048,1598,2040,1961,1970,1346,1653,2048,2056,1983,1707,1955,2048,2048,2048,2057,2056,2048,2048,2048,2052,1640,1281,1848,1973,1999,2025,2054,2041,2027,2030,2043,2048,2055,2043,2022,2009,1990,1966,2016,2048,2051,2042,2056,2024,2043,2032,2046,2048,2033,2048,2012,1874,1728,1538,1369,1234,1174,1132,1138,1031,1072,1098,969,1016,840,889,914,674,665,436,431,202,185,72,64,648,2048,2035,2054,2057,1989,1809,1742,1502,970,1321,2048,2048,2048,2048,1890,2048,2048,2048,1962,2048,2048,2048,2014,2057,2048,2048,2055,2052,2045,2048,2056,2054,2034,2053,2003,1936,1868,1781,1764,1775,1580,2052,2048,2048,2048,2048,2052,2051,1741,2055,2057,2048,2048,2055,2055,2052,2027,1963,2048,2036,1900,1426,2054,2048,1964,1438,2025,2057,2048,2048,2048,2048,2055,2056,2057,1994,1762,1746,1480,1384,1254,1131,1865,2048,2048,2057,2053,2003,1835,1546,687,486,1152,1559,1789,1927,1931,1954,1944,2026,1871,1661,1467,1302,933,512,665,1877,2042,2023,1247,881,2048,2048,2048,2048,2048,2048,2048,2048,2004,2001,2052,1994,1725,1343,810,2040,2017,1676,1351,1974,2048,2048,2050,2048,2051,2057,2053,2004,1964,1630,1875,2048,1420,604,1919,2048,2048,2048,2048,2048,2048,2003,1756,2025,2048,2057,2048,2048,2057,2048,1604,1065,1601,1951,2041,2056,2048,1964,1167,1895,1802,2054,2048,2048,2048,2039,2005,1661,1262,856,743,399,353,188,633,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1961,1404,2048,2048,2048,2048,2048,2048,2048,2018,420,645,1524,1799,2040,2057,2048,2048,2048,2048,2048,2048,2048,2048,2005,1744,1575,1402,1327,1134,994,1046,752,766,865,935,729,1159,1871,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1596,1043,684,772,1989,2048,2048,2057,1978,1224,2057,1886,1679,1117,918,660,582,1704,2054,1646,747,1100,1877,1944,2033,2057,2051,2044,2039,2046,1823,1616,1780,1946,1861,2051,2054,2048,2048,2048,2054,2048,2048,2041,1917,1651,1189,596,1095,1899,2057,2048,2048,2048,2048,2048,2057,2056,2050,1887,1640,1340,861,780,246,1149,2048,2045,1924,1908,1702,1739,1923,2048,1928,1647,1318,1726,1739,1835,2051,2048,1917,1684,1419,1874,1887,1673,2046,1936,1730,1786,1374,1292,1193,1965,1978,2009,2029,1957,2018,1907,2048,2048,2055,1990,1358,773,1905,2048,2048,2048,2048,1977,576,1872,2048,2057,2048,2054,876,800,2054,2055,2055,2048,2055,2048,2048,1931,2057,1797,1721,2048,1827,2020,2048,1814,1860,2052,1877,1272,1374,2053,886,1379,2048,2048,2048,1985,597,78,567,1796,2048,2057,2057,2048,2055,2057,1943,2048,2048,2030,1966,2048,1975,2048,2050,2025,2048,2053,2048,1839,2049,1629,2004,1401,1943,1299,1490,1631,1712,1395,1315,1614,2057,1888,1911,2048,2048,2048,2048,1882,1219,914,654,2048,1558,1306,1987,2048,2048,2057,2048,2057,2048,2055,2048,2056,2048,2028,1912,1676,1511,1303,1023,720,1983,2048,2048,2048,2048,2048,733,1438,2041,2048,2048,1904,1956,2051,2056,2048,2057,2048,2048,2056,2036,1894,1619,1218,345,1844,2048,2048,2048,1995,718,194,1742,2057,2048,2048,2057,2048,2056,2048,2048,1703,969,263,877,1685,2045,2048,2048,2048,2048,2048,2048,2056,2048,2055,2053,1954,1819,1780,1772,1672,1504,1333,1250,1231,1139,909,667,568,549,501,468,453,412,432,413,469,570,480,456,155,551,1159,1194,1215,1207,1100,980,927,809,598,395,211,82,468,1393,1724,1985,2056,2048,2041,2029,1961,1902,1875,1882,1910,1987,1954,1391,1926,2050,2047,2057,1998,2037,2051,2030,2034,2016,1963,2057,1944,1922,2029,2045,2048,1940,1705,1937,1905,1757,1994,2031,1422,1485,1852,2056,2054,1923,1898,1975,1758,1999,1897,2048,2057,2057,1946,1957,2048,1925,1450,1627,1504,1293,789,451,535,351,704,571,824,1406,1533,1436,1432,1285,1403,1539,1653,1802,1834,1813,1952,2038,2022,2055,2057,2048,2055,2057,2056,2048,2055,2020,1982,1994,1993,1992,1840,1694,1719,1699,1689,1610,1479,1430,1446,1422,1412,1277,1197,1210,1223,1204,1086,986,896,965,1141,1551,1415,1471,1504,1421,1480,1563,1557,1412,1571,1466,1553,1700,1655,1586,1648,1540,1456,1730,1647,1840,1698,1761,1818,1849,1885,1879,1905,1972,1943,2018,2043,2057,2057,2048,2048,2054,2045,1973,1852,1698,1479,873,1751,1831,2054,2048,2048,2007,705,208,1722,2048,2056,1864,1601,1861,1258,2053,2048,1261,1874,2048,2048,2056,1998,1634,2049,1873,1353,1595,2048,2048,2048,2048,2048,2048,1941,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2033,2040,2048,2048,2048,2056,2048,1947,1979,2030,2048,2048,2052,2048,2056,2048,2048,2056,2048,2038,1286,1850,2051,2048,2053,2048,2047,2056,2037,1871,1942,1671,1538,1586,1466,1808,1753,1493,1424,1252,1094,738,405,2057,2057,2048,2054,2050,1895,1517,656,392,1469,2048,2057,1756,1578,1475,1816,1830,360,200,1093,652,249,543,389,361,366,390,227,585,752,822,869,571,542,838,951,662,817,1449,1450,1408,1195,1183,1187,802,619,649,275,331,511,439,563,1074,671,428,473,327,844,712,560,582,606,480,411,826,815,956,784,821,639,796,879,640,773,871,828,218,737,527,595,905,511,309,284,317,287,511,257,442,153,382,470,454,718,604,294,407,274,475,691,351,435,656,342,334,215,622,702,259,454,449,502,873,767,162,115,372,218,698,876,316,397,449,289,340,665,303,599,950,568,237,363,243,461,274,251,312,331,941,468,498,452,662,466,493,422,236,674,335,331,649,555,786,263,185,400,457,657,363,736,229,780,471,382,249,682,336,666,542,470,488,438,749,520,390,421,584,826,427,975,1171,1179,1130,1165,1218,632,415,655,1094,1145,789,469,693,1174,447,306,226,184,317,208,232,129,230,445,323,151,133,133,398,527,619,330,688,625,521,808,293,601,194,470,399,275,290,465,579,425,503,529,269,284,424,493,219,232,261,233,338,191,163,466,323,267,180,284,187,251,531,487,646,289,587,978,272,510,454,528,639,518,415,587,742,965,1017,432,523,306,390,418,302,428,378,319,247,296,261,129,920,1073,644,670,858,408,662,436,288,501,615,475,226,310,407,937,604,950,680,395,606,201,274,334,178,322,212,626,513,640,345,447,729,485,704,400,66,474,609,592,714,433,422,569,366,342,366,530,1147,1268,1368,1090,1405,1279,1518,1366,382,120,179,434,531,161,122,287,465,279,477,508,647,1109,735,353,426,178,363,197,333,214,189,381,281,413,337,477,371,307,481,609,678,382,393,283,439,332,369,239,292,204,509,331,336,182,182,306,511,368,279,391,157,619,191,431,120,568,577,647,284,123,302,446,369,441,463,342,653,623,523,270,582,783,214,622,785,254,130,194,191,133,223,451,161,150,165,181,191,277,154,300,251,416,514,491,134,239,267,228,540,482,279,625,510,181,237,148,494,329,345,369,209,365,201,207,223,400,294,382,374,126,373,148,187,244,129,200,654,545,439,414,448,382,268,203,435,460,131,395,834,264,455,355,419,364,615,837,989,876,668,766,1717,1013,1186,1332,1439,1468,1440,1458,1530,1471,1535,1568,1429,1522,1496,1524,1568,1522,1524,1511,1564,1477,1426,1303,1281,1193,1292,1431,1328,1219,1171,1110,1088,1484,1446,1660,1912,1711,1777,1716,1673,1718,1739,1709,1741,1716,1712,1727,1769,1784,1746,1702,1570,1681,1652,1645,1709,1702,1700,1719,1710,1665,1659,1652,1672,1662,1544,1627,1608,1930,1611,1742,1643,1634,1651,1670,1731,1764,1848,1778,1829,1831,1821,1765,1679,1762,1753,1795,1817,1781,1749,1637,1828,1819,1664,1795,1764,1736,1718,1620,1632,1567,1854,1533,1673,1596,1574,1636,1626,1670,1661,1706,1680,1710,1709,1689,1723,1775,1710,1640,1758,1715,1722,1716,1640,1616,1703,1667,1660,1622,1603,1591,1556,1470,1526,1652,1398,1181,963,806,532,1107,1370,1405,1465,1258,1049,1219,1222,1203,1415,1331,1260,1303,1262,1298,1105,949,822,836,864,941,634,647,936,1058,1014,1179,1201,1806,1435,1455,1366,1422,1606,1390,1483,1484,1583,1421,1335,1288,1359,392,208,384,223,220,680,977,1354,1220,888,1327,1399,1214,1577,1692,1232,1167,1533,1158,751,1328,1332,1537,1326,1587,1540,1621,1529,1532,1435,1271,1619,1327,1670,1331,1445,1774,1218,1699,1634,1200,1489,1361,1459,1488,1544,1773,1318,1062,1701,1576,1379,1656,1336,1352,1470,1629,1720,1359,1389,1669,1341,1767,1355,1593,1491,1287,1561,1574,1373,1320,1298,1483,1523,1716,1375,1669,1593,1148,1619,1383,1589,967,1524,1609,1568,1424,1506,1431,1276,1721,1413,1102,1301,1494,1345,1177,1471,1500,1390,1270,1628,1590,1678,1581,1425,1200,1269,1622,1433,1837,1310,1697,1330,1810,1330,1623,1388,1601,1515,1913,1319,1654,1628,1765,1587,1394,1508,1520,1700,1361,1758,1709,1428,1613,1573,1743,1777,1536,1612,1271,1800,1551,1549,1648,1782,1418,1550,1827,1316,1583,1739,1553,1490,1758,1627,1826,1892,1827,1900,2040,2034,2019,2050,2034,2027,2023,2026,2032,2027,2050,2046,2048,2048,2012,1998,1869,2014,2013,2025,2042,2047,2047,2028,2040,2035,2037,2016,2033,2042,2051,2042,2036,2039,2020,2007,2021,1934,1994,2040,2056,2054,2022,2034,2048,2020,2001,1989,2004,2000,1981,2008,2001,2009,2032,2037,2032,2004,2028,1994,1985,2000,2004,2008,2007,2044,2028,2038,2014,1988,2007,1986,1982,2012,1996,2049,2051,2028,2032,2010,1982,2016,2014,2001,2054,2028,2045,2053,2042,2035,2033,2056,2026,2046,1988,2011,2027,2048,1977,1989,1998,1951,1990,1966,2017,1998,1917,1970,1973,1980,1978,2006,1965,1982,1988,1988,1962,1990,1977,1996,1991,1979,1967,1987,1972,2015,1958,1974,1969,1989,1989,1985,1961,1978,1992,1997,1983,2001,1966,2011,1992,1997,1974,1898,1968,1995,1992,1959,2007,1984,1995,1947,1980,1960,1990,1986,1996,2010,1985,1991,2004,2015,2001,2006,1984,1970,1946,2007,2008,2000,1939,1930,2041,2021,1936,2016,2037,2011,1948,2015,2016,2012,1971,2031,1984,2033,2044,2029,1984,2034,2054,2018,1999,1976,2000,2022,2001,2006,1913,1869,2038,2048,2047,2007,1927,1912,1964,1878,1748,1960,1896,1849,1793,1884,1924,1973,1998,1956,1848,1890,1971,1751,1911,1924,1953,1920,2009,1891,1937,1893,1909,1908,1850,1970,1993,1915,1945,1906,1929,1855,1855,1871,1888,1982,1981,1903,2009,2028,1813,1931,1777,2009,1811,1961,1958,1960,1909,2007,1988,1871,1870,1788,1929,1962,1892,1980,1905,1938,1929,1961,1944,1829,1985,1992,1844,1830,1799,1758,1760,1879,1890,1921,1770,1927,1835,1872,1997,1912,1938,1925,1874,1908,1863,1933,1884,1929,1862,1967,1955,1890,1957,1856,1984,1912,1868,1929,1830,1846,1885,1854,1910,1835,1851,1569,1711,1438,1695,1896,1645,1957,1966,1936,1986,2015,1960,1967,1949,1954,1999,1969,1957,1988,1584,1394,1353,1432,1412,1476,1528,1390,1582,1522,1484,1605,1625,1722,1599,1606,1985,2003,1945,1983,1948,1994,1826,1909,1969,1994,2001,1895,1995,1926,1895,1879,1846,1988,2032,2003,1893,1999,1946,1860,1914,1887,1980,1999,1979,1969,2016,1947,1856,1907,1898,1968,1983,1957,1945,1912,1893,1835,1899,1911,1962,1998,1925,1958,1929,1974,1792,1918,1935,1991,2005,1959,1981,1959,1926,1873,1893,1945,1959,1930,1961,1886,1972,1938,1909,1931,1823,1755,1691,1650,1659,1726,1714,1743,1706,1680,1710,1659,1736,1726,1718,1725,1674,1667,1667,1689,1729,1748,1653,1601,1673,1714,1692,1729,1764,1615,1580,1631,1689,1753,1680,1672,1667,1613,1639,1727,1716,1774,1651,1685,1679,1661,1774,1775,1751,1613,1616,1747,1801,1866,1804,1739,1763,1756,1878,1842,1858,1824,1807,1801,1793,1714,1871,1629,1688,1632,1748,1772,1628,1586,1703,1793,1652,1664,1828,1604,1711,1781,1701,1521,1736,1729,1667,1693,1774,1797,1725,1696,1807,1804,1715,1690,1724,1732,1735,1809,1763,1783,1975,1899,2008,1974,1968,1938,1938,1955,1917,2009,1983,1965,2004,1999,1976,2011,1996,1984,1961,1970,1963,1967,2000,2007,1994,1963,1971,1982,1959,1977,2024,1991,2007,1953,1988,1983,1970,1976,1972,1975,1965,1964,1986,1968,1973,1980,1949,1975,1947,1949,1965,1959,1969,1958,1975,1960,1981,1950,1975,1941,1988,1921,1990,1923,1986,1914,1992,1921,1987,1926,1981,1932,1980,1931,1979,1936,1932,1901,1907,1924,1902,1901,1917,1910,1901,1939,1890,1915,1914,1893,1921,1905,1906,1863,1953,1889,1825,1941,1881,1821,1929,1899,1833,1924,1898,1824,1924,1903,1827,1920,1906,1831,1904,1924,1837,1887,1935,1823,1863,1890,1742,1872,1892,1762,1881,1872,1783,1891,1841,1790,1897,1814,1830,1889,1814,1824,1883,1798,1829,1902,1785,1876,1914,1806,1892,1853,1848,1912,1826,1850,1913,1805,1885,1865,1839,1914,1842,1847,1912,1817,1886,1886,1883,1847,1881,1882,1846,1882,1886,1844,1874,1887,1848,1883,1887,1841,1878,1895,1842,1878,1892,1843,1876,1901,1848,1871,1904,1871,1870,1872,1877,1880,1859,1886,1890,1847,1885,1899,1834,1885,1907,1830,1898,1911,1837,1906,1907,1840,1918,1907,1875,1923,1919,1918,1923,1931,1917,1908,1913,1901,1927,1919,1915,1911,1951,1915,1909,1914,1951,2001,1988,1988,1967,1993,1987,1982,1985,1992,1978,1965,1908,1970,1870,1958,1874,1990,1846,1945,1850,1882,1954,1915,1918,1974,1927,1990,1926,1978,1937,1970,1936,1961,1947,1962,1971,1966,1958,1970,1900,1888,1895,1931,1848,1977,1828,1970,1857,1927,1894,1873,1912,1875,1949,1836,1987,1746,1921,1819,1875,1864,1841,1888,1800,1931,1798,1880,1860,1839,1866,1810,1916,1783,1928,1869,2050,2051,2026,2004,2018,2022,2025,2013,2035,2029,2041,2031,2028,2041,2017,1982,1966,1967,2024,2048,2056,2049,2012,2045,2012,1999,2006,2023,2026,2049,2031,2048,2052,2041,2027,1990,1964,2022,2015,2009,2014,2033,2051,1981,1993,2022,1985,1953,1982,2020,2045,2029,2020,2012,1989,2031,2001,1994,1969,1992,2002,2031,2034,2029,2003,2008,2018,1987,1986,1993,1972,1993,2028,2045,2027,2040,2029,2049,1987,2022,2007,1995,1999,2028,2036,2057,2043,2057,2043,2031,2004,2014,2039,2021,2052,2037,2022,2030,2023,2013,1984,1986,2005,1977,2002,1985,1961,1979,1993,1919,1981,1961,1973,2019,1986,2005,1974,1945,1994,1960,1898,1806,1959,2017,2005,1991,2004,1961,1963,2006,2002,1992,1978,1878,1902,1902,1967,1976,1901,1922,1942,1961,1961,1882,1842,1952,2007,1989,1846,1908,1922,1959,1916,1841,1891,1877,1862,1954,1957,1941,1964,1909,1847,1914,1842,1901,1949,1926,2037,1921,1861,1802,1869,1901,1966,1978,1906,1804,1911,1847,1926,1949,1933,1886,1866,1818,1662,1932,1891,1885,1922,1858,1878,1884,1899,1845,1892,1912,1843,1864,1815,1790,1908,2003,1953,1928,1885,1883,1812,1858,1849,1828,1920,1951,1949,1974,1926,1879,1843,1876,1991,1919,2039,2027,2014,1883,1986,2021,2007,2010,1973,1961,1972,2033,1978,2001,1712,1981,1999,2044,1950,1776,2008,2004,2045,1963,1814,2011,1995,2021,2012,1988,1796,1955,2017,2025,1997,2010,2025,2030,2006,2002,2010,1926,2013,1993,1983,1965,2027,2029,1983,1866,1746,1844,1936,1993,1995,1977,2017,1958,1989,1940,1964,1961,1944,1885,1971,1939,1973,1952,1989,1996,2024,1975,1989,1946,1958,1979,2014,1943,1832,1958,1936,1984,1855,1907,1952,1936,1889,1951,2000,1999,1972,1985,1997,2030,1999,1992,1921,1890,1959,1914,1919,1887,1977,1937,1920,1956,1974,2013,1990,1997,1971,1975,1985,2001,1995,1991,1976,1928,1968,1944,1964,1943,1955,1997,1953,2007,2033,1994,2002,1985,1950,2026,1950,1944,1985,1980,1932,2030,1893,1961,1990,2003,1980,1944,1963,1999,2012,2014,1869,1996,1944,2035,1933,2014,1967,1995,2027,1970,1988,2031,1970,1998,2006,1935,2043,1935,1962,2002,1924,2029,1999,1957,1906,1998,1941,1984,1911,1961,1971,1960,1939,1966,1986,2019,1936,1977,1927,1978,1941,1949,1939,1949,1890,1856,1912,1999,1929,1902,1948,1856,1939,1949,1967,1943,2009,1963,1951,2006,1969,1968,2020,1884,1986,1937,2003,2019,1989,2024,2018,2026,1883,2011,1977,1998,2034,2039,2033,2041,2007,1962,2012,1969,2032,2034,2021,2015,1991,2029,2004,2034,2009,2041,2040,2018,2050,2042,2016,1958,2017,1964,2035,2033,2030,2050,2048,2023,1969,2025,1977,2030,2027,2038,2035,2036,2025,1949,1934,1923,1818,1956,1995,1979,1991,2026,2007,2008,2027,1838,2007,1975,1970,1963,2006,2010,1891,2012,1920,1971,1980,2011,2008,1912,2010,1919,1932,1868,1816,1576,1715,1505,1559,1686,1464,1470,1580,1375,1514,1334,1492,1382,1104,1621,1134,1418,1212,1588,1055,1343,1302,978,1244,1461,1424,1087,1334,1513,919,1080,1364,1231,1303,1443,1148,1364,1138,1580,1172,1356,1481,1436,1409,1396,1566,1449,1592,1506,1343,1414,1495,1408,1223,1609,1240,1380,1091,1621,1183,1469,1296,875,1600,1361,1345,1141,1251,1627,957,1081,1391,1302,1468,1216,1249,1321,1138,1664,1285,1464,1512,1262,1647,1396,1508,1530,1429,1619,1260,1483,1552,1236,1511,1319,1334,1325,1127,1633,1227,1443,1273,882,1619,1411,1300,1206,1243,1601,861,1161,1422,1238,1487,1124,1300,1335,1156,1651,1300,1471,1494,1232,1669,1371,1528,1553,1351,1583,1326,1499,1484,1093,1598,1233,1456,1313,1290,1514,1141,1456,1206,863,1574,1375,1190,1236,1296,1491,885,1249,1350,1103,1552,1105,1388,1141,1653,1085,1315,1451,1447,1370,1504,1577,1433,1570,1391,1455,1371,1483,1505,1193,1636,1163,1431,1151,1566,1152,1469,1331,947,1374,1382,1439,1086,1324,1537,1070,1039,1319,1355,1258,1432,1190,1299,1138,1650,1209,1515,1496,1305,1608,1311,1517,1536,1432,1670,1259,1481,1516,1368,1446,1381,1338,1353,1145,1579,1189,1442,1236,844,1601,1354,1349,1170,1295,1602,820,1227,1453,1183,1480,1167,1329,1318,1186,1651,1281,1518,1521,1279,1623,1362,1582,1588,1398,1593,1357,1546,1554,1257,1335,1434,1281,1279,1146,1583,1190,1428,1300,840,1582,1356,1327,1151,1246,1577,850,1199,1396,1192,1406,1128,1304,1356,1228,1613,1124,1484,1545,1390,1613,1420,1553,1559,1472,1588,1353,1542,1575,1262,1235,1590,1287,1317,1141,1588,1182,1398,1318,933,1333,1429,1442,1075,1378,1542,935,1077,1370,1280,1110,1493,1145,1402,1183,1715,1119,1358,1575,1463,1384,1596,1527,1432,1575,1470,1553,1349,1502,1483,1142,1684,1177,1435,1168,1600,1208,1372,1395,991,1248,1409,1449,1121,1273,1272,1471,895,1347,1436,1184,1624,1059,1383,1202,1646,1235,1400,1440,1421,1376,1539,1587,1500,1577,1519,1492,1421,1544,1457,1170,1688,1219,1446,1184,1571,1236,1361,1400,1016,1161,1453,1414,1130,1302,1167,1632,810,1273,1509,1341,1633,1078,1371,1327,1439,1478,1317,1523,1566,1244,1695,1608,1608,1615,1415,1743,1185,1269,1283,1331,1315,1799,1507,1459,1179,1260,1588,1498,1467,1805,1418,1327,1245,1556,1426,1451,1824,1431,1430,1296,1296,1493,1385,1390,1836,1415,1597,1386,1256,1466,1243,1265,1409,1769,1092,1245,1272,1408,1669,1345,1382,1434,1566,1389,1688,1710,1748,1916,1609,1961,1887,1796,1752,1862,1829,1772,1911,1398,1479,1691,1688,1768,1676,1675,1598,1584,744,1744,1995,1973,1771,1564,764,1786,1859,1793,1844,1809,1758,1859,1323,1632,1867,1554,1895,1874,1882,1834,1662,1781,1865,1950,1994,1622,1959,1871,1915,1893,1874,1747,1524,1846,1839,1890,1869,1767,1637,1776,1524,1810,1637,1680,1658,1573,1576,1354,1718,1924,2017,2007,1945,1933,2024,2044,1968,1961,2042,2032,1979,1959,2046,2037,1940,2016,1920,1945,1969,1991,1977,1997,1997,2027,2018,2000,2013,2025,2008,2014,1922,1870,2038,2054,2031,2043,1988,1908,1902,1944,1895,1910,1965,1871,1938,1888,1901,1921,1846,1935,1948,1844,1935,1975,1876,1883,1937,1904,1897,1333,1898,1890,1758,1410,1415,1245,1749,1638,1647,1617,1856,1486,1612,1574,1584,1467,1560,1661,1695,1460,1198,1449,1700,1450,1203,1686,1899,1806,1726,1780,1794,1591,1912,1849,1706,1673,1683,1735,1560,1734,1749,1512,1489,1502,1820,1274,1358,1255,1521,1650,1523,1146,1132,1609,1646,1505,1404,2016,1958,1980,2006,1960,1862,1776,1697,1872,1885,1846,1571,1888,2006,1809,1887,1903,1846,1788,1728,1822,1772,1422,1457,1777,1411,1391,1690,1535,1437,1725,1522,1782,1467,1631,1624,1856,1471,1817,1554,1690,1442,1674,1768,1488,1792,1272,1609,1395,1839,1912,1790,1737,1351,1363,1729,1695,1634,1485,1584,1726,1623,1518,1661,1540,1691,1619,1267,1598,1469,1619,1689,1249,1629,1459,1703,1649,1372,1491,1589,1577,1164,1238,1382,1180,1468,1240,1574,1128,1371,1435,1289,1522,1261,1307,1517,1460,1508,1686,1930,1446,1725,1797,1862,1862,1944,1546,1946,1540,1540,1947,1627,1939,1244,1906,1849,1460,1691,1702,1752,1566,1493,1596,1574,1537,1583,1379,1614,1492,1538,1532,1522,1520,1549,1521,1519,1535,1614,1825,1669,1952,1761,1860,1576,1570,1462,1686,1604,2005,1824,1887,1849,1851,1933,1854,1926,545,580,414,537,815,655,639,567,884,2038,1972,1980,1937,1944,1957,1977,1934,1910,1643,1639,1640,1745,1566,1608,1783,1547,1707,1580,1722,1440,1486,1469,1572,1356,1446,1434,1635,1400,1284,1158,1494,1377,1562,1447,1342,1519,1477,1450,1572,1408,1367,1396,1393,1447,1384,1395,1664,1739,1774,1841,1895,1874,1894,1745,1717,1798,1637,1745,1791,1826,1779,1738,1692,1685,834,808,825,753,1756,1721,1633,1629,1711,1589,1657,1659,1671,1751,1657,1738,1644,1726,1780,1799,1921,1304,1791,1557,1811,1142,1805,1563,1893,1811,1848,1766,1848,1839,1754,1848,1863,1495,1049,1070,1022,1065,1087,1060,1027,1352,1529,1562,1530,1575,1560,1561,1574,1528,1631,1441,1607,1574,1663,1056,1037,1084,1017,1476,1429,1711,1830,1546,1295,1133,1521,1438,1084,1392,1564,1445,1488,1610,1595,1547,1605,1604,1397,1351,803,1026,753,659,956,704,1303,1388,1454,521,529,779,554,870,531,859,675,886,511,510,932,639,858,518,861,621,651,730,540,924,748,933,478,725,660,692,619,304,640,242,604,272,232,447,201,659,187,541,188,463,115,40,595,168,641,213,782,1463,1422,1305,1226,1229,1206,1277,985,1016,986,950,991,987,988,1289,1345,1392,1386,1471,1481,1417,1402,1395,1599,1469,1476,1519,1599,1629,1480,1517,1582,1465,1403,1404,1413,1406,1399,1486,1422,1359,1411,1392,1351,1406,937,941,921,929,1110,968,945,946,1065,899,973,886,1203,1372,1434,1374,1443,931,928,931,945,1657,1598,1638,1592,1526,1525,1525,1600,1708,1370,1388,1349,1358,1212,1316,1321,1318,1625,1553,1552,1254,1526,1461,1266,1423,1551,1557,1634,1574,1607,1683,1727,1723,1728,1572,1221,1378,1374,1441,1443,1195,1420,1416,1397,1593,1440,1607,1417,1658,1630,1658,1640,1656,1614,1650,1654,1634,1743,1662,1645,1656,1490,1632,1625,1606,1659,1595,1684,1627,1660,1557,1648,1660,1581,1682,1674,1704,1690,1555,1647,1687,1635,1585,1733,1619,1620,1616,1839,1650,1630,1635,1691,1848,1683,1667,1666,1802,1627,1674,1657,1715,950,951,962,938,1560,1480,1551,1480,1581,1244,1246,1351,1416,1111,1164,1263,1294,1347,1024,885,1061,1398,1188,1101,1087,1238,1098,885,999,1097,1604,1496,1547,1543,1507,1525,1516,1527,1657,1408,1388,1355,1366,1382,1390,1360,1408,1690,1496,1569,1556,1600,1567,1542,1549,1738,1593,1601,1658,1649,1611,1626,1616,1638,1697,1465,1408,1411,1443,1480,1406,1390,1694,1763,1744,1696,1704,1730,1723,1732,1708,1874,1746,1696,1646,1724,1719,1683,1669,1826,1067,915,1325,1064,1086,1059,1266,1135,1038,1056,935,656,649,737,735,1869,1645,1710,1686,1719,1665,1715,1691,1856,1777,1736,1674,1634,1709,1675,1740,1710,1904,1743,1761,1746,1783,1723,1769,1740,1872,1762,1715,1664,1639,1685,1658,1724,1659,1610,1477,1434,1414,1575,1001,1003,994,1358,1818,1781,1819,1858,1651,1839,1785,1856,1717,1239,1181,1234,1698,1255,994,1071,1525,1698,1630,1589,1607,1497,1621,1591,1586,1653,1530,1430,1441,1335,1567,1459,1439,1392,1529,1651,1405,1664,1257,1487,1462,1504,1437,1665,1627,1604,1655,1604,1618,1593,1697,1561,1470,1438,1423,1388,1481,1440,1410,1577,1806,1794,1847,1881,1689,1804,1814,1849,1673,1638,1642,1628,1578,1670,1649,1610,1702,1623,1462,1441,1504,1434,1493,1448,1455,1591,1859,1833,1860,1717,1878,1804,1872,1809,1751,1643,1589,1622,1514,1641,1608,1612,1689,1538,1477,1446,1380,1513,1455,1471,1495,1729,1804,1841,1850,1675,1858,1808,1849,1785,1002,1406,1328,695,940,858,719,1166,681,771,1738,692,672,701,1326,1252,993,1259,1351,1097,867,1259,1092,1287,1323,1410,1751,1444,1010,1000,1798,1548,1688,1653,1677,1634,1515,1727,1625,1188,1329,1302,1196,1612,1349,986,998,1020,1341,1117,1119,1099,1099,1471,2031,2045,2001,1990,2028,2014,2017,1971,2031,2036,2024,2008,2005,2006,2011,1997,1993,2028,2038,2000,2005,2026,1981,2009,1958,2023,2025,2049,1998,1979,2021,1998,1968,2003,2052,1886,1930,1895,1901,1921,1861,1856,1881,1873,1905,1884,1860,1862,1835,1821,1898,1891,1670,1679,1659,1677,1668,1656,1637,1625,1811,1659,1658,1654,1628,1669,1641,1592,1750,1431,1438,1429,1414,1446,1428,1393,1360,1601,1428,1473,1591,1400,1469,1515,1619,1548,1322,1574,1532,1627,1423,1588,1486,1688,1321,1406,1395,1725,1863,1571,1568,1677,1585,1577,1515,1694,1670,1548,1570,1670,1720,1716,1574,1592,1647,1541,1553,1558,1578,1527,1519,1561,1525,1529,1494,1523,1729,1527,1668,1689,1629,1591,1734,1857,1565,1509,1857,1933,1760,1702,1737,1944,1939,1931,1972,1958,1956,1911,1918,1893,1803,1845,1888,1999,1867,1870,1870,1829,1777,1774,1777,1793,2018,1959,1981,1954,1921,1901,1921,1913,2037,1861,1898,1882,1838,1805,1828,1801,1814,2027,1991,1997,1956,1948,1932,1956,1926,2018,1816,1809,1797,1752,1775,1785,1738,1788,1939,1843,1813,1793,1838,1830,1828,1809,1820,1502,1422,1464,1460,1401,1440,1425,1397,1775,1973,1939,2010,1945,1946,1885,1941,1905,1914,1871,1920,1984,1958,1948,1914,1928,1908,1931,1901,1978,1571,1517,1573,1602,1583,1643,1544,1505,1988,1797,1810,1761,1777,1709,1740,1714,1847,1334,1337,1311,1310,1377,1335,1369,1378,1610,1488,1455,1527,1570,1531,1486,1460,1513,1667,1631,1571,1621,1671,1498,1674,1398,1362,1345,1302,1262,1223,1194,1345,1868,1893,1869,1893,1891,1874,1860,1885,1948,1898,1875,1850,1889,1897,1879,1881,1861,1809,1399,1426,1371,1418,1466,1474,1469,1542,1743,1680,1700,1739,1644,1619,1587,1533,1235,1540,1581,1604,1636,1756,1700,1698,1682,1591,1450,1476,1501,1423,1332,1409,1417,1680,1474,1529,1495,1511,1556,1500,1514,1458,1676,1489,1522,1467,890,1473,1528,1486,1709,1976,1937,1968,1471,1407,1420,1410,1147,1441,1397,1389,1527,1168,1170,1072,943,1120,1136,1132,1260,1516,1410,1483,2017,1893,1905,1901,1907,1898,1907,1884,1652,1677,1447,1499,1453,1193,918,840,862,885,812,891,806,851,964,922,831,868,970,991,967,1170,1325,1262,1300,1297,483,491,639,608,270,402,188,989,1364,708,991,773,1318,1041,967,1347,400,237,439,374,574,1321,1506,1491,1865,1830,1757,1820,1822,1817,1782,1752,1802,1630,1654,1649,1539,1622,1606,1631,1554,1630,1319,1320,1360,1325,1702,1678,1675,1691,1659,1670,1674,1657,1639,1675,1678,1665,1355,1835,1836,1835,1765,1798,1828,1856,1775,1840,1486,1429,1472,1457,1744,1893,1833,1862,1854,1847,1860,1864,1869,1840,1530,1813,1025,1064,1190,1163,1466,1998,2001,1960,1958,1956,1966,1877,1891,1907,1958,1934,1937,1946,1923,1911,1945,2020,1666,1676,1757,1827,1816,1767,1649,1601,1999,2044,2049,2036,2047,2043,2044,2054,2056,2054,2056,2050,2043,2047,2052,2032,2046,2011,1882,1910,1816,1850,1835,1848,1836,1911,1901,1909,1875,1856,1846,1850,1842,1867,1786,1341,1314,729,811,745,602,587,746,859,846,509,499,771,830,939,496,418,839,832,866,556,408,807,901,796,438,825,1148,1028,962,395,1049,1122,1093,727,401,1165,1134,1192,519,608,1182,1020,1211,703,1318,1427,1567,1418,1891,1055,1046,1136,1174,1105,1158,1038,1148,1085,1150,1085,1172,1167,1063,1072,1107,1512,1111,1088,1108,1142,1065,1039,1112,1017,972,1019,935,1077,1053,801,811,859,1208,842,481,548,532,528,563,500,557,534,497,512,491,496,517,522,585,766,1481,1461,1502,1505,1513,1504,1541,1494,1410,1049,993,1113,1634,1479,1434,1369,1332,1425,1514,1771,1634,1684,1651,1600,1627,1664,1653,1793,1494,1472,1480,1522,1449,1538,1510,1484,1420,1079,1173,1256,1371,1305,1323,1239,1207,1385,1437,1416,1431,1560,1570,1498,1565,1844,1053,1043,1123,1168,1123,1160,1044,1103,1075,1129,1125,1186,1161,1070,1048,1094,1582,1037,1063,1115,1167,1055,1046,1148,1001,1012,966,967,1050,1037,823,803,845,1289,730,488,554,504,542,540,514,564,493,520,500,483,507,523,508,557,890,1763,1843,1793,1755,1809,1779,1780,1537,1402,1403,1384,1406,1608,1188,1192,1268,1596,1373,1300,1325,1606,1077,1041,1025,1036,1623,1692,1578,1646,1584,1307,1169,1098,1319,1420,1574,1658,1693,1560,1708,1679,1592,1660,1585,1566,1139,1559,1006,1647,1788,1824,1878,1782,1619,1689,1711,1754,1619,1755,1846,1596,1544,1493,1581,1543,1528,1581,1547,1334,1635,1617,1618,1604,1572,1579,1569,1623,1689,1589,1770,1735,1362,1547,1792,1734,1511,1492,989,1154,1154,1142,1165,1110,1090,1104,1145,1133,1174,1160,1096,1114,1049,1074,1014,1198,1208,1163,391,964,1219,1107,958,1022,1166,1131,1158,479,908,1260,1127,1016,1005,1094,1210,1125,680,852,1155,1121,1008,1020,1046,1237,1146,827,704,1128,1145,1090,968,960,1235,1101,926,588,1130,1243,1147,1383,1028,1093,1115,1167,1051,1032,1148,999,1011,968,949,1041,1036,813,801,860,1249,825,1153,1110,1035,421,1220,1193,1154,919,1133,1131,1205,1175,1271,1149,1142,1236,1124,1308,1145,1174,1222,1173,1261,1096,1162,1215,1165,1354,1098,974,1050,1290,1229,1040,1016,1088,1272,1250,1084,943,1123,1290,1151,1053,990,1100,1521,441,517,658,1423,1618,1790,1859,1861,1785,1525,1108,500,517,518,539,529,1225,1210,1041,1339,1504,1069,1219,1490,1234,1029,1316,1524,1085,1198,1627,1752,1837,1751,1854,1751,1795,1861,1768,1747,1874,1733,1844,1778,1753,1893,1694,1832,1783,2050,1735,1850,1739,1732,1990,1667,1805,1891,1732,1790,1819,1829,1720,1856,1793,1750,1896,1718,1760,2037,1747,1761,1805,1750,1878,1831,1820,1673,1903,1741,1845,1789,1748,1884,1693,1831,1848,1793,1755,1816,1854,1712,1804,1879,1708,1906,1730,1762,1880,1740,1741,1814,1853,1737,1812,1824,1679,1893,1071,1278,1112,1298,1271,1120,1260,1042,688,754,836,889,500,505,778,836,902,553,370,806,861,855,532,441,781,889,800,1041,1117,1057,1141,1179,1101,1167,1038,1123,1067,1130,1087,1211,1179,1095,1044,1111,1446,1471,1533,1250,1135,1061,1193,1058,1050,1134,1037,995,1025,895,1036,1046,854,830,830,1007,1423,1423,1720,669,509,559,496,555,533,535,572,488,513,511,465,524,516,529,553,933,1593,1666,1582,1684,1708,1619,1645,1692,1670,1704,1791,1640,1585,1609,1673,1659,439,645,1314,314,464,350,1065,1508,2031,2036,2010,2026,2005,2002,1971,2004,2017,2025,2004,2018,2024,1985,2006,1975,1856,1378,1450,1605,1270,1382,1485,1121,1121,1124,1123,1124,1122,1120,510,80,1446,2023,2008,1878,1896,1895,1830,1872,1892,1895,1887,1939,1890,1962,1927,1862,1919,1923,1900,1848,1909,1963,1883,1905,1944,1923,1728,1776,1826,1728,1986,1914,1862,1876,1889,1922,1911,1893,1865,1978,1774,1820,1866,1916,1820,1527,1783,1455,1558,1615,1614,1577,1488,1471,1592,1602,1629,1654,1468,1540,1557,1566,1554,1879,1508,1542,1652,1528,1943,1793,1760,1808,1867,1865,1847,1843,1880,1301,1289,1288,1389,1304,1332,1335,1230,1657,1459,1449,1429,1524,1488,1432,1438,1606,1456,1447,1457,1469,1497,1477,1447,1429,1626,1465,1446,1428,1498,1476,1492,1433,1548,1514,1435,1420,1453,1498,1454,1434,1425,1584,1417,1382,1440,1441,1480,1398,1412,1439,1578,1368,1383,1470,1474,1446,1379,1401,1601,1424,1399,1405,1446,1442,1434,1401,1407,1617,1386,1418,1484,1493,1498,1442,1395,1641,1481,1440,1457,1499,1486,1487,1471,1389,1586,1362,1317,1362,1384,1346,1324,1287,1488,1390,1315,1300,1373,1339,1400,1328,1284,1571,1339,1285,1360,1352,1313,1306,1330,1333,1596,1465,1443,1478,1473,1515,1447,1393,1620,1432,1392,1457,1489,1440,1475,1416,1416,1597,1347,1415,1452,1440,1467,1398,1385,1626,1426,1417,1383,1475,1489,1436,1401,1404,1619,1384,1377,1406,1489,1463,1415,1442,1570,1475,1437,1407,1439,1500,1455,1436,1406,1756,1676,1841,1717,1872,1683,1709,1788,1830,1825,1794,1702,1649,1774,1761,1751,1732,1868,1765,1894,1850,1878,1865,1890,1858,1869,1936,1822,1787,1789,1812,1802,1776,1778,1955,1784,1782,1721,1767,1737,1753,1704,1763,1899,1810,1790,1740,1774,1748,1742,1742,1895,1880,1847,1828,1809,1787,1860,1793,1815,1928,1724,1784,1737,1733,1714,1749,1787,1823,1727,1919,1842,1826,1827,1791,1761,1790,1770,1886,1661,1760,1717,1557,1770,1730,1628,1770,1814,1736,1770,1715,1608,1685,1586,1826,1899,1630,1640,1633,1645,1697,1678,1680,1655,1767,1685,1617,1619,1701,1707,1693,1646,1757,1807,1812,1736,1779,1832,1797,1817,1786,1852,1788,1721,1727,1761,1794,1764,1793,1755,1864,1805,1891,1868,1847,1930,1973,1796,1845,1657,1669,1769,1748,1730,1792,1713,1719,1806,1664,1782,1795,1785,1812,1872,1712,1822,1404,1512,1498,1547,1510,1497,1496,1526,1963,1983,1925,1965,2021,1938,1974,1979,1895,1939,1992,2024,1975,1940,1973,1994,2024,1788,904,40,40,38,318,38,40,40,97,1935,1784,1839,1833,1835,1840,1805,1791,1884,1445,1462,1431,1460,1436,1442,1404,1467,1906,1841,1811,1752,1783,1776,1806,1767,1578,855,63,39,40,35,318,40,39,40,736,1120,1572,1729,1719,1749,1774,1730,1707,1753,1754,1780,1180,1230,1450,1520,517,1547,1492,1314,1027,1781,1731,1616,971,40,40,39,318,38,40,40,102,1352,1422,1027,1194,1592,1669,1599,1681,1673,1678,1647,1629,1616,445,40,40,38,1020,759,64,702,1913,1930,1893,1687,1611,1628,1645,1694,1710,1724,1707,1727,1724,1740,1739,1719,1694,1688,1650,1323,977,899,521,1820,1779,1734,1692,1762,1779,1699,1736,1852,1886,1791,1882,1843,1859,1863,1868,1785,1872,1762,1621,1797,1633,1779,1757,1725,1807,1824,1939,1850,1878,1892,1855,1931,1833,2007,1385,1192,1143,1026,1067,1385,1382,1341,1384,1432,1237,1175,1098,1154,1113,1212,1489,985,768,935,995,1248,1709,1387,804,617,779,1224,1636,1704,1700,964,1195,1443,1583,1249,1061,782,935,852,489,797,1159,1343,1279,1158,1370,1382,1407,1319,1293,1854,1893,1866,1911,1850,1846,1928,1874,1828,1907,1926,1922,1919,1851,1877,1936,1515,906,936,916,1269,1949,1919,1709,1992,1295,1167,1204,1211,1845,2011,1971,2042,1986,1903,1897,1903,1874,2036,2034,2047,2024,1852,1810,1747,1857,1797,1812,1719,1813,1803,1948,1939,1957,1913,1769,1309,1299,1549,1520,1181,1280,1240,1389,1204,1239,1246,1405,1658,1191,1204,1610,1729,855,743,1267,1275,1113,734,992,1595,1494,741,847,1672,1758,1364,1397,1575,1891,1743,1771,1812,1810,1766,1839,1863,1821,1647,1691,1689,1674,1823,1747,1821,1797,1707,1449,1430,1430,1581,1460,1394,1462,1483,1584,1484,1450,1530,1634,1500,1465,1521,1812,1972,1965,1937,1962,1963,1995,1969,1986,1853,1760,1766,1732,1839,1618,1567,1560,1754,1919,1846,1829,1907,1816,1840,1767,1832,1988,1865,1828,1892,1923,1787,1814,1789,1849,1640,1593,1537,1672,1175,1236,1436,1547,1166,1262,1236,1487,1402,1171,1273,1625,1766,1788,1777,1774,1930,1790,1778,1769,1873,1820,1839,1828,1705,843,903,853,689,1292,1154,1174,1160,1279,1220,1164,1203,1341,1310,1404,1310,1379,1853,1835,1853,1828,1889,1810,1834,1843,1931,1899,1927,1921,1930,1897,1934,1950,1938,1787,1831,1842,1784,1819,1860,1717,1581,1732,1690,1902,1803,1881,1887,1828,1856,1880,1632,1472,1404,1478,1547,1517,1756,1675,1558,1574,1677,1698,1656,1795,1774,1745,1794,1857,2037,2053,2056,1896,2001,1978,1969,1958,1962,1941,1932,1872,1432,1164,1472,1075,1527,1769,1743,1747,1739,1583,1579,1541,1544,1804,1768,1791,1736,1841,1809,1815,1811,1792,1692,1720,1697,1692,1552,1818,1788,1666,1415,988,1204,918,1453,1009,892,879,1299,1002,1169,1020,1118,849,517,610,510,841,754,685,731,822,977,1309,1200,1036,1246,1380,1445,1357,1348,1473,1509,1719,1367,1374,1625,1601,1421,1615,1627,1679,1565,583,238,181,220,899,502,436,441,1273,2049,2038,2048,2036,2035,2048,2038,2009,2042,1964,1946,1960,1882,1921,1923,1916,1856,1389,1360,1435,1404,1260,1187,1158,1057,1371,1395,1415,1475,1567,1871,1818,1812,1871,1867,1814,1782,1856,1854,1749,1741,1717,1764,1747,1762,1703,1670,1386,1427,1541,1428,1470,1498,1552,1501,1711,1875,1901,1864,1759,1223,1243,1232,1421,1846,1808,1776,1838,1527,1458,1427,1471,1744,2021,2031,2041,2026,2009,1994,1977,1989,1617,1520,1498,1488,1783,1683,1658,1677,1877,1977,1979,1976,1999,1709,1714,1754,1733,2042,2048,2039,2057,1703,1272,1305,523,536,538,528,1242,1417,1417,1385,1049,1427,1417,1552,1177,1488,1593,1644,1428,1418,1550,1847,1663,1892,1732,1261,1281,1273,1356,970,964,1026,974,1259,903,1085,838,937,1909,1974,1941,1962,2021,2014,2008,1989,2006,1686,1480,1571,1628,1783,1658,1700,1602,1827,1533,1495,1657,1768,1644,1715,1713,1657,1464,1690,1623,1436,1490,1564,1574,1475,1743,1901,1898,1841,1893,1877,1875,1851,1873,1822,1461,1470,1541,1940,1983,1960,1994,1994,1818,1798,1797,1816,1869,1902,1902,1852,1562,1429,1463,1367,1497,1470,1533,1477,1496,1513,1751,1682,1605,1527,1577,1548,1500,1683,1730,1608,1759,1732,1680,1667,1790,1697,1668,1676,1529,1699,1636,1647,1524,1704,1678,1523,1477,1587,1504,1690,1391,1704,1710,1482,1523,1514,1534,1462,1523,1650,1672,1419,1341,1209,1563,1569,1702,1576,1518,1690,1423,1669,1764,1749,1533,1634,1299,1256,1148,1266,1325,1290,1216,1564,1537,1519,1309,1388,1175,1143,1156,1275,1279,1382,1435,1354,1382,1583,1292,1184,1387,1843,1823,1702,1485,1215,1005,1013,879,1025,1086,1185,1316,1340,1638,1568,1635,1766,1756,1129,1079,1015,983,775,655,1326,1013,1404,1211,1267,1272,1447,1587,1735,1822,1982,1684,1777,1774,1511,1276,1237,1271,1265,1305,1291,1370,1211,1228,1304,1279,1225,1779,1522,1698,1638,1519,1386,1575,1736,1611,1529,1234,1199,1337,1209,1266,1321,1506,1748,1518,1281,1356,1291,1272,1082,1249,1409,1482,1736,1647,1658,1516,1367,1498,1347,1665,1531,1509,1245,1273,1236,1172,1229,1313,1577,1757,1667,1735,1523,1543,1741,1573,1612,1568,1332,262,615,1585,1377,272,571,1577,1365,272,580,1593,1396,272,545,1600,1392,272,516,1572,1405,284,492,1299,1230,1331,1228,1427,1280,1285,1265,1414,1275,1291,1296,1416,1324,1290,1346,1269,1424,1486,1253,1239,1250,1218,1277,1242,1239,1468,1222,1225,1201,1215,1204,1175,1227,1219,1492,1267,1257,1264,1252,1301,1265,1234,1394,1850,1718,1785,1662,1639,1675,1924,2016,1259,1313,1348,1367,1354,1392,1309,1329,1339,1326,1402,1303,1376,1359,1390,1371,1668,1698,1610,1610,1636,1600,1597,1483,1304,1380,1348,1389,1523,1499,1495,1498,1630,1860,1758,1619,1621,1577,1600,1607,1474,1346,1347,1399,1401,1518,1529,1529,1458,1600,1813,1843,1627,1597,1577,1632,1600,1502,1380,1319,1396,1405,1496,1518,1533,1442,1595,1738,1882,1669,1592,1570,1637,1586,1483,1419,1289,1388,1407,1456,1558,1518,1416,1574,1711,1756,1187,1226,1059,853,876,1057,979,1062,1130,1274,1212,1143,904,1014,998,1063,1614,1161,1207,1064,842,864,1093,1034,1032,1136,1281,1239,1189,883,1007,1041,1063,1755,1961,1892,1930,1973,1967,1914,1968,1877,1878,1772,1796,1883,1896,1957,1934,1948,1459,1947,1953,1944,1983,1991,1974,1931,1974,1977,1751,1761,1764,1767,1767,1761,1856,1745,1806,1764,1803,1795,1793,1563,1973,1969,1925,1902,1870,1973,1711,659,851,1918,1946,1996,1977,1985,1949,2004,1959,1969,1980,1948,1981,1982,1942,1972,1931,1967,1913,1606,1569,1570,1577,1577,1548,1569,1594,1760,1625,1663,1665,1572,1857,1806,1829,1815,1775,1482,1596,1480,1630,1646,1742,1648,1661,1697,1647,1728,1717,1858,1812,1822,1877,1874,1659,1721,1588,1658,1838,1794,1864,1833,1688,1589,1597,1528,1654,1650,1769,1620,1748,1708,1777,1758,1785,1648,1549,1751,1704,1730,1501,1852,1724,1707,1630,1811,1715,1622,1680,1611,1724,1529,1591,1662,1722,1645,1578,1283,1897,1868,1136,1738,1946,1884,1903,1571,2002,2001,2015,1572,1660,1352,1159,1263,1158,1419,1603,1603,1501,1472,1474,1504,1488,1522,1570,1252,996,864,1022,1290,1122,918,1098,1061,1647,1854,1832,1900,1749,1900,1771,1833,1880,1842,1636,1605,1664,1680,1810,1748,1675,1889,1834,1818,1873,1750,1906,1774,1846,1859,1832,1675,1660,1744,1631,1779,1764,1704,1877,1740,1924,1762,1914,1812,1891,1861,1861,1963,1923,1973,1994,1891,1963,1963,1982,1972,1930,1699,1718,1769,1778,1864,1863,1794,1721,1685,1353,1264,1598,1521,1772,1341,997,1149,1017,696,293,1019,1285,1261,1342,1322,1432,1303,1345,1355,1310,1478,1293,1301,1324,1350,1390,1348,1336,1334,1534,1400,1482,1074,1585,1625,1885,1962,2029,2051,2004,1999,1993,1931,1786,1624,1523,1515,1687,1591,1706,1710,1781,1767,1766,1665,1719,1591,1581,1612,1641,1410,1732,1868,1939,1845,1652,1684,1779,1971,1971,1863,1765,1681,1852,1919,1885,1785,1398,1779,1936,1893,1880,1655,1681,1914,1967,2003,1947,1783,1625,1880,1865,1890,1843,1485,1016,996,940,1256,1453,1567,1607,1649,1612,1626,1647,1714,1431,1927,1705,1715,1740,1607,1715,1648,1628,1700,1692,1870,1780,1754,1751,1750,1685,1782,1617,1672,1698,1722,1745,1619,1669,1669,1605,1914,1872,1845,1935,1959,1930,1899,1732,1701,1712,1684,1704,1949,1914,1908,1892,1910,1989,1917,1920,1953,1938,1835,1783,1789,1790,1840,1965,1901,1913,1876,1924,1834,1868,1826,1325,1066,1344,1684,1607,1672,1603,1835,1859,1843,1870,1827,1858,1821,1832,1921,1840,1904,1895,1272,592,594,667,1259,1014,1308,1256,1239,946,1783,1730,1650,1576,1741,1620,1610,1690,1693,1327,1725,1493,1355,1134,1570,1624,1713,1732,1730,1701,1781,1590,1616,1487,1350,1526,1468,1518,1458,1514,1431,1412,1481,1387,1577,1561,1805,1831,1861,1886,1853,1846,1825,1881,1843,1826,1833,1927,1913,1875,1873,1863,1963,2024,1975,1923,1885,1902,1939,1917,1909,1933,1945,1914,1871,1874,1839,1900,1890,1808,1561,1493,1405,1753,1605,1596,1646,1605,1614,1656,1616,1735,1650,1659,1642,1639,1631,1659,1624,1640,1754,1670,1633,1647,1650,1630,1639,1661,1790,1852,1883,1851,1861,1859,1846,1867,1838,1948,1841,1837,1822,1854,1843,1841,1845,1922,1889,1862,1848,1864,1856,1833,1855,1871,1781,1342,1426,1422,1336,1415,1436,1607,1393,1357,1437,1494,1425,1446,1702,1865,1865,1841,1757,1802,1803,1907,1899,1748,1706,1734,1721,1765,1639,1741,1658,1704,1643,1710,1732,1670,1770,1744,1735,1589,1698,1820,1837,1799,1876,1653,1728,1878,1924,1889,1852,1753,1665,1774,1781,1789,1795,1342,1722,1704,1651,1837,1644,1663,1804,1767,1820,1759,1757,1626,1731,1617,1643,1766,1494,1163,1251,1256,1234,1314,1232,1179,1671,1579,1496,1618,1689,1609,1501,1574,1609,1506,1585,1533,1823,1831,1940,1891,1854,1080,1793,1401,1432,1778,1810,1798,1743,1702,1545,1487,1650,1742,1719,1622,1356,1311,1911,1840,1728,1337,1635,1421,1480,1652,1430,1707,1488,1471,1515,1526,1536,1557,1491,1320,1496,1536,1580,1548,1492,1504,1569,1600,1487,1561,1358,1443,1453,1489,1818,1841,1873,1801,1819,1837,1788,1729,1734,1483,1814,1759,1710,1799,1656,1760,1771,1731,1739,1923,1905,1870,1877,1747,1898,1760,1760,1748,1618,1738,1720,1793,1688,1699,1730,1783,1736,1677,1790,1700,1725,1664,1661,1683,1735,1657,1782,1674,1769,1661,1665,1716,1721,1699,1693,1658,1800,1617,1442,1437,1746,1746,1645,1720,1657,1427,1520,1529,1543,1419,1494,1540,1509,1594,1798,1743,1663,1767,1653,1746,1762,1736,1610,1665,1655,1682,1616,1584,1621,1710,1622,1695,1637,1621,1704,1623,1687,1629,1743,1654,1654,1632,1672,1626,1644,1649,1654,1696,1634,1654,1653,1718,1644,1607,1593,1758,1615,1664,1672,1781,1671,1633,1613,1637,1705,1606,1662,1671,1812,1625,1617,1617,1682,1649,1827,1841,1666,1629,1746,1835,1649,1719,1784,1849,1742,1820,1912,1871,1903,2022,1980,1943,1939,1958,1814,1846,1919,1984,2018,2003,2003,1865,1919,1854,1823,1865,1994,2016,2017,2011,1978,1987,1901,1901,1884,1919,1910,1930,1950,2023,1703,1882,1900,1926,1844,1816,1583,1607,1877,1814,1812,1616,1621,1601,1655,1618,1777,1383,1371,1351,1339,1435,1539,1452,1407,1450,1473,1500,1485,1405,1403,1540,1515,1339,1730,1694,1760,1729,1672,1716,1690,1753,1656,1693,1707,1780,1708,1658,1645,1705,1635,1720,1665,1692,1666,1742,1682,1667,1617,1736,1665,1635,1653,1635,1966,1865,1910,1943,1893,1916,1888,1894,1944,1782,1770,1815,1838,2025,1993,2031,2042,2055,2033,2033,2017,2022,2046,2034,2054,2053,2046,2054,2041,2043,1954,1852,1868,1909,1920,1885,1882,1871,1835,1464,1477,1397,1602,1709,1609,1549,1588,1621,1524,1607,1556,1457,1501,1598,1607,1474,1643,1499,1428,1574,1436,1708,1762,1883,1711,1660,1641,1747,1948,1866,1856,1795,1772,1706,1821,1830,1874,1486,2019,1960,2023,1935,1912,1896,1682,1749,1657,1782,1700,1776,1789,1760,1674,1768,1692,1709,1694,1701,1291,1513,1489,1506,1567,1515,1504,1526,1497,1584,1509,1506,1521,1548,1539,1526,1512,1499,1306,1344,1285,1280,1785,1917,1911,1898,1893,1980,1927,1944,1972,1352,1293,1283,1301,1339,1292,1315,1422,1664,1469,1466,1574,1666,1505,1535,1617,1607,1795,1649,1687,1690,1541,1653,1673,1675,1821,1244,1289,1296,1236,1280,1295,1181,1207,1483,1128,984,1175,1146,1267,977,1228,1491,1224,1298,1253,1176,1298,1227,1401,1294,1642,1358,1312,1310,1362,1293,1282,1309,1595,1843,1458,1678,1748,1651,1540,1430,1621,1961,1728,1015,1270,1138,1326,1193,1374,1959,1972,1683,1665,1822,1808,1780,1512,1934,1531,418,661,523,520,574,459,507,448,852,869,1321,1451,1319,1203,1159,621,854,378,1322,1397,1527,1499,1389,1323,440,1506,956,1370,1290,1420,1379,1231,1157,1697,1813,1739,1756,1791,760,70,782,898,760,588,605,437,818,543,632,1148,911,772,1409,1402,1387,1413,1429,1460,1657,1675,1632,1634,1535,1527,1818,1678,1216,1063,1169,1191,1310,1330,1245,1252,1422,1473,1587,1601,1665,1673,1379,1340,1429,1189,25,30,25,146,897,988,1020,1191,1622,1633,1600,1585,1385,1484,1577,1574,1536,1579,1897,1912,1916,1921,1885,1904,848,985,1478,1459,877,929,1249,1293,1431,1450,1495,1488,1561,1553,1740,1772,1510,1586,1486,1565,1575,1550,1531,1603,2053,2057,2036,2021,1873,1875,2043,2011,1741,1825,1893,1900,2006,2021,2027,2021,2014,2017,1996,1995,2052,2049,1729,1744,2001,1988,1991,2003,1680,1655,1234,1212,1193,1250,1986,1997,1684,1732,1886,1893,1764,1786,1757,1773,1957,1943,1980,1962,1960,1979,2016,1951,1520,1565,1530,1524,1548,1547,1569,1536,1361,1410,1260,1345,1316,1277,1353,1343,2006,2011,1992,1958,2002,1971,1937,1899,2002,1926,1696,1676,1659,1690,1646,1570,266,273,1151,1380,1343,1106,1015,1035,1008,1059,1600,1729,1571,1672,1721,1715,1507,1533,1580,1590,1542,1555,1503,1494,1370,1369,1068,1103,1313,1327,1228,1278,1467,1414,1594,1609,1453,1478,1385,1414,894,966,1589,1574,932,1015,1301,1344,1481,1412,1471,1538,1158,1190,1443,1481,1661,1658,1841,1848,1774,1820,1585,1590,1605,1623,1582,1588,1518,1527,1493,1483,1235,1345,1535,1598,1360,1350,1381,1388,1397,1433,547,606,395,474,1463,1538,1619,1600,1389,1450,1522,1531,1405,1364,1148,1141,1255,1340,1505,1458,1054,919,264,403,1768,1854,1791,1813,1547,1504,948,1023,1567,1569,1569,1580,1585,1581,1558,1611,1834,1814,1802,1787,1851,1845,1829,1835,1318,1394,1405,1395,1443,1424,1657,1692,1568,1555,1511,1473,1553,1528,1468,1555,1880,1918,1535,1491,616,652,855,975,1235,1525,1654,1711,1481,1539,1407,1358,1164,1035,678,743,817,848,615,622,1495,1388,514,536,513,609,1776,1825,1107,1129,1040,1079,1383,1375,1121,1031,907,984,1449,1456,1449,1433,1418,1465,1693,1730,1638,1682,1871,1894,1548,1540,976,994,1147,1147,909,943,878,899,1012,1015,1214,1203,507,515,643,650,524,532,634,641,512,520,637,644,524,532,606,613,484,488,567,697,1884,1831,1043,1075,1032,1071,1030,1066,1086,1139,1801,1701,1672,1715,1638,1684,1731,1634,1143,1232,1662,1653,1687,1737,1887,1796,247,286,285,346,187,206,302,311,88,265,43,134,142,226,240,208,217,340,1444,1477,1568,1648,1084,1093,1061,1097,1174,1223,1483,1505,1459,1484,1858,1855,1686,1699,1452,1527,1618,1654,1377,1418,1284,1284,1494,1633,1654,1147,1629,1469,1469,1495,1474,1185,1446,1453,1408,1525,1522,1503,1430,991,1311,1367,1365,1143,1329,1160,1149,1059,1532,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1944,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,1991,1909,2048,2048,1975,2048,2048,1975,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,1979,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,1877,2048,2048,2048,2048,1899,2048,1977,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2056,2048,2034,1977,1869,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2033,1881,1967,2048,2048,2048,2055,2038,1817,2048,2048,2048,2048,2049,2030,1833,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2025,1849,1934,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,2056,2047,1903,1822,2048,1974,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1852,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2031,1906,2048,2048,2048,2048,1954,2048,2048,2048,2051,1962,2048,2048,2048,2048,2048,2013,2028,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,1975,2048,1976,2048,1976,2048,1978,2048,1975,2048,1659,1995,2051,2052,1973,1870,1985,2048,2048,2000,1897,1928,2056,2048,2025,1917,1904,2036,2056,2033,1943,1900,2009,2048,2056,1982,1933,1982,2048,2055,2008,1859,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,1983,2048,2048,2048,2048,1978,2048,1979,2048,1973,1976,2048,1970,2048,2048,2048,2048,1972,2048,2048,2048,2048,1928,1958,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2030,2028,1978,2048,1977,2048,1971,1980,2048,2048,1980,2048,2048,1981,2048,1979,2048,1977,2048,1978,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,1977,2048,2048,2048,1973,2048,2048,2048,1985,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2042,1991,1883,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2056,2048,2048,2056,2054,2046,2034,2034,2001,1946,1686,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1890,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,1888,2048,2048,1976,2048,2048,2048,2048,2056,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,1976,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1970,1972,2048,1977,2048,2048,1976,2048,1891,2048,1995,1964,2048,1979,2048,1978,2048,1978,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,1980,2048,1978,2048,1973,2048,2048,2048,2048,1979,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,1966,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2048,2050,2056,2054,2018,1872,1840,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,2048,2048,2038,2035,1749,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2050,2006,1897,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2044,1809,2048,2048,2048,2048,2048,2048,1978,1979,1981,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1931,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1955,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2021,1858,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1919,1921,2048,1970,2048,1973,1979,2048,1975,2048,2048,2048,2048,2056,2026,1943,2048,2048,2048,2048,2048,2045,1961,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,1981,2048,1885,2048,1973,1978,1888,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,1977,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,1992,2048,1893,2048,2048,2056,1952,2048,2048,2048,1953,1979,1977,1983,2048,1717,2048,1973,1980,2048,2048,2048,2048,2048,2054,2056,2048,2048,1981,1937,1792,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,1981,1915,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,1979,2048,2048,2048,2048,1982,2048,2048,2057,2056,2056,2038,1924,2048,2048,2048,2048,2048,1870,1993,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1869,2047,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1666,1050,1316,1499,1295,1756,1282,970,1286,1413,1410,1408,1492,1854,1853,1896,1978,1895,1797,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,1977,2048,1975,1990,1311,1356,1782,1284,1140,1646,1332,1297,814,807,797,845,907,1115,2056,1618,25,25,382,2048,2057,732,25,242,1124,1175,1158,1139,1506,1093,777,869,818,1811,1972,2048,1943,2048,2048,2048,2048,2048,1999,2048,2048,2001,2048,1932,2048,2048,2048,2048,2048,2048,2048,1884,1939,1939,1947,1999,1957,1947,1945,1941,2048,2048,2048,2048,2038,1935,1870,2048,2048,2048,2048,1999,1870,2048,2048,2048,2002,2048,2003,2048,2048,2048,2048,2048,2048,2048,1964,2048,2048,2048,2048,2048,2048,2007,2048,2048,1944,1875,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,1975,1877,2048,2048,1888,1896,2048,2001,1909,1921,1944,1802,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,1945,2048,1951,2048,1946,1910,1985,1942,1959,1944,1832,2048,2048,2048,1999,2048,2048,2048,1999,2048,1926,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2004,1943,2053,1882,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,1937,2048,2048,2006,2001,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1893,1944,1952,1942,2048,1945,2048,1873,1877,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,1819,2008,1956,2048,1937,1945,1829,1999,2048,2048,2048,2048,2005,2048,1929,1875,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,1938,2048,2048,1944,1875,1816,1808,2048,2048,2048,2048,2000,2048,2048,1945,2048,2048,1979,2051,2048,2004,2009,1947,1978,2048,2048,1781,1996,2048,1865,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,1958,2048,2048,2048,2048,1878,2048,2048,1971,2048,1903,2048,2007,1940,1962,2048,2048,1939,2048,2048,2048,2048,2048,1890,1997,2048,1945,2048,2048,2048,2048,2002,2048,2048,2048,2048,2003,2048,2048,2048,1943,2048,1868,2048,2048,2048,2009,2048,2048,2048,2005,2048,2048,1933,2048,2048,2001,1929,2004,2053,1942,2048,2048,1939,2048,2048,1980,1872,1945,1849,2048,2048,2048,2048,2048,1964,2048,1881,1950,2007,1899,2048,2048,2048,2048,2048,2048,2003,2048,1950,2007,2005,1892,1826,2048,2048,2048,2048,2048,2048,1905,1943,2048,2048,2048,2002,2048,2048,2048,2001,1993,2048,1955,2048,2048,2002,2048,2048,2048,2002,2048,2048,2009,2048,2048,2048,2048,2048,2005,2048,2048,2005,2048,2048,2048,1876,2048,2048,2048,2048,2048,1945,2048,2048,2048,1943,2048,1962,2048,1948,1875,1940,2048,2048,1876,1939,2048,2048,2005,2048,2048,2009,2048,1940,2048,2048,2048,2056,2048,2048,2048,2048,1944,2056,2048,2048,2048,2048,1949,2048,2038,2043,2048,2048,2048,2048,1875,2048,2048,1823,1837,2048,2048,2048,2048,2048,1812,1371,1923,2048,2048,2048,1999,2048,2048,2005,2048,2048,1917,2048,1908,1853,2048,2048,1873,1876,2048,2048,2048,1961,1873,2048,2048,2048,2048,2048,2003,2048,2048,1920,2048,2048,1934,1923,2048,1931,2048,2048,2048,1892,2005,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2003,2048,2048,2048,2005,2048,2048,1600,1928,2048,2048,2048,2007,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1933,2048,2048,2048,2048,2003,2048,2048,2048,2048,2001,2048,2048,1975,2048,2048,2003,2048,2048,2048,2048,1689,2014,1936,2005,2048,1934,1925,1966,2048,2048,2048,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1869,2048,1878,2048,2048,2048,1878,2048,2048,2048,2048,2048,2048,2048,1876,1883,1876,2048,1874,1769,1813,1952,1995,2040,2048,2004,2048,2048,1957,1966,2048,1873,2048,2007,2048,1941,1946,1952,1972,2048,1946,2048,2048,2048,1973,2048,2048,2048,1941,2048,2048,1958,2048,2048,2005,1941,1953,2048,2048,2048,2004,2048,2048,2048,1937,2048,2048,2048,1999,2048,1985,2048,2008,1939,2048,2048,2048,1949,2048,2004,2048,1939,2011,1958,1936,2048,2048,1942,1935,1865,2048,2014,1938,2048,1872,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,1918,2048,2048,2048,1952,2048,2048,2001,2048,2048,2048,1952,2008,2048,1941,1936,1929,2011,1941,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2001,1998,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,1949,2048,2048,2048,1946,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2018,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1957,1958,1946,2048,2048,2048,1876,1944,2048,2048,1999,2048,2048,2008,2048,2048,2048,2048,2048,2048,1939,2048,2048,2048,2048,2048,1939,2048,2048,2048,2007,2048,1959,2048,2048,1991,2048,2002,2048,2048,2048,1999,2048,2048,2000,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2001,1939,2003,2048,2005,2048,1944,2048,2048,1818,1839,1941,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,1988,1169,2048,2048,2001,1970,1852,2048,2048,2048,2048,2048,2048,1969,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2001,2048,2048,2048,1893,2048,2048,2048,2048,2048,2048,2048,2048,1944,2048,2048,2048,2048,2057,1943,2048,2048,2048,1939,2048,2048,2048,2048,2048,1873,2048,2048,2048,2048,2048,2048,1848,2048,2048,2048,2048,2048,2048,2048,2048,1867,2048,2048,2048,1868,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1944,1873,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1997,2048,2048,2048,2004,2008,2003,2048,2048,2048,1836,2048,2048,2048,1963,2048,1311,2048,2048,2048,1875,2048,2048,2048,2048,2048,2048,2048,2008,2048,1963,2007,1952,1853,2024,2048,1876,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2004,2048,1875,2048,2005,2048,2048,1869,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2009,2048,1876,1934,2020,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2006,2048,2056,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2014,2048,2048,2048,2048,2048,2005,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2013,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1880,1873,2048,1872,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,1945,2048,2048,2048,2048,1949,2048,2048,2048,1941,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,1997,1965,2048,2048,2048,2048,2005,2048,1867,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,1966,2048,2048,2048,1949,2048,2053,1952,2048,2048,2048,2048,2048,2048,2056,2048,2048,2000,2048,2048,1647,2048,2048,1968,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2056,2056,1479,2048,2048,1929,1939,2048,2048,2048,2048,1983,2048,1999,2048,1925,2007,2048,2048,2048,1918,2048,2048,1940,1992,2048,2048,2057,1994,2048,2048,1995,2048,1891,2012,1687,2048,1992,2048,2056,1987,2048,2048,2048,2048,2048,1987,2048,2048,1978,2048,2048,2048,2048,2048,2056,1856,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1991,2048,1993,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2000,2048,2048,1996,2048,1999,2048,2048,2057,2001,1939,2048,2047,1896,2048,2033,1654,2048,2048,2048,2048,2056,1996,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2053,2052,1993,2048,2048,2048,2005,2048,2048,1995,2048,2002,2048,1994,2048,2048,1961,2048,2048,2048,2048,2048,2048,1996,2048,1914,2048,1987,2048,2048,1993,2048,2048,1991,2048,1993,2048,2000,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,1923,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1960,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,1968,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2056,2048,1939,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,1816,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,1999,2048,1999,2048,2048,1993,2048,2048,2055,2048,2041,1991,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1031,1144,1111,1163,1541,1385,695,693,1981,2048,1974,34,34,34,34,34,34,375,379,407,541,529,711,621,563,574,552,638,612,594,671,664,613,644,618,784,833,685,828,666,915,1089,958,942,933,899,978,939,1009,995,944,997,834,931,1221,1240,1182,1309,1342,1302,1189,1145,1176,1152,1155,1138,1163,1151,1162,978,1064,1477,1429,1005,674,834,674,1252,1294,1270,1319,467,207,153,47,181,183,47,127,43,41,47,110,47,109,240,50,50,49,110,44,42,41,114,48,48,48,128,48,48,101,133,49,49,47,47,105,47,111,47,47,47,114,39,50,50,50,110,42,53,53,50,49,109,43,44,46,46,111,46,46,99,46,105,47,47,47,45,108,45,45,45,95,45,45,41,39,50,107,50,50,42,111,53,50,49,108,56,421,1187,793,48,207,1165,925,48,98,1127,1070,49,725,789,752,892,885,679,1193,1254,839,895,914,634],"successes":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,1,1,0,1,1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,0,1,1,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,0,1,1,1,0,0,1,1,0,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,1,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,1,1,1,0,0,1,1,1,0,0,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,1,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,1,0,0,1,0,0,1,1,0,1,1,1,1,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,1,1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,0,1,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,1,1,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,0,1,0,1,0,1,1,1,1,0,0,1,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,1,0,0,0,0,1,0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,1,0,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]};compressedData['data']=byteArray;assert(_typeof(Module['LZ4'])==='object','LZ4 not present - was your app build with -sLZ4?');Module['LZ4'].loadPackage({'metadata':metadata,'compressedData':compressedData},false);Module['removeRunDependency']('datafile_C:/Dev/edge-classic-web-player/src/edge-classic.data');};Module['addRunDependency']('datafile_C:/Dev/edge-classic-web-player/src/edge-classic.data');if(!Module.preloadResults)Module.preloadResults={};function preloadFallback(error){console.error(error);console.error('falling back to default preload behavior');fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,processPackageData,handleError);};openDatabase(function(db){checkCachedPackage(db,PACKAGE_PATH+PACKAGE_NAME,function(useCached,metadata){Module.preloadResults[PACKAGE_NAME]={fromCache:useCached};if(useCached){fetchCachedPackage(db,PACKAGE_PATH+PACKAGE_NAME,metadata,processPackageData,preloadFallback);}else{fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(packageData){cacheRemotePackage(db,PACKAGE_PATH+PACKAGE_NAME,packageData,{uuid:PACKAGE_UUID},processPackageData,function(error){console.error(error);processPackageData(packageData);});},preloadFallback);}},preloadFallback);},preloadFallback);if(Module['setStatus'])Module['setStatus']('Downloading...');}if(Module['calledRun']){runWithFS();}else{if(!Module['preRun'])Module['preRun']=[];Module["preRun"].push(runWithFS);// FS is not initialized yet, wait for it
}};loadPackage({"files":[{"filename":"/.gitkeep","start":0,"end":0},{"filename":"/edge-defs.wad","start":0,"end":1672950},{"filename":"/freedoom2.wad","start":1672950,"end":30217082},{"filename":"/soundfont/16-Bit Game Station.sf2","start":30217082,"end":33900620},{"filename":"/soundfont/ProtoSquare!.sf2","start":33900620,"end":34264858},{"filename":"/soundfont/adplug.op2","start":34264858,"end":34276766},{"filename":"/soundfont/bonkers_for_bits.sf2","start":34276766,"end":34304770},{"filename":"/soundfont/bsdmidi.op2","start":34304770,"end":34316678},{"filename":"/soundfont/default.sf2","start":34316678,"end":38463118},{"filename":"/soundfont/dmxopl.op2","start":38463118,"end":38475026},{"filename":"/soundfont/dmxopl3.wopl","start":38475026,"end":38687095},{"filename":"/soundfont/freedoom.op2","start":38687095,"end":38699003},{"filename":"/soundfont/wadsmoosh.op2","start":38699003,"end":38710911}],"remote_package_size":28881627,"package_uuid":"sha256-b8a25d2048d8d50748affedfed3301f090f3318e46c55420431d88862e50f6ab"});})();// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides=_extends({},Module);var arguments_=[];var thisProgram='./this.program';var quit_=function quit_(status,toThrow){throw toThrow;};// Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).
var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module['ENVIRONMENT']){throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');}// `/` should be present at the end if `scriptDirectory` is not empty
var scriptDirectory='';function locateFile(path){if(Module['locateFile']){return Module['locateFile'](path,scriptDirectory);}return scriptDirectory+path;}// Hooks that are implemented differently in different runtime environments.
var read_,readAsync,readBinary,setWindowTitle;// Normally we don't log exceptions but instead let them bubble out the top
// level where the embedding environment (e.g. the browser) can handle
// them.
// However under v8 and node we sometimes exit the process direcly in which case
// its up to use us to log the exception before exiting.
// If we fix https://github.com/emscripten-core/emscripten/issues/15080
// this may no longer be needed under node.
function logExceptionOnExit(e){if(e instanceof ExitStatus)return;var toLog=e;if(e&&_typeof(e)=='object'&&e.stack){toLog=[e,e.stack];}err('exiting due to exception: '+toLog);}if(ENVIRONMENT_IS_SHELL){if((typeof process==="undefined"?"undefined":_typeof(process))=='object'&&"function"==='function'||(typeof window==="undefined"?"undefined":_typeof(window))=='object'||typeof importScripts=='function')throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');if(typeof read!='undefined'){read_=function shell_read(f){return read(f);};}readBinary=function readBinary(f){var data;if(typeof readbuffer=='function'){return new Uint8Array(readbuffer(f));}data=read(f,'binary');assert(_typeof(data)=='object');return data;};readAsync=function readAsync(f,onload,onerror){setTimeout(function(){return onload(readBinary(f));},0);};if(typeof clearTimeout=='undefined'){globalThis.clearTimeout=function(id){};}if(typeof scriptArgs!='undefined'){arguments_=scriptArgs;}else if(typeof arguments!='undefined'){arguments_=arguments;}if(typeof quit=='function'){quit_=function quit_(status,toThrow){logExceptionOnExit(toThrow);quit(status);};}if(typeof print!='undefined'){// Prefer to use print/printErr where they exist, as they usually work better.
if(typeof console=='undefined')console=/** @type{!Console} */{};console.log=/** @type{!function(this:Console, ...*): undefined} */print;console.warn=console.error=/** @type{!function(this:Console, ...*): undefined} */typeof printErr!='undefined'?printErr:print;}}else// Note that this includes Node.js workers when relevant (pthreads is enabled).
// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and
// ENVIRONMENT_IS_NODE.
if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){// Check worker, not web, since window could be polyfilled
scriptDirectory=self.location.href;}else if(typeof document!='undefined'&&document.currentScript){// web
scriptDirectory=document.currentScript.src;}// When MODULARIZE, this JS may be executed later, after document.currentScript
// is gone, so we saved it, and we use it here instead of any other info.
if(_scriptDir){scriptDirectory=_scriptDir;}// blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.
// otherwise, slice off the final part of the url to find the script directory.
// if scriptDirectory does not contain a slash, lastIndexOf will return -1,
// and scriptDirectory will correctly be replaced with an empty string.
// If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),
// they are removed because they could contain a slash.
if(scriptDirectory.indexOf('blob:')!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf('/')+1);}else{scriptDirectory='';}if(!((typeof window==="undefined"?"undefined":_typeof(window))=='object'||typeof importScripts=='function'))throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');// Differentiate the Web Worker from the Node Worker case, as reading must
// be done differently.
{// include: web_or_worker_shell_read.js
read_=function read_(url){var xhr=new XMLHttpRequest();xhr.open('GET',url,false);xhr.send(null);return xhr.responseText;};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest();xhr.open('GET',url,false);xhr.responseType='arraybuffer';xhr.send(null);return new Uint8Array(/** @type{!ArrayBuffer} */xhr.response);};}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){// file URLs can return 0
onload(xhr.response);return;}onerror();};xhr.onerror=onerror;xhr.send(null);};// end include: web_or_worker_shell_read.js
}setWindowTitle=function setWindowTitle(title){return document.title=title;};}else{throw new Error('environment detection error');}var out=Module['print']||console.log.bind(console);var err=Module['printErr']||console.warn.bind(console);// Merge back in the overrides
_extends(Module,moduleOverrides);// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides=null;checkIncomingModuleAPI();// Emit code to handle expected values on the Module object. This applies Module.x
// to the proper local x. This has two benefits: first, we only emit it if it is
// expected to arrive, and second, by using a local everywhere else that can be
// minified.
if(Module['arguments'])arguments_=Module['arguments'];legacyModuleProp('arguments','arguments_');if(Module['thisProgram'])thisProgram=Module['thisProgram'];legacyModuleProp('thisProgram','thisProgram');if(Module['quit'])quit_=Module['quit'];legacyModuleProp('quit','quit_');// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message
// Assertions on removed incoming Module JS APIs.
assert(typeof Module['memoryInitializerPrefixURL']=='undefined','Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');assert(typeof Module['pthreadMainPrefixURL']=='undefined','Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');assert(typeof Module['cdInitializerPrefixURL']=='undefined','Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');assert(typeof Module['filePackagePrefixURL']=='undefined','Module.filePackagePrefixURL option was removed, use Module.locateFile instead');assert(typeof Module['read']=='undefined','Module.read option was removed (modify read_ in JS)');assert(typeof Module['readAsync']=='undefined','Module.readAsync option was removed (modify readAsync in JS)');assert(typeof Module['readBinary']=='undefined','Module.readBinary option was removed (modify readBinary in JS)');assert(typeof Module['setWindowTitle']=='undefined','Module.setWindowTitle option was removed (modify setWindowTitle in JS)');assert(typeof Module['TOTAL_MEMORY']=='undefined','Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');legacyModuleProp('read','read_');legacyModuleProp('readAsync','readAsync');legacyModuleProp('readBinary','readBinary');legacyModuleProp('setWindowTitle','setWindowTitle');var PROXYFS='PROXYFS is no longer included by default; build with -lproxyfs.js';var WORKERFS='WORKERFS is no longer included by default; build with -lworkerfs.js';var NODEFS='NODEFS is no longer included by default; build with -lnodefs.js';assert(!ENVIRONMENT_IS_WORKER,"worker environment detected but not enabled at build time.  Add 'worker' to `-sENVIRONMENT` to enable.");assert(!ENVIRONMENT_IS_NODE,"node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.");assert(!ENVIRONMENT_IS_SHELL,"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.");// end include: shell.js
// include: preamble.js
// === Preamble library stuff ===
// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html
var wasmBinary;if(Module['wasmBinary'])wasmBinary=Module['wasmBinary'];legacyModuleProp('wasmBinary','wasmBinary');var noExitRuntime=Module['noExitRuntime']||true;legacyModuleProp('noExitRuntime','noExitRuntime');if((typeof WebAssembly==="undefined"?"undefined":_typeof(WebAssembly))!='object'){abort('no native wasm support detected');}// Wasm globals
var wasmMemory;//========================================
// Runtime essentials
//========================================
// whether we are quitting the application. no code should run after this.
// set in exit() and abort()
var ABORT=false;// set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.
var EXITSTATUS;/** @type {function(*, string=)} */function assert(condition,text){if(!condition){abort('Assertion failed'+(text?': '+text:''));}}// We used to include malloc/free by default in the past. Show a helpful error in
// builds with assertions.
// include: runtime_strings.js
// runtime_strings.js: String related runtime functions that are part of both
// MINIMAL_RUNTIME and regular runtime.
var UTF8Decoder=typeof TextDecoder!='undefined'?new TextDecoder('utf8'):undefined;/**
 * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given
 * array that contains uint8 values, returns a copy of that string as a
 * Javascript String object.
 * heapOrArray is either a regular array, or a JavaScript typed array view.
 * @param {number} idx
 * @param {number=} maxBytesToRead
 * @return {string}
 */function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;// TextDecoder needs to know the byte length in advance, it doesn't stop on
// null terminator by itself.  Also, use the length info to avoid running tiny
// strings through TextDecoder, since .subarray() allocates garbage.
// (As a tiny code save trick, compare endPtr against endIdx using a negation,
// so that undefined means Infinity)
while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr));}var str='';// If building with TextDecoder, we have already computed the string length
// above, so test loop end condition against that
while(idx<endPtr){// For UTF8 byte structure, see:
// http://en.wikipedia.org/wiki/UTF-8#Description
// https://www.ietf.org/rfc/rfc2279.txt
// https://tools.ietf.org/html/rfc3629
var u0=heapOrArray[idx++];if(!(u0&0x80)){str+=String.fromCharCode(u0);continue;}var u1=heapOrArray[idx++]&63;if((u0&0xE0)==0xC0){str+=String.fromCharCode((u0&31)<<6|u1);continue;}var u2=heapOrArray[idx++]&63;if((u0&0xF0)==0xE0){u0=(u0&15)<<12|u1<<6|u2;}else{if((u0&0xF8)!=0xF0)warnOnce('Invalid UTF-8 leading byte '+ptrToString(u0)+' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63;}if(u0<0x10000){str+=String.fromCharCode(u0);}else{var ch=u0-0x10000;str+=String.fromCharCode(0xD800|ch>>10,0xDC00|ch&0x3FF);}}return str;}/**
 * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the
 * emscripten HEAP, returns a copy of that string as a Javascript String object.
 *
 * @param {number} ptr
 * @param {number=} maxBytesToRead - An optional length that specifies the
 *   maximum number of bytes to read. You can omit this parameter to scan the
 *   string until the first \0 byte. If maxBytesToRead is passed, and the string
 *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the
 *   string will cut short at that byte index (i.e. maxBytesToRead will not
 *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing
 *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw
 *   JS JIT optimizations off, so it is worth to consider consistently using one
 * @return {string}
 */function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):'';}/**
 * Copies the given Javascript String object 'str' to the given byte array at
 * address 'outIdx', encoded in UTF8 form and null-terminated. The copy will
 * require at most str.length*4+1 bytes of space in the HEAP.  Use the function
 * lengthBytesUTF8 to compute the exact number of bytes (excluding null
 * terminator) that this function will write.
 *
 * @param {string} str - The Javascript string to copy.
 * @param {ArrayBufferView|Array<number>} heap - The array to copy to. Each
 *                                               index in this array is assumed
 *                                               to be one 8-byte element.
 * @param {number} outIdx - The starting offset in the array to begin the copying.
 * @param {number} maxBytesToWrite - The maximum number of bytes this function
 *                                   can write to the array.  This count should
 *                                   include the null terminator, i.e. if
 *                                   maxBytesToWrite=1, only the null terminator
 *                                   will be written and nothing else.
 *                                   maxBytesToWrite=0 does not write any bytes
 *                                   to the output, not even the null
 *                                   terminator.
 * @return {number} The number of bytes written, EXCLUDING the null terminator.
 */function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){// Parameter maxBytesToWrite is not optional. Negative values, 0, null,
// undefined and false each don't write out any bytes.
if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;// -1 for string null terminator.
for(var i=0;i<str.length;++i){// Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code
// unit, not a Unicode code point of the character! So decode
// UTF16->UTF32->UTF8.
// See http://unicode.org/faq/utf_bom.html#utf16-3
// For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description
// and https://www.ietf.org/rfc/rfc2279.txt
// and https://tools.ietf.org/html/rfc3629
var u=str.charCodeAt(i);// possibly a lead surrogate
if(u>=0xD800&&u<=0xDFFF){var u1=str.charCodeAt(++i);u=0x10000+((u&0x3FF)<<10)|u1&0x3FF;}if(u<=0x7F){if(outIdx>=endIdx)break;heap[outIdx++]=u;}else if(u<=0x7FF){if(outIdx+1>=endIdx)break;heap[outIdx++]=0xC0|u>>6;heap[outIdx++]=0x80|u&63;}else if(u<=0xFFFF){if(outIdx+2>=endIdx)break;heap[outIdx++]=0xE0|u>>12;heap[outIdx++]=0x80|u>>6&63;heap[outIdx++]=0x80|u&63;}else{if(outIdx+3>=endIdx)break;if(u>0x10FFFF)warnOnce('Invalid Unicode code point '+ptrToString(u)+' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');heap[outIdx++]=0xF0|u>>18;heap[outIdx++]=0x80|u>>12&63;heap[outIdx++]=0x80|u>>6&63;heap[outIdx++]=0x80|u&63;}}// Null-terminate the pointer to the buffer.
heap[outIdx]=0;return outIdx-startIdx;}/**
 * Copies the given Javascript String object 'str' to the emscripten HEAP at
 * address 'outPtr', null-terminated and encoded in UTF8 form. The copy will
 * require at most str.length*4+1 bytes of space in the HEAP.
 * Use the function lengthBytesUTF8 to compute the exact number of bytes
 * (excluding null terminator) that this function will write.
 *
 * @return {number} The number of bytes written, EXCLUDING the null terminator.
 */function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite=='number','stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);}/**
 * Returns the number of bytes the given Javascript string takes if encoded as a
 * UTF8 byte array, EXCLUDING the null terminator byte.
 *
 * @param {string} str - JavaScript string to operator on
 * @return {number} Length, in bytes, of the UTF8 encoded string.
 */function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){// Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code
// unit, not a Unicode code point of the character! So decode
// UTF16->UTF32->UTF8.
// See http://unicode.org/faq/utf_bom.html#utf16-3
var c=str.charCodeAt(i);// possibly a lead surrogate
if(c<=0x7F){len++;}else if(c<=0x7FF){len+=2;}else if(c>=0xD800&&c<=0xDFFF){len+=4;++i;}else{len+=3;}}return len;}// end include: runtime_strings.js
// Memory management
var HEAP,/** @type {!Int8Array} */HEAP8,/** @type {!Uint8Array} */HEAPU8,/** @type {!Int16Array} */HEAP16,/** @type {!Uint16Array} */HEAPU16,/** @type {!Int32Array} */HEAP32,/** @type {!Uint32Array} */HEAPU32,/** @type {!Float32Array} */HEAPF32,/** @type {!Float64Array} */HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module['HEAP8']=HEAP8=new Int8Array(b);Module['HEAP16']=HEAP16=new Int16Array(b);Module['HEAP32']=HEAP32=new Int32Array(b);Module['HEAPU8']=HEAPU8=new Uint8Array(b);Module['HEAPU16']=HEAPU16=new Uint16Array(b);Module['HEAPU32']=HEAPU32=new Uint32Array(b);Module['HEAPF32']=HEAPF32=new Float32Array(b);Module['HEAPF64']=HEAPF64=new Float64Array(b);}assert(!Module['STACK_SIZE'],'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time');assert(typeof Int32Array!='undefined'&&typeof Float64Array!=='undefined'&&Int32Array.prototype.subarray!=undefined&&Int32Array.prototype.set!=undefined,'JS engine does not provide full typed array support');// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY
assert(!Module['wasmMemory'],'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');assert(!Module['INITIAL_MEMORY'],'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');// include: runtime_init_table.js
// In regular non-RELOCATABLE mode the table is exported
// from the wasm module and this will be assigned once
// the exports are available.
var wasmTable;// end include: runtime_init_table.js
// include: runtime_stack_check.js
// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie(){var max=_emscripten_stack_get_end2();assert((max&3)==0);// If the stack ends at address zero we write our cookies 4 bytes into the
// stack.  This prevents interference with the (separate) address-zero check
// below.
if(max==0){max+=4;}// The stack grow downwards towards _emscripten_stack_get_end.
// We write cookies to the final two words in the stack and detect if they are
// ever overwritten.
HEAPU32[max>>2]=0x2135467;HEAPU32[max+4>>2]=0x89BACDFE;// Also test the global address 0 for integrity.
HEAPU32[0]=0x63736d65;/* 'emsc' */}function checkStackCookie(){if(ABORT)return;var max=_emscripten_stack_get_end2();// See writeStackCookie().
if(max==0){max+=4;}var cookie1=HEAPU32[max>>2];var cookie2=HEAPU32[max+4>>2];if(cookie1!=0x2135467||cookie2!=0x89BACDFE){abort('Stack overflow! Stack cookie has been overwritten at '+ptrToString(max)+', expected hex dwords 0x89BACDFE and 0x2135467, but received '+ptrToString(cookie2)+' '+ptrToString(cookie1));}// Also test the global address 0 for integrity.
if(HEAPU32[0]!==0x63736d65/* 'emsc' */){abort('Runtime error: The application has corrupted its heap memory area (address zero)!');}}// end include: runtime_stack_check.js
// include: runtime_assertions.js
// Endianness check
(function(){var h16=new Int16Array(1);var h8=new Int8Array(h16.buffer);h16[0]=0x6373;if(h8[0]!==0x73||h8[1]!==0x63)throw'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';})();// end include: runtime_assertions.js
var __ATPRERUN__=[];// functions called before the runtime is initialized
var __ATINIT__=[];// functions called during startup
var __ATMAIN__=[];// functions called when main() is to be run
var __ATEXIT__=[];// functions called during shutdown
var __ATPOSTRUN__=[];// functions called after the main() is called
var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime;}function preRun(){if(Module['preRun']){if(typeof Module['preRun']=='function')Module['preRun']=[Module['preRun']];while(Module['preRun'].length){addOnPreRun(Module['preRun'].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function initRuntime(){assert(!runtimeInitialized);runtimeInitialized=true;checkStackCookie();if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__);}function preMain(){checkStackCookie();callRuntimeCallbacks(__ATMAIN__);}function postRun(){checkStackCookie();if(Module['postRun']){if(typeof Module['postRun']=='function')Module['postRun']=[Module['postRun']];while(Module['postRun'].length){addOnPostRun(Module['postRun'].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnInit(cb){__ATINIT__.unshift(cb);}function addOnPreMain(cb){__ATMAIN__.unshift(cb);}function addOnExit(cb){}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}// include: runtime_math.js
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc
assert(Math.imul,'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');assert(Math.fround,'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');assert(Math.clz32,'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');assert(Math.trunc,'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');// end include: runtime_math.js
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;// overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking={};function getUniqueRunDependency(id){var orig=id;while(1){if(!runDependencyTracking[id])return id;id=orig+Math.random();}}function addRunDependency(id){runDependencies++;if(Module['monitorRunDependencies']){Module['monitorRunDependencies'](runDependencies);}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!='undefined'){// Check for missing dependencies every few seconds
runDependencyWatcher=setInterval(function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return;}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err('still waiting on run dependencies:');}err('dependency: '+dep);}if(shown){err('(end of list)');}},10000);}}else{err('warning: run dependency added without ID');}}function removeRunDependency(id){runDependencies--;if(Module['monitorRunDependencies']){Module['monitorRunDependencies'](runDependencies);}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id];}else{err('warning: run dependency removed without ID');}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null;}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback();// can add another dependenciesFulfilled
}}}/** @param {string|number=} what */function abort(what){if(Module['onAbort']){Module['onAbort'](what);}what='Aborted('+what+')';// TODO(sbc): Should we remove printing and leave it up to whoever
// catches the exception?
err(what);ABORT=true;EXITSTATUS=1;// Use a wasm runtime error, because a JS error might be seen as a foreign
// exception, which means we'd run destructors on it. We need the error to
// simply make the program stop.
// FIXME This approach does not work in Wasm EH because it currently does not assume
// all RuntimeErrors are from traps; it decides whether a RuntimeError is from
// a trap or not based on a hidden field within the object. So at the moment
// we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that
// allows this in the wasm spec.
// Suppress closure compiler warning here. Closure compiler's builtin extern
// defintion for WebAssembly.RuntimeError claims it takes no arguments even
// though it can.
// TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.
/** @suppress {checkTypes} */var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);// Throw the error whether or not MODULARIZE is set because abort is used
// in code paths apart from instantiation where an exception is expected
// to be thrown when abort is called.
throw e;}// include: memoryprofiler.js
// end include: memoryprofiler.js
// include: URIUtils.js
// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix='data:application/octet-stream;base64,';// Indicates whether filename is a base64 data URI.
function isDataURI(filename){// Prefix of data URIs emitted by SINGLE_FILE and related options.
return filename.startsWith(dataURIPrefix);}// Indicates whether filename is delivered via file protocol (as opposed to http/https)
function isFileURI(filename){return filename.startsWith('file://');}// end include: URIUtils.js
/** @param {boolean=} fixedasm */function createExportWrapper(name,fixedasm){return function(){var displayName=name;var asm=fixedasm;if(!fixedasm){asm=Module['asm'];}assert(runtimeInitialized,'native function `'+displayName+'` called before runtime initialization');if(!asm[name]){assert(asm[name],'exported native function `'+displayName+'` not found');}return asm[name].apply(null,arguments);};}var wasmBinaryFile;wasmBinaryFile='edge-classic.wasm';if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile);}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary);}if(readBinary){return readBinary(file);}throw"both async and sync fetching of the wasm failed";}catch(err){abort(err);}}function getBinaryPromise(){// If we don't have the binary yet, try to to load it asynchronously.
// Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.
// See https://github.com/github/fetch/pull/92#issuecomment-140665932
// Cordova or Electron apps are typically loaded from a file:// url.
// So use fetch if it is available and the url is not a file, otherwise fall back to XHR.
if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=='function'){return fetch(wasmBinaryFile,{credentials:'same-origin'}).then(function(response){if(!response['ok']){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'";}return response['arrayBuffer']();}).catch(function(){return getBinary(wasmBinaryFile);});}}// Otherwise, getBinary should be able to get it synchronously
return Promise.resolve().then(function(){return getBinary(wasmBinaryFile);});}// Create the wasm instance.
// Receives the wasm imports, returns the exports.
function createWasm(){// prepare imports
var info={'env':wasmImports,'wasi_snapshot_preview1':wasmImports};// Load the wasm module and create an instance of using native support in the JS engine.
// handle a generated wasm instance, receiving its exports and
// performing other necessary setup
/** @param {WebAssembly.Module=} module*/function receiveInstance(instance,module){var exports=instance.exports;Module['asm']=exports;wasmMemory=Module['asm']['memory'];assert(wasmMemory,"memory not found in wasm exports");// This assertion doesn't hold when emscripten is run in --post-link
// mode.
// TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.
//assert(wasmMemory.buffer.byteLength === 268435456);
updateMemoryViews();wasmTable=Module['asm']['__indirect_function_table'];assert(wasmTable,"table not found in wasm exports");addOnInit(Module['asm']['__wasm_call_ctors']);removeRunDependency('wasm-instantiate');}// wait for the pthread pool (if any)
addRunDependency('wasm-instantiate');// Prefer streaming instantiation if available.
// Async compilation can be confusing when an error on the page overwrites Module
// (for example, if the order of elements is wrong, and the one defining Module is
// later), so we save Module and check it later.
var trueModule=Module;function receiveInstantiationResult(result){// 'result' is a ResultObject object which has both the module and instance.
// receiveInstance() will swap in the exports (to Module.asm) so they can be called
assert(Module===trueModule,'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');trueModule=null;// TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.
// When the regression is fixed, can restore the above USE_PTHREADS-enabled path.
receiveInstance(result['instance']);}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info);}).then(function(instance){return instance;}).then(receiver,function(reason){err('failed to asynchronously prepare wasm: '+reason);// Warn on some common problems.
if(isFileURI(wasmBinaryFile)){err('warning: Loading from a file URI ('+wasmBinaryFile+') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');}abort(reason);});}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming=='function'&&!isDataURI(wasmBinaryFile)&&typeof fetch=='function'){return fetch(wasmBinaryFile,{credentials:'same-origin'}).then(function(response){// Suppress closure warning here since the upstream definition for
// instantiateStreaming only allows Promise<Repsponse> rather than
// an actual Response.
// TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.
/** @suppress {checkTypes} */var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){// We expect the most common failure cause to be a bad MIME type for the binary,
// in which case falling back to ArrayBuffer instantiation should work.
err('wasm streaming compile failed: '+reason);err('falling back to ArrayBuffer instantiation');return instantiateArrayBuffer(receiveInstantiationResult);});});}else{return instantiateArrayBuffer(receiveInstantiationResult);}}// User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback
// to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel
// to any other async startup actions they are performing.
// Also pthreads and wasm workers initialize the wasm instance through this path.
if(Module['instantiateWasm']){try{var exports=Module['instantiateWasm'](info,receiveInstance);return exports;}catch(e){err('Module.instantiateWasm callback failed with error: '+e);// If instantiation fails, reject the module ready promise.
readyPromiseReject(e);}}// If instantiation fails, reject the module ready promise.
instantiateAsync().catch(readyPromiseReject);return{};// no exports yet; we'll fill them in later
}// Globals used by JS i64 conversions (see makeSetValue)
var tempDouble;var tempI64;// include: runtime_debug.js
function legacyModuleProp(prop,newName){if(!Object.getOwnPropertyDescriptor(Module,prop)){Object.defineProperty(Module,prop,{configurable:true,get:function get(){abort('Module.'+prop+' has been replaced with plain '+newName+' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');}});}}function ignoredModuleProp(prop){if(Object.getOwnPropertyDescriptor(Module,prop)){abort('`Module.'+prop+'` was supplied but `'+prop+'` not included in INCOMING_MODULE_JS_API');}}// forcing the filesystem exports a few things by default
function isExportedByForceFilesystem(name){return name==='FS_createPath'||name==='FS_createDataFile'||name==='FS_createPreloadedFile'||name==='FS_unlink'||name==='addRunDependency'||// The old FS has some functionality that WasmFS lacks.
name==='FS_createLazyFile'||name==='FS_createDevice'||name==='removeRunDependency';}function missingGlobal(sym,msg){if(typeof globalThis!=='undefined'){Object.defineProperty(globalThis,sym,{configurable:true,get:function get(){warnOnce('`'+sym+'` is not longer defined by emscripten. '+msg);return undefined;}});}}missingGlobal('buffer','Please use HEAP8.buffer or wasmMemory.buffer');function missingLibrarySymbol(sym){if(typeof globalThis!=='undefined'&&!Object.getOwnPropertyDescriptor(globalThis,sym)){Object.defineProperty(globalThis,sym,{configurable:true,get:function get(){// Can't `abort()` here because it would break code that does runtime
// checks.  e.g. `if (typeof SDL === 'undefined')`.
var msg='`'+sym+'` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';// DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in
// library.js, which means $name for a JS name with no prefix, or name
// for a JS name like _name.
var librarySymbol=sym;if(!librarySymbol.startsWith('_')){librarySymbol='$'+sym;}msg+=" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE="+librarySymbol+")";if(isExportedByForceFilesystem(sym)){msg+='. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';}warnOnce(msg);return undefined;}});}// Any symbol that is not included from the JS libary is also (by definttion)
// not exported on the Module object.
unexportedRuntimeSymbol(sym);}function unexportedRuntimeSymbol(sym){if(!Object.getOwnPropertyDescriptor(Module,sym)){Object.defineProperty(Module,sym,{configurable:true,get:function get(){var msg="'"+sym+"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)";if(isExportedByForceFilesystem(sym)){msg+='. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';}abort(msg);}});}}// end include: runtime_debug.js
// === Body ===
var ASM_CONSTS={734488:function _(){if(Module.edgePostInit){Module.edgePostInit();}},734544:function _($0,$1){var args=[];for(var _i=0;_i<$0;_i++){args.push(UTF8ToString(HEAP32[($1>>2)+_i]));}console.log("Edge command line: ".concat(args));var homeIndex=args.indexOf("-home");if(homeIndex===-1||homeIndex>=args.length||args[homeIndex+1].startsWith("-")){throw"No home command line option specified";}var homeDir=args[homeIndex+1];if(!FS.analyzePath(homeDir).exists){FS.mkdirTree(homeDir);}FS.mount(IDBFS,{},homeDir);FS.syncfs(true,function(err){if(err){console.error("Error mounting home dir ".concat(err));return;}Module._I_WebMain($0,$1);});},735134:function _($0){if(Module.edgePreSyncFS){Module.edgePreSyncFS();}FS.syncfs($0,function(err){if(Module.edgePostSyncFS){Module.edgePostSyncFS();}});},735283:function _($0){var str=UTF8ToString($0)+'\n\n'+'Abort/Retry/Ignore/AlwaysIgnore? [ariA] :';var reply=window.prompt(str,"i");if(reply===null){reply="i";}return allocate(intArrayFromString(reply),'i8',ALLOC_NORMAL);},735508:function _(){if(typeof AudioContext!=='undefined'){return true;}else if(typeof webkitAudioContext!=='undefined'){return true;}return false;},735655:function _(){if(typeof navigator.mediaDevices!=='undefined'&&typeof navigator.mediaDevices.getUserMedia!=='undefined'){return true;}else if(typeof navigator.webkitGetUserMedia!=='undefined'){return true;}return false;},735889:function _($0){if(typeof Module['SDL2']==='undefined'){Module['SDL2']={};}var SDL2=Module['SDL2'];if(!$0){SDL2.audio={};}else{SDL2.capture={};}if(!SDL2.audioContext){if(typeof AudioContext!=='undefined'){SDL2.audioContext=new AudioContext();}else if(typeof webkitAudioContext!=='undefined'){SDL2.audioContext=new webkitAudioContext();}if(SDL2.audioContext){autoResumeAudioContext(SDL2.audioContext);}}return SDL2.audioContext===undefined?-1:0;},736382:function _(){var SDL2=Module['SDL2'];return SDL2.audioContext.sampleRate;},736450:function _($0,$1,$2,$3){var SDL2=Module['SDL2'];var have_microphone=function have_microphone(stream){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer);SDL2.capture.silenceTimer=undefined;}SDL2.capture.mediaStreamNode=SDL2.audioContext.createMediaStreamSource(stream);SDL2.capture.scriptProcessorNode=SDL2.audioContext.createScriptProcessor($1,$0,1);SDL2.capture.scriptProcessorNode.onaudioprocess=function(audioProcessingEvent){if(SDL2===undefined||SDL2.capture===undefined){return;}audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0);SDL2.capture.currentCaptureBuffer=audioProcessingEvent.inputBuffer;dynCall('vi',$2,[$3]);};SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode);SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination);SDL2.capture.stream=stream;};var no_microphone=function no_microphone(error){};SDL2.capture.silenceBuffer=SDL2.audioContext.createBuffer($0,$1,SDL2.audioContext.sampleRate);SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0);var silence_callback=function silence_callback(){SDL2.capture.currentCaptureBuffer=SDL2.capture.silenceBuffer;dynCall('vi',$2,[$3]);};SDL2.capture.silenceTimer=setTimeout(silence_callback,$1/SDL2.audioContext.sampleRate*1000);if(navigator.mediaDevices!==undefined&&navigator.mediaDevices.getUserMedia!==undefined){navigator.mediaDevices.getUserMedia({audio:true,video:false}).then(have_microphone).catch(no_microphone);}else if(navigator.webkitGetUserMedia!==undefined){navigator.webkitGetUserMedia({audio:true,video:false},have_microphone,no_microphone);}},738102:function _($0,$1,$2,$3){var SDL2=Module['SDL2'];SDL2.audio.scriptProcessorNode=SDL2.audioContext['createScriptProcessor']($1,0,$0);SDL2.audio.scriptProcessorNode['onaudioprocess']=function(e){if(SDL2===undefined||SDL2.audio===undefined){return;}SDL2.audio.currentOutputBuffer=e['outputBuffer'];dynCall('vi',$2,[$3]);};SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']);},738512:function _($0,$1){var SDL2=Module['SDL2'];var numChannels=SDL2.capture.currentCaptureBuffer.numberOfChannels;for(var c=0;c<numChannels;++c){var channelData=SDL2.capture.currentCaptureBuffer.getChannelData(c);if(channelData.length!=$1){throw'Web Audio capture buffer length mismatch! Destination size: '+channelData.length+' samples vs expected '+$1+' samples!';}if(numChannels==1){for(var j=0;j<$1;++j){setValue($0+j*4,channelData[j],'float');}}else{for(var j=0;j<$1;++j){setValue($0+(j*numChannels+c)*4,channelData[j],'float');}}}},739117:function _($0,$1){var SDL2=Module['SDL2'];var numChannels=SDL2.audio.currentOutputBuffer['numberOfChannels'];for(var c=0;c<numChannels;++c){var channelData=SDL2.audio.currentOutputBuffer['getChannelData'](c);if(channelData.length!=$1){throw'Web Audio output buffer length mismatch! Destination size: '+channelData.length+' samples vs expected '+$1+' samples!';}for(var j=0;j<$1;++j){channelData[j]=HEAPF32[$0+(j*numChannels+c<<2)>>2];}}},739597:function _($0){var SDL2=Module['SDL2'];if($0){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer);}if(SDL2.capture.stream!==undefined){var tracks=SDL2.capture.stream.getAudioTracks();for(var i=0;i<tracks.length;i++){SDL2.capture.stream.removeTrack(tracks[i]);}SDL2.capture.stream=undefined;}if(SDL2.capture.scriptProcessorNode!==undefined){SDL2.capture.scriptProcessorNode.onaudioprocess=function(audioProcessingEvent){};SDL2.capture.scriptProcessorNode.disconnect();SDL2.capture.scriptProcessorNode=undefined;}if(SDL2.capture.mediaStreamNode!==undefined){SDL2.capture.mediaStreamNode.disconnect();SDL2.capture.mediaStreamNode=undefined;}if(SDL2.capture.silenceBuffer!==undefined){SDL2.capture.silenceBuffer=undefined;}SDL2.capture=undefined;}else{if(SDL2.audio.scriptProcessorNode!=undefined){SDL2.audio.scriptProcessorNode.disconnect();SDL2.audio.scriptProcessorNode=undefined;}SDL2.audio=undefined;}if(SDL2.audioContext!==undefined&&SDL2.audio===undefined&&SDL2.capture===undefined){SDL2.audioContext.close();SDL2.audioContext=undefined;}},740769:function _($0,$1,$2){var w=$0;var h=$1;var pixels=$2;if(!Module['SDL2'])Module['SDL2']={};var SDL2=Module['SDL2'];if(SDL2.ctxCanvas!==Module['canvas']){SDL2.ctx=Module['createContext'](Module['canvas'],false,true);SDL2.ctxCanvas=Module['canvas'];}if(SDL2.w!==w||SDL2.h!==h||SDL2.imageCtx!==SDL2.ctx){SDL2.image=SDL2.ctx.createImageData(w,h);SDL2.w=w;SDL2.h=h;SDL2.imageCtx=SDL2.ctx;}var data=SDL2.image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=='undefined'&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&0xff;data[dst+1]=val>>8&0xff;data[dst+2]=val>>16&0xff;data[dst+3]=0xff;src++;dst+=4;}}else{if(SDL2.data32Data!==data){SDL2.data32=new Int32Array(data.buffer);SDL2.data8=new Uint8Array(data.buffer);SDL2.data32Data=data;}var data32=SDL2.data32;num=data32.length;data32.set(HEAP32.subarray(src,src+num));var data8=SDL2.data8;var i=3;var j=i+4*num;if(num%8==0){while(i<j){data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;}}else{while(i<j){data8[i]=0xff;i=i+4|0;}}}SDL2.ctx.putImageData(SDL2.image,0,0);},742238:function _($0,$1,$2,$3,$4){var w=$0;var h=$1;var hot_x=$2;var hot_y=$3;var pixels=$4;var canvas=document.createElement("canvas");canvas.width=w;canvas.height=h;var ctx=canvas.getContext("2d");var image=ctx.createImageData(w,h);var data=image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=='undefined'&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&0xff;data[dst+1]=val>>8&0xff;data[dst+2]=val>>16&0xff;data[dst+3]=val>>24&0xff;src++;dst+=4;}}else{var data32=new Int32Array(data.buffer);num=data32.length;data32.set(HEAP32.subarray(src,src+num));}ctx.putImageData(image,0,0);var url=hot_x===0&&hot_y===0?"url("+canvas.toDataURL()+"), auto":"url("+canvas.toDataURL()+") "+hot_x+" "+hot_y+", auto";var urlBuf=_malloc(url.length+1);stringToUTF8(url,urlBuf,url.length+1);return urlBuf;},743227:function _($0){if(Module['canvas']){Module['canvas'].style['cursor']=UTF8ToString($0);}},743310:function _(){if(Module['canvas']){Module['canvas'].style['cursor']='none';}},743379:function _(){return window.innerWidth;},743409:function _(){return window.innerHeight;},743440:function _($0,$1){alert(UTF8ToString($0)+"\n\n"+UTF8ToString($1));}};// end include: preamble.js
/** @constructor */function ExitStatus(status){this.name='ExitStatus';this.message='Program terminated with exit('+status+')';this.status=status;}function listenOnce(object,event,func){object.addEventListener(event,func,{'once':true});}/** @param {Object=} elements */function autoResumeAudioContext(ctx,elements){if(!elements){elements=[document,document.getElementById('canvas')];}['keydown','mousedown','touchstart'].forEach(function(event){elements.forEach(function(element){if(element){listenOnce(element,event,function(){if(ctx.state==='suspended')ctx.resume();});}});});}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){// Pass the module as the first argument.
callbacks.shift()(Module);}}function dynCallLegacy(sig,ptr,args){assert('dynCall_'+sig in Module,'bad function pointer type - dynCall function not found for sig \''+sig+'\'');if(args&&args.length){// j (64-bit integer) must be passed in as two numbers [low 32, high 32].
assert(args.length===sig.substring(1).replace(/j/g,'--').length);}else{assert(sig.length==1);}var f=Module['dynCall_'+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr);}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr);}assert(wasmTable.get(funcPtr)==func,"JavaScript-side Wasm function table mirror is out of date!");return func;}/** @param {Object=} args */function dynCall(sig,ptr,args){// Without WASM_BIGINT support we cannot directly call function with i64 as
// part of thier signature, so we rely the dynCall functions generated by
// wasm-emscripten-finalize
if(sig.includes('j')){return dynCallLegacy(sig,ptr,args);}assert(getWasmTableEntry(ptr),'missing table entry in dynCall: '+ptr);var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn;}/**
     * @param {number} ptr
     * @param {string} type
     */function getValue(ptr){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'i8';if(type.endsWith('*'))type='*';switch(type){case'i1':return HEAP8[ptr>>0];case'i8':return HEAP8[ptr>>0];case'i16':return HEAP16[ptr>>1];case'i32':return HEAP32[ptr>>2];case'i64':return HEAP32[ptr>>2];case'float':return HEAPF32[ptr>>2];case'double':return HEAPF64[ptr>>3];case'*':return HEAPU32[ptr>>2];default:abort('invalid type for getValue: '+type);}return null;}function ptrToString(ptr){assert(typeof ptr==='number');return'0x'+ptr.toString(16).padStart(8,'0');}/**
     * @param {number} ptr
     * @param {number} value
     * @param {string} type
     */function setValue(ptr,value){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'i8';if(type.endsWith('*'))type='*';switch(type){case'i1':HEAP8[ptr>>0]=value;break;case'i8':HEAP8[ptr>>0]=value;break;case'i16':HEAP16[ptr>>1]=value;break;case'i32':HEAP32[ptr>>2]=value;break;case'i64':tempI64=[value>>>0,(tempDouble=value,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case'float':HEAPF32[ptr>>2]=value;break;case'double':HEAPF64[ptr>>3]=value;break;case'*':HEAPU32[ptr>>2]=value;break;default:abort('invalid type for setValue: '+type);}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text);}}function ___assert_fail(condition,filename,line,func){abort('Assertion failed: '+UTF8ToString(condition)+', at: '+[filename?UTF8ToString(filename):'unknown filename',line,func?UTF8ToString(func):'unknown function']);}/** @constructor */function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type;};this.get_type=function(){return HEAPU32[this.ptr+4>>2];};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor;};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2];};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount;};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught;};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0;};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown;};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0;};// Initialize native structure fields. Should be called once after allocated.
this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false);};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1;};// Returns true if last reference released.
this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;assert(prev>0);return prev===1;};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr;};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2];};// Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted
// when the pointer is casted to some of the exception object base classes (e.g. when virtual
// inheritance is used). When a pointer is thrown this method should return the thrown pointer
// itself.
this.get_exception_ptr=function(){// Work around a fastcomp bug, this code is still included for some reason in a build without
// exceptions support.
var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2];}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr;};}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);// Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.
info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.";}var PATH={isAbs:function isAbs(path){return path.charAt(0)==='/';},splitPath:function splitPath(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1);},normalizeArray:function normalizeArray(parts,allowAboveRoot){// if the path tries to go above the root, `up` ends up > 0
var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==='.'){parts.splice(i,1);}else if(last==='..'){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}// if the path is allowed to go above the root, restore leading ..s
if(allowAboveRoot){for(;up;up--){parts.unshift('..');}}return parts;},normalize:function normalize(path){var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)==='/';// Normalize the path
path=PATH.normalizeArray(path.split('/').filter(function(p){return!!p;}),!isAbsolute).join('/');if(!path&&!isAbsolute){path='.';}if(path&&trailingSlash){path+='/';}return(isAbsolute?'/':'')+path;},dirname:function dirname(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){// No dirname whatsoever
return'.';}if(dir){// It has a dirname, strip trailing slash
dir=dir.substr(0,dir.length-1);}return root+dir;},basename:function basename(path){// EMSCRIPTEN return '/'' for '/', not an empty string
if(path==='/')return'/';path=PATH.normalize(path);path=path.replace(/\/$/,"");var lastSlash=path.lastIndexOf('/');if(lastSlash===-1)return path;return path.substr(lastSlash+1);},join:function join(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join('/'));},join2:function join2(l,r){return PATH.normalize(l+'/'+r);}};function getRandomDevice(){if((typeof crypto==="undefined"?"undefined":_typeof(crypto))=='object'&&typeof crypto['getRandomValues']=='function'){// for modern web browsers
var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0];};}else// we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096
return function(){return abort("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };");};}var PATH_FS={resolve:function resolve(){var resolvedPath='',resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();// Skip empty and invalid entries
if(typeof path!='string'){throw new TypeError('Arguments to path.resolve must be strings');}else if(!path){return'';// an invalid portion invalidates the whole thing
}resolvedPath=path+'/'+resolvedPath;resolvedAbsolute=PATH.isAbs(path);}// At this point the path should be resolved to a full absolute path, but
// handle relative paths to be safe (might happen when process.cwd() fails)
resolvedPath=PATH.normalizeArray(resolvedPath.split('/').filter(function(p){return!!p;}),!resolvedAbsolute).join('/');return(resolvedAbsolute?'/':'')+resolvedPath||'.';},relative:function relative(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=='')break;}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=='')break;}if(start>end)return[];return arr.slice(start,end-start+1);}var fromParts=trim(from.split('/'));var toParts=trim(to.split('/'));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break;}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push('..');}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join('/');}};/** @type {function(string, boolean=, number=)} */function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array;}var TTY={ttys:[],init:function init(){// https://github.com/emscripten-core/emscripten/pull/1555
// if (ENVIRONMENT_IS_NODE) {
//   // currently, FS.init does not distinguish if process.stdin is a file or TTY
//   // device, it always assumes it's a TTY device. because of this, we're forcing
//   // process.stdin to UTF8 encoding to at least make stdin reading compatible
//   // with text files until FS.init can be refactored.
//   process['stdin']['setEncoding']('utf8');
// }
},shutdown:function shutdown(){// https://github.com/emscripten-core/emscripten/pull/1555
// if (ENVIRONMENT_IS_NODE) {
//   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
//   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
//   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
//   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
//   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
//   process['stdin']['pause']();
// }
},register:function register(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops);},stream_ops:{open:function open(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43);}stream.tty=tty;stream.seekable=false;},close:function close(stream){// flush any pending line data
stream.tty.ops.fsync(stream.tty);},fsync:function fsync(stream){stream.tty.ops.fsync(stream.tty);},read:function read(stream,buffer,offset,length,pos/* ignored */){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60);}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty);}catch(e){throw new FS.ErrnoError(29);}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6);}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result;}if(bytesRead){stream.node.timestamp=Date.now();}return bytesRead;},write:function write(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60);}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i]);}}catch(e){throw new FS.ErrnoError(29);}if(length){stream.node.timestamp=Date.now();}return i;}},default_tty_ops:{get_char:function get_char(tty){if(!tty.input.length){var result=null;if(typeof window!='undefined'&&typeof window.prompt=='function'){// Browser.
result=window.prompt('Input: ');// returns null on cancel
if(result!==null){result+='\n';}}else if(typeof readline=='function'){// Command line.
result=readline();if(result!==null){result+='\n';}}if(!result){return null;}tty.input=intArrayFromString(result,true);}return tty.input.shift();},put_char:function put_char(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[];}else{if(val!=0)tty.output.push(val);// val == 0 would cut text output off in the middle.
}},fsync:function fsync(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[];}}},default_tty1_ops:{put_char:function put_char(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[];}else{if(val!=0)tty.output.push(val);}},fsync:function fsync(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[];}}}};function zeroMemory(address,size){HEAPU8.fill(0,address,address+size);return address;}function alignMemory(size,alignment){assert(alignment,"alignment argument is required");return Math.ceil(size/alignment)*alignment;}function mmapAlloc(size){abort('internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported');}var MEMFS={ops_table:null,mount:function mount(_mount){return MEMFS.createNode(null,'/',16384|511/* 0777 */,0);},createNode:function createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){// no supported
throw new FS.ErrnoError(63);}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}};}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={};}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;// The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
// When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
// for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
// penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
node.contents=null;}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream;}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream;}node.timestamp=Date.now();// add the new node to the parent
if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp;}return node;},getFileDataAsTypedArray:function getFileDataAsTypedArray(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);// Make sure to not return excess unused bytes.
return new Uint8Array(node.contents);},expandFileStorage:function expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;// No need to expand, the storage was already large enough.
// Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
// For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
// avoid overshooting the allocation cap by a very large margin.
var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2.0:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);// At minimum allocate 256b for each file when expanding.
var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);// Allocate new storage.
if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);// Copy old data over to the new storage.
},resizeFileStorage:function resizeFileStorage(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;// Fully decommit when requesting a resize to zero.
node.usedBytes=0;}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);// Allocate new storage.
if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)));// Copy old data over to the new storage.
}node.usedBytes=newSize;}},node_ops:{getattr:function getattr(node){var attr={};// device numbers reuse inode numbers.
attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096;}else if(FS.isFile(node.mode)){attr.size=node.usedBytes;}else if(FS.isLink(node.mode)){attr.size=node.link.length;}else{attr.size=0;}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);// NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
//       but this is not required by the standard.
attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr;},setattr:function setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode;}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp;}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size);}},lookup:function lookup(parent,name){throw FS.genericErrors[44];},mknod:function mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev);},rename:function rename(old_node,new_dir,new_name){// if we're overwriting a directory at new_name, make sure it's empty.
if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name);}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55);}}}// do the internal rewiring
delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir;},unlink:function unlink(parent,name){delete parent.contents[name];parent.timestamp=Date.now();},rmdir:function rmdir(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55);}delete parent.contents[name];parent.timestamp=Date.now();},readdir:function readdir(node){var entries=['.','..'];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue;}entries.push(key);}return entries;},symlink:function symlink(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511/* 0777 */|40960,0);node.link=oldpath;return node;},readlink:function readlink(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28);}return node.link;}},stream_ops:{read:function read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){// non-trivial, and typed array
buffer.set(contents.subarray(position,position+size),offset);}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];}return size;},write:function write(stream,buffer,offset,length,position,canOwn){// The data buffer should be a typed array view
assert(!(buffer instanceof ArrayBuffer));// If the buffer is located in main memory (HEAP), and if
// memory can grow, we can't hold on to references of the
// memory buffer, as they may get invalidated. That means we
// need to do copy its contents.
if(buffer.buffer===HEAP8.buffer){canOwn=false;}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){// This write is from a typed array to a typed array?
if(canOwn){assert(position===0,'canOwn must imply no weird position inside the file');node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length;}else if(node.usedBytes===0&&position===0){// If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length;}else if(position+length<=node.usedBytes){// Writing to an already allocated and used subrange of the file?
node.contents.set(buffer.subarray(offset,offset+length),position);return length;}}// Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){// Use typed array write which is available.
node.contents.set(buffer.subarray(offset,offset+length),position);}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i];// Or fall back to manual write if not.
}}node.usedBytes=Math.max(node.usedBytes,position+length);return length;},llseek:function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes;}}if(position<0){throw new FS.ErrnoError(28);}return position;},allocate:function allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length);},mmap:function mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43);}var ptr;var allocated;var contents=stream.node.contents;// Only make a new copy when MAP_PRIVATE is specified.
if(!(flags&2)&&contents.buffer===HEAP8.buffer){// We can't emulate MAP_SHARED when the file is not backed by the
// buffer we're mapping to (e.g. the HEAP buffer).
allocated=false;ptr=contents.byteOffset;}else{// Try to avoid unnecessary slices.
if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length);}else{contents=Array.prototype.slice.call(contents,position,position+length);}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48);}HEAP8.set(contents,ptr);}return{ptr:ptr,allocated:allocated};},msync:function msync(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);// should we check if bytesWritten and length are the same?
return 0;}}};/** @param {boolean=} noRunDep */function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency('al '+url):'';readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep);},function(event){if(onerror){onerror();}else{throw'Loading data file "'+url+'" failed.';}});if(dep)addRunDependency(dep);}var IDBFS={dbs:{},indexedDB:function(_indexedDB){function indexedDB(){return _indexedDB.apply(this,arguments);}indexedDB.toString=function(){return _indexedDB.toString();};return indexedDB;}(function(){if(typeof indexedDB!='undefined')return indexedDB;var ret=null;if((typeof window==="undefined"?"undefined":_typeof(window))=='object')ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,'IDBFS used, but indexedDB not supported');return ret;}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function mount(_mount2){// reuse all of the core MEMFS functionality
return MEMFS.mount.apply(null,arguments);},syncfs:function syncfs(mount,populate,callback){IDBFS.getLocalSet(mount,function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback);});});},quit:function quit(){Object.values(IDBFS.dbs).forEach(function(value){return value.close();});IDBFS.dbs={};},getDB:function getDB(name,callback){// check the cache first
var db=IDBFS.dbs[name];if(db){return callback(null,db);}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION);}catch(e){return callback(e);}if(!req){return callback("Unable to connect to IndexedDB");}req.onupgradeneeded=function(e){var db=/** @type {IDBDatabase} */e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME);}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME);}if(!fileStore.indexNames.contains('timestamp')){fileStore.createIndex('timestamp','timestamp',{unique:false});}};req.onsuccess=function(){db=/** @type {IDBDatabase} */req.result;// add to the cache
IDBFS.dbs[name]=db;callback(null,db);};req.onerror=function(e){callback(_this.error);e.preventDefault();};},getLocalSet:function getLocalSet(mount,callback){var entries={};function isRealDir(p){return p!=='.'&&p!=='..';};function toAbsolute(root){return function(p){return PATH.join2(root,p);};};var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path);}catch(e){return callback(e);}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));}entries[path]={'timestamp':stat.mtime};}return callback(null,{type:'local',entries:entries});},getRemoteSet:function getRemoteSet(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],'readonly');transaction.onerror=function(e){callback(_this.error);e.preventDefault();};var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index('timestamp');index.openKeyCursor().onsuccess=function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:'remote',db:db,entries:entries});}entries[cursor.primaryKey]={'timestamp':cursor.key};cursor.continue();};}catch(e){return callback(e);}});},loadLocalEntry:function loadLocalEntry(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path);}catch(e){return callback(e);}if(FS.isDir(stat.mode)){return callback(null,{'timestamp':stat.mtime,'mode':stat.mode});}else if(FS.isFile(stat.mode)){// Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
// Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{'timestamp':stat.mtime,'mode':stat.mode,'contents':node.contents});}else{return callback(new Error('node type not supported'));}},storeLocalEntry:function storeLocalEntry(path,entry,callback){try{if(FS.isDir(entry['mode'])){FS.mkdirTree(path,entry['mode']);}else if(FS.isFile(entry['mode'])){FS.writeFile(path,entry['contents'],{canOwn:true});}else{return callback(new Error('node type not supported'));}FS.chmod(path,entry['mode']);FS.utime(path,entry['timestamp'],entry['timestamp']);}catch(e){return callback(e);}callback(null);},removeLocalEntry:function removeLocalEntry(path,callback){try{var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path);}else if(FS.isFile(stat.mode)){FS.unlink(path);}}catch(e){return callback(e);}callback(null);},loadRemoteEntry:function loadRemoteEntry(store,path,callback){var req=store.get(path);req.onsuccess=function(event){callback(null,event.target.result);};req.onerror=function(e){callback(_this.error);e.preventDefault();};},storeRemoteEntry:function storeRemoteEntry(store,path,entry,callback){try{var req=store.put(entry,path);}catch(e){callback(e);return;}req.onsuccess=function(){callback(null);};req.onerror=function(e){callback(_this.error);e.preventDefault();};},removeRemoteEntry:function removeRemoteEntry(store,path,callback){var req=store.delete(path);req.onsuccess=function(){callback(null);};req.onerror=function(e){callback(_this.error);e.preventDefault();};},reconcile:function reconcile(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach(function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e['timestamp'].getTime()!=e2['timestamp'].getTime()){create.push(key);total++;}});var remove=[];Object.keys(dst.entries).forEach(function(key){if(!src.entries[key]){remove.push(key);total++;}});if(!total){return callback(null);}var errored=false;var db=src.type==='remote'?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],'readwrite');var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err&&!errored){errored=true;return callback(err);}};transaction.onerror=function(e){done(_this.error);e.preventDefault();};transaction.oncomplete=function(e){if(!errored){callback(null);}};// sort paths in ascending order so directory entries are created
// before the files inside them
create.sort().forEach(function(path){if(dst.type==='local'){IDBFS.loadRemoteEntry(store,path,function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done);});}else{IDBFS.loadLocalEntry(path,function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done);});}});// sort paths in descending order so files are deleted before their
// parent directories
remove.sort().reverse().forEach(function(path){if(dst.type==='local'){IDBFS.removeLocalEntry(path,done);}else{IDBFS.removeRemoteEntry(store,path,done);}});}};var ERRNO_MESSAGES={0:"Success",1:"Arg list too long",2:"Permission denied",3:"Address already in use",4:"Address not available",5:"Address family not supported by protocol family",6:"No more processes",7:"Socket already connected",8:"Bad file number",9:"Trying to read unreadable message",10:"Mount device busy",11:"Operation canceled",12:"No children",13:"Connection aborted",14:"Connection refused",15:"Connection reset by peer",16:"File locking deadlock error",17:"Destination address required",18:"Math arg out of domain of func",19:"Quota exceeded",20:"File exists",21:"Bad address",22:"File too large",23:"Host is unreachable",24:"Identifier removed",25:"Illegal byte sequence",26:"Connection already in progress",27:"Interrupted system call",28:"Invalid argument",29:"I/O error",30:"Socket is already connected",31:"Is a directory",32:"Too many symbolic links",33:"Too many open files",34:"Too many links",35:"Message too long",36:"Multihop attempted",37:"File or path name too long",38:"Network interface is not configured",39:"Connection reset by network",40:"Network is unreachable",41:"Too many open files in system",42:"No buffer space available",43:"No such device",44:"No such file or directory",45:"Exec format error",46:"No record locks available",47:"The link has been severed",48:"Not enough core",49:"No message of desired type",50:"Protocol not available",51:"No space left on device",52:"Function not implemented",53:"Socket is not connected",54:"Not a directory",55:"Directory not empty",56:"State not recoverable",57:"Socket operation on non-socket",59:"Not a typewriter",60:"No such device or address",61:"Value too large for defined data type",62:"Previous owner died",63:"Not super-user",64:"Broken pipe",65:"Protocol error",66:"Unknown protocol",67:"Protocol wrong type for socket",68:"Math result not representable",69:"Read only file system",70:"Illegal seek",71:"No such process",72:"Stale file handle",73:"Connection timed out",74:"Text file busy",75:"Cross-device link",100:"Device not a stream",101:"Bad font file fmt",102:"Invalid slot",103:"Invalid request code",104:"No anode",105:"Block device required",106:"Channel number out of range",107:"Level 3 halted",108:"Level 3 reset",109:"Link number out of range",110:"Protocol driver not attached",111:"No CSI structure available",112:"Level 2 halted",113:"Invalid exchange",114:"Invalid request descriptor",115:"Exchange full",116:"No data (for no delay io)",117:"Timer expired",118:"Out of streams resources",119:"Machine is not on the network",120:"Package not installed",121:"The object is remote",122:"Advertise error",123:"Srmount error",124:"Communication error on send",125:"Cross mount point (not really error)",126:"Given log. name not unique",127:"f.d. invalid for this operation",128:"Remote address changed",129:"Can   access a needed shared lib",130:"Accessing a corrupted shared lib",131:".lib section in a.out corrupted",132:"Attempting to link in too many libs",133:"Attempting to exec a shared library",135:"Streams pipe error",136:"Too many users",137:"Socket type not supported",138:"Not supported",139:"Protocol family not supported",140:"Can't send after socket shutdown",141:"Too many references",142:"Host is down",148:"No medium (in tape drive)",156:"Level 2 not synchronized"};var ERRNO_CODES={};function demangle(func){warnOnce('warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling');return func;}function demangleAll(text){var regex=/\b_Z[\w\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+' ['+x+']';});}var LZ4={DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function init(){if(LZ4.codec)return;LZ4.codec=function(){/*
  MiniLZ4: Minimal LZ4 block decoding and encoding.
  
  based off of node-lz4, https://github.com/pierrec/node-lz4
  
  ====
  Copyright (c) 2012 Pierre Curto
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  ====
  
  changes have the same license
  */var MiniLZ4=function(){var exports={};/**
   * Decode a block. Assumptions: input contains all sequences of a 
   * chunk, output is large enough to receive the decoded data.
   * If the output buffer is too small, an error will be thrown.
   * If the returned value is negative, an error occured at the returned offset.
   *
   * @param {ArrayBufferView} input input data
   * @param {ArrayBufferView} output output data
   * @param {number=} sIdx
   * @param {number=} eIdx
   * @return {number} number of decoded bytes
   * @private
   */exports.uncompress=function(input,output,sIdx,eIdx){sIdx=sIdx||0;eIdx=eIdx||input.length-sIdx;// Process each sequence in the incoming data
for(var i=sIdx,n=eIdx,j=0;i<n;){var token=input[i++];// Literals
var literals_length=token>>4;if(literals_length>0){// length of literals
var l=literals_length+240;while(l===255){l=input[i++];literals_length+=l;}// Copy the literals
var end=i+literals_length;while(i<end)output[j++]=input[i++];// End of buffer?
if(i===n)return j;}// Match copy
// 2 bytes offset (little endian)
var offset=input[i++]|input[i++]<<8;// XXX 0 is an invalid offset value
if(offset===0)return j;if(offset>j)return-(i-2);// length of match copy
var match_length=token&0xf;var l=match_length+240;while(l===255){l=input[i++];match_length+=l;}// Copy the match
var pos=j-offset;// position of the match copy in the current output
var end=j+match_length+4;// minmatch = 4
while(j<end)output[j++]=output[pos++];}return j;};var maxInputSize=0x7E000000,minMatch=4// uint32() optimization
,hashLog=16,hashShift=minMatch*8-hashLog,hashSize=1<<hashLog,copyLength=8,lastLiterals=5,mfLimit=copyLength+minMatch,skipStrength=6,mlBits=4,mlMask=(1<<mlBits)-1,runBits=8-mlBits,runMask=(1<<runBits)-1,hasher=/* XXX uint32( */2654435761;/* ) */assert(hashShift===16);var hashTable=new Int16Array(1<<16);var empty=new Int16Array(hashTable.length);// CompressBound returns the maximum length of a lz4 block, given it's uncompressed length
exports.compressBound=function(isize){return isize>maxInputSize?0:isize+isize/255+16|0;};/** @param {number=} sIdx
  	@param {number=} eIdx */exports.compress=function(src,dst,sIdx,eIdx){hashTable.set(empty);return compressBlock(src,dst,0,sIdx||0,eIdx||dst.length);};function compressBlock(src,dst,pos,sIdx,eIdx){// XXX var Hash = uint32() // Reusable unsigned 32 bits integer
var dpos=sIdx;var dlen=eIdx-sIdx;var anchor=0;if(src.length>=maxInputSize)throw new Error("input too large");// Minimum of input bytes for compression (LZ4 specs)
if(src.length>mfLimit){var n=exports.compressBound(src.length);if(dlen<n)throw Error("output too small: "+dlen+" < "+n);var step=1,findMatchAttempts=(1<<skipStrength)+3// Keep last few bytes incompressible (LZ4 specs):
// last 5 bytes must be literals
,srcLength=src.length-mfLimit;while(pos+minMatch<srcLength){// Find a match
// min match of 4 bytes aka sequence
var sequenceLowBits=src[pos+1]<<8|src[pos];var sequenceHighBits=src[pos+3]<<8|src[pos+2];// compute hash for the current sequence
var hash=Math.imul(sequenceLowBits|sequenceHighBits<<16,hasher)>>>hashShift;/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)
  							.multiply(hasher)
  							.shiftr(hashShift)
  							.toNumber() */ // get the position of the sequence matching the hash
// NB. since 2 different sequences may have the same hash
// it is double-checked below
// do -1 to distinguish between initialized and uninitialized values
var ref=hashTable[hash]-1;// save position of current sequence in hash table
hashTable[hash]=pos+1;// first reference or within 64k limit or current sequence !== hashed one: no match
if(ref<0||pos-ref>>>16>0||(src[ref+3]<<8|src[ref+2])!=sequenceHighBits||(src[ref+1]<<8|src[ref])!=sequenceLowBits){// increase step if nothing found within limit
step=findMatchAttempts++>>skipStrength;pos+=step;continue;}findMatchAttempts=(1<<skipStrength)+3;// got a match
var literals_length=pos-anchor;var offset=pos-ref;// minMatch already verified
pos+=minMatch;ref+=minMatch;// move to the end of the match (>=minMatch)
var match_length=pos;while(pos<srcLength&&src[pos]==src[ref]){pos++;ref++;}// match length
match_length=pos-match_length;// token
var token=match_length<mlMask?match_length:mlMask;// encode literals length
if(literals_length>=runMask){// add match length to the token
dst[dpos++]=(runMask<<mlBits)+token;for(var len=literals_length-runMask;len>254;len-=255){dst[dpos++]=255;}dst[dpos++]=len;}else{// add match length to the token
dst[dpos++]=(literals_length<<mlBits)+token;}// write literals
for(var i=0;i<literals_length;i++){dst[dpos++]=src[anchor+i];}// encode offset
dst[dpos++]=offset;dst[dpos++]=offset>>8;// encode match length
if(match_length>=mlMask){match_length-=mlMask;while(match_length>=255){match_length-=255;dst[dpos++]=255;}dst[dpos++]=match_length;}anchor=pos;}}// cannot compress input
if(anchor==0)return 0;// Write last literals
// encode literals length
literals_length=src.length-anchor;if(literals_length>=runMask){// add match length to the token
dst[dpos++]=runMask<<mlBits;for(var ln=literals_length-runMask;ln>254;ln-=255){dst[dpos++]=255;}dst[dpos++]=ln;}else{// add match length to the token
dst[dpos++]=literals_length<<mlBits;}// write literals
pos=anchor;while(pos<src.length){dst[dpos++]=src[pos++];}return dpos;}exports.CHUNK_SIZE=2048;// musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea
exports.compressPackage=function(data,verify){if(verify){var temp=new Uint8Array(exports.CHUNK_SIZE);}// compress the data in chunks
assert(data instanceof ArrayBuffer);data=new Uint8Array(data);console.log('compressing package of size '+data.length);var compressedChunks=[];var successes=[];var offset=0;var total=0;while(offset<data.length){var chunk=data.subarray(offset,offset+exports.CHUNK_SIZE);//console.log('compress a chunk ' + [offset, total, data.length]);
offset+=exports.CHUNK_SIZE;var bound=exports.compressBound(chunk.length);var compressed=new Uint8Array(bound);var compressedSize=exports.compress(chunk,compressed);if(compressedSize>0){assert(compressedSize<=bound);compressed=compressed.subarray(0,compressedSize);compressedChunks.push(compressed);total+=compressedSize;successes.push(1);if(verify){var back=exports.uncompress(compressed,temp);assert(back===chunk.length,[back,chunk.length]);for(var i=0;i<chunk.length;i++){assert(chunk[i]===temp[i]);}}}else{assert(compressedSize===0);// failure to compress :(
compressedChunks.push(chunk);total+=chunk.length;// last chunk may not be the full exports.CHUNK_SIZE size
successes.push(0);}}data=null;// XXX null out pack['data'] too?
var compressedData={'data':new Uint8Array(total+exports.CHUNK_SIZE*2),// store all the compressed data, plus room for two cached decompressed chunk, in one fast array
'cachedOffset':total,'cachedIndexes':[-1,-1],// cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing
'cachedChunks':[null,null],'offsets':[],// chunk# => start in compressed data
'sizes':[],'successes':successes// 1 if chunk is compressed
};offset=0;for(var i=0;i<compressedChunks.length;i++){compressedData['data'].set(compressedChunks[i],offset);compressedData['offsets'][i]=offset;compressedData['sizes'][i]=compressedChunks[i].length;offset+=compressedChunks[i].length;}console.log('compressed package into '+[compressedData['data'].length]);assert(offset===total);return compressedData;};assert(exports.CHUNK_SIZE<1<<15);// we use 16-bit ints as the type of the hash table, chunk size must be smaller
return exports;}();;return MiniLZ4;}();LZ4.CHUNK_SIZE=LZ4.codec.CHUNK_SIZE;},loadPackage:function loadPackage(pack,preloadPlugin){LZ4.init();var compressedData=pack['compressedData'];if(!compressedData)compressedData=LZ4.codec.compressPackage(pack['data']);assert(compressedData['cachedIndexes'].length===compressedData['cachedChunks'].length);for(var i=0;i<compressedData['cachedIndexes'].length;i++){compressedData['cachedIndexes'][i]=-1;compressedData['cachedChunks'][i]=compressedData['data'].subarray(compressedData['cachedOffset']+i*LZ4.CHUNK_SIZE,compressedData['cachedOffset']+(i+1)*LZ4.CHUNK_SIZE);assert(compressedData['cachedChunks'][i].length===LZ4.CHUNK_SIZE);}pack['metadata'].files.forEach(function(file){var dir=PATH.dirname(file.filename);var name=PATH.basename(file.filename);FS.createPath('',dir,true,true);var parent=FS.analyzePath(dir).object;LZ4.createNode(parent,name,LZ4.FILE_MODE,0,{compressedData:compressedData,start:file.start,end:file.end});});// Preload files if necessary. This code is largely similar to
// createPreloadedFile in library_fs.js. However, a main difference here
// is that we only decompress the file if it can be preloaded.
// Abstracting out the common parts seems to be more effort than it is
// worth.
if(preloadPlugin){Browser.init();pack['metadata'].files.forEach(function(file){var handled=false;var fullname=file.filename;Module['preloadPlugins'].forEach(function(plugin){if(handled)return;if(plugin['canHandle'](fullname)){var dep=getUniqueRunDependency('fp '+fullname);addRunDependency(dep);var finish=function finish(){removeRunDependency(dep);};var byteArray=FS.readFile(fullname);plugin['handle'](byteArray,fullname,finish,finish);handled=true;}});});}},createNode:function createNode(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=LZ4.node_ops;node.stream_ops=LZ4.stream_ops;node.timestamp=(mtime||new Date()).getTime();assert(LZ4.FILE_MODE!==LZ4.DIR_MODE);if(mode===LZ4.FILE_MODE){node.size=contents.end-contents.start;node.contents=contents;}else{node.size=4096;node.contents={};}if(parent){parent.contents[name]=node;}return node;},node_ops:{getattr:function getattr(node){return{dev:1,ino:node.id,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)};},setattr:function setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode;}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp;}},lookup:function lookup(parent,name){throw new FS.ErrnoError(44);},mknod:function mknod(parent,name,mode,dev){throw new FS.ErrnoError(63);},rename:function rename(oldNode,newDir,newName){throw new FS.ErrnoError(63);},unlink:function unlink(parent,name){throw new FS.ErrnoError(63);},rmdir:function rmdir(parent,name){throw new FS.ErrnoError(63);},readdir:function readdir(node){throw new FS.ErrnoError(63);},symlink:function symlink(parent,newName,oldPath){throw new FS.ErrnoError(63);},readlink:function readlink(node){throw new FS.ErrnoError(63);}},stream_ops:{read:function read(stream,buffer,offset,length,position){//out('LZ4 read ' + [offset, length, position]);
length=Math.min(length,stream.node.size-position);if(length<=0)return 0;var contents=stream.node.contents;var compressedData=contents.compressedData;var written=0;while(written<length){var start=contents.start+position+written;// start index in uncompressed data
var desired=length-written;//out('current read: ' + ['start', start, 'desired', desired]);
var chunkIndex=Math.floor(start/LZ4.CHUNK_SIZE);var compressedStart=compressedData['offsets'][chunkIndex];var compressedSize=compressedData['sizes'][chunkIndex];var currChunk;if(compressedData['successes'][chunkIndex]){var found=compressedData['cachedIndexes'].indexOf(chunkIndex);if(found>=0){currChunk=compressedData['cachedChunks'][found];}else{// decompress the chunk
compressedData['cachedIndexes'].pop();compressedData['cachedIndexes'].unshift(chunkIndex);currChunk=compressedData['cachedChunks'].pop();compressedData['cachedChunks'].unshift(currChunk);if(compressedData['debug']){out('decompressing chunk '+chunkIndex);Module['decompressedChunks']=(Module['decompressedChunks']||0)+1;}var compressed=compressedData['data'].subarray(compressedStart,compressedStart+compressedSize);//var t = Date.now();
var originalSize=LZ4.codec.uncompress(compressed,currChunk);//out('decompress time: ' + (Date.now() - t));
if(chunkIndex<compressedData['successes'].length-1)assert(originalSize===LZ4.CHUNK_SIZE);// all but the last chunk must be full-size
}}else{// uncompressed
currChunk=compressedData['data'].subarray(compressedStart,compressedStart+LZ4.CHUNK_SIZE);}var startInChunk=start%LZ4.CHUNK_SIZE;var endInChunk=Math.min(startInChunk+desired,LZ4.CHUNK_SIZE);buffer.set(currChunk.subarray(startInChunk,endInChunk),offset+written);var currWritten=endInChunk-startInChunk;written+=currWritten;}return written;},write:function write(stream,buffer,offset,length,position){throw new FS.ErrnoError(29);},llseek:function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size;}}if(position<0){throw new FS.ErrnoError(28);}return position;}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function lookupPath(path){var opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};path=PATH_FS.resolve(path);if(!path)return{path:'',node:null};var defaults={follow_mount:true,recurse_count:0};opts=_extends(defaults,opts);if(opts.recurse_count>8){// max recursive lookup of 8
throw new FS.ErrnoError(32);}// split the absolute path
var parts=path.split('/').filter(function(p){return!!p;});// start at the root
var current=FS.root;var current_path='/';for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){// stop resolving
break;}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);// jump to the mount's root node if this is a mountpoint
if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root;}}// by default, lookupPath will not follow a symlink if it is the final path component.
// setting opts.follow = true will override this behavior.
if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){// limit max consecutive symlinks to 40 (SYMLOOP_MAX).
throw new FS.ErrnoError(32);}}}}return{path:current_path,node:current};},getPath:function getPath(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=='/'?mount+'/'+path:mount+path;}path=path?node.name+'/'+path:node.name;node=node.parent;}},hashName:function hashName(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0;}return(parentid+hash>>>0)%FS.nameTable.length;},hashAddNode:function hashAddNode(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node;},hashRemoveNode:function hashRemoveNode(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next;}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break;}current=current.name_next;}}},lookupNode:function lookupNode(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent);}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node;}}// if we failed to find it in the cache, call into the VFS
return FS.lookup(parent,name);},createNode:function createNode(parent,name,mode,rdev){assert(_typeof(parent)=='object');var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node;},destroyNode:function destroyNode(node){FS.hashRemoveNode(node);},isRoot:function isRoot(node){return node===node.parent;},isMountpoint:function isMountpoint(node){return!!node.mounted;},isFile:function isFile(mode){return(mode&61440)===32768;},isDir:function isDir(mode){return(mode&61440)===16384;},isLink:function isLink(mode){return(mode&61440)===40960;},isChrdev:function isChrdev(mode){return(mode&61440)===8192;},isBlkdev:function isBlkdev(mode){return(mode&61440)===24576;},isFIFO:function isFIFO(mode){return(mode&61440)===4096;},isSocket:function isSocket(mode){return(mode&49152)===49152;},flagModes:{"r":0,"r+":2,"w":577,"w+":578,"a":1089,"a+":1090},modeStringToFlags:function modeStringToFlags(str){var flags=FS.flagModes[str];if(typeof flags=='undefined'){throw new Error('Unknown file open mode: '+str);}return flags;},flagsToPermissionString:function flagsToPermissionString(flag){var perms=['r','w','rw'][flag&3];if(flag&512){perms+='w';}return perms;},nodePermissions:function nodePermissions(node,perms){if(FS.ignorePermissions){return 0;}// return 0 if any user, group or owner bits are set.
if(perms.includes('r')&&!(node.mode&292)){return 2;}else if(perms.includes('w')&&!(node.mode&146)){return 2;}else if(perms.includes('x')&&!(node.mode&73)){return 2;}return 0;},mayLookup:function mayLookup(dir){var errCode=FS.nodePermissions(dir,'x');if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0;},mayCreate:function mayCreate(dir,name){try{var node=FS.lookupNode(dir,name);return 20;}catch(e){}return FS.nodePermissions(dir,'wx');},mayDelete:function mayDelete(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name);}catch(e){return e.errno;}var errCode=FS.nodePermissions(dir,'wx');if(errCode){return errCode;}if(isdir){if(!FS.isDir(node.mode)){return 54;}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10;}}else{if(FS.isDir(node.mode)){return 31;}}return 0;},mayOpen:function mayOpen(node,flags){if(!node){return 44;}if(FS.isLink(node.mode)){return 32;}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=='r'||// opening for write
flags&512){// TODO: check for O_SEARCH? (== search for dir only)
return 31;}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags));},MAX_OPEN_FDS:4096,nextfd:function nextfd(){var fd_start=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var fd_end=arguments.length>1&&arguments[1]!==undefined?arguments[1]:FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd;}}throw new FS.ErrnoError(33);},getStream:function getStream(fd){return FS.streams[fd];},createStream:function createStream(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=/** @constructor */function(){this.shared={};};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{/** @this {FS.FSStream} */get:function get(){return this.node;},/** @this {FS.FSStream} */set:function set(val){this.node=val;}},isRead:{/** @this {FS.FSStream} */get:function get(){return(this.flags&2097155)!==1;}},isWrite:{/** @this {FS.FSStream} */get:function get(){return(this.flags&2097155)!==0;}},isAppend:{/** @this {FS.FSStream} */get:function get(){return this.flags&1024;}},flags:{/** @this {FS.FSStream} */get:function get(){return this.shared.flags;},/** @this {FS.FSStream} */set:function set(val){this.shared.flags=val;}},position:{/** @this {FS.FSStream} */get:function get(){return this.shared.position;},/** @this {FS.FSStream} */set:function set(val){this.shared.position=val;}}});}// clone it, so we can return an instance of FSStream
stream=_extends(new FS.FSStream(),stream);var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream;},closeStream:function closeStream(fd){FS.streams[fd]=null;},chrdev_stream_ops:{open:function open(stream){var device=FS.getDevice(stream.node.rdev);// override node's stream ops with the device's
stream.stream_ops=device.stream_ops;// forward the open call
if(stream.stream_ops.open){stream.stream_ops.open(stream);}},llseek:function llseek(){throw new FS.ErrnoError(70);}},major:function major(dev){return dev>>8;},minor:function minor(dev){return dev&0xff;},makedev:function makedev(ma,mi){return ma<<8|mi;},registerDevice:function registerDevice(dev,ops){FS.devices[dev]={stream_ops:ops};},getDevice:function getDevice(dev){return FS.devices[dev];},getMounts:function getMounts(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts);}return mounts;},syncfs:function syncfs(populate,callback){if(typeof populate=='function'){callback=populate;populate=false;}FS.syncFSRequests++;if(FS.syncFSRequests>1){err('warning: '+FS.syncFSRequests+' FS.syncfs operations in flight at once, probably just doing extra work');}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(errCode);}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode);}return;}if(++completed>=mounts.length){doCallback(null);}};// sync all mounts
mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null);}mount.type.syncfs(mount,populate,done);});},mount:function mount(type,opts,mountpoint){if(typeof type=='string'){// The filesystem was not included, and instead we have an error
// message stored in the variable.
throw type;}var root=mountpoint==='/';var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10);}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;// use the absolute path
node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54);}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};// create a root node for the fs
var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot;}else if(node){// set as a mountpoint
node.mounted=mount;// add the new mount to the current mount's children
if(node.mount){node.mount.mounts.push(mount);}}return mountRoot;},unmount:function unmount(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28);}// destroy the nodes for this mount, and all its child mounts
var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current);}current=next;}});// no longer a mountpoint
node.mounted=null;// remove this mount from the child mounts
var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1);},lookup:function lookup(parent,name){return parent.node_ops.lookup(parent,name);},mknod:function mknod(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==='.'||name==='..'){throw new FS.ErrnoError(28);}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63);}return parent.node_ops.mknod(parent,name,mode,dev);},create:function create(path,mode){mode=mode!==undefined?mode:438/* 0666 */;mode&=4095;mode|=32768;return FS.mknod(path,mode,0);},mkdir:function mkdir(path,mode){mode=mode!==undefined?mode:511/* 0777 */;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0);},mkdirTree:function mkdirTree(path,mode){var dirs=path.split('/');var d='';for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+='/'+dirs[i];try{FS.mkdir(d,mode);}catch(e){if(e.errno!=20)throw e;}}},mkdev:function mkdev(path,mode,dev){if(typeof dev=='undefined'){dev=mode;mode=438/* 0666 */;}mode|=8192;return FS.mknod(path,mode,dev);},symlink:function symlink(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44);}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44);}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63);}return parent.node_ops.symlink(parent,newname,oldpath);},rename:function rename(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);// parents must exist
var lookup,old_dir,new_dir;// let the errors from non existant directories percolate up
lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);// need to be part of the same mount
if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75);}// source must exist
var old_node=FS.lookupNode(old_dir,old_name);// old path should not be an ancestor of the new path
var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=='.'){throw new FS.ErrnoError(28);}// new path should not be an ancestor of the old path
relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=='.'){throw new FS.ErrnoError(55);}// see if the new path already exists
var new_node;try{new_node=FS.lookupNode(new_dir,new_name);}catch(e){// not fatal
}// early out if nothing needs to change
if(old_node===new_node){return;}// we'll need to delete the old entry
var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode);}// need delete permissions if we'll be overwriting.
// need create permissions if new doesn't already exist.
errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode);}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63);}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10);}// if we are going to change the parent, check write permissions
if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,'w');if(errCode){throw new FS.ErrnoError(errCode);}}// remove the node from the lookup hash
FS.hashRemoveNode(old_node);// do the underlying fs rename
try{old_dir.node_ops.rename(old_node,new_dir,new_name);}catch(e){throw e;}finally{// add the node back to the hash (in case node_ops.rename
// changed its name)
FS.hashAddNode(old_node);}},rmdir:function rmdir(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63);}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);},readdir:function readdir(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54);}return node.node_ops.readdir(node);},unlink:function unlink(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44);}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){// According to POSIX, we should map EISDIR to EPERM, but
// we instead do what Linux does (and we must, as we use
// the musl linux libc).
throw new FS.ErrnoError(errCode);}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63);}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}parent.node_ops.unlink(parent,name);FS.destroyNode(node);},readlink:function readlink(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44);}if(!link.node_ops.readlink){throw new FS.ErrnoError(28);}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link));},stat:function stat(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44);}if(!node.node_ops.getattr){throw new FS.ErrnoError(63);}return node.node_ops.getattr(node);},lstat:function lstat(path){return FS.stat(path,true);},chmod:function chmod(path,mode,dontFollow){var node;if(typeof path=='string'){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()});},lchmod:function lchmod(path,mode){FS.chmod(path,mode,true);},fchmod:function fchmod(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8);}FS.chmod(stream.node,mode);},chown:function chown(path,uid,gid,dontFollow){var node;if(typeof path=='string'){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}node.node_ops.setattr(node,{timestamp:Date.now()// we ignore the uid / gid for now
});},lchown:function lchown(path,uid,gid){FS.chown(path,uid,gid,true);},fchown:function fchown(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8);}FS.chown(stream.node,uid,gid);},truncate:function truncate(path,len){if(len<0){throw new FS.ErrnoError(28);}var node;if(typeof path=='string'){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31);}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28);}var errCode=FS.nodePermissions(node,'w');if(errCode){throw new FS.ErrnoError(errCode);}node.node_ops.setattr(node,{size:len,timestamp:Date.now()});},ftruncate:function ftruncate(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28);}FS.truncate(stream.node,len);},utime:function utime(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)});},open:function open(path,flags,mode){if(path===""){throw new FS.ErrnoError(44);}flags=typeof flags=='string'?FS.modeStringToFlags(flags):flags;mode=typeof mode=='undefined'?438/* 0666 */:mode;if(flags&64){mode=mode&4095|32768;}else{mode=0;}var node;if(_typeof(path)=='object'){node=path;}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node;}catch(e){// ignore
}}// perhaps we need to create the node
var created=false;if(flags&64){if(node){// if O_CREAT and O_EXCL are set, error out if the node already exists
if(flags&128){throw new FS.ErrnoError(20);}}else{// node doesn't exist, try to create it
node=FS.mknod(path,mode,0);created=true;}}if(!node){throw new FS.ErrnoError(44);}// can't truncate a device
if(FS.isChrdev(node.mode)){flags&=~512;}// if asked only for a directory, then this must be one
if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54);}// check permissions, if this is not a file we just created now (it is ok to
// create and write to a file with read-only permissions; it is read-only
// for later use)
if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode);}}// do truncation if necessary
if(flags&512&&!created){FS.truncate(node,0);}// we've already handled these, don't pass down to the underlying vfs
flags&=~(128|512|131072);// register the stream with the filesystem
var stream=FS.createStream({node:node,path:FS.getPath(node),// we want the absolute path to the node
flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,// used by the file family libc calls (fopen, fwrite, ferror, etc.)
ungotten:[],error:false});// call the new stream's open function
if(stream.stream_ops.open){stream.stream_ops.open(stream);}if(Module['logReadFiles']&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;}}return stream;},close:function close(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(stream.getdents)stream.getdents=null;// free readdir state
try{if(stream.stream_ops.close){stream.stream_ops.close(stream);}}catch(e){throw e;}finally{FS.closeStream(stream.fd);}stream.fd=null;},isClosed:function isClosed(stream){return stream.fd===null;},llseek:function llseek(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70);}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28);}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position;},read:function read(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28);}if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8);}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31);}if(!stream.stream_ops.read){throw new FS.ErrnoError(28);}var seeking=typeof position!='undefined';if(!seeking){position=stream.position;}else if(!stream.seekable){throw new FS.ErrnoError(70);}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead;},write:function write(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28);}if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8);}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31);}if(!stream.stream_ops.write){throw new FS.ErrnoError(28);}if(stream.seekable&&stream.flags&1024){// seek to the end before writing in append mode
FS.llseek(stream,0,2);}var seeking=typeof position!='undefined';if(!seeking){position=stream.position;}else if(!stream.seekable){throw new FS.ErrnoError(70);}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten;},allocate:function allocate(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(offset<0||length<=0){throw new FS.ErrnoError(28);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8);}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43);}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138);}stream.stream_ops.allocate(stream,offset,length);},mmap:function mmap(stream,length,position,prot,flags){// User requests writing to file (prot & PROT_WRITE != 0).
// Checking if we have permissions to write to the file unless
// MAP_PRIVATE flag is set. According to POSIX spec it is possible
// to write to file opened in read-only mode with MAP_PRIVATE flag,
// as all modifications will be visible only in the memory of
// the current process.
if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2);}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2);}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43);}return stream.stream_ops.mmap(stream,length,position,prot,flags);},msync:function msync(stream,buffer,offset,length,mmapFlags){if(!stream.stream_ops.msync){return 0;}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags);},munmap:function munmap(stream){return 0;},ioctl:function ioctl(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59);}return stream.stream_ops.ioctl(stream,cmd,arg);},readFile:function readFile(path){var opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};opts.flags=opts.flags||0;opts.encoding=opts.encoding||'binary';if(opts.encoding!=='utf8'&&opts.encoding!=='binary'){throw new Error('Invalid encoding type "'+opts.encoding+'"');}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==='utf8'){ret=UTF8ArrayToString(buf,0);}else if(opts.encoding==='binary'){ret=buf;}FS.close(stream);return ret;},writeFile:function writeFile(path,data){var opts=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data=='string'){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn);}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn);}else{throw new Error('Unsupported data type');}FS.close(stream);},cwd:function cwd(){return FS.currentPath;},chdir:function chdir(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44);}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54);}var errCode=FS.nodePermissions(lookup.node,'x');if(errCode){throw new FS.ErrnoError(errCode);}FS.currentPath=lookup.path;},createDefaultDirectories:function createDefaultDirectories(){FS.mkdir('/tmp');FS.mkdir('/home');FS.mkdir('/home/web_user');},createDefaultDevices:function createDefaultDevices(){// create /dev
FS.mkdir('/dev');// setup /dev/null
FS.registerDevice(FS.makedev(1,3),{read:function read(){return 0;},write:function write(stream,buffer,offset,length,pos){return length;}});FS.mkdev('/dev/null',FS.makedev(1,3));// setup /dev/tty and /dev/tty1
// stderr needs to print output using err() rather than out()
// so we register a second tty just for it.
TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev('/dev/tty',FS.makedev(5,0));FS.mkdev('/dev/tty1',FS.makedev(6,0));// setup /dev/[u]random
var random_device=getRandomDevice();FS.createDevice('/dev','random',random_device);FS.createDevice('/dev','urandom',random_device);// we're not going to emulate the actual shm device,
// just create the tmp dirs that reside in it commonly
FS.mkdir('/dev/shm');FS.mkdir('/dev/shm/tmp');},createSpecialDirectories:function createSpecialDirectories(){// create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the
// name of the stream for fd 6 (see test_unistd_ttyname)
FS.mkdir('/proc');var proc_self=FS.mkdir('/proc/self');FS.mkdir('/proc/self/fd');FS.mount({mount:function mount(){var node=FS.createNode(proc_self,'fd',16384|511/* 0777 */,73);node.node_ops={lookup:function lookup(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:'fake'},node_ops:{readlink:function readlink(){return stream.path;}}};ret.parent=ret;// make it look like a simple root node
return ret;}};return node;}},{},'/proc/self/fd');},createStandardStreams:function createStandardStreams(){// TODO deprecate the old functionality of a single
// input / output callback and that utilizes FS.createDevice
// and instead require a unique set of stream ops
// by default, we symlink the standard streams to the
// default tty devices. however, if the standard streams
// have been overwritten we create a unique device for
// them instead.
if(Module['stdin']){FS.createDevice('/dev','stdin',Module['stdin']);}else{FS.symlink('/dev/tty','/dev/stdin');}if(Module['stdout']){FS.createDevice('/dev','stdout',null,Module['stdout']);}else{FS.symlink('/dev/tty','/dev/stdout');}if(Module['stderr']){FS.createDevice('/dev','stderr',null,Module['stderr']);}else{FS.symlink('/dev/tty1','/dev/stderr');}// open default streams for the stdin, stdout and stderr devices
var stdin=FS.open('/dev/stdin',0);var stdout=FS.open('/dev/stdout',1);var stderr=FS.open('/dev/stderr',1);assert(stdin.fd===0,'invalid handle for stdin ('+stdin.fd+')');assert(stdout.fd===1,'invalid handle for stdout ('+stdout.fd+')');assert(stderr.fd===2,'invalid handle for stderr ('+stderr.fd+')');},ensureErrnoError:function ensureErrnoError(){if(FS.ErrnoError)return;FS.ErrnoError=/** @this{Object} */function ErrnoError(errno,node){this.node=node;this.setErrno=/** @this{Object} */function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break;}}};this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];// Try to get a maximally helpful stack trace. On Node.js, getting Error.stack
// now ensures it shows what we want.
if(this.stack){// Define the stack property for Node.js 4, which otherwise errors on the next line.
Object.defineProperty(this,"stack",{value:new Error().stack,writable:true});this.stack=demangleAll(this.stack);}};FS.ErrnoError.prototype=new Error();FS.ErrnoError.prototype.constructor=FS.ErrnoError;// Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack='<generic error, no stack>';});},staticInit:function staticInit(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},'/');FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={'MEMFS':MEMFS,'IDBFS':IDBFS};},init:function init(input,output,error){assert(!FS.init.initialized,'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');FS.init.initialized=true;FS.ensureErrnoError();// Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
Module['stdin']=input||Module['stdin'];Module['stdout']=output||Module['stdout'];Module['stderr']=error||Module['stderr'];FS.createStandardStreams();},quit:function quit(){FS.init.initialized=false;// force-flush all streams, so we get musl std streams printed out
_fflush(0);// close all of our streams
for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue;}FS.close(stream);}},getMode:function getMode(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode;},findObject:function findObject(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null;}return ret.object;},analyzePath:function analyzePath(path,dontResolveLastLink){// operate from within the context of the symlink's target
try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path;}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==='/';}catch(e){ret.error=e.errno;};return ret;},createPath:function createPath(parent,path,canRead,canWrite){parent=typeof parent=='string'?parent:FS.getPath(parent);var parts=path.split('/').reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current);}catch(e){// ignore EEXIST
}parent=current;}return current;},createFile:function createFile(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent=='string'?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode);},createDataFile:function createDataFile(parent,name,data,canRead,canWrite,canOwn){var path=name;if(parent){parent=typeof parent=='string'?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent;}var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data=='string'){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr;}// make sure we can write to the file
FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode);}return node;},createDevice:function createDevice(parent,name,input,output){var path=PATH.join2(typeof parent=='string'?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);// Create a fake device that a set of stream ops to emulate
// the old behavior.
FS.registerDevice(dev,{open:function open(stream){stream.seekable=false;},close:function close(stream){// flush any pending line data
if(output&&output.buffer&&output.buffer.length){output(10);}},read:function read(stream,buffer,offset,length,pos/* ignored */){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input();}catch(e){throw new FS.ErrnoError(29);}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6);}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result;}if(bytesRead){stream.node.timestamp=Date.now();}return bytesRead;},write:function write(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i]);}catch(e){throw new FS.ErrnoError(29);}}if(length){stream.node.timestamp=Date.now();}return i;}});return FS.mkdev(path,mode,dev);},forceLoadFile:function forceLoadFile(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!='undefined'){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");}else if(read_){// Command-line.
try{// WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
//          read() will try to parse UTF8.
obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length;}catch(e){throw new FS.ErrnoError(29);}}else{throw new Error('Cannot load without read() or XMLHttpRequest.');}},createLazyFile:function createLazyFile(parent,name,url,canRead,canWrite){// Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
/** @constructor */function LazyUint8Array(){this.lengthKnown=false;this.chunks=[];// Loaded chunks. Index is the chunk number
}LazyUint8Array.prototype.get=/** @this{Object} */function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined;}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset];};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter;};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){// Find length
var xhr=new XMLHttpRequest();xhr.open('HEAD',url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;// Chunk size in bytes
if(!hasByteServing)chunkSize=datalength;// Function to get a range from the remote URL.
var doXHR=function doXHR(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");// TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
var xhr=new XMLHttpRequest();xhr.open('GET',url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);// Some hints to the browser that we want binary data.
xhr.responseType='arraybuffer';if(xhr.overrideMimeType){xhr.overrideMimeType('text/plain; charset=x-user-defined');}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(/** @type{Array<number>} */xhr.response||[]);}return intArrayFromString(xhr.responseText||'',true);};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;// including this byte
end=Math.min(end,datalength-1);// if datalength-1 is selected, this is the last block
if(typeof lazyArray.chunks[chunkNum]=='undefined'){lazyArray.chunks[chunkNum]=doXHR(start,end);}if(typeof lazyArray.chunks[chunkNum]=='undefined')throw new Error('doXHR failed!');return lazyArray.chunks[chunkNum];});if(usesGzip||!datalength){// if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
chunkSize=datalength=1;// this will force getter(0)/doXHR do download the whole file
datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed");}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true;};if(typeof XMLHttpRequest!='undefined'){if(!ENVIRONMENT_IS_WORKER)throw'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';var lazyArray=new LazyUint8Array();Object.defineProperties(lazyArray,{length:{get:/** @this{Object} */function get(){if(!this.lengthKnown){this.cacheLength();}return this._length;}},chunkSize:{get:/** @this{Object} */function get(){if(!this.lengthKnown){this.cacheLength();}return this._chunkSize;}}});var properties={isDevice:false,contents:lazyArray};}else{var properties={isDevice:false,url:url};}var node=FS.createFile(parent,name,properties,canRead,canWrite);// This is a total hack, but I want to get this lazy file code out of the
// core of MEMFS. If we want to keep this lazy file concept I feel it should
// be its own thin LAZYFS proxying calls to MEMFS.
if(properties.contents){node.contents=properties.contents;}else if(properties.url){node.contents=null;node.url=properties.url;}// Add a function that defers querying the file size until it is asked the first time.
Object.defineProperties(node,{usedBytes:{get:/** @this {FSNode} */function get(){return this.contents.length;}}});// override each stream op with one that tries to force load the lazy file first
var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments);};});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){// normal array
for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i];}}else{for(var i=0;i<size;i++){// LazyUint8Array from sync binary XHR
buffer[offset+i]=contents.get(position+i);}}return size;}// use a custom read function
stream_ops.read=function(stream,buffer,offset,length,position){FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position);};// use a custom mmap function
stream_ops.mmap=function(stream,length,position,prot,flags){FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48);}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true};};node.stream_ops=stream_ops;return node;},createPreloadedFile:function createPreloadedFile(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){// TODO we should allow people to just pass in a complete filename instead
// of parent and name being that we just join them anyways
var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency('cp '+fullname);// might have several active requests for the same fullname
function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn);}if(onload)onload();removeRunDependency(dep);}if(Browser.handledByPreloadPlugin(byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep);})){return;}finish(byteArray);}addRunDependency(dep);if(typeof url=='string'){asyncLoad(url,function(byteArray){return processData(byteArray);},onerror);}else{processData(url);}},indexedDB:function indexedDB(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;},DB_NAME:function DB_NAME(){return'EM_FS_'+window.location.pathname;},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function saveFilesToDB(paths){var onload=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){};var onerror=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION);}catch(e){return onerror(e);}openRequest.onupgradeneeded=function(){out('creating db');var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME);};openRequest.onsuccess=function(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],'readwrite');var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror();}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function(){ok++;if(ok+fail==total)finish();};putRequest.onerror=function(){fail++;if(ok+fail==total)finish();};});transaction.onerror=onerror;};openRequest.onerror=onerror;},loadFilesFromDB:function loadFilesFromDB(paths){var onload=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){};var onerror=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION);}catch(e){return onerror(e);}openRequest.onupgradeneeded=onerror;// no database to load from
openRequest.onsuccess=function(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],'readonly');}catch(e){onerror(e);return;}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror();}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function(){if(FS.analyzePath(path).exists){FS.unlink(path);}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish();};getRequest.onerror=function(){fail++;if(ok+fail==total)finish();};});transaction.onerror=onerror;};openRequest.onerror=onerror;},absolutePath:function absolutePath(){abort('FS.absolutePath has been removed; use PATH_FS.resolve instead');},createFolder:function createFolder(){abort('FS.createFolder has been removed; use FS.mkdir instead');},createLink:function createLink(){abort('FS.createLink has been removed; use FS.symlink instead');},joinPath:function joinPath(){abort('FS.joinPath has been removed; use PATH.join instead');},mmapAlloc:function mmapAlloc(){abort('FS.mmapAlloc has been replaced by the top level function mmapAlloc');},standardizePath:function standardizePath(){abort('FS.standardizePath has been removed; use PATH.normalize instead');}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function calculateAt(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path;}// relative path
var dir;if(dirfd===-100){dir=FS.cwd();}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path;}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44);;}return dir;}return PATH.join2(dir,path);},doStat:function doStat(func,path,buf){try{var stat=func(path);}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){// an error occurred while trying to look up the path; we should just report ENOTDIR
return-54;}throw e;}HEAP32[buf>>2]=stat.dev;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAPU32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;var atime=stat.atime.getTime();var mtime=stat.mtime.getTime();var ctime=stat.ctime.getTime();tempI64=[Math.floor(atime/1000)>>>0,(tempDouble=Math.floor(atime/1000),+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=atime%1000*1000;tempI64=[Math.floor(mtime/1000)>>>0,(tempDouble=Math.floor(mtime/1000),+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=mtime%1000*1000;tempI64=[Math.floor(ctime/1000)>>>0,(tempDouble=Math.floor(ctime/1000),+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];HEAPU32[buf+96>>2]=ctime%1000*1000;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+104>>2]=tempI64[0],HEAP32[buf+108>>2]=tempI64[1];return 0;},doMsync:function doMsync(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43);}if(flags&2){// MAP_PRIVATE calls need not to be synced back to underlying fs
return 0;}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags);},varargs:undefined,get:function get(){assert(SYSCALLS.varargs!=undefined);SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret;},getStr:function getStr(ptr){var ret=UTF8ToString(ptr);return ret;},getStreamFromFD:function getStreamFromFD(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream;}};function ___syscall_chmod(path,mode){try{path=SYSCALLS.getStr(path);FS.chmod(path,mode);return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_fchmod(fd,mode){try{FS.fchmod(fd,mode);return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value;}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28;}var newStream;newStream=FS.createStream(stream,arg);return newStream.fd;}case 1:case 2:return 0;// FD_CLOEXEC makes no sense for a single process.
case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0;}case 5:/* case 5: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */{var arg=SYSCALLS.get();var offset=0;// We're always unlocked.
HEAP16[arg+offset>>1]=2;return 0;}case 6:case 7:/* case 6: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ /* case 7: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */return 0;// Pretend that the locking is successful.
case 16:case 8:return-28;// These are for sockets. We don't have them fully implemented yet.
case 9:// musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.
setErrNo(28);return-1;default:{return-28;}}}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_fstat64(fd,buf){try{var stream=SYSCALLS.getStreamFromFD(fd);return SYSCALLS.doStat(FS.stat,stream.path,buf);}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function convertI32PairToI53Checked(lo,hi){assert(lo==lo>>>0||lo==(lo|0));// lo should either be a i32 or a u32
assert(hi===(hi|0));// hi should be a i32
return hi+0x200000>>>0<0x400001-!!lo?(lo>>>0)+hi*4294967296:NaN;}function ___syscall_ftruncate64(fd,length_low,length_high){try{var length=convertI32PairToI53Checked(length_low,length_high);if(isNaN(length))return-61;FS.ftruncate(fd,length);return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_getcwd(buf,size){try{if(size===0)return-28;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd)+1;if(size<cwdLengthInBytes)return-68;stringToUTF8(cwd,buf,size);return cwdLengthInBytes;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_getdents64(fd,dirp,count){try{var stream=SYSCALLS.getStreamFromFD(fd);if(!stream.getdents){stream.getdents=FS.readdir(stream.path);}var struct_size=280;var pos=0;var off=FS.llseek(stream,0,1);var idx=Math.floor(off/struct_size);while(idx<stream.getdents.length&&pos+struct_size<=count){var id;var type;var name=stream.getdents[idx];if(name==='.'){id=stream.node.id;type=4;// DT_DIR
}else if(name==='..'){var lookup=FS.lookupPath(stream.path,{parent:true});id=lookup.node.id;type=4;// DT_DIR
}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:// DT_CHR, character device.
FS.isDir(child.mode)?4:// DT_DIR, directory.
FS.isLink(child.mode)?10:// DT_LNK, symbolic link.
8;// DT_REG, regular file.
}assert(id);tempI64=[id>>>0,(tempDouble=id,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[dirp+pos>>2]=tempI64[0],HEAP32[dirp+pos+4>>2]=tempI64[1];tempI64=[(idx+1)*struct_size>>>0,(tempDouble=(idx+1)*struct_size,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[dirp+pos+8>>2]=tempI64[0],HEAP32[dirp+pos+12>>2]=tempI64[1];HEAP16[dirp+pos+16>>1]=280;HEAP8[dirp+pos+18>>0]=type;stringToUTF8(name,dirp+pos+19,256);pos+=struct_size;idx+=1;}FS.llseek(stream,idx*struct_size,0);return pos;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0;}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0;// no-op, not actually adjusting terminal settings
}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0;}case 21520:{if(!stream.tty)return-59;return-28;// not supported
}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp);}case 21523:{// TODO: in theory we should write to the winsize struct that gets
// passed in, but for now musl doesn't read anything on it
if(!stream.tty)return-59;return 0;}case 21524:{// TODO: technically, this ioctl call should change the window size.
// but, since emscripten doesn't have any concept of a terminal window
// yet, we'll just silently throw it away as we do TIOCGWINSZ
if(!stream.tty)return-59;return 0;}default:return-28;// not supported
}}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_lstat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.lstat,path,buf);}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_mkdirat(dirfd,path,mode){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);// remove a trailing slash, if one - /a/b/ has basename of '', but
// we want to create b in the context of this function
path=PATH.normalize(path);if(path[path.length-1]==='/')path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_newfstatat(dirfd,path,buf,flags){try{path=SYSCALLS.getStr(path);var nofollow=flags&256;var allowEmpty=flags&4096;flags=flags&~6400;assert(!flags,'unknown flags in __syscall_newfstatat: '+flags);path=SYSCALLS.calculateAt(dirfd,path,allowEmpty);return SYSCALLS.doStat(nofollow?FS.lstat:FS.stat,path,buf);}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_rmdir(path){try{path=SYSCALLS.getStr(path);FS.rmdir(path);return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_stat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.stat,path,buf);}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}function ___syscall_unlinkat(dirfd,path,flags){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(flags===0){FS.unlink(path);}else if(flags===512){FS.rmdir(path);}else{abort('Invalid flags passed to unlinkat');}return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return-e.errno;}}var nowIsMonotonic=true;;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic;}function readI53FromI64(ptr){return HEAPU32[ptr>>2]+HEAP32[ptr+4>>2]*4294967296;}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0);}var __MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335];var __MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334];function __yday_from_date(date){var isLeapYear=__isLeapYear(date.getFullYear());var monthDaysCumulative=isLeapYear?__MONTH_DAYS_LEAP_CUMULATIVE:__MONTH_DAYS_REGULAR_CUMULATIVE;var yday=monthDaysCumulative[date.getMonth()]+date.getDate()-1;// -1 since it's days since Jan 1
return yday;}function __localtime_js(time,tmPtr){var date=new Date(readI53FromI64(time)*1000);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var yday=__yday_from_date(date)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);// Attention: DST is in December in South, and some regions don't have DST at all.
var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst;}function __mktime_js(tmPtr){var date=new Date(HEAP32[tmPtr+20>>2]+1900,HEAP32[tmPtr+16>>2],HEAP32[tmPtr+12>>2],HEAP32[tmPtr+8>>2],HEAP32[tmPtr+4>>2],HEAP32[tmPtr>>2],0);// There's an ambiguous hour when the time goes back; the tm_isdst field is
// used to disambiguate it.  Date() basically guesses, so we fix it up if it
// guessed wrong, or fill in tm_isdst with the guess if it's -1.
var dst=HEAP32[tmPtr+32>>2];var guessedOffset=date.getTimezoneOffset();var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dstOffset=Math.min(winterOffset,summerOffset);// DST is in December in South
if(dst<0){// Attention: some regions don't have DST at all.
HEAP32[tmPtr+32>>2]=Number(summerOffset!=winterOffset&&dstOffset==guessedOffset);}else if(dst>0!=(dstOffset==guessedOffset)){var nonDstOffset=Math.max(winterOffset,summerOffset);var trueOffset=dst>0?dstOffset:nonDstOffset;// Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.
date.setTime(date.getTime()+(trueOffset-guessedOffset)*60000);}HEAP32[tmPtr+24>>2]=date.getDay();var yday=__yday_from_date(date)|0;HEAP32[tmPtr+28>>2]=yday;// To match expected behavior, update fields from date
HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getYear();return date.getTime()/1000|0;}function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret;}function __tzset_js(timezone,daylight,tzname){// TODO: Use (malleable) environment variables instead of system settings.
var currentYear=new Date().getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();// Local standard timezone offset. Local standard time is not adjusted for daylight savings.
// This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).
// Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).
var stdTimezoneOffset=Math.max(winterOffset,summerOffset);// timezone is specified as seconds west of UTC ("The external variable
// `timezone` shall be set to the difference, in seconds, between
// Coordinated Universal Time (UTC) and local standard time."), the same
// as returned by stdTimezoneOffset.
// See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
HEAPU32[timezone>>2]=stdTimezoneOffset*60;HEAP32[daylight>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match?match[1]:"GMT";};var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocateUTF8(winterName);var summerNamePtr=allocateUTF8(summerName);if(summerOffset<winterOffset){// Northern hemisphere
HEAPU32[tzname>>2]=winterNamePtr;HEAPU32[tzname+4>>2]=summerNamePtr;}else{HEAPU32[tzname>>2]=summerNamePtr;HEAPU32[tzname+4>>2]=winterNamePtr;}}function _abort(){abort('native code called abort()');}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){err('emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.');return 1;// Return non-zero on failure, can't set timing mode when there is no main loop.
}if(!Browser.mainLoop.running){Browser.mainLoop.running=true;}if(mode==0/*EM_TIMING_SETTIMEOUT*/){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick);// doing this each time means that on exception, we stop
};Browser.mainLoop.method='timeout';}else if(mode==1/*EM_TIMING_RAF*/){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner);};Browser.mainLoop.method='rAF';}else if(mode==2/*EM_TIMING_SETIMMEDIATE*/){if(typeof setImmediate=='undefined'){// Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)
var setImmediates=[];var emscriptenMainLoopMessageId='setimmediate';/** @param {Event} event */var Browser_setImmediate_messageHandler=function Browser_setImmediate_messageHandler(event){// When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,
// so check for both cases.
if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()();}};addEventListener("message",Browser_setImmediate_messageHandler,true);setImmediate=/** @type{function(function(): ?, ...?): number} */function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module['setImmediates']===undefined)Module['setImmediates']=[];Module['setImmediates'].push(func);postMessage({target:emscriptenMainLoopMessageId});// In --proxy-to-worker, route the message via proxyClient.js
}else postMessage(emscriptenMainLoopMessageId,"*");// On the main thread, can just send the message to itself.
};}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner);};Browser.mainLoop.method='immediate';}return 0;}var _emscripten_get_now;_emscripten_get_now=function _emscripten_get_now(){return performance.now();};;/**
     * @param {number=} arg
     * @param {boolean=} noSetTiming
     */function setMainLoop(browserIterationFunc,fps,simulateInfiniteLoop,arg,noSetTiming){assert(!Browser.mainLoop.func,'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');Browser.mainLoop.func=browserIterationFunc;Browser.mainLoop.arg=arg;var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;function checkIsRunning(){if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop){return false;}return true;}// We create the loop runner here but it is not actually running until
// _emscripten_set_main_loop_timing is called (which might happen a
// later time).  This member signifies that the current runner has not
// yet been started so that we can call runtimeKeepalivePush when it
// gets it timing set for the first time.
Browser.mainLoop.running=false;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next;}else{// not counted, but move the progress along a tiny bit
next=next+0.5;// do not steal all the next one's progress
Browser.mainLoop.remainingBlockers=(8*remaining+next)/9;}}out('main loop blocker "'+blocker.name+'" took '+(Date.now()-start)+' ms');//, left: ' + Browser.mainLoop.remainingBlockers);
Browser.mainLoop.updateStatus();// catches pause/resume main loop from blocker execution
if(!checkIsRunning())return;setTimeout(Browser.mainLoop.runner,0);return;}// catch pauses from non-main loop sources
if(!checkIsRunning())return;// Implement very basic swap interval control
Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1/*EM_TIMING_RAF*/&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){// Not the scheduled time to render this frame - skip.
Browser.mainLoop.scheduler();return;}else if(Browser.mainLoop.timingMode==0/*EM_TIMING_SETTIMEOUT*/){Browser.mainLoop.tickStartTime=_emscripten_get_now();}// Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
// VBO double-buffering and reduce GPU stalls.
GL.newRenderingFrameStarted();if(Browser.mainLoop.method==='timeout'&&Module.ctx){warnOnce('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');Browser.mainLoop.method='';// just warn once per call to set main loop
}Browser.mainLoop.runIter(browserIterationFunc);checkStackCookie();// catch pauses from the main loop itself
if(!checkIsRunning())return;// Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
// to queue the newest produced audio samples.
// TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
//       do not need to be hardcoded into this function, but can be more generic.
if((typeof SDL==="undefined"?"undefined":_typeof(SDL))=='object'&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler();};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/,1000.0/fps);else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/,1);// Do rAF by rendering each frame (no decimating)
Browser.mainLoop.scheduler();}if(simulateInfiniteLoop){throw'unwind';}}function handleException(e){// Certain exception types we do not treat as errors since they are used for
// internal control flow.
// 1. ExitStatus, which is thrown by exit()
// 2. "unwind", which is thrown by emscripten_unwind_to_js_event_loop() and others
//    that wish to return to JS event loop.
if(e instanceof ExitStatus||e=='unwind'){return EXITSTATUS;}checkStackCookie();if(e instanceof WebAssembly.RuntimeError){if(_emscripten_stack_get_current2()<=0){err('Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to '+65536+')');}}quit_(1,e);}function callUserCallback(func){if(ABORT){err('user callback triggered after runtime exited or application aborted.  Ignoring.');return;}try{func();}catch(e){handleException(e);}}/** @param {number=} timeout */function _safeSetTimeout(func,timeout){return setTimeout(function(){callUserCallback(func);},timeout);}var Browser={mainLoop:{running:false,scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function pause(){Browser.mainLoop.scheduler=null;// Incrementing this signals the previous main loop that it's now become old, and it must return.
Browser.mainLoop.currentlyRunningMainloop++;},resume:function resume(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;// do not set timing and call scheduler, we will do it on the next lines
setMainLoop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler();},updateStatus:function updateStatus(){if(Module['setStatus']){var message=Module['statusMessage']||'Please wait...';var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module['setStatus'](message+' ('+(expected-remaining)+'/'+expected+')');}else{Module['setStatus'](message);}}else{Module['setStatus']('');}}},runIter:function runIter(func){if(ABORT)return;if(Module['preMainLoop']){var preRet=Module['preMainLoop']();if(preRet===false){return;// |return false| skips a frame
}}callUserCallback(func);if(Module['postMainLoop'])Module['postMainLoop']();}},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function init(){if(!Module["preloadPlugins"])Module["preloadPlugins"]=[];// needs to exist even in workers
if(Browser.initted)return;Browser.initted=true;try{new Blob();Browser.hasBlobConstructor=true;}catch(e){Browser.hasBlobConstructor=false;err("warning: no blob constructor, cannot create blobs with mimetypes");}Browser.BlobBuilder=typeof MozBlobBuilder!="undefined"?MozBlobBuilder:typeof WebKitBlobBuilder!="undefined"?WebKitBlobBuilder:!Browser.hasBlobConstructor?err("warning: no BlobBuilder"):null;Browser.URLObject=typeof window!="undefined"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject=='undefined'){err("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");Module.noImageDecoding=true;}// Support for plugins that can process preloaded files. You can add more of these to
// your app by creating and appending to Module.preloadPlugins.
//
// Each plugin is asked if it can handle a file based on the file's name. If it can,
// it is given the file's raw data. When it is done, it calls a callback with the file's
// (possibly modified) data. For example, a plugin might decompress a file, or it
// might create some side data structure for use later (like an Image element, etc.).
var imagePlugin={};imagePlugin['canHandle']=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name);};imagePlugin['handle']=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){// Safari bug #118630
// Safari's Blob can only take an ArrayBuffer
b=new Blob([new Uint8Array(byteArray).buffer],{type:Browser.getMimetype(name)});}}catch(e){warnOnce('Blob constructor present but fails: '+e+'; falling back to blob builder');}}if(!b){var bb=new Browser.BlobBuilder();bb.append(new Uint8Array(byteArray).buffer);// we need to pass a buffer, and must copy the array to get the right data range
b=bb.getBlob();}var url=Browser.URLObject.createObjectURL(b);assert(typeof url=='string','createObjectURL must return a url as a string');var img=new Image();img.onload=function(){assert(img.complete,'Image '+name+' could not be decoded');var canvas=/** @type {!HTMLCanvasElement} */document.createElement('canvas');canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext('2d');ctx.drawImage(img,0,0);preloadedImages[name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray);};img.onerror=function(event){out('Image '+url+' could not be decoded');if(onerror)onerror();};img.src=url;};Module['preloadPlugins'].push(imagePlugin);var audioPlugin={};audioPlugin['canHandle']=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{'.ogg':1,'.wav':1,'.mp3':1};};audioPlugin['handle']=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;preloadedAudios[name]=audio;if(onload)onload(byteArray);}function fail(){if(done)return;done=true;preloadedAudios[name]=new Audio();// empty shim
if(onerror)onerror();}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)});}catch(e){return fail();}var url=Browser.URLObject.createObjectURL(b);// XXX we never revoke this!
assert(typeof url=='string','createObjectURL must return a url as a string');var audio=new Audio();audio.addEventListener('canplaythrough',function(){return finish(audio);},false);// use addEventListener due to chromium bug 124926
audio.onerror=function audio_onerror(event){if(done)return;err('warning: browser could not fully decode audio '+name+', trying slower base64 approach');function encode64(data){var BASE='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';var PAD='=';var ret='';var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&0x3f;leftbits-=6;ret+=BASE[curr];}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD;}else if(leftbits==4){ret+=BASE[(leftchar&0xf)<<2];ret+=PAD;}return ret;}audio.src='data:audio/x-'+name.substr(-3)+';base64,'+encode64(byteArray);finish(audio);// we don't wait for confirmation this worked - but it's worth trying
};audio.src=url;// workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
_safeSetTimeout(function(){finish(audio);// try to use it even though it is not necessarily ready to play
},10000);}else{return fail();}};Module['preloadPlugins'].push(audioPlugin);// Canvas event setup
function pointerLockChange(){Browser.pointerLock=document['pointerLockElement']===Module['canvas']||document['mozPointerLockElement']===Module['canvas']||document['webkitPointerLockElement']===Module['canvas']||document['msPointerLockElement']===Module['canvas'];}var canvas=Module['canvas'];if(canvas){// forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
// Module['forcedAspectRatio'] = 4 / 3;
canvas.requestPointerLock=canvas['requestPointerLock']||canvas['mozRequestPointerLock']||canvas['webkitRequestPointerLock']||canvas['msRequestPointerLock']||function(){};canvas.exitPointerLock=document['exitPointerLock']||document['mozExitPointerLock']||document['webkitExitPointerLock']||document['msExitPointerLock']||function(){};// no-op if function does not exist
canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener('pointerlockchange',pointerLockChange,false);document.addEventListener('mozpointerlockchange',pointerLockChange,false);document.addEventListener('webkitpointerlockchange',pointerLockChange,false);document.addEventListener('mspointerlockchange',pointerLockChange,false);if(Module['elementPointerLock']){canvas.addEventListener("click",function(ev){if(!Browser.pointerLock&&Module['canvas'].requestPointerLock){Module['canvas'].requestPointerLock();ev.preventDefault();}},false);}}},handledByPreloadPlugin:function handledByPreloadPlugin(byteArray,fullname,finish,onerror){// Ensure plugins are ready.
Browser.init();var handled=false;Module['preloadPlugins'].forEach(function(plugin){if(handled)return;if(plugin['canHandle'](fullname)){plugin['handle'](byteArray,fullname,finish,onerror);handled=true;}});return handled;},createContext:function createContext(/** @type {HTMLCanvasElement} */canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;// no need to recreate GL context if it's already been created for this canvas.
var ctx;var contextHandle;if(useWebGL){// For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
var contextAttributes={antialias:false,alpha:false,majorVersion:typeof WebGL2RenderingContext!='undefined'?2:1};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute];}}// This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not
// actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function
// Browser.createContext() should not even be emitted.
if(typeof GL!='undefined'){contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx;}}}else{ctx=canvas.getContext('2d');}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx=='undefined','cannot set in module if GLctx is used, but we are a non-GL context that would replace it');Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach(function(callback){callback();});Browser.init();}return ctx;},destroyContext:function destroyContext(canvas,useWebGL,setInModule){},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function requestFullscreen(lockPointer,resizeCanvas){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;if(typeof Browser.lockPointer=='undefined')Browser.lockPointer=true;if(typeof Browser.resizeCanvas=='undefined')Browser.resizeCanvas=false;var canvas=Module['canvas'];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document['fullscreenElement']||document['mozFullScreenElement']||document['msFullscreenElement']||document['webkitFullscreenElement']||document['webkitCurrentFullScreenElement'])===canvasContainer){canvas.exitFullscreen=Browser.exitFullscreen;if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize();}else{Browser.updateCanvasDimensions(canvas);}}else{// remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize();}else{Browser.updateCanvasDimensions(canvas);}}if(Module['onFullScreen'])Module['onFullScreen'](Browser.isFullscreen);if(Module['onFullscreen'])Module['onFullscreen'](Browser.isFullscreen);}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener('fullscreenchange',fullscreenChange,false);document.addEventListener('mozfullscreenchange',fullscreenChange,false);document.addEventListener('webkitfullscreenchange',fullscreenChange,false);document.addEventListener('MSFullscreenChange',fullscreenChange,false);}// create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);// use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
canvasContainer.requestFullscreen=canvasContainer['requestFullscreen']||canvasContainer['mozRequestFullScreen']||canvasContainer['msRequestFullscreen']||(canvasContainer['webkitRequestFullscreen']?function(){return canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']);}:null)||(canvasContainer['webkitRequestFullScreen']?function(){return canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']);}:null);canvasContainer.requestFullscreen();},requestFullScreen:function requestFullScreen(){abort('Module.requestFullScreen has been replaced by Module.requestFullscreen (without a capital S)');},exitFullscreen:function exitFullscreen(){// This is workaround for chrome. Trying to exit from fullscreen
// not in fullscreen state will cause "TypeError: Document not active"
// in chrome. See https://github.com/emscripten-core/emscripten/pull/8236
if(!Browser.isFullscreen){return false;}var CFS=document['exitFullscreen']||document['cancelFullScreen']||document['mozCancelFullScreen']||document['msExitFullscreen']||document['webkitCancelFullScreen']||function(){};CFS.apply(document,[]);return true;},nextRAF:0,fakeRequestAnimationFrame:function fakeRequestAnimationFrame(func){// try to keep 60fps between calls to here
var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1000/60;}else{while(now+2>=Browser.nextRAF){// fudge a little, to avoid timer jitter causing us to do lots of delay:0
Browser.nextRAF+=1000/60;}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay);},requestAnimationFrame:function(_requestAnimationFrame){function requestAnimationFrame(_x){return _requestAnimationFrame.apply(this,arguments);}requestAnimationFrame.toString=function(){return _requestAnimationFrame.toString();};return requestAnimationFrame;}(function(func){if(typeof requestAnimationFrame=='function'){requestAnimationFrame(func);return;}var RAF=Browser.fakeRequestAnimationFrame;RAF(func);}),safeSetTimeout:function safeSetTimeout(func,timeout){// Legacy function, this is used by the SDL2 port so we need to keep it
// around at least until that is updated.
// See https://github.com/libsdl-org/SDL/pull/6304
return _safeSetTimeout(func,timeout);},safeRequestAnimationFrame:function safeRequestAnimationFrame(func){return Browser.requestAnimationFrame(function(){callUserCallback(func);});},getMimetype:function getMimetype(name){return{'jpg':'image/jpeg','jpeg':'image/jpeg','png':'image/png','bmp':'image/bmp','ogg':'audio/ogg','wav':'audio/wav','mp3':'audio/mpeg'}[name.substr(name.lastIndexOf('.')+1)];},getUserMedia:function getUserMedia(func){if(!window.getUserMedia){window.getUserMedia=navigator['getUserMedia']||navigator['mozGetUserMedia'];}window.getUserMedia(func);},getMovementX:function getMovementX(event){return event['movementX']||event['mozMovementX']||event['webkitMovementX']||0;},getMovementY:function getMovementY(event){return event['movementY']||event['mozMovementY']||event['webkitMovementY']||0;},getMouseWheelDelta:function getMouseWheelDelta(event){var delta=0;switch(event.type){case'DOMMouseScroll':// 3 lines make up a step
delta=event.detail/3;break;case'mousewheel':// 120 units make up a step
delta=event.wheelDelta/120;break;case'wheel':delta=event.deltaY;switch(event.deltaMode){case 0:// DOM_DELTA_PIXEL: 100 pixels make up a step
delta/=100;break;case 1:// DOM_DELTA_LINE: 3 lines make up a step
delta/=3;break;case 2:// DOM_DELTA_PAGE: A page makes up 80 steps
delta*=80;break;default:throw'unrecognized mouse wheel delta mode: '+event.deltaMode;}break;default:throw'unrecognized mouse wheel event: '+event.type;}return delta;},mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function calculateMouseEvent(event){// event should be mousemove, mousedown or mouseup
if(Browser.pointerLock){// When the pointer is locked, calculate the coordinates
// based on the movement of the mouse.
// Workaround for Firefox bug 764498
if(event.type!='mousemove'&&'mozMovementX'in event){Browser.mouseMovementX=Browser.mouseMovementY=0;}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event);}// check if SDL is available
if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY;}else{// just add the mouse delta to the current absolut mouse position
// FIXME: ideally this should be clamped against the canvas size and zero
Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY;}}else{// Otherwise, calculate the movement based on the changes
// in the coordinates.
var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;// Neither .scrollX or .pageXOffset are defined in a spec, but
// we prefer .scrollX because it is currently in a spec draft.
// (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
var scrollX=typeof window.scrollX!='undefined'?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!='undefined'?window.scrollY:window.pageYOffset;// If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset
// and we have no viable fallback.
assert(typeof scrollX!='undefined'&&typeof scrollY!='undefined','Unable to retrieve scroll position, mouse positions likely broken.');if(event.type==='touchstart'||event.type==='touchend'||event.type==='touchmove'){var touch=event.touch;if(touch===undefined){return;// the "touch" property is only defined in SDL
}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==='touchstart'){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords;}else if(event.type==='touchend'||event.type==='touchmove'){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords;}return;}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);// the canvas might be CSS-scaled compared to its backbuffer;
// SDL-using content will want mouse coordinates in terms
// of backbuffer units.
x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y;}},resizeListeners:[],updateResizeListeners:function updateResizeListeners(){var canvas=Module['canvas'];Browser.resizeListeners.forEach(function(listener){listener(canvas.width,canvas.height);});},setCanvasSize:function setCanvasSize(width,height,noUpdates){var canvas=Module['canvas'];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners();},windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function setFullscreenCanvasSize(){// check if SDL is available
if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags|0x00800000;// set SDL_FULLSCREEN flag
HEAP32[SDL.screen>>2]=flags;}Browser.updateCanvasDimensions(Module['canvas']);Browser.updateResizeListeners();},setWindowedCanvasSize:function setWindowedCanvasSize(){// check if SDL is available
if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~0x00800000;// clear SDL_FULLSCREEN flag
HEAP32[SDL.screen>>2]=flags;}Browser.updateCanvasDimensions(Module['canvas']);Browser.updateResizeListeners();},updateCanvasDimensions:function updateCanvasDimensions(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative;}else{wNative=canvas.widthNative;hNative=canvas.heightNative;}var w=wNative;var h=hNative;if(Module['forcedAspectRatio']&&Module['forcedAspectRatio']>0){if(w/h<Module['forcedAspectRatio']){w=Math.round(h*Module['forcedAspectRatio']);}else{h=Math.round(w/Module['forcedAspectRatio']);}}if((document['fullscreenElement']||document['mozFullScreenElement']||document['msFullscreenElement']||document['webkitFullscreenElement']||document['webkitCurrentFullScreenElement'])===canvas.parentNode&&typeof screen!='undefined'){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor);}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!='undefined'){canvas.style.removeProperty("width");canvas.style.removeProperty("height");}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!='undefined'){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important");}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height");}}}}};var EGL={errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function setErrorCode(code){EGL.errorCode=code;},chooseConfig:function chooseConfig(display,attribList,config,config_size,numConfigs){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(attribList){// read attribList if it is non-null
for(;;){var param=HEAP32[attribList>>2];if(param==0x3021/*EGL_ALPHA_SIZE*/){var alphaSize=HEAP32[attribList+4>>2];EGL.contextAttributes.alpha=alphaSize>0;}else if(param==0x3025/*EGL_DEPTH_SIZE*/){var depthSize=HEAP32[attribList+4>>2];EGL.contextAttributes.depth=depthSize>0;}else if(param==0x3026/*EGL_STENCIL_SIZE*/){var stencilSize=HEAP32[attribList+4>>2];EGL.contextAttributes.stencil=stencilSize>0;}else if(param==0x3031/*EGL_SAMPLES*/){var samples=HEAP32[attribList+4>>2];EGL.contextAttributes.antialias=samples>0;}else if(param==0x3032/*EGL_SAMPLE_BUFFERS*/){var samples=HEAP32[attribList+4>>2];EGL.contextAttributes.antialias=samples==1;}else if(param==0x3100/*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/){var requestedPriority=HEAP32[attribList+4>>2];EGL.contextAttributes.lowLatency=requestedPriority!=0x3103/*EGL_CONTEXT_PRIORITY_LOW_IMG*/;}else if(param==0x3038/*EGL_NONE*/){break;}attribList+=8;}}if((!config||!config_size)&&!numConfigs){EGL.setErrorCode(0x300C/* EGL_BAD_PARAMETER */);return 0;}if(numConfigs){HEAP32[numConfigs>>2]=1;// Total number of supported configs: 1.
}if(config&&config_size>0){HEAP32[config>>2]=62002;}EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}};function _eglBindAPI(api){if(api==0x30A0/* EGL_OPENGL_ES_API */){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}// if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {
EGL.setErrorCode(0x300C/* EGL_BAD_PARAMETER */);return 0;}function _eglChooseConfig(display,attrib_list,configs,config_size,numConfigs){return EGL.chooseConfig(display,attrib_list,configs,config_size,numConfigs);}function __webgl_enable_ANGLE_instanced_arrays(ctx){// Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.
var ext=ctx.getExtension('ANGLE_instanced_arrays');if(ext){ctx['vertexAttribDivisor']=function(index,divisor){ext['vertexAttribDivisorANGLE'](index,divisor);};ctx['drawArraysInstanced']=function(mode,first,count,primcount){ext['drawArraysInstancedANGLE'](mode,first,count,primcount);};ctx['drawElementsInstanced']=function(mode,count,type,indices,primcount){ext['drawElementsInstancedANGLE'](mode,count,type,indices,primcount);};return 1;}}function __webgl_enable_OES_vertex_array_object(ctx){// Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.
var ext=ctx.getExtension('OES_vertex_array_object');if(ext){ctx['createVertexArray']=function(){return ext['createVertexArrayOES']();};ctx['deleteVertexArray']=function(vao){ext['deleteVertexArrayOES'](vao);};ctx['bindVertexArray']=function(vao){ext['bindVertexArrayOES'](vao);};ctx['isVertexArray']=function(vao){return ext['isVertexArrayOES'](vao);};return 1;}}function __webgl_enable_WEBGL_draw_buffers(ctx){// Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.
var ext=ctx.getExtension('WEBGL_draw_buffers');if(ext){ctx['drawBuffers']=function(n,bufs){ext['drawBuffersWEBGL'](n,bufs);};return 1;}}function __webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx){// Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.
return!!(ctx.dibvbi=ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));}function __webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx){// Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.
return!!(ctx.mdibvbi=ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));}function __webgl_enable_WEBGL_multi_draw(ctx){// Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.
return!!(ctx.multiDrawWebgl=ctx.getExtension('WEBGL_multi_draw'));}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode;}},getNewId:function getNewId(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null;}return ret;},MAX_TEMP_BUFFER_SIZE:2097152,numTempVertexBuffersPerSize:64,log2ceilLookup:function log2ceilLookup(i){return 32-Math.clz32(i===0?0:i-1);},generateTempBuffers:function generateTempBuffers(quads,context){var largestIndex=GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);context.tempVertexBufferCounters1=[];context.tempVertexBufferCounters2=[];context.tempVertexBufferCounters1.length=context.tempVertexBufferCounters2.length=largestIndex+1;context.tempVertexBuffers1=[];context.tempVertexBuffers2=[];context.tempVertexBuffers1.length=context.tempVertexBuffers2.length=largestIndex+1;context.tempIndexBuffers=[];context.tempIndexBuffers.length=largestIndex+1;for(var i=0;i<=largestIndex;++i){context.tempIndexBuffers[i]=null;// Created on-demand
context.tempVertexBufferCounters1[i]=context.tempVertexBufferCounters2[i]=0;var ringbufferLength=GL.numTempVertexBuffersPerSize;context.tempVertexBuffers1[i]=[];context.tempVertexBuffers2[i]=[];var ringbuffer1=context.tempVertexBuffers1[i];var ringbuffer2=context.tempVertexBuffers2[i];ringbuffer1.length=ringbuffer2.length=ringbufferLength;for(var j=0;j<ringbufferLength;++j){ringbuffer1[j]=ringbuffer2[j]=null;// Created on-demand
}}if(quads){// GL_QUAD indexes can be precalculated
context.tempQuadIndexBuffer=GLctx.createBuffer();context.GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,context.tempQuadIndexBuffer);var numIndexes=GL.MAX_TEMP_BUFFER_SIZE>>1;var quadIndexes=new Uint16Array(numIndexes);var i=0,v=0;while(1){quadIndexes[i++]=v;if(i>=numIndexes)break;quadIndexes[i++]=v+1;if(i>=numIndexes)break;quadIndexes[i++]=v+2;if(i>=numIndexes)break;quadIndexes[i++]=v;if(i>=numIndexes)break;quadIndexes[i++]=v+2;if(i>=numIndexes)break;quadIndexes[i++]=v+3;if(i>=numIndexes)break;v+=4;}context.GLctx.bufferData(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,quadIndexes,0x88E4/*GL_STATIC_DRAW*/);context.GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,null);}},getTempVertexBuffer:function getTempVertexBuffer(sizeBytes){var idx=GL.log2ceilLookup(sizeBytes);var ringbuffer=GL.currentContext.tempVertexBuffers1[idx];var nextFreeBufferIndex=GL.currentContext.tempVertexBufferCounters1[idx];GL.currentContext.tempVertexBufferCounters1[idx]=GL.currentContext.tempVertexBufferCounters1[idx]+1&GL.numTempVertexBuffersPerSize-1;var vbo=ringbuffer[nextFreeBufferIndex];if(vbo){return vbo;}var prevVBO=GLctx.getParameter(0x8894/*GL_ARRAY_BUFFER_BINDING*/);ringbuffer[nextFreeBufferIndex]=GLctx.createBuffer();GLctx.bindBuffer(0x8892/*GL_ARRAY_BUFFER*/,ringbuffer[nextFreeBufferIndex]);GLctx.bufferData(0x8892/*GL_ARRAY_BUFFER*/,1<<idx,0x88E8/*GL_DYNAMIC_DRAW*/);GLctx.bindBuffer(0x8892/*GL_ARRAY_BUFFER*/,prevVBO);return ringbuffer[nextFreeBufferIndex];},getTempIndexBuffer:function getTempIndexBuffer(sizeBytes){var idx=GL.log2ceilLookup(sizeBytes);var ibo=GL.currentContext.tempIndexBuffers[idx];if(ibo){return ibo;}var prevIBO=GLctx.getParameter(0x8895/*ELEMENT_ARRAY_BUFFER_BINDING*/);GL.currentContext.tempIndexBuffers[idx]=GLctx.createBuffer();GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,GL.currentContext.tempIndexBuffers[idx]);GLctx.bufferData(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,1<<idx,0x88E8/*GL_DYNAMIC_DRAW*/);GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,prevIBO);return GL.currentContext.tempIndexBuffers[idx];},newRenderingFrameStarted:function newRenderingFrameStarted(){if(!GL.currentContext){return;}var vb=GL.currentContext.tempVertexBuffers1;GL.currentContext.tempVertexBuffers1=GL.currentContext.tempVertexBuffers2;GL.currentContext.tempVertexBuffers2=vb;vb=GL.currentContext.tempVertexBufferCounters1;GL.currentContext.tempVertexBufferCounters1=GL.currentContext.tempVertexBufferCounters2;GL.currentContext.tempVertexBufferCounters2=vb;var largestIndex=GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);for(var i=0;i<=largestIndex;++i){GL.currentContext.tempVertexBufferCounters1[i]=0;}},getSource:function getSource(shader,count,string,length){var source='';for(var i=0;i<count;++i){var len=length?HEAP32[length+i*4>>2]:-1;source+=UTF8ToString(HEAP32[string+i*4>>2],len<0?undefined:len);}return source;},calcBufLength:function calcBufLength(size,type,stride,count){if(stride>0){return count*stride;// XXXvlad this is not exactly correct I don't think
}var typeSize=GL.byteSizeByType[type-GL.byteSizeByTypeRoot];return size*typeSize*count;},usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count){GL.resetBufferBinding=false;// TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib
for(var i=0;i<GL.currentContext.maxVertexAttribs;++i){var cb=GL.currentContext.clientBuffers[i];if(!cb.clientside||!cb.enabled)continue;GL.resetBufferBinding=true;var size=GL.calcBufLength(cb.size,cb.type,cb.stride,count);var buf=GL.getTempVertexBuffer(size);GLctx.bindBuffer(0x8892/*GL_ARRAY_BUFFER*/,buf);GLctx.bufferSubData(0x8892/*GL_ARRAY_BUFFER*/,0,HEAPU8.subarray(cb.ptr,cb.ptr+size));cb.vertexAttribPointerAdaptor.call(GLctx,i,cb.size,cb.type,cb.normalized,cb.stride,0);}},postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings(){if(GL.resetBufferBinding){GLctx.bindBuffer(0x8892/*GL_ARRAY_BUFFER*/,GL.buffers[GLctx.currentArrayBufferBinding]);}},createContext:function createContext(/** @type {HTMLCanvasElement} */canvas,webGLContextAttributes){// BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,
// calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'
// context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and
// https://github.com/emscripten-core/emscripten/issues/13295.
// TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.
if(!canvas.getContextSafariWebGL2Fixed){/** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */var fixedGetContext=function fixedGetContext(ver,attrs){var gl=canvas.getContextSafariWebGL2Fixed(ver,attrs);return ver=='webgl'==gl instanceof WebGLRenderingContext?gl:null;};canvas.getContextSafariWebGL2Fixed=canvas.getContext;canvas.getContext=fixedGetContext;}var ctx=webGLContextAttributes.majorVersion>1?canvas.getContext("webgl2",webGLContextAttributes):canvas.getContext("webgl",webGLContextAttributes)// https://caniuse.com/#feat=webgl
;if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle;},registerContext:function registerContext(ctx,webGLContextAttributes){// without pthreads a context is just an integer ID
var handle=GL.getNewId(GL.contexts);var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};// Store the created context object so that we can access the context given a canvas without having to pass the parameters again.
if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault=='undefined'||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context);}context.maxVertexAttribs=context.GLctx.getParameter(0x8869/*GL_MAX_VERTEX_ATTRIBS*/);context.clientBuffers=[];for(var i=0;i<context.maxVertexAttribs;i++){context.clientBuffers[i]={enabled:false,clientside:false,size:0,type:0,normalized:0,stride:0,ptr:0,vertexAttribPointerAdaptor:null};}GL.generateTempBuffers(false,context);return handle;},makeContextCurrent:function makeContextCurrent(contextHandle){GL.currentContext=GL.contexts[contextHandle];// Active Emscripten GL layer context object.
Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;// Active WebGL context object.
return!(contextHandle&&!GLctx);},getContext:function getContext(contextHandle){return GL.contexts[contextHandle];},deleteContext:function deleteContext(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(_typeof(JSEvents)=='object')JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);// Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.
if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;// Make sure the canvas object no longer refers to the context object so there are no GC surprises.
GL.contexts[contextHandle]=null;},initExtensions:function initExtensions(context){// If this function is called without a specific context object, init the extensions of the currently active context.
if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;// Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist.
// Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)
__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);// Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)
__webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);__webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);// On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative
// that's based on core APIs, and exposes only the queryCounterEXT()
// entrypoint.
if(context.version>=2){GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query_webgl2");}// However, Firefox exposes the WebGL 1 version on WebGL 2 as well and
// thus we look for the WebGL 1 version again if the WebGL 2 version
// isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882
if(context.version<2||!GLctx.disjointTimerQueryExt){GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query");}__webgl_enable_WEBGL_multi_draw(GLctx);// .getSupportedExtensions() can return null if context is lost, so coerce to empty array.
var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){// WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.
if(!ext.includes('lose_context')&&!ext.includes('debug')){// Call .getExtension() to enable that extension permanently.
GLctx.getExtension(ext);}});}};function _eglCreateContext(display,config,hmm,contextAttribs){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}// EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.
// So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.
var glesContextVersion=1;for(;;){var param=HEAP32[contextAttribs>>2];if(param==0x3098/*EGL_CONTEXT_CLIENT_VERSION*/){glesContextVersion=HEAP32[contextAttribs+4>>2];}else if(param==0x3038/*EGL_NONE*/){break;}else{/* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */EGL.setErrorCode(0x3004/*EGL_BAD_ATTRIBUTE*/);return 0;}contextAttribs+=8;}if(glesContextVersion<2||glesContextVersion>3){EGL.setErrorCode(0x3005/* EGL_BAD_CONFIG */);return 0;/* EGL_NO_CONTEXT */}EGL.contextAttributes.majorVersion=glesContextVersion-1;// WebGL 1 is GLES 2, WebGL2 is GLES3
EGL.contextAttributes.minorVersion=0;EGL.context=GL.createContext(Module['canvas'],EGL.contextAttributes);if(EGL.context!=0){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);// Run callbacks so that GL emulation works
GL.makeContextCurrent(EGL.context);Module.useWebGL=true;Browser.moduleContextCreatedCallbacks.forEach(function(callback){callback();});// Note: This function only creates a context, but it shall not make it active.
GL.makeContextCurrent(null);return 62004;// Magic ID for Emscripten EGLContext
}else{EGL.setErrorCode(0x3009/* EGL_BAD_MATCH */);// By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.
return 0;/* EGL_NO_CONTEXT */}}function _eglCreateWindowSurface(display,config,win,attrib_list){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(config!=62002/* Magic ID for the only EGLConfig supported by Emscripten */){EGL.setErrorCode(0x3005/* EGL_BAD_CONFIG */);return 0;}// TODO: Examine attrib_list! Parameters that can be present there are:
// - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)
// - EGL_VG_COLORSPACE (can't be set)
// - EGL_VG_ALPHA_FORMAT (can't be set)
EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 62006;/* Magic ID for Emscripten 'default surface' */}function _eglDestroyContext(display,context){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(context!=62004/* Magic ID for Emscripten EGLContext */){EGL.setErrorCode(0x3006/* EGL_BAD_CONTEXT */);return 0;}GL.deleteContext(EGL.context);EGL.setErrorCode(0x3000/* EGL_SUCCESS */);if(EGL.currentContext==context){EGL.currentContext=0;}return 1/* EGL_TRUE */;}function _eglDestroySurface(display,surface){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(surface!=62006/* Magic ID for the only EGLSurface supported by Emscripten */){EGL.setErrorCode(0x300D/* EGL_BAD_SURFACE */);return 1;}if(EGL.currentReadSurface==surface){EGL.currentReadSurface=0;}if(EGL.currentDrawSurface==surface){EGL.currentDrawSurface=0;}EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;/* Magic ID for Emscripten 'default surface' */}function _eglGetConfigAttrib(display,config,attribute,value){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(config!=62002/* Magic ID for the only EGLConfig supported by Emscripten */){EGL.setErrorCode(0x3005/* EGL_BAD_CONFIG */);return 0;}if(!value){EGL.setErrorCode(0x300C/* EGL_BAD_PARAMETER */);return 0;}EGL.setErrorCode(0x3000/* EGL_SUCCESS */);switch(attribute){case 0x3020:// EGL_BUFFER_SIZE
HEAP32[value>>2]=EGL.contextAttributes.alpha?32:24;return 1;case 0x3021:// EGL_ALPHA_SIZE
HEAP32[value>>2]=EGL.contextAttributes.alpha?8:0;return 1;case 0x3022:// EGL_BLUE_SIZE
HEAP32[value>>2]=8;return 1;case 0x3023:// EGL_GREEN_SIZE
HEAP32[value>>2]=8;return 1;case 0x3024:// EGL_RED_SIZE
HEAP32[value>>2]=8;return 1;case 0x3025:// EGL_DEPTH_SIZE
HEAP32[value>>2]=EGL.contextAttributes.depth?24:0;return 1;case 0x3026:// EGL_STENCIL_SIZE
HEAP32[value>>2]=EGL.contextAttributes.stencil?8:0;return 1;case 0x3027:// EGL_CONFIG_CAVEAT
// We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).
HEAP32[value>>2]=0x3038;return 1;case 0x3028:// EGL_CONFIG_ID
HEAP32[value>>2]=62002;return 1;case 0x3029:// EGL_LEVEL
HEAP32[value>>2]=0;return 1;case 0x302A:// EGL_MAX_PBUFFER_HEIGHT
HEAP32[value>>2]=4096;return 1;case 0x302B:// EGL_MAX_PBUFFER_PIXELS
HEAP32[value>>2]=16777216;return 1;case 0x302C:// EGL_MAX_PBUFFER_WIDTH
HEAP32[value>>2]=4096;return 1;case 0x302D:// EGL_NATIVE_RENDERABLE
HEAP32[value>>2]=0;return 1;case 0x302E:// EGL_NATIVE_VISUAL_ID
HEAP32[value>>2]=0;return 1;case 0x302F:// EGL_NATIVE_VISUAL_TYPE
HEAP32[value>>2]=0x3038;return 1;case 0x3031:// EGL_SAMPLES
HEAP32[value>>2]=EGL.contextAttributes.antialias?4:0;return 1;case 0x3032:// EGL_SAMPLE_BUFFERS
HEAP32[value>>2]=EGL.contextAttributes.antialias?1:0;return 1;case 0x3033:// EGL_SURFACE_TYPE
HEAP32[value>>2]=0x4;return 1;case 0x3034:// EGL_TRANSPARENT_TYPE
// If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.
HEAP32[value>>2]=0x3038;return 1;case 0x3035:// EGL_TRANSPARENT_BLUE_VALUE
case 0x3036:// EGL_TRANSPARENT_GREEN_VALUE
case 0x3037:// EGL_TRANSPARENT_RED_VALUE
// "If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined."
HEAP32[value>>2]=-1;return 1;case 0x3039:// EGL_BIND_TO_TEXTURE_RGB
case 0x303A:// EGL_BIND_TO_TEXTURE_RGBA
HEAP32[value>>2]=0;return 1;case 0x303B:// EGL_MIN_SWAP_INTERVAL
HEAP32[value>>2]=0;return 1;case 0x303C:// EGL_MAX_SWAP_INTERVAL
HEAP32[value>>2]=1;return 1;case 0x303D:// EGL_LUMINANCE_SIZE
case 0x303E:// EGL_ALPHA_MASK_SIZE
HEAP32[value>>2]=0;return 1;case 0x303F:// EGL_COLOR_BUFFER_TYPE
// EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.
HEAP32[value>>2]=0x308E;return 1;case 0x3040:// EGL_RENDERABLE_TYPE
// A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.
HEAP32[value>>2]=0x4;return 1;case 0x3042:// EGL_CONFORMANT
// "EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API."
HEAP32[value>>2]=0;return 1;default:EGL.setErrorCode(0x3004/* EGL_BAD_ATTRIBUTE */);return 0;}}function _eglGetDisplay(nativeDisplayType){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);// Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user
//       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported
//       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.
// Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation
// "emulates" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.
// Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.
//    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {
return 62000;// Magic ID for Emscripten 'default display'
//    }
//    else
//      return 0; // EGL_NO_DISPLAY
}function _eglGetError(){return EGL.errorCode;}function _eglInitialize(display,majorVersion,minorVersion){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(majorVersion){HEAP32[majorVersion>>2]=1;// Advertise EGL Major version: '1'
}if(minorVersion){HEAP32[minorVersion>>2]=4;// Advertise EGL Minor version: '4'
}EGL.defaultDisplayInitialized=true;EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}function _eglMakeCurrent(display,draw,read,context){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0/* EGL_FALSE */;}//\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.
if(context!=0&&context!=62004/* Magic ID for Emscripten EGLContext */){EGL.setErrorCode(0x3006/* EGL_BAD_CONTEXT */);return 0;}if(read!=0&&read!=62006||draw!=0&&draw!=62006/* Magic ID for Emscripten 'default surface' */){EGL.setErrorCode(0x300D/* EGL_BAD_SURFACE */);return 0;}GL.makeContextCurrent(context?EGL.context:null);EGL.currentContext=context;EGL.currentDrawSurface=draw;EGL.currentReadSurface=read;EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1/* EGL_TRUE */;}function _eglQueryString(display,name){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}//\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.
EGL.setErrorCode(0x3000/* EGL_SUCCESS */);if(EGL.stringCache[name])return EGL.stringCache[name];var ret;switch(name){case 0x3053/* EGL_VENDOR */:ret=allocateUTF8("Emscripten");break;case 0x3054/* EGL_VERSION */:ret=allocateUTF8("1.4 Emscripten EGL");break;case 0x3055/* EGL_EXTENSIONS */:ret=allocateUTF8("");break;// Currently not supporting any EGL extensions.
case 0x308D/* EGL_CLIENT_APIS */:ret=allocateUTF8("OpenGL_ES");break;default:EGL.setErrorCode(0x300C/* EGL_BAD_PARAMETER */);return 0;}EGL.stringCache[name]=ret;return ret;}function _eglSwapBuffers(){if(!EGL.defaultDisplayInitialized){EGL.setErrorCode(0x3001/* EGL_NOT_INITIALIZED */);}else if(!Module.ctx){EGL.setErrorCode(0x3002/* EGL_BAD_ACCESS */);}else if(Module.ctx.isContextLost()){EGL.setErrorCode(0x300E/* EGL_CONTEXT_LOST */);}else{// According to documentation this does an implicit flush.
// Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871
// the flush was removed since this _may_ result in slowing code down.
//_glFlush();
EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1/* EGL_TRUE */;}return 0/* EGL_FALSE */;}function _eglSwapInterval(display,interval){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(interval==0)_emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/,0);else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/,interval);EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}function _eglTerminate(display){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}EGL.currentContext=0;EGL.currentReadSurface=0;EGL.currentDrawSurface=0;EGL.defaultDisplayInitialized=false;EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}function _eglWaitClient(){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}var _eglWaitGL=_eglWaitClient;function _eglWaitNative(nativeEngineId){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}var readEmAsmArgsArray=[];function readEmAsmArgs(sigPtr,buf){// Nobody should have mutated _readEmAsmArgsArray underneath us to be something else than an array.
assert(Array.isArray(readEmAsmArgsArray));// The input buffer is allocated on the stack, so it must be stack-aligned.
assert(buf%16==0);readEmAsmArgsArray.length=0;var ch;// Most arguments are i32s, so shift the buffer pointer so it is a plain
// index into HEAP32.
buf>>=2;while(ch=HEAPU8[sigPtr++]){var chr=String.fromCharCode(ch);var validChars=['d','f','i'];assert(validChars.includes(chr),'Invalid character '+ch+'("'+chr+'") in readEmAsmArgs! Use only ['+validChars+'], and do not specify "v" for void return argument.');// Floats are always passed as doubles, and doubles and int64s take up 8
// bytes (two 32-bit slots) in memory, align reads to these:
buf+=ch!=105/*i*/&buf;readEmAsmArgsArray.push(ch==105/*i*/?HEAP32[buf]:HEAPF64[buf++>>1]);++buf;}return readEmAsmArgsArray;}function runEmAsmFunction(code,sigPtr,argbuf){var args=readEmAsmArgs(sigPtr,argbuf);if(!ASM_CONSTS.hasOwnProperty(code))abort('No EM_ASM constant found at address '+code);return ASM_CONSTS[code].apply(null,args);}function _emscripten_asm_const_int(code,sigPtr,argbuf){return runEmAsmFunction(code,sigPtr,argbuf);}function runMainThreadEmAsm(code,sigPtr,argbuf,sync){var args=readEmAsmArgs(sigPtr,argbuf);if(!ASM_CONSTS.hasOwnProperty(code))abort('No EM_ASM constant found at address '+code);return ASM_CONSTS[code].apply(null,args);}function _emscripten_asm_const_int_sync_on_main_thread(code,sigPtr,argbuf){return runMainThreadEmAsm(code,sigPtr,argbuf,1);}function _emscripten_date_now(){return Date.now();}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret;}var JSEvents={inEventHandler:0,removeAllEventListeners:function removeAllEventListeners(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i);}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[];},registerRemoveEventListeners:function registerRemoveEventListeners(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true;}},deferredCalls:[],deferCall:function deferCall(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false;}return true;}// Test if the given call was already queued, and if so, don't add it again.
for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return;}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence;});},removeDeferredCalls:function removeDeferredCalls(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i;}}},canPerformEventHandlerRequests:function canPerformEventHandlerRequests(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls;},runDeferredCalls:function runDeferredCalls(){if(!JSEvents.canPerformEventHandlerRequests()){return;}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList);}},eventHandlers:[],removeAllHandlersOnTarget:function removeAllHandlersOnTarget(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--);}}},_removeHandler:function _removeHandler(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1);},registerOrRemoveHandler:function registerOrRemoveHandler(eventHandler){var jsEventHandler=function jsEventHandler(event){// Increment nesting count for the event handler.
++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;// Process any old deferred calls the user has placed.
JSEvents.runDeferredCalls();// Process the actual event, calls back to user C code handler.
eventHandler.handlerFunc(event);// Process any new deferred calls that were placed right now from this event handler.
JSEvents.runDeferredCalls();// Out of event handler - restore nesting count.
--JSEvents.inEventHandler;};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners();}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--);}}}},getNodeNameForTarget:function getNodeNameForTarget(target){if(!target)return'';if(target==window)return'#window';if(target==screen)return'#screen';return target&&target.nodeName?target.nodeName:'';},fullscreenEnabled:function fullscreenEnabled(){return document.fullscreenEnabled// Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.
// TODO: If Safari at some point ships with unprefixed version, update the version check above.
||document.webkitFullscreenEnabled;}};var currentFullscreenStrategy={};function maybeCStringToJsString(cString){// "cString > 2" checks if the input is a number, and isn't of the special
// values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).
// In other words, if cString > 2 then it's a pointer to a valid place in
// memory, and points to a C string.
return cString>2?UTF8ToString(cString):cString;}var specialHTMLTargets=[0,document,window];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||document.querySelector(target);return domElement;}function findCanvasEventTarget(target){return findEventTarget(target);}function _emscripten_get_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;HEAP32[width>>2]=canvas.width;HEAP32[height>>2]=canvas.height;}function getCanvasElementSize(target){return withStackSave(function(){var w=stackAlloc(8);var h=w+4;var targetInt=stackAlloc(target.id.length+1);stringToUTF8(target.id,targetInt,target.id.length+1);var ret=_emscripten_get_canvas_element_size(targetInt,w,h);var size=[HEAP32[w>>2],HEAP32[h>>2]];return size;});}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;canvas.width=width;canvas.height=height;return 0;}function setCanvasElementSize(target,width,height){if(!target.controlTransferredOffscreen){target.width=width;target.height=height;}else{// This function is being called from high-level JavaScript code instead of asm.js/Wasm,
// and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.
withStackSave(function(){var targetInt=stackAlloc(target.id.length+1);stringToUTF8(target.id,targetInt,target.id.length+1);_emscripten_set_canvas_element_size(targetInt,width,height);});}}function registerRestoreOldStyle(canvas){var canvasSize=getCanvasElementSize(canvas);var oldWidth=canvasSize[0];var oldHeight=canvasSize[1];var oldCssWidth=canvas.style.width;var oldCssHeight=canvas.style.height;var oldBackgroundColor=canvas.style.backgroundColor;// Chrome reads color from here.
var oldDocumentBackgroundColor=document.body.style.backgroundColor;// IE11 reads color from here.
// Firefox always has black background color.
var oldPaddingLeft=canvas.style.paddingLeft;// Chrome, FF, Safari
var oldPaddingRight=canvas.style.paddingRight;var oldPaddingTop=canvas.style.paddingTop;var oldPaddingBottom=canvas.style.paddingBottom;var oldMarginLeft=canvas.style.marginLeft;// IE11
var oldMarginRight=canvas.style.marginRight;var oldMarginTop=canvas.style.marginTop;var oldMarginBottom=canvas.style.marginBottom;var oldDocumentBodyMargin=document.body.style.margin;var oldDocumentOverflow=document.documentElement.style.overflow;// Chrome, Firefox
var oldDocumentScroll=document.body.scroll;// IE
var oldImageRendering=canvas.style.imageRendering;function restoreOldStyle(){var fullscreenElement=document.fullscreenElement||document.webkitFullscreenElement;if(!fullscreenElement){document.removeEventListener('fullscreenchange',restoreOldStyle);// Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)
// As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.
document.removeEventListener('webkitfullscreenchange',restoreOldStyle);setCanvasElementSize(canvas,oldWidth,oldHeight);canvas.style.width=oldCssWidth;canvas.style.height=oldCssHeight;canvas.style.backgroundColor=oldBackgroundColor;// Chrome
// IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color
// before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user
// had explicitly set so subsequent fullscreen transitions would not set background color properly.
if(!oldDocumentBackgroundColor)document.body.style.backgroundColor='white';document.body.style.backgroundColor=oldDocumentBackgroundColor;// IE11
canvas.style.paddingLeft=oldPaddingLeft;// Chrome, FF, Safari
canvas.style.paddingRight=oldPaddingRight;canvas.style.paddingTop=oldPaddingTop;canvas.style.paddingBottom=oldPaddingBottom;canvas.style.marginLeft=oldMarginLeft;// IE11
canvas.style.marginRight=oldMarginRight;canvas.style.marginTop=oldMarginTop;canvas.style.marginBottom=oldMarginBottom;document.body.style.margin=oldDocumentBodyMargin;document.documentElement.style.overflow=oldDocumentOverflow;// Chrome, Firefox
document.body.scroll=oldDocumentScroll;// IE
canvas.style.imageRendering=oldImageRendering;if(canvas.GLctxObject)canvas.GLctxObject.GLctx.viewport(0,0,oldWidth,oldHeight);if(currentFullscreenStrategy.canvasResizedCallback){getWasmTableEntry(currentFullscreenStrategy.canvasResizedCallback)(37,0,currentFullscreenStrategy.canvasResizedCallbackUserData);}}}document.addEventListener('fullscreenchange',restoreOldStyle);// Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)
// As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.
document.addEventListener('webkitfullscreenchange',restoreOldStyle);return restoreOldStyle;}function setLetterbox(element,topBottom,leftRight){// Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.
element.style.paddingLeft=element.style.paddingRight=leftRight+'px';element.style.paddingTop=element.style.paddingBottom=topBottom+'px';}function getBoundingClientRect(e){return specialHTMLTargets.indexOf(e)<0?e.getBoundingClientRect():{'left':0,'top':0};}function JSEvents_resizeCanvasForFullscreen(target,strategy){var restoreOldStyle=registerRestoreOldStyle(target);var cssWidth=strategy.softFullscreen?innerWidth:screen.width;var cssHeight=strategy.softFullscreen?innerHeight:screen.height;var rect=getBoundingClientRect(target);var windowedCssWidth=rect.width;var windowedCssHeight=rect.height;var canvasSize=getCanvasElementSize(target);var windowedRttWidth=canvasSize[0];var windowedRttHeight=canvasSize[1];if(strategy.scaleMode==3){setLetterbox(target,(cssHeight-windowedCssHeight)/2,(cssWidth-windowedCssWidth)/2);cssWidth=windowedCssWidth;cssHeight=windowedCssHeight;}else if(strategy.scaleMode==2){if(cssWidth*windowedRttHeight<windowedRttWidth*cssHeight){var desiredCssHeight=windowedRttHeight*cssWidth/windowedRttWidth;setLetterbox(target,(cssHeight-desiredCssHeight)/2,0);cssHeight=desiredCssHeight;}else{var desiredCssWidth=windowedRttWidth*cssHeight/windowedRttHeight;setLetterbox(target,0,(cssWidth-desiredCssWidth)/2);cssWidth=desiredCssWidth;}}// If we are adding padding, must choose a background color or otherwise Chrome will give the
// padding a default white color. Do it only if user has not customized their own background color.
if(!target.style.backgroundColor)target.style.backgroundColor='black';// IE11 does the same, but requires the color to be set in the document body.
if(!document.body.style.backgroundColor)document.body.style.backgroundColor='black';// IE11
// Firefox always shows black letterboxes independent of style color.
target.style.width=cssWidth+'px';target.style.height=cssHeight+'px';if(strategy.filteringMode==1){target.style.imageRendering='optimizeSpeed';target.style.imageRendering='-moz-crisp-edges';target.style.imageRendering='-o-crisp-edges';target.style.imageRendering='-webkit-optimize-contrast';target.style.imageRendering='optimize-contrast';target.style.imageRendering='crisp-edges';target.style.imageRendering='pixelated';}var dpiScale=strategy.canvasResolutionScaleMode==2?devicePixelRatio:1;if(strategy.canvasResolutionScaleMode!=0){var newWidth=cssWidth*dpiScale|0;var newHeight=cssHeight*dpiScale|0;setCanvasElementSize(target,newWidth,newHeight);if(target.GLctxObject)target.GLctxObject.GLctx.viewport(0,0,newWidth,newHeight);}return restoreOldStyle;}function JSEvents_requestFullscreen(target,strategy){// EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.
if(strategy.scaleMode!=0||strategy.canvasResolutionScaleMode!=0){JSEvents_resizeCanvasForFullscreen(target,strategy);}if(target.requestFullscreen){target.requestFullscreen();}else if(target.webkitRequestFullscreen){target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);}else{return JSEvents.fullscreenEnabled()?-3:-1;}currentFullscreenStrategy=strategy;if(strategy.canvasResizedCallback){getWasmTableEntry(strategy.canvasResizedCallback)(37,0,strategy.canvasResizedCallbackUserData);}return 0;}function _emscripten_exit_fullscreen(){if(!JSEvents.fullscreenEnabled())return-1;// Make sure no queued up calls will fire after this.
JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);var d=specialHTMLTargets[1];if(d.exitFullscreen){d.fullscreenElement&&d.exitFullscreen();}else if(d.webkitExitFullscreen){d.webkitFullscreenElement&&d.webkitExitFullscreen();}else{return-1;}return 0;}function requestPointerLock(target){if(target.requestPointerLock){target.requestPointerLock();}else{// document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,
// or if the whole browser just doesn't support the feature.
if(document.body.requestPointerLock){return-3;}return-1;}return 0;}function _emscripten_exit_pointerlock(){// Make sure no queued up calls will fire after this.
JSEvents.removeDeferredCalls(requestPointerLock);if(document.exitPointerLock){document.exitPointerLock();}else{return-1;}return 0;}function _emscripten_get_device_pixel_ratio(){return devicePixelRatio;}function _emscripten_get_element_css_size(target,width,height){target=findEventTarget(target);if(!target)return-4;var rect=getBoundingClientRect(target);HEAPF64[width>>3]=rect.width;HEAPF64[height>>3]=rect.height;return 0;}function fillGamepadEventData(eventStruct,e){HEAPF64[eventStruct>>3]=e.timestamp;for(var i=0;i<e.axes.length;++i){HEAPF64[eventStruct+i*8+16>>3]=e.axes[i];}for(var i=0;i<e.buttons.length;++i){if(_typeof(e.buttons[i])=='object'){HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i].value;}else{HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i];}}for(var i=0;i<e.buttons.length;++i){if(_typeof(e.buttons[i])=='object'){HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i].pressed;}else{// Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:
/** @suppress {checkTypes} */HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i]==1;}}HEAP32[eventStruct+1296>>2]=e.connected;HEAP32[eventStruct+1300>>2]=e.index;HEAP32[eventStruct+8>>2]=e.axes.length;HEAP32[eventStruct+12>>2]=e.buttons.length;stringToUTF8(e.id,eventStruct+1304,64);stringToUTF8(e.mapping,eventStruct+1368,64);}function _emscripten_get_gamepad_status(index,gamepadState){if(!JSEvents.lastGamepadState)throw'emscripten_get_gamepad_status() can only be called after having first called emscripten_sample_gamepad_data() and that function has returned EMSCRIPTEN_RESULT_SUCCESS!';// INVALID_PARAM is returned on a Gamepad index that never was there.
if(index<0||index>=JSEvents.lastGamepadState.length)return-5;// NO_DATA is returned on a Gamepad index that was removed.
// For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.
// This is because gamepads must keep their original position in the array.
// For example, removing the first of two gamepads produces [null/undefined/false, gamepad].
if(!JSEvents.lastGamepadState[index])return-7;fillGamepadEventData(gamepadState,JSEvents.lastGamepadState[index]);return 0;}function _emscripten_get_num_gamepads(){if(!JSEvents.lastGamepadState)throw'emscripten_get_num_gamepads() can only be called after having first called emscripten_sample_gamepad_data() and that function has returned EMSCRIPTEN_RESULT_SUCCESS!';// N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.
// Otherwise the following line will throw an exception.
return JSEvents.lastGamepadState.length;}function _emscripten_get_screen_size(width,height){HEAP32[width>>2]=screen.width;HEAP32[height>>2]=screen.height;}function _emscripten_glActiveTexture(x0){GLctx['activeTexture'](x0);}function _emscripten_glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader]);}function _emscripten_glBeginQuery(target,id){GLctx['beginQuery'](target,GL.queries[id]);}function _emscripten_glBeginQueryEXT(target,id){GLctx.disjointTimerQueryExt['beginQueryEXT'](target,GL.queries[id]);}function _emscripten_glBeginTransformFeedback(x0){GLctx['beginTransformFeedback'](x0);}function _emscripten_glBindAttribLocation(program,index,name){GLctx.bindAttribLocation(GL.programs[program],index,UTF8ToString(name));}function _emscripten_glBindBuffer(target,buffer){if(target==0x8892/*GL_ARRAY_BUFFER*/){GLctx.currentArrayBufferBinding=buffer;}else if(target==0x8893/*GL_ELEMENT_ARRAY_BUFFER*/){GLctx.currentElementArrayBufferBinding=buffer;}if(target==0x88EB/*GL_PIXEL_PACK_BUFFER*/){// In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to
// GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is
// the proper API function to call.
GLctx.currentPixelPackBufferBinding=buffer;}else if(target==0x88EC/*GL_PIXEL_UNPACK_BUFFER*/){// In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to
// use a different WebGL 2 API function call when a buffer is bound to
// GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that
// binding point is non-null to know what is the proper API function to
// call.
GLctx.currentPixelUnpackBufferBinding=buffer;}GLctx.bindBuffer(target,GL.buffers[buffer]);}function _emscripten_glBindBufferBase(target,index,buffer){GLctx['bindBufferBase'](target,index,GL.buffers[buffer]);}function _emscripten_glBindBufferRange(target,index,buffer,offset,ptrsize){GLctx['bindBufferRange'](target,index,GL.buffers[buffer],offset,ptrsize);}function _emscripten_glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,GL.framebuffers[framebuffer]);}function _emscripten_glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,GL.renderbuffers[renderbuffer]);}function _emscripten_glBindSampler(unit,sampler){GLctx['bindSampler'](unit,GL.samplers[sampler]);}function _emscripten_glBindTexture(target,texture){GLctx.bindTexture(target,GL.textures[texture]);}function _emscripten_glBindTransformFeedback(target,id){GLctx['bindTransformFeedback'](target,GL.transformFeedbacks[id]);}function _emscripten_glBindVertexArray(vao){GLctx['bindVertexArray'](GL.vaos[vao]);var ibo=GLctx.getParameter(0x8895/*ELEMENT_ARRAY_BUFFER_BINDING*/);GLctx.currentElementArrayBufferBinding=ibo?ibo.name|0:0;}function _emscripten_glBindVertexArrayOES(vao){GLctx['bindVertexArray'](GL.vaos[vao]);var ibo=GLctx.getParameter(0x8895/*ELEMENT_ARRAY_BUFFER_BINDING*/);GLctx.currentElementArrayBufferBinding=ibo?ibo.name|0:0;}function _emscripten_glBlendColor(x0,x1,x2,x3){GLctx['blendColor'](x0,x1,x2,x3);}function _emscripten_glBlendEquation(x0){GLctx['blendEquation'](x0);}function _emscripten_glBlendEquationSeparate(x0,x1){GLctx['blendEquationSeparate'](x0,x1);}function _emscripten_glBlendFunc(x0,x1){GLctx['blendFunc'](x0,x1);}function _emscripten_glBlendFuncSeparate(x0,x1,x2,x3){GLctx['blendFuncSeparate'](x0,x1,x2,x3);}function _emscripten_glBlitFramebuffer(x0,x1,x2,x3,x4,x5,x6,x7,x8,x9){GLctx['blitFramebuffer'](x0,x1,x2,x3,x4,x5,x6,x7,x8,x9);}function _emscripten_glBufferData(target,size,data,usage){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
// If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would
// not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a
// backing storage of zero bytes.
if(data&&size){GLctx.bufferData(target,HEAPU8,usage,data,size);}else{GLctx.bufferData(target,size,usage);}}else{// N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid
// randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.
GLctx.bufferData(target,data?HEAPU8.subarray(data,data+size):size,usage);}}function _emscripten_glBufferSubData(target,offset,size,data){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
size&&GLctx.bufferSubData(target,offset,HEAPU8,data,size);return;}GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size));}function _emscripten_glCheckFramebufferStatus(x0){return GLctx['checkFramebufferStatus'](x0);}function _emscripten_glClear(x0){GLctx['clear'](x0);}function _emscripten_glClearBufferfi(x0,x1,x2,x3){GLctx['clearBufferfi'](x0,x1,x2,x3);}function _emscripten_glClearBufferfv(buffer,drawbuffer,value){GLctx['clearBufferfv'](buffer,drawbuffer,HEAPF32,value>>2);}function _emscripten_glClearBufferiv(buffer,drawbuffer,value){GLctx['clearBufferiv'](buffer,drawbuffer,HEAP32,value>>2);}function _emscripten_glClearBufferuiv(buffer,drawbuffer,value){GLctx['clearBufferuiv'](buffer,drawbuffer,HEAPU32,value>>2);}function _emscripten_glClearColor(x0,x1,x2,x3){GLctx['clearColor'](x0,x1,x2,x3);}function _emscripten_glClearDepthf(x0){GLctx['clearDepth'](x0);}function _emscripten_glClearStencil(x0){GLctx['clearStencil'](x0);}function convertI32PairToI53(lo,hi){// This function should not be getting called with too large unsigned numbers
// in high part (if hi >= 0x7FFFFFFFF, one should have been calling
// convertU32PairToI53())
assert(hi===(hi|0));return(lo>>>0)+hi*4294967296;}function _emscripten_glClientWaitSync(sync,flags,timeout_low,timeout_high){// WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.
// In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.
// Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)
// See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15
var timeout=convertI32PairToI53(timeout_low,timeout_high);return GLctx.clientWaitSync(GL.syncs[sync],flags,timeout);}function _emscripten_glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha);}function _emscripten_glCompileShader(shader){GLctx.compileShader(GL.shaders[shader]);}function _emscripten_glCompressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelUnpackBufferBinding||!imageSize){GLctx['compressedTexImage2D'](target,level,internalFormat,width,height,border,imageSize,data);}else{GLctx['compressedTexImage2D'](target,level,internalFormat,width,height,border,HEAPU8,data,imageSize);}return;}GLctx['compressedTexImage2D'](target,level,internalFormat,width,height,border,data?HEAPU8.subarray(data,data+imageSize):null);}function _emscripten_glCompressedTexImage3D(target,level,internalFormat,width,height,depth,border,imageSize,data){if(GLctx.currentPixelUnpackBufferBinding){GLctx['compressedTexImage3D'](target,level,internalFormat,width,height,depth,border,imageSize,data);}else{GLctx['compressedTexImage3D'](target,level,internalFormat,width,height,depth,border,HEAPU8,data,imageSize);}}function _emscripten_glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelUnpackBufferBinding||!imageSize){GLctx['compressedTexSubImage2D'](target,level,xoffset,yoffset,width,height,format,imageSize,data);}else{GLctx['compressedTexSubImage2D'](target,level,xoffset,yoffset,width,height,format,HEAPU8,data,imageSize);}return;}GLctx['compressedTexSubImage2D'](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null);}function _emscripten_glCompressedTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data){if(GLctx.currentPixelUnpackBufferBinding){GLctx['compressedTexSubImage3D'](target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data);}else{GLctx['compressedTexSubImage3D'](target,level,xoffset,yoffset,zoffset,width,height,depth,format,HEAPU8,data,imageSize);}}function _emscripten_glCopyBufferSubData(x0,x1,x2,x3,x4){GLctx['copyBufferSubData'](x0,x1,x2,x3,x4);}function _emscripten_glCopyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx['copyTexImage2D'](x0,x1,x2,x3,x4,x5,x6,x7);}function _emscripten_glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx['copyTexSubImage2D'](x0,x1,x2,x3,x4,x5,x6,x7);}function _emscripten_glCopyTexSubImage3D(x0,x1,x2,x3,x4,x5,x6,x7,x8){GLctx['copyTexSubImage3D'](x0,x1,x2,x3,x4,x5,x6,x7,x8);}function _emscripten_glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();// Store additional information needed for each shader program:
program.name=id;// Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)
program.maxUniformLength=program.maxAttributeLength=program.maxUniformBlockNameLength=0;program.uniformIdCounter=1;GL.programs[id]=program;return id;}function _emscripten_glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id;}function _emscripten_glCullFace(x0){GLctx['cullFace'](x0);}function _emscripten_glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];// From spec: "glDeleteBuffers silently ignores 0's and names that do not
// correspond to existing buffer objects."
if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GLctx.currentArrayBufferBinding)GLctx.currentArrayBufferBinding=0;if(id==GLctx.currentElementArrayBufferBinding)GLctx.currentElementArrayBufferBinding=0;if(id==GLctx.currentPixelPackBufferBinding)GLctx.currentPixelPackBufferBinding=0;if(id==GLctx.currentPixelUnpackBufferBinding)GLctx.currentPixelUnpackBufferBinding=0;}}function _emscripten_glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;// GL spec: "glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects".
GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null;}}function _emscripten_glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){// glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;}function _emscripten_glDeleteQueries(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var query=GL.queries[id];if(!query)continue;// GL spec: "unused names in ids are ignored, as is the name zero."
GLctx['deleteQuery'](query);GL.queries[id]=null;}}function _emscripten_glDeleteQueriesEXT(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var query=GL.queries[id];if(!query)continue;// GL spec: "unused names in ids are ignored, as is the name zero."
GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);GL.queries[id]=null;}}function _emscripten_glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;// GL spec: "glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects".
GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null;}}function _emscripten_glDeleteSamplers(n,samplers){for(var i=0;i<n;i++){var id=HEAP32[samplers+i*4>>2];var sampler=GL.samplers[id];if(!sampler)continue;GLctx['deleteSampler'](sampler);sampler.name=0;GL.samplers[id]=null;}}function _emscripten_glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){// glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}GLctx.deleteShader(shader);GL.shaders[id]=null;}function _emscripten_glDeleteSync(id){if(!id)return;var sync=GL.syncs[id];if(!sync){// glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}GLctx.deleteSync(sync);sync.name=0;GL.syncs[id]=null;}function _emscripten_glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;// GL spec: "glDeleteTextures silently ignores 0s and names that do not correspond to existing textures".
GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null;}}function _emscripten_glDeleteTransformFeedbacks(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var transformFeedback=GL.transformFeedbacks[id];if(!transformFeedback)continue;// GL spec: "unused names in ids are ignored, as is the name zero."
GLctx['deleteTransformFeedback'](transformFeedback);transformFeedback.name=0;GL.transformFeedbacks[id]=null;}}function _emscripten_glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx['deleteVertexArray'](GL.vaos[id]);GL.vaos[id]=null;}}function _emscripten_glDeleteVertexArraysOES(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx['deleteVertexArray'](GL.vaos[id]);GL.vaos[id]=null;}}function _emscripten_glDepthFunc(x0){GLctx['depthFunc'](x0);}function _emscripten_glDepthMask(flag){GLctx.depthMask(!!flag);}function _emscripten_glDepthRangef(x0,x1){GLctx['depthRange'](x0,x1);}function _emscripten_glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader]);}function _emscripten_glDisable(x0){GLctx['disable'](x0);}function _emscripten_glDisableVertexAttribArray(index){var cb=GL.currentContext.clientBuffers[index];cb.enabled=false;GLctx.disableVertexAttribArray(index);}function _emscripten_glDrawArrays(mode,first,count){// bind any client-side buffers
GL.preDrawHandleClientVertexAttribBindings(first+count);GLctx.drawArrays(mode,first,count);GL.postDrawHandleClientVertexAttribBindings();}function _emscripten_glDrawArraysInstanced(mode,first,count,primcount){GLctx['drawArraysInstanced'](mode,first,count,primcount);}function _emscripten_glDrawArraysInstancedANGLE(mode,first,count,primcount){GLctx['drawArraysInstanced'](mode,first,count,primcount);}function _emscripten_glDrawArraysInstancedARB(mode,first,count,primcount){GLctx['drawArraysInstanced'](mode,first,count,primcount);}function _emscripten_glDrawArraysInstancedEXT(mode,first,count,primcount){GLctx['drawArraysInstanced'](mode,first,count,primcount);}function _emscripten_glDrawArraysInstancedNV(mode,first,count,primcount){GLctx['drawArraysInstanced'](mode,first,count,primcount);}var tempFixedLengthArray=[];function _emscripten_glDrawBuffers(n,bufs){var bufArray=tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2];}GLctx['drawBuffers'](bufArray);}function _emscripten_glDrawBuffersEXT(n,bufs){var bufArray=tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2];}GLctx['drawBuffers'](bufArray);}function _emscripten_glDrawBuffersWEBGL(n,bufs){var bufArray=tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2];}GLctx['drawBuffers'](bufArray);}function _emscripten_glDrawElements(mode,count,type,indices){var buf;if(!GLctx.currentElementArrayBufferBinding){var size=GL.calcBufLength(1,type,0,count);buf=GL.getTempIndexBuffer(size);GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,buf);GLctx.bufferSubData(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,0,HEAPU8.subarray(indices,indices+size));// the index is now 0
indices=0;}// bind any client-side buffers
GL.preDrawHandleClientVertexAttribBindings(count);GLctx.drawElements(mode,count,type,indices);GL.postDrawHandleClientVertexAttribBindings(count);if(!GLctx.currentElementArrayBufferBinding){GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,null);}}function _emscripten_glDrawElementsInstanced(mode,count,type,indices,primcount){GLctx['drawElementsInstanced'](mode,count,type,indices,primcount);}function _emscripten_glDrawElementsInstancedANGLE(mode,count,type,indices,primcount){GLctx['drawElementsInstanced'](mode,count,type,indices,primcount);}function _emscripten_glDrawElementsInstancedARB(mode,count,type,indices,primcount){GLctx['drawElementsInstanced'](mode,count,type,indices,primcount);}function _emscripten_glDrawElementsInstancedEXT(mode,count,type,indices,primcount){GLctx['drawElementsInstanced'](mode,count,type,indices,primcount);}function _emscripten_glDrawElementsInstancedNV(mode,count,type,indices,primcount){GLctx['drawElementsInstanced'](mode,count,type,indices,primcount);}function _glDrawElements(mode,count,type,indices){var buf;if(!GLctx.currentElementArrayBufferBinding){var size=GL.calcBufLength(1,type,0,count);buf=GL.getTempIndexBuffer(size);GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,buf);GLctx.bufferSubData(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,0,HEAPU8.subarray(indices,indices+size));// the index is now 0
indices=0;}// bind any client-side buffers
GL.preDrawHandleClientVertexAttribBindings(count);GLctx.drawElements(mode,count,type,indices);GL.postDrawHandleClientVertexAttribBindings(count);if(!GLctx.currentElementArrayBufferBinding){GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,null);}}function _emscripten_glDrawRangeElements(mode,start,end,count,type,indices){// TODO: This should be a trivial pass-though function registered at the bottom of this page as
// glFuncs[6][1] += ' drawRangeElements';
// but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,
// we work around by ignoring the range.
_glDrawElements(mode,count,type,indices);}function _emscripten_glEnable(x0){GLctx['enable'](x0);}function _emscripten_glEnableVertexAttribArray(index){var cb=GL.currentContext.clientBuffers[index];cb.enabled=true;GLctx.enableVertexAttribArray(index);}function _emscripten_glEndQuery(x0){GLctx['endQuery'](x0);}function _emscripten_glEndQueryEXT(target){GLctx.disjointTimerQueryExt['endQueryEXT'](target);}function _emscripten_glEndTransformFeedback(){GLctx['endTransformFeedback']();}function _emscripten_glFenceSync(condition,flags){var sync=GLctx.fenceSync(condition,flags);if(sync){var id=GL.getNewId(GL.syncs);sync.name=id;GL.syncs[id]=sync;return id;}return 0;// Failed to create a sync object
}function _emscripten_glFinish(){GLctx['finish']();}function _emscripten_glFlush(){GLctx['flush']();}function _emscripten_glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer]);}function _emscripten_glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level);}function _emscripten_glFramebufferTextureLayer(target,attachment,texture,level,layer){GLctx.framebufferTextureLayer(target,attachment,GL.textures[texture],level,layer);}function _emscripten_glFrontFace(x0){GLctx['frontFace'](x0);}function __glGenObject(n,buffers,createFunction,objectTable){for(var i=0;i<n;i++){var buffer=GLctx[createFunction]();var id=buffer&&GL.getNewId(objectTable);if(buffer){buffer.name=id;objectTable[id]=buffer;}else{GL.recordError(0x502/* GL_INVALID_OPERATION */);}HEAP32[buffers+i*4>>2]=id;}}function _emscripten_glGenBuffers(n,buffers){__glGenObject(n,buffers,'createBuffer',GL.buffers);}function _emscripten_glGenFramebuffers(n,ids){__glGenObject(n,ids,'createFramebuffer',GL.framebuffers);}function _emscripten_glGenQueries(n,ids){__glGenObject(n,ids,'createQuery',GL.queries);}function _emscripten_glGenQueriesEXT(n,ids){for(var i=0;i<n;i++){var query=GLctx.disjointTimerQueryExt['createQueryEXT']();if(!query){GL.recordError(0x502/* GL_INVALID_OPERATION */);while(i<n)HEAP32[ids+i++*4>>2]=0;return;}var id=GL.getNewId(GL.queries);query.name=id;GL.queries[id]=query;HEAP32[ids+i*4>>2]=id;}}function _emscripten_glGenRenderbuffers(n,renderbuffers){__glGenObject(n,renderbuffers,'createRenderbuffer',GL.renderbuffers);}function _emscripten_glGenSamplers(n,samplers){__glGenObject(n,samplers,'createSampler',GL.samplers);}function _emscripten_glGenTextures(n,textures){__glGenObject(n,textures,'createTexture',GL.textures);}function _emscripten_glGenTransformFeedbacks(n,ids){__glGenObject(n,ids,'createTransformFeedback',GL.transformFeedbacks);}function _emscripten_glGenVertexArrays(n,arrays){__glGenObject(n,arrays,'createVertexArray',GL.vaos);}function _emscripten_glGenVertexArraysOES(n,arrays){__glGenObject(n,arrays,'createVertexArray',GL.vaos);}function _emscripten_glGenerateMipmap(x0){GLctx['generateMipmap'](x0);}function __glGetActiveAttribOrUniform(funcName,program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx[funcName](program,index);if(info){// If an error occurs, nothing will be written to length, size and type and name.
var numBytesWrittenExclNull=name&&stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull;if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type;}}function _emscripten_glGetActiveAttrib(program,index,bufSize,length,size,type,name){__glGetActiveAttribOrUniform('getActiveAttrib',program,index,bufSize,length,size,type,name);}function _emscripten_glGetActiveUniform(program,index,bufSize,length,size,type,name){__glGetActiveAttribOrUniform('getActiveUniform',program,index,bufSize,length,size,type,name);}function _emscripten_glGetActiveUniformBlockName(program,uniformBlockIndex,bufSize,length,uniformBlockName){program=GL.programs[program];var result=GLctx['getActiveUniformBlockName'](program,uniformBlockIndex);if(!result)return;// If an error occurs, nothing will be written to uniformBlockName or length.
if(uniformBlockName&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(result,uniformBlockName,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull;}else{if(length)HEAP32[length>>2]=0;}}function _emscripten_glGetActiveUniformBlockiv(program,uniformBlockIndex,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];if(pname==0x8A41/* GL_UNIFORM_BLOCK_NAME_LENGTH */){var name=GLctx['getActiveUniformBlockName'](program,uniformBlockIndex);HEAP32[params>>2]=name.length+1;return;}var result=GLctx['getActiveUniformBlockParameter'](program,uniformBlockIndex,pname);if(result===null)return;// If an error occurs, nothing should be written to params.
if(pname==0x8A43/*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/){for(var i=0;i<result.length;i++){HEAP32[params+i*4>>2]=result[i];}}else{HEAP32[params>>2]=result;}}function _emscripten_glGetActiveUniformsiv(program,uniformCount,uniformIndices,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(uniformCount>0&&uniformIndices==0){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];var ids=[];for(var i=0;i<uniformCount;i++){ids.push(HEAP32[uniformIndices+i*4>>2]);}var result=GLctx['getActiveUniforms'](program,ids,pname);if(!result)return;// GL spec: If an error is generated, nothing is written out to params.
var len=result.length;for(var i=0;i<len;i++){HEAP32[params+i*4>>2]=result[i];}}function _emscripten_glGetAttachedShaders(program,maxCount,count,shaders){var result=GLctx.getAttachedShaders(GL.programs[program]);var len=result.length;if(len>maxCount){len=maxCount;}HEAP32[count>>2]=len;for(var i=0;i<len;++i){var id=GL.shaders.indexOf(result[i]);HEAP32[shaders+i*4>>2]=id;}}function _emscripten_glGetAttribLocation(program,name){return GLctx.getAttribLocation(GL.programs[program],UTF8ToString(name));}function readI53FromU64(ptr){return HEAPU32[ptr>>2]+HEAPU32[ptr+4>>2]*4294967296;}function writeI53ToI64(ptr,num){HEAPU32[ptr>>2]=num;HEAPU32[ptr+4>>2]=(num-HEAPU32[ptr>>2])/4294967296;var deserialized=num>=0?readI53FromU64(ptr):readI53FromI64(ptr);if(deserialized!=num)warnOnce('writeI53ToI64() out of range: serialized JS Number '+num+' to Wasm heap as bytes lo='+ptrToString(HEAPU32[ptr>>2])+', hi='+ptrToString(HEAPU32[ptr+4>>2])+', which deserializes back to '+deserialized+' instead!');}function emscriptenWebGLGet(name_,p,type){// Guard against user passing a null pointer.
// Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
// Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
// better to report an error instead of doing anything random.
if(!p){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var ret=undefined;switch(name_){// Handle a few trivial GLES values
case 0x8DFA:// GL_SHADER_COMPILER
ret=1;break;case 0x8DF8:// GL_SHADER_BINARY_FORMATS
if(type!=0&&type!=1){GL.recordError(0x500);// GL_INVALID_ENUM
}return;// Do not write anything to the out pointer, since no binary formats are supported.
case 0x87FE:// GL_NUM_PROGRAM_BINARY_FORMATS
case 0x8DF9:// GL_NUM_SHADER_BINARY_FORMATS
ret=0;break;case 0x86A2:// GL_NUM_COMPRESSED_TEXTURE_FORMATS
// WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
// so implement it ourselves to allow C++ GLES2 code get the length.
var formats=GLctx.getParameter(0x86A3/*GL_COMPRESSED_TEXTURE_FORMATS*/);ret=formats?formats.length:0;break;case 0x821D:// GL_NUM_EXTENSIONS
if(GL.currentContext.version<2){GL.recordError(0x502/* GL_INVALID_OPERATION */);// Calling GLES3/WebGL2 function with a GLES2/WebGL1 context
return;}// .getSupportedExtensions() can return null if context is lost, so coerce to empty array.
var exts=GLctx.getSupportedExtensions()||[];ret=2*exts.length;// each extension is duplicated, first in unprefixed WebGL form, and then a second time with "GL_" prefix.
break;case 0x821B:// GL_MAJOR_VERSION
case 0x821C:// GL_MINOR_VERSION
if(GL.currentContext.version<2){GL.recordError(0x500);// GL_INVALID_ENUM
return;}ret=name_==0x821B?3:0;// return version 3.0
break;}if(ret===undefined){var result=GLctx.getParameter(name_);switch(_typeof(result)){case"number":ret=result;break;case"boolean":ret=result?1:0;break;case"string":GL.recordError(0x500);// GL_INVALID_ENUM
return;case"object":if(result===null){// null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
// can mean an invalid name_, which we need to report as an error
switch(name_){case 0x8894:// ARRAY_BUFFER_BINDING
case 0x8B8D:// CURRENT_PROGRAM
case 0x8895:// ELEMENT_ARRAY_BUFFER_BINDING
case 0x8CA6:// FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING
case 0x8CA7:// RENDERBUFFER_BINDING
case 0x8069:// TEXTURE_BINDING_2D
case 0x85B5:// WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES
case 0x8F36:// COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER
case 0x8F37:// COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER
case 0x88ED:// PIXEL_PACK_BUFFER_BINDING
case 0x88EF:// PIXEL_UNPACK_BUFFER_BINDING
case 0x8CAA:// READ_FRAMEBUFFER_BINDING
case 0x8919:// SAMPLER_BINDING
case 0x8C1D:// TEXTURE_BINDING_2D_ARRAY
case 0x806A:// TEXTURE_BINDING_3D
case 0x8E25:// TRANSFORM_FEEDBACK_BINDING
case 0x8C8F:// TRANSFORM_FEEDBACK_BUFFER_BINDING
case 0x8A28:// UNIFORM_BUFFER_BINDING
case 0x8514:{// TEXTURE_BINDING_CUBE_MAP
ret=0;break;}default:{GL.recordError(0x500);// GL_INVALID_ENUM
return;}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case 0:HEAP32[p+i*4>>2]=result[i];break;case 2:HEAPF32[p+i*4>>2]=result[i];break;case 4:HEAP8[p+i>>0]=result[i]?1:0;break;}}return;}else{try{ret=result.name|0;}catch(e){GL.recordError(0x500);// GL_INVALID_ENUM
err('GL_INVALID_ENUM in glGet'+type+'v: Unknown object returned from WebGL getParameter('+name_+')! (error: '+e+')');return;}}break;default:GL.recordError(0x500);// GL_INVALID_ENUM
err('GL_INVALID_ENUM in glGet'+type+'v: Native code calling glGet'+type+'v('+name_+') and it returns '+result+' of type '+_typeof(result)+'!');return;}}switch(type){case 1:writeI53ToI64(p,ret);break;case 0:HEAP32[p>>2]=ret;break;case 2:HEAPF32[p>>2]=ret;break;case 4:HEAP8[p>>0]=ret?1:0;break;}}function _emscripten_glGetBooleanv(name_,p){emscriptenWebGLGet(name_,p,4);}function _emscripten_glGetBufferParameteri64v(target,value,data){if(!data){// GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense
// if data == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}writeI53ToI64(data,GLctx.getBufferParameter(target,value));}function _emscripten_glGetBufferParameteriv(target,value,data){if(!data){// GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense
// if data == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[data>>2]=GLctx.getBufferParameter(target,value);}function _emscripten_glGetError(){var error=GLctx.getError()||GL.lastError;GL.lastError=0/*GL_NO_ERROR*/;return error;}function _emscripten_glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,2);}function _emscripten_glGetFragDataLocation(program,name){return GLctx['getFragDataLocation'](GL.programs[program],UTF8ToString(name));}function _emscripten_glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0;}HEAP32[params>>2]=result;}function emscriptenWebGLGetIndexed(target,index,data,type){if(!data){// GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense
// if data == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var result=GLctx['getIndexedParameter'](target,index);var ret;switch(_typeof(result)){case'boolean':ret=result?1:0;break;case'number':ret=result;break;case'object':if(result===null){switch(target){case 0x8C8F:// TRANSFORM_FEEDBACK_BUFFER_BINDING
case 0x8A28:// UNIFORM_BUFFER_BINDING
ret=0;break;default:{GL.recordError(0x500);// GL_INVALID_ENUM
return;}}}else if(result instanceof WebGLBuffer){ret=result.name|0;}else{GL.recordError(0x500);// GL_INVALID_ENUM
return;}break;default:GL.recordError(0x500);// GL_INVALID_ENUM
return;}switch(type){case 1:writeI53ToI64(data,ret);break;case 0:HEAP32[data>>2]=ret;break;case 2:HEAPF32[data>>2]=ret;break;case 4:HEAP8[data>>0]=ret?1:0;break;default:throw'internal emscriptenWebGLGetIndexed() error, bad type: '+type;}}function _emscripten_glGetInteger64i_v(target,index,data){emscriptenWebGLGetIndexed(target,index,data,1);}function _emscripten_glGetInteger64v(name_,p){emscriptenWebGLGet(name_,p,1);}function _emscripten_glGetIntegeri_v(target,index,data){emscriptenWebGLGetIndexed(target,index,data,0);}function _emscripten_glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,0);}function _emscripten_glGetInternalformativ(target,internalformat,pname,bufSize,params){if(bufSize<0){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(!params){// GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense
// if values == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var ret=GLctx['getInternalformatParameter'](target,internalformat,pname);if(ret===null)return;for(var i=0;i<ret.length&&i<bufSize;++i){HEAP32[params+i*4>>2]=ret[i];}}function _emscripten_glGetProgramBinary(program,bufSize,length,binaryFormat,binary){GL.recordError(0x502/*GL_INVALID_OPERATION*/);}function _emscripten_glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log='(unknown error)';var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull;}function _emscripten_glGetProgramiv(program,pname,p){if(!p){// GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(program>=GL.counter){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];if(pname==0x8B84){// GL_INFO_LOG_LENGTH
var log=GLctx.getProgramInfoLog(program);if(log===null)log='(unknown error)';HEAP32[p>>2]=log.length+1;}else if(pname==0x8B87/* GL_ACTIVE_UNIFORM_MAX_LENGTH */){if(!program.maxUniformLength){for(var i=0;i<GLctx.getProgramParameter(program,0x8B86/*GL_ACTIVE_UNIFORMS*/);++i){program.maxUniformLength=Math.max(program.maxUniformLength,GLctx.getActiveUniform(program,i).name.length+1);}}HEAP32[p>>2]=program.maxUniformLength;}else if(pname==0x8B8A/* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */){if(!program.maxAttributeLength){for(var i=0;i<GLctx.getProgramParameter(program,0x8B89/*GL_ACTIVE_ATTRIBUTES*/);++i){program.maxAttributeLength=Math.max(program.maxAttributeLength,GLctx.getActiveAttrib(program,i).name.length+1);}}HEAP32[p>>2]=program.maxAttributeLength;}else if(pname==0x8A35/* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */){if(!program.maxUniformBlockNameLength){for(var i=0;i<GLctx.getProgramParameter(program,0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/);++i){program.maxUniformBlockNameLength=Math.max(program.maxUniformBlockNameLength,GLctx.getActiveUniformBlockName(program,i).length+1);}}HEAP32[p>>2]=program.maxUniformBlockNameLength;}else{HEAP32[p>>2]=GLctx.getProgramParameter(program,pname);}}function _emscripten_glGetQueryObjecti64vEXT(id,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var query=GL.queries[id];var param;if(GL.currentContext.version<2){param=GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query,pname);}else{param=GLctx['getQueryParameter'](query,pname);}var ret;if(typeof param=='boolean'){ret=param?1:0;}else{ret=param;}writeI53ToI64(params,ret);}function _emscripten_glGetQueryObjectivEXT(id,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var query=GL.queries[id];var param=GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query,pname);var ret;if(typeof param=='boolean'){ret=param?1:0;}else{ret=param;}HEAP32[params>>2]=ret;}function _emscripten_glGetQueryObjectui64vEXT(id,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var query=GL.queries[id];var param;if(GL.currentContext.version<2){param=GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query,pname);}else{param=GLctx['getQueryParameter'](query,pname);}var ret;if(typeof param=='boolean'){ret=param?1:0;}else{ret=param;}writeI53ToI64(params,ret);}function _emscripten_glGetQueryObjectuiv(id,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var query=GL.queries[id];var param=GLctx['getQueryParameter'](query,pname);var ret;if(typeof param=='boolean'){ret=param?1:0;}else{ret=param;}HEAP32[params>>2]=ret;}function _emscripten_glGetQueryObjectuivEXT(id,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var query=GL.queries[id];var param=GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query,pname);var ret;if(typeof param=='boolean'){ret=param?1:0;}else{ret=param;}HEAP32[params>>2]=ret;}function _emscripten_glGetQueryiv(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx['getQuery'](target,pname);}function _emscripten_glGetQueryivEXT(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx.disjointTimerQueryExt['getQueryEXT'](target,pname);}function _emscripten_glGetRenderbufferParameteriv(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname);}function _emscripten_glGetSamplerParameterfv(sampler,pname,params){if(!params){// GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAPF32[params>>2]=GLctx['getSamplerParameter'](GL.samplers[sampler],pname);}function _emscripten_glGetSamplerParameteriv(sampler,pname,params){if(!params){// GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx['getSamplerParameter'](GL.samplers[sampler],pname);}function _emscripten_glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log='(unknown error)';var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull;}function _emscripten_glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision;}function _emscripten_glGetShaderSource(shader,bufSize,length,source){var result=GLctx.getShaderSource(GL.shaders[shader]);if(!result)return;// If an error occurs, nothing will be written to length or source.
var numBytesWrittenExclNull=bufSize>0&&source?stringToUTF8(result,source,bufSize):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull;}function _emscripten_glGetShaderiv(shader,pname,p){if(!p){// GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(pname==0x8B84){// GL_INFO_LOG_LENGTH
var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log='(unknown error)';// The GLES2 specification says that if the shader has an empty info log,
// a value of 0 is returned. Otherwise the log has a null char appended.
// (An empty string is falsey, so we can just check that instead of
// looking at log.length.)
var logLength=log?log.length+1:0;HEAP32[p>>2]=logLength;}else if(pname==0x8B88){// GL_SHADER_SOURCE_LENGTH
var source=GLctx.getShaderSource(GL.shaders[shader]);// source may be a null, or the empty string, both of which are falsey
// values that we report a 0 length for.
var sourceLength=source?source.length+1:0;HEAP32[p>>2]=sourceLength;}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname);}}function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString;}function _emscripten_glGetString(name_){var ret=GL.stringCache[name_];if(!ret){switch(name_){case 0x1F03/* GL_EXTENSIONS */:var exts=GLctx.getSupportedExtensions()||[];// .getSupportedExtensions() can return null if context is lost, so coerce to empty array.
exts=exts.concat(exts.map(function(e){return"GL_"+e;}));ret=stringToNewUTF8(exts.join(' '));break;case 0x1F00/* GL_VENDOR */:case 0x1F01/* GL_RENDERER */:case 0x9245/* UNMASKED_VENDOR_WEBGL */:case 0x9246/* UNMASKED_RENDERER_WEBGL */:var s=GLctx.getParameter(name_);if(!s){GL.recordError(0x500/*GL_INVALID_ENUM*/);}ret=s&&stringToNewUTF8(s);break;case 0x1F02/* GL_VERSION */:var glVersion=GLctx.getParameter(0x1F02/*GL_VERSION*/);// return GLES version string corresponding to the version of the WebGL context
if(GL.currentContext.version>=2)glVersion='OpenGL ES 3.0 ('+glVersion+')';else{glVersion='OpenGL ES 2.0 ('+glVersion+')';}ret=stringToNewUTF8(glVersion);break;case 0x8B8C/* GL_SHADING_LANGUAGE_VERSION */:var glslVersion=GLctx.getParameter(0x8B8C/*GL_SHADING_LANGUAGE_VERSION*/);// extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'
var ver_re=/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+'0';// ensure minor version has 2 digits
glslVersion='OpenGL ES GLSL ES '+ver_num[1]+' ('+glslVersion+')';}ret=stringToNewUTF8(glslVersion);break;default:GL.recordError(0x500/*GL_INVALID_ENUM*/);// fall through
}GL.stringCache[name_]=ret;}return ret;}function _emscripten_glGetStringi(name,index){if(GL.currentContext.version<2){GL.recordError(0x502/* GL_INVALID_OPERATION */);// Calling GLES3/WebGL2 function with a GLES2/WebGL1 context
return 0;}var stringiCache=GL.stringiCache[name];if(stringiCache){if(index<0||index>=stringiCache.length){GL.recordError(0x501/*GL_INVALID_VALUE*/);return 0;}return stringiCache[index];}switch(name){case 0x1F03/* GL_EXTENSIONS */:var exts=GLctx.getSupportedExtensions()||[];// .getSupportedExtensions() can return null if context is lost, so coerce to empty array.
exts=exts.concat(exts.map(function(e){return"GL_"+e;}));exts=exts.map(function(e){return stringToNewUTF8(e);});stringiCache=GL.stringiCache[name]=exts;if(index<0||index>=stringiCache.length){GL.recordError(0x501/*GL_INVALID_VALUE*/);return 0;}return stringiCache[index];default:GL.recordError(0x500/*GL_INVALID_ENUM*/);return 0;}}function _emscripten_glGetSynciv(sync,pname,bufSize,length,values){if(bufSize<0){// GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,
// so raise GL_INVALID_VALUE here as well.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(!values){// GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense
// if values == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var ret=GLctx.getSyncParameter(GL.syncs[sync],pname);if(ret!==null){HEAP32[values>>2]=ret;if(length)HEAP32[length>>2]=1;// Report a single value outputted.
}}function _emscripten_glGetTexParameterfv(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAPF32[params>>2]=GLctx.getTexParameter(target,pname);}function _emscripten_glGetTexParameteriv(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx.getTexParameter(target,pname);}function _emscripten_glGetTransformFeedbackVarying(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx['getTransformFeedbackVarying'](program,index);if(!info)return;// If an error occurred, the return parameters length, size, type and name will be unmodified.
if(name&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull;}else{if(length)HEAP32[length>>2]=0;}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type;}function _emscripten_glGetUniformBlockIndex(program,uniformBlockName){return GLctx['getUniformBlockIndex'](GL.programs[program],UTF8ToString(uniformBlockName));}function _emscripten_glGetUniformIndices(program,uniformCount,uniformNames,uniformIndices){if(!uniformIndices){// GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense
// if uniformIndices == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(uniformCount>0&&(uniformNames==0||uniformIndices==0)){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];var names=[];for(var i=0;i<uniformCount;i++)names.push(UTF8ToString(HEAP32[uniformNames+i*4>>2]));var result=GLctx['getUniformIndices'](program,names);if(!result)return;// GL spec: If an error is generated, nothing is written out to uniformIndices.
var len=result.length;for(var i=0;i<len;i++){HEAP32[uniformIndices+i*4>>2]=result[i];}}/** @suppress {checkTypes} */function jstoi_q(str){return parseInt(str);}/** @noinline */function webglGetLeftBracePos(name){return name.slice(-1)==']'&&name.lastIndexOf('[');}function webglPrepareUniformLocationsBeforeFirstUse(program){var uniformLocsById=program.uniformLocsById,// Maps GLuint -> WebGLUniformLocation
uniformSizeAndIdsByName=program.uniformSizeAndIdsByName,// Maps name -> [uniform array length, GLuint]
i,j;// On the first time invocation of glGetUniformLocation on this shader program:
// initialize cache data structures and discover which uniforms are arrays.
if(!uniformLocsById){// maps GLint integer locations to WebGLUniformLocations
program.uniformLocsById=uniformLocsById={};// maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations
program.uniformArrayNamesById={};for(i=0;i<GLctx.getProgramParameter(program,0x8B86/*GL_ACTIVE_UNIFORMS*/);++i){var u=GLctx.getActiveUniform(program,i);var nm=u.name;var sz=u.size;var lb=webglGetLeftBracePos(nm);var arrayName=lb>0?nm.slice(0,lb):nm;// Assign a new location.
var id=program.uniformIdCounter;program.uniformIdCounter+=sz;// Eagerly get the location of the uniformArray[0] base element.
// The remaining indices >0 will be left for lazy evaluation to
// improve performance. Those may never be needed to fetch, if the
// application fills arrays always in full starting from the first
// element of the array.
uniformSizeAndIdsByName[arrayName]=[sz,id];// Store placeholder integers in place that highlight that these
// >0 index locations are array indices pending population.
for(j=0;j<sz;++j){uniformLocsById[id]=j;program.uniformArrayNamesById[id++]=arrayName;}}}}function _emscripten_glGetUniformLocation(program,name){name=UTF8ToString(name);if(program=GL.programs[program]){webglPrepareUniformLocationsBeforeFirstUse(program);var uniformLocsById=program.uniformLocsById;// Maps GLuint -> WebGLUniformLocation
var arrayIndex=0;var uniformBaseName=name;// Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that
// arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.
// However, user might call glGetUniformLocation(program, "colors") for an array, so we cannot discover based on the user
// input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays
// is to enumerate over all the active uniforms in the program.
var leftBrace=webglGetLeftBracePos(name);// If user passed an array accessor "[index]", parse the array index off the accessor.
if(leftBrace>0){arrayIndex=jstoi_q(name.slice(leftBrace+1))>>>0;// "index]", coerce parseInt(']') with >>>0 to treat "foo[]" as "foo[0]" and foo[-1] as unsigned out-of-bounds.
uniformBaseName=name.slice(0,leftBrace);}// Have we cached the location of this uniform before?
var sizeAndId=program.uniformSizeAndIdsByName[uniformBaseName];// A pair [array length, GLint of the uniform location]
// If an uniform with this name exists, and if its index is within the array limits (if it's even an array),
// query the WebGLlocation, or return an existing cached location.
if(sizeAndId&&arrayIndex<sizeAndId[0]){arrayIndex+=sizeAndId[1];// Add the base location of the uniform to the array index offset.
if(uniformLocsById[arrayIndex]=uniformLocsById[arrayIndex]||GLctx.getUniformLocation(program,name)){return arrayIndex;}}}else{// N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,
// so report GL_INVALID_VALUE in both cases.
GL.recordError(0x501/* GL_INVALID_VALUE */);}return-1;}function webglGetUniformLocation(location){var p=GLctx.currentProgram;if(p){var webglLoc=p.uniformLocsById[location];// p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.
// If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index
// we should bind to.
if(typeof webglLoc=='number'){p.uniformLocsById[location]=webglLoc=GLctx.getUniformLocation(p,p.uniformArrayNamesById[location]+(webglLoc>0?'['+webglLoc+']':''));}// Else an already cached WebGLUniformLocation, return it.
return webglLoc;}else{GL.recordError(0x502/*GL_INVALID_OPERATION*/);}}/** @suppress{checkTypes} */function emscriptenWebGLGetUniform(program,location,params,type){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];webglPrepareUniformLocationsBeforeFirstUse(program);var data=GLctx.getUniform(program,webglGetUniformLocation(location));if(typeof data=='number'||typeof data=='boolean'){switch(type){case 0:HEAP32[params>>2]=data;break;case 2:HEAPF32[params>>2]=data;break;}}else{for(var i=0;i<data.length;i++){switch(type){case 0:HEAP32[params+i*4>>2]=data[i];break;case 2:HEAPF32[params+i*4>>2]=data[i];break;}}}}function _emscripten_glGetUniformfv(program,location,params){emscriptenWebGLGetUniform(program,location,params,2);}function _emscripten_glGetUniformiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,0);}function _emscripten_glGetUniformuiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,0);}/** @suppress{checkTypes} */function emscriptenWebGLGetVertexAttrib(index,pname,params,type){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(GL.currentContext.clientBuffers[index].enabled){err("glGetVertexAttrib*v on client-side array: not supported, bad data returned");}var data=GLctx.getVertexAttrib(index,pname);if(pname==0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/){HEAP32[params>>2]=data&&data["name"];}else if(typeof data=='number'||typeof data=='boolean'){switch(type){case 0:HEAP32[params>>2]=data;break;case 2:HEAPF32[params>>2]=data;break;case 5:HEAP32[params>>2]=Math.fround(data);break;}}else{for(var i=0;i<data.length;i++){switch(type){case 0:HEAP32[params+i*4>>2]=data[i];break;case 2:HEAPF32[params+i*4>>2]=data[i];break;case 5:HEAP32[params+i*4>>2]=Math.fround(data[i]);break;}}}}function _emscripten_glGetVertexAttribIiv(index,pname,params){// N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),
// otherwise the results are undefined. (GLES3 spec 6.1.12)
emscriptenWebGLGetVertexAttrib(index,pname,params,0);}function _emscripten_glGetVertexAttribIuiv(index,pname,params){// N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),
// otherwise the results are undefined. (GLES3 spec 6.1.12)
emscriptenWebGLGetVertexAttrib(index,pname,params,0);}function _emscripten_glGetVertexAttribPointerv(index,pname,pointer){if(!pointer){// GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense
// if pointer == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(GL.currentContext.clientBuffers[index].enabled){err("glGetVertexAttribPointer on client-side array: not supported, bad data returned");}HEAP32[pointer>>2]=GLctx.getVertexAttribOffset(index,pname);}function _emscripten_glGetVertexAttribfv(index,pname,params){// N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),
// otherwise the results are undefined. (GLES3 spec 6.1.12)
emscriptenWebGLGetVertexAttrib(index,pname,params,2);}function _emscripten_glGetVertexAttribiv(index,pname,params){// N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),
// otherwise the results are undefined. (GLES3 spec 6.1.12)
emscriptenWebGLGetVertexAttrib(index,pname,params,5);}function _emscripten_glHint(x0,x1){GLctx['hint'](x0,x1);}function _emscripten_glInvalidateFramebuffer(target,numAttachments,attachments){var list=tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2];}GLctx['invalidateFramebuffer'](target,list);}function _emscripten_glInvalidateSubFramebuffer(target,numAttachments,attachments,x,y,width,height){var list=tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2];}GLctx['invalidateSubFramebuffer'](target,list,x,y,width,height);}function _emscripten_glIsBuffer(buffer){var b=GL.buffers[buffer];if(!b)return 0;return GLctx.isBuffer(b);}function _emscripten_glIsEnabled(x0){return GLctx['isEnabled'](x0);}function _emscripten_glIsFramebuffer(framebuffer){var fb=GL.framebuffers[framebuffer];if(!fb)return 0;return GLctx.isFramebuffer(fb);}function _emscripten_glIsProgram(program){program=GL.programs[program];if(!program)return 0;return GLctx.isProgram(program);}function _emscripten_glIsQuery(id){var query=GL.queries[id];if(!query)return 0;return GLctx['isQuery'](query);}function _emscripten_glIsQueryEXT(id){var query=GL.queries[id];if(!query)return 0;return GLctx.disjointTimerQueryExt['isQueryEXT'](query);}function _emscripten_glIsRenderbuffer(renderbuffer){var rb=GL.renderbuffers[renderbuffer];if(!rb)return 0;return GLctx.isRenderbuffer(rb);}function _emscripten_glIsSampler(id){var sampler=GL.samplers[id];if(!sampler)return 0;return GLctx['isSampler'](sampler);}function _emscripten_glIsShader(shader){var s=GL.shaders[shader];if(!s)return 0;return GLctx.isShader(s);}function _emscripten_glIsSync(sync){return GLctx.isSync(GL.syncs[sync]);}function _emscripten_glIsTexture(id){var texture=GL.textures[id];if(!texture)return 0;return GLctx.isTexture(texture);}function _emscripten_glIsTransformFeedback(id){return GLctx['isTransformFeedback'](GL.transformFeedbacks[id]);}function _emscripten_glIsVertexArray(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx['isVertexArray'](vao);}function _emscripten_glIsVertexArrayOES(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx['isVertexArray'](vao);}function _emscripten_glLineWidth(x0){GLctx['lineWidth'](x0);}function _emscripten_glLinkProgram(program){program=GL.programs[program];GLctx.linkProgram(program);// Invalidate earlier computed uniform->ID mappings, those have now become stale
program.uniformLocsById=0;// Mark as null-like so that glGetUniformLocation() knows to populate this again.
program.uniformSizeAndIdsByName={};}function _emscripten_glPauseTransformFeedback(){GLctx['pauseTransformFeedback']();}function _emscripten_glPixelStorei(pname,param){if(pname==0xCF5/* GL_UNPACK_ALIGNMENT */){GL.unpackAlignment=param;}GLctx.pixelStorei(pname,param);}function _emscripten_glPolygonOffset(x0,x1){GLctx['polygonOffset'](x0,x1);}function _emscripten_glProgramBinary(program,binaryFormat,binary,length){GL.recordError(0x500/*GL_INVALID_ENUM*/);}function _emscripten_glProgramParameteri(program,pname,value){GL.recordError(0x500/*GL_INVALID_ENUM*/);}function _emscripten_glQueryCounterEXT(id,target){GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id],target);}function _emscripten_glReadBuffer(x0){GLctx['readBuffer'](x0);}function computeUnpackAlignedImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return x+y-1&-y;}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height*alignedRowSize;}function __colorChannelsInGlTextureFormat(format){// Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.
// Also omit the most common size value (1) from the list, which is assumed by formats not on the list.
var colorChannels={// 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,
// 0x1906 /* GL_ALPHA */ - 0x1902: 1,
5:3,6:4,// 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,
8:2,29502:3,29504:4,// 0x1903 /* GL_RED */ - 0x1902: 1,
26917:2,26918:2,// 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,
29846:3,29847:4};return colorChannels[format-0x1902]||1;}function heapObjectForWebGLType(type){// Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare
// smaller values for the heap, for shorter generated code size.
// Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.
// (since most types are HEAPU16)
type-=0x1400;if(type==0)return HEAP8;if(type==1)return HEAPU8;if(type==2)return HEAP16;if(type==4)return HEAP32;if(type==6)return HEAPF32;if(type==5||type==28922||type==28520||type==30779||type==30782)return HEAPU32;return HEAPU16;}function heapAccessShiftForWebGLHeap(heap){return 31-Math.clz32(heap.BYTES_PER_ELEMENT);}function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var heap=heapObjectForWebGLType(type);var shift=heapAccessShiftForWebGLHeap(heap);var byteSize=1<<shift;var sizePerPixel=__colorChannelsInGlTextureFormat(format)*byteSize;var bytes=computeUnpackAlignedImageSize(width,height,sizePerPixel,GL.unpackAlignment);return heap.subarray(pixels>>shift,pixels+bytes>>shift);}function _emscripten_glReadPixels(x,y,width,height,format,type,pixels){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels);}else{var heap=heapObjectForWebGLType(type);GLctx.readPixels(x,y,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}return;}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(0x500/*GL_INVALID_ENUM*/);return;}GLctx.readPixels(x,y,width,height,format,type,pixelData);}function _emscripten_glReleaseShaderCompiler(){// NOP (as allowed by GLES 2.0 spec)
}function _emscripten_glRenderbufferStorage(x0,x1,x2,x3){GLctx['renderbufferStorage'](x0,x1,x2,x3);}function _emscripten_glRenderbufferStorageMultisample(x0,x1,x2,x3,x4){GLctx['renderbufferStorageMultisample'](x0,x1,x2,x3,x4);}function _emscripten_glResumeTransformFeedback(){GLctx['resumeTransformFeedback']();}function _emscripten_glSampleCoverage(value,invert){GLctx.sampleCoverage(value,!!invert);}function _emscripten_glSamplerParameterf(sampler,pname,param){GLctx['samplerParameterf'](GL.samplers[sampler],pname,param);}function _emscripten_glSamplerParameterfv(sampler,pname,params){var param=HEAPF32[params>>2];GLctx['samplerParameterf'](GL.samplers[sampler],pname,param);}function _emscripten_glSamplerParameteri(sampler,pname,param){GLctx['samplerParameteri'](GL.samplers[sampler],pname,param);}function _emscripten_glSamplerParameteriv(sampler,pname,params){var param=HEAP32[params>>2];GLctx['samplerParameteri'](GL.samplers[sampler],pname,param);}function _emscripten_glScissor(x0,x1,x2,x3){GLctx['scissor'](x0,x1,x2,x3);}function _emscripten_glShaderBinary(){GL.recordError(0x500/*GL_INVALID_ENUM*/);}function _emscripten_glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source);}function _emscripten_glStencilFunc(x0,x1,x2){GLctx['stencilFunc'](x0,x1,x2);}function _emscripten_glStencilFuncSeparate(x0,x1,x2,x3){GLctx['stencilFuncSeparate'](x0,x1,x2,x3);}function _emscripten_glStencilMask(x0){GLctx['stencilMask'](x0);}function _emscripten_glStencilMaskSeparate(x0,x1){GLctx['stencilMaskSeparate'](x0,x1);}function _emscripten_glStencilOp(x0,x1,x2){GLctx['stencilOp'](x0,x1,x2);}function _emscripten_glStencilOpSeparate(x0,x1,x2,x3){GLctx['stencilOpSeparate'](x0,x1,x2,x3);}function _emscripten_glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelUnpackBufferBinding){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels);}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}else{GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,null);}return;}GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels?emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat):null);}function _emscripten_glTexImage3D(target,level,internalFormat,width,height,depth,border,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx['texImage3D'](target,level,internalFormat,width,height,depth,border,format,type,pixels);}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx['texImage3D'](target,level,internalFormat,width,height,depth,border,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}else{GLctx['texImage3D'](target,level,internalFormat,width,height,depth,border,format,type,null);}}function _emscripten_glTexParameterf(x0,x1,x2){GLctx['texParameterf'](x0,x1,x2);}function _emscripten_glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param);}function _emscripten_glTexParameteri(x0,x1,x2){GLctx['texParameteri'](x0,x1,x2);}function _emscripten_glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param);}function _emscripten_glTexStorage2D(x0,x1,x2,x3,x4){GLctx['texStorage2D'](x0,x1,x2,x3,x4);}function _emscripten_glTexStorage3D(x0,x1,x2,x3,x4,x5){GLctx['texStorage3D'](x0,x1,x2,x3,x4,x5);}function _emscripten_glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels);}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null);}return;}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData);}function _emscripten_glTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx['texSubImage3D'](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels);}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx['texSubImage3D'](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}else{GLctx['texSubImage3D'](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,null);}}function _emscripten_glTransformFeedbackVaryings(program,count,varyings,bufferMode){program=GL.programs[program];var vars=[];for(var i=0;i<count;i++)vars.push(UTF8ToString(HEAP32[varyings+i*4>>2]));GLctx['transformFeedbackVaryings'](program,vars,bufferMode);}function _emscripten_glUniform1f(location,v0){GLctx.uniform1f(webglGetUniformLocation(location),v0);}var miniTempWebGLFloatBuffers=[];function _emscripten_glUniform1fv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform1fv(webglGetUniformLocation(location),HEAPF32,value>>2,count);return;}if(count<=288){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[count-1];for(var i=0;i<count;++i){view[i]=HEAPF32[value+4*i>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*4>>2);}GLctx.uniform1fv(webglGetUniformLocation(location),view);}function _emscripten_glUniform1i(location,v0){GLctx.uniform1i(webglGetUniformLocation(location),v0);}var __miniTempWebGLIntBuffers=[];function _emscripten_glUniform1iv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform1iv(webglGetUniformLocation(location),HEAP32,value>>2,count);return;}if(count<=288){// avoid allocation when uploading few enough uniforms
var view=__miniTempWebGLIntBuffers[count-1];for(var i=0;i<count;++i){view[i]=HEAP32[value+4*i>>2];}}else{var view=HEAP32.subarray(value>>2,value+count*4>>2);}GLctx.uniform1iv(webglGetUniformLocation(location),view);}function _emscripten_glUniform1ui(location,v0){GLctx.uniform1ui(webglGetUniformLocation(location),v0);}function _emscripten_glUniform1uiv(location,count,value){count&&GLctx.uniform1uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count);}function _emscripten_glUniform2f(location,v0,v1){GLctx.uniform2f(webglGetUniformLocation(location),v0,v1);}function _emscripten_glUniform2fv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform2fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*2);return;}if(count<=144){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*8>>2);}GLctx.uniform2fv(webglGetUniformLocation(location),view);}function _emscripten_glUniform2i(location,v0,v1){GLctx.uniform2i(webglGetUniformLocation(location),v0,v1);}function _emscripten_glUniform2iv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform2iv(webglGetUniformLocation(location),HEAP32,value>>2,count*2);return;}if(count<=144){// avoid allocation when uploading few enough uniforms
var view=__miniTempWebGLIntBuffers[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2];}}else{var view=HEAP32.subarray(value>>2,value+count*8>>2);}GLctx.uniform2iv(webglGetUniformLocation(location),view);}function _emscripten_glUniform2ui(location,v0,v1){GLctx.uniform2ui(webglGetUniformLocation(location),v0,v1);}function _emscripten_glUniform2uiv(location,count,value){count&&GLctx.uniform2uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*2);}function _emscripten_glUniform3f(location,v0,v1,v2){GLctx.uniform3f(webglGetUniformLocation(location),v0,v1,v2);}function _emscripten_glUniform3fv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform3fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*3);return;}if(count<=96){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*12>>2);}GLctx.uniform3fv(webglGetUniformLocation(location),view);}function _emscripten_glUniform3i(location,v0,v1,v2){GLctx.uniform3i(webglGetUniformLocation(location),v0,v1,v2);}function _emscripten_glUniform3iv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform3iv(webglGetUniformLocation(location),HEAP32,value>>2,count*3);return;}if(count<=96){// avoid allocation when uploading few enough uniforms
var view=__miniTempWebGLIntBuffers[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2];view[i+2]=HEAP32[value+(4*i+8)>>2];}}else{var view=HEAP32.subarray(value>>2,value+count*12>>2);}GLctx.uniform3iv(webglGetUniformLocation(location),view);}function _emscripten_glUniform3ui(location,v0,v1,v2){GLctx.uniform3ui(webglGetUniformLocation(location),v0,v1,v2);}function _emscripten_glUniform3uiv(location,count,value){count&&GLctx.uniform3uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*3);}function _emscripten_glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(webglGetUniformLocation(location),v0,v1,v2,v3);}function _emscripten_glUniform4fv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform4fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*4);return;}if(count<=72){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[4*count-1];// hoist the heap out of the loop for size and for pthreads+growth.
var heap=HEAPF32;value>>=2;for(var i=0;i<4*count;i+=4){var dst=value+i;view[i]=heap[dst];view[i+1]=heap[dst+1];view[i+2]=heap[dst+2];view[i+3]=heap[dst+3];}}else{var view=HEAPF32.subarray(value>>2,value+count*16>>2);}GLctx.uniform4fv(webglGetUniformLocation(location),view);}function _emscripten_glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(webglGetUniformLocation(location),v0,v1,v2,v3);}function _emscripten_glUniform4iv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform4iv(webglGetUniformLocation(location),HEAP32,value>>2,count*4);return;}if(count<=72){// avoid allocation when uploading few enough uniforms
var view=__miniTempWebGLIntBuffers[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2];view[i+2]=HEAP32[value+(4*i+8)>>2];view[i+3]=HEAP32[value+(4*i+12)>>2];}}else{var view=HEAP32.subarray(value>>2,value+count*16>>2);}GLctx.uniform4iv(webglGetUniformLocation(location),view);}function _emscripten_glUniform4ui(location,v0,v1,v2,v3){GLctx.uniform4ui(webglGetUniformLocation(location),v0,v1,v2,v3);}function _emscripten_glUniform4uiv(location,count,value){count&&GLctx.uniform4uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*4);}function _emscripten_glUniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding){program=GL.programs[program];GLctx['uniformBlockBinding'](program,uniformBlockIndex,uniformBlockBinding);}function _emscripten_glUniformMatrix2fv(location,count,transpose,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniformMatrix2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*4);return;}if(count<=72){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*16>>2);}GLctx.uniformMatrix2fv(webglGetUniformLocation(location),!!transpose,view);}function _emscripten_glUniformMatrix2x3fv(location,count,transpose,value){count&&GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*6);}function _emscripten_glUniformMatrix2x4fv(location,count,transpose,value){count&&GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*8);}function _emscripten_glUniformMatrix3fv(location,count,transpose,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniformMatrix3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*9);return;}if(count<=32){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[9*count-1];for(var i=0;i<9*count;i+=9){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*36>>2);}GLctx.uniformMatrix3fv(webglGetUniformLocation(location),!!transpose,view);}function _emscripten_glUniformMatrix3x2fv(location,count,transpose,value){count&&GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*6);}function _emscripten_glUniformMatrix3x4fv(location,count,transpose,value){count&&GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*12);}function _emscripten_glUniformMatrix4fv(location,count,transpose,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniformMatrix4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*16);return;}if(count<=18){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[16*count-1];// hoist the heap out of the loop for size and for pthreads+growth.
var heap=HEAPF32;value>>=2;for(var i=0;i<16*count;i+=16){var dst=value+i;view[i]=heap[dst];view[i+1]=heap[dst+1];view[i+2]=heap[dst+2];view[i+3]=heap[dst+3];view[i+4]=heap[dst+4];view[i+5]=heap[dst+5];view[i+6]=heap[dst+6];view[i+7]=heap[dst+7];view[i+8]=heap[dst+8];view[i+9]=heap[dst+9];view[i+10]=heap[dst+10];view[i+11]=heap[dst+11];view[i+12]=heap[dst+12];view[i+13]=heap[dst+13];view[i+14]=heap[dst+14];view[i+15]=heap[dst+15];}}else{var view=HEAPF32.subarray(value>>2,value+count*64>>2);}GLctx.uniformMatrix4fv(webglGetUniformLocation(location),!!transpose,view);}function _emscripten_glUniformMatrix4x2fv(location,count,transpose,value){count&&GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*8);}function _emscripten_glUniformMatrix4x3fv(location,count,transpose,value){count&&GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*12);}function _emscripten_glUseProgram(program){program=GL.programs[program];GLctx.useProgram(program);// Record the currently active program so that we can access the uniform
// mapping table of that program.
GLctx.currentProgram=program;}function _emscripten_glValidateProgram(program){GLctx.validateProgram(GL.programs[program]);}function _emscripten_glVertexAttrib1f(x0,x1){GLctx['vertexAttrib1f'](x0,x1);}function _emscripten_glVertexAttrib1fv(index,v){GLctx.vertexAttrib1f(index,HEAPF32[v>>2]);}function _emscripten_glVertexAttrib2f(x0,x1,x2){GLctx['vertexAttrib2f'](x0,x1,x2);}function _emscripten_glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2]);}function _emscripten_glVertexAttrib3f(x0,x1,x2,x3){GLctx['vertexAttrib3f'](x0,x1,x2,x3);}function _emscripten_glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2]);}function _emscripten_glVertexAttrib4f(x0,x1,x2,x3,x4){GLctx['vertexAttrib4f'](x0,x1,x2,x3,x4);}function _emscripten_glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2]);}function _emscripten_glVertexAttribDivisor(index,divisor){GLctx['vertexAttribDivisor'](index,divisor);}function _emscripten_glVertexAttribDivisorANGLE(index,divisor){GLctx['vertexAttribDivisor'](index,divisor);}function _emscripten_glVertexAttribDivisorARB(index,divisor){GLctx['vertexAttribDivisor'](index,divisor);}function _emscripten_glVertexAttribDivisorEXT(index,divisor){GLctx['vertexAttribDivisor'](index,divisor);}function _emscripten_glVertexAttribDivisorNV(index,divisor){GLctx['vertexAttribDivisor'](index,divisor);}function _emscripten_glVertexAttribI4i(x0,x1,x2,x3,x4){GLctx['vertexAttribI4i'](x0,x1,x2,x3,x4);}function _emscripten_glVertexAttribI4iv(index,v){GLctx.vertexAttribI4i(index,HEAP32[v>>2],HEAP32[v+4>>2],HEAP32[v+8>>2],HEAP32[v+12>>2]);}function _emscripten_glVertexAttribI4ui(x0,x1,x2,x3,x4){GLctx['vertexAttribI4ui'](x0,x1,x2,x3,x4);}function _emscripten_glVertexAttribI4uiv(index,v){GLctx.vertexAttribI4ui(index,HEAPU32[v>>2],HEAPU32[v+4>>2],HEAPU32[v+8>>2],HEAPU32[v+12>>2]);}function _emscripten_glVertexAttribIPointer(index,size,type,stride,ptr){GLctx['vertexAttribIPointer'](index,size,type,stride,ptr);}function _emscripten_glVertexAttribPointer(index,size,type,normalized,stride,ptr){var cb=GL.currentContext.clientBuffers[index];if(!GLctx.currentArrayBufferBinding){cb.size=size;cb.type=type;cb.normalized=normalized;cb.stride=stride;cb.ptr=ptr;cb.clientside=true;cb.vertexAttribPointerAdaptor=function(index,size,type,normalized,stride,ptr){this.vertexAttribPointer(index,size,type,normalized,stride,ptr);};return;}cb.clientside=false;GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr);}function _emscripten_glViewport(x0,x1,x2,x3){GLctx['viewport'](x0,x1,x2,x3);}function _emscripten_glWaitSync(sync,flags,timeout_low,timeout_high){// See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)
var timeout=convertI32PairToI53(timeout_low,timeout_high);GLctx.waitSync(GL.syncs[sync],flags,timeout);}function _emscripten_has_asyncify(){return 0;}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num);}function doRequestFullscreen(target,strategy){if(!JSEvents.fullscreenEnabled())return-1;target=findEventTarget(target);if(!target)return-4;if(!target.requestFullscreen&&!target.webkitRequestFullscreen){return-3;}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();// Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.
if(!canPerformRequests){if(strategy.deferUntilInEventHandler){JSEvents.deferCall(JSEvents_requestFullscreen,1/* priority over pointer lock */,[target,strategy]);return 1;}return-2;}return JSEvents_requestFullscreen(target,strategy);}function _emscripten_request_fullscreen_strategy(target,deferUntilInEventHandler,fullscreenStrategy){var strategy={scaleMode:HEAP32[fullscreenStrategy>>2],canvasResolutionScaleMode:HEAP32[fullscreenStrategy+4>>2],filteringMode:HEAP32[fullscreenStrategy+8>>2],deferUntilInEventHandler:deferUntilInEventHandler,canvasResizedCallback:HEAP32[fullscreenStrategy+12>>2],canvasResizedCallbackUserData:HEAP32[fullscreenStrategy+16>>2]};return doRequestFullscreen(target,strategy);}function _emscripten_request_pointerlock(target,deferUntilInEventHandler){target=findEventTarget(target);if(!target)return-4;if(!target.requestPointerLock){return-1;}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();// Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.
if(!canPerformRequests){if(deferUntilInEventHandler){JSEvents.deferCall(requestPointerLock,2/* priority below fullscreen */,[target]);return 1;}return-2;}return requestPointerLock(target);}function getHeapMax(){// Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate
// full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side
// for any code that deals with heap sizes, which would require special
// casing all heap size related code to treat 0 specially.
return 2147483648;}function emscripten_realloc_buffer(size){var b=wasmMemory.buffer;try{// round size grow request up to wasm page size (fixed 64KB per spec)
wasmMemory.grow(size-b.byteLength+65535>>>16);// .grow() takes a delta compared to the previous size
updateMemoryViews();return 1/*success*/;}catch(e){err('emscripten_realloc_buffer: Attempted to grow heap from '+b.byteLength+' bytes to '+size+' bytes, but got error: '+e);}// implicit 0 return to save code size (caller will cast "undefined" into 0
// anyhow)
}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;// With multithreaded builds, races can happen (another thread might increase the size
// in between), so return a failure, and let the caller retry.
assert(requestedSize>oldSize);// Memory resize rules:
// 1.  Always increase heap size to at least the requested size, rounded up
//     to next page multiple.
// 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap
//     geometrically: increase the heap size according to
//     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most
//     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).
// 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap
//     linearly: increase the heap size by at least
//     MEMORY_GROWTH_LINEAR_STEP bytes.
// 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by
//     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest
// 4.  If we were unable to allocate as much memory, it may be due to
//     over-eager decision to excessively reserve due to (3) above.
//     Hence if an allocation fails, cut down on the amount of excess
//     growth, in an attempt to succeed to perform a smaller allocation.
// A limit is set for how much we can grow. We should not exceed that
// (the wasm binary specifies it, so if we tried, we'd fail anyhow).
var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){err('Cannot enlarge memory, asked to go up to '+requestedSize+' bytes, but the limit is '+maxHeapSize+' bytes!');return false;}var alignUp=function alignUp(x,multiple){return x+(multiple-x%multiple)%multiple;};// Loop through potential heap size increases. If we attempt a too eager
// reservation that fails, cut down on the attempted size and reserve a
// smaller bump instead. (max 3 times, chosen somewhat arbitrarily)
for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+0.2/cutDown);// ensure geometric growth
// but limit overreserving (default to capping at +96MB overgrowth at most)
overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true;}}err('Failed to grow the heap from '+oldSize+' bytes to '+newSize+' bytes, not enough memory!');return false;}function _emscripten_sample_gamepad_data(){return(JSEvents.lastGamepadState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():null)?0:-1;}function registerBeforeUnloadEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){var beforeUnloadEventHandlerFunc=function beforeUnloadEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;// Note: This is always called on the main browser thread, since it needs synchronously return a value!
var confirmationMessage=getWasmTableEntry(callbackfunc)(eventTypeId,0,userData);if(confirmationMessage){confirmationMessage=UTF8ToString(confirmationMessage);}if(confirmationMessage){e.preventDefault();e.returnValue=confirmationMessage;return confirmationMessage;}};var eventHandler={target:findEventTarget(target),eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:beforeUnloadEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_beforeunload_callback_on_thread(userData,callbackfunc,targetThread){if(typeof onbeforeunload=='undefined')return-1;// beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,
// and there is no time to start proxying it anywhere.
if(targetThread!==1)return-5;registerBeforeUnloadEventCallback(2,userData,true,callbackfunc,28,"beforeunload");return 0;}function registerFocusEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.focusEvent)JSEvents.focusEvent=_malloc(256);var focusEventHandlerFunc=function focusEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var nodeName=JSEvents.getNodeNameForTarget(e.target);var id=e.target.id?e.target.id:'';var focusEvent=JSEvents.focusEvent;stringToUTF8(nodeName,focusEvent+0,128);stringToUTF8(id,focusEvent+128,128);if(getWasmTableEntry(callbackfunc)(eventTypeId,focusEvent,userData))e.preventDefault();};var eventHandler={target:findEventTarget(target),eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:focusEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_blur_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerFocusEventCallback(target,userData,useCapture,callbackfunc,12,"blur",targetThread);return 0;}function _emscripten_set_element_css_size(target,width,height){target=findEventTarget(target);if(!target)return-4;target.style.width=width+"px";target.style.height=height+"px";return 0;}function _emscripten_set_focus_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerFocusEventCallback(target,userData,useCapture,callbackfunc,13,"focus",targetThread);return 0;}function fillFullscreenChangeEventData(eventStruct){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement;var isFullscreen=!!fullscreenElement;// Assigning a boolean to HEAP32 with expected type coercion.
/** @suppress{checkTypes} */HEAP32[eventStruct>>2]=isFullscreen;HEAP32[eventStruct+4>>2]=JSEvents.fullscreenEnabled();// If transitioning to fullscreen, report info about the element that is now fullscreen.
// If transitioning to windowed mode, report info about the element that just was fullscreen.
var reportedElement=isFullscreen?fullscreenElement:JSEvents.previousFullscreenElement;var nodeName=JSEvents.getNodeNameForTarget(reportedElement);var id=reportedElement&&reportedElement.id?reportedElement.id:'';stringToUTF8(nodeName,eventStruct+8,128);stringToUTF8(id,eventStruct+136,128);HEAP32[eventStruct+264>>2]=reportedElement?reportedElement.clientWidth:0;HEAP32[eventStruct+268>>2]=reportedElement?reportedElement.clientHeight:0;HEAP32[eventStruct+272>>2]=screen.width;HEAP32[eventStruct+276>>2]=screen.height;if(isFullscreen){JSEvents.previousFullscreenElement=fullscreenElement;}}function registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.fullscreenChangeEvent)JSEvents.fullscreenChangeEvent=_malloc(280);var fullscreenChangeEventhandlerFunc=function fullscreenChangeEventhandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var fullscreenChangeEvent=JSEvents.fullscreenChangeEvent;fillFullscreenChangeEventData(fullscreenChangeEvent);if(getWasmTableEntry(callbackfunc)(eventTypeId,fullscreenChangeEvent,userData))e.preventDefault();};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:fullscreenChangeEventhandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_fullscreenchange_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){if(!JSEvents.fullscreenEnabled())return-1;target=findEventTarget(target);if(!target)return-4;registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"fullscreenchange",targetThread);// Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)
// As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.
registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"webkitfullscreenchange",targetThread);return 0;}function registerGamepadEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.gamepadEvent)JSEvents.gamepadEvent=_malloc(1432);var gamepadEventHandlerFunc=function gamepadEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var gamepadEvent=JSEvents.gamepadEvent;fillGamepadEventData(gamepadEvent,e["gamepad"]);if(getWasmTableEntry(callbackfunc)(eventTypeId,gamepadEvent,userData))e.preventDefault();};var eventHandler={target:findEventTarget(target),allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:gamepadEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_gamepadconnected_callback_on_thread(userData,useCapture,callbackfunc,targetThread){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;registerGamepadEventCallback(2,userData,useCapture,callbackfunc,26,"gamepadconnected",targetThread);return 0;}function _emscripten_set_gamepaddisconnected_callback_on_thread(userData,useCapture,callbackfunc,targetThread){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;registerGamepadEventCallback(2,userData,useCapture,callbackfunc,27,"gamepaddisconnected",targetThread);return 0;}function registerKeyEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.keyEvent)JSEvents.keyEvent=_malloc(176);var keyEventHandlerFunc=function keyEventHandlerFunc(e){assert(e);var keyEventData=JSEvents.keyEvent;HEAPF64[keyEventData>>3]=e.timeStamp;var idx=keyEventData>>2;HEAP32[idx+2]=e.location;HEAP32[idx+3]=e.ctrlKey;HEAP32[idx+4]=e.shiftKey;HEAP32[idx+5]=e.altKey;HEAP32[idx+6]=e.metaKey;HEAP32[idx+7]=e.repeat;HEAP32[idx+8]=e.charCode;HEAP32[idx+9]=e.keyCode;HEAP32[idx+10]=e.which;stringToUTF8(e.key||'',keyEventData+44,32);stringToUTF8(e.code||'',keyEventData+76,32);stringToUTF8(e.char||'',keyEventData+108,32);stringToUTF8(e.locale||'',keyEventData+140,32);if(getWasmTableEntry(callbackfunc)(eventTypeId,keyEventData,userData))e.preventDefault();};var eventHandler={target:findEventTarget(target),allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:keyEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_keydown_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerKeyEventCallback(target,userData,useCapture,callbackfunc,2,"keydown",targetThread);return 0;}function _emscripten_set_keypress_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerKeyEventCallback(target,userData,useCapture,callbackfunc,1,"keypress",targetThread);return 0;}function _emscripten_set_keyup_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerKeyEventCallback(target,userData,useCapture,callbackfunc,3,"keyup",targetThread);return 0;}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop){var browserIterationFunc=getWasmTableEntry(func);setMainLoop(browserIterationFunc,fps,simulateInfiniteLoop);}function fillMouseEventData(eventStruct,e,target){assert(eventStruct%4==0);HEAPF64[eventStruct>>3]=e.timeStamp;var idx=eventStruct>>2;HEAP32[idx+2]=e.screenX;HEAP32[idx+3]=e.screenY;HEAP32[idx+4]=e.clientX;HEAP32[idx+5]=e.clientY;HEAP32[idx+6]=e.ctrlKey;HEAP32[idx+7]=e.shiftKey;HEAP32[idx+8]=e.altKey;HEAP32[idx+9]=e.metaKey;HEAP16[idx*2+20]=e.button;HEAP16[idx*2+21]=e.buttons;HEAP32[idx+11]=e["movementX"];HEAP32[idx+12]=e["movementY"];var rect=getBoundingClientRect(target);HEAP32[idx+13]=e.clientX-rect.left;HEAP32[idx+14]=e.clientY-rect.top;}function registerMouseEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.mouseEvent)JSEvents.mouseEvent=_malloc(72);target=findEventTarget(target);var mouseEventHandlerFunc=function mouseEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;// TODO: Make this access thread safe, or this could update live while app is reading it.
fillMouseEventData(JSEvents.mouseEvent,e,target);if(getWasmTableEntry(callbackfunc)(eventTypeId,JSEvents.mouseEvent,userData))e.preventDefault();};var eventHandler={target:target,allowsDeferredCalls:eventTypeString!='mousemove'&&eventTypeString!='mouseenter'&&eventTypeString!='mouseleave',// Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!
eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:mouseEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_mousedown_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,5,"mousedown",targetThread);return 0;}function _emscripten_set_mouseenter_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,33,"mouseenter",targetThread);return 0;}function _emscripten_set_mouseleave_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,34,"mouseleave",targetThread);return 0;}function _emscripten_set_mousemove_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,8,"mousemove",targetThread);return 0;}function _emscripten_set_mouseup_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerMouseEventCallback(target,userData,useCapture,callbackfunc,6,"mouseup",targetThread);return 0;}function fillPointerlockChangeEventData(eventStruct){var pointerLockElement=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement||document.msPointerLockElement;var isPointerlocked=!!pointerLockElement;// Assigning a boolean to HEAP32 with expected type coercion.
/** @suppress{checkTypes} */HEAP32[eventStruct>>2]=isPointerlocked;var nodeName=JSEvents.getNodeNameForTarget(pointerLockElement);var id=pointerLockElement&&pointerLockElement.id?pointerLockElement.id:'';stringToUTF8(nodeName,eventStruct+4,128);stringToUTF8(id,eventStruct+132,128);}function registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.pointerlockChangeEvent)JSEvents.pointerlockChangeEvent=_malloc(260);var pointerlockChangeEventHandlerFunc=function pointerlockChangeEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var pointerlockChangeEvent=JSEvents.pointerlockChangeEvent;fillPointerlockChangeEventData(pointerlockChangeEvent);if(getWasmTableEntry(callbackfunc)(eventTypeId,pointerlockChangeEvent,userData))e.preventDefault();};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:pointerlockChangeEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}/** @suppress {missingProperties} */function _emscripten_set_pointerlockchange_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){// TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)
if(!document||!document.body||!document.body.requestPointerLock&&!document.body.mozRequestPointerLock&&!document.body.webkitRequestPointerLock&&!document.body.msRequestPointerLock){return-1;}target=findEventTarget(target);if(!target)return-4;registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"pointerlockchange",targetThread);registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mozpointerlockchange",targetThread);registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"webkitpointerlockchange",targetThread);registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mspointerlockchange",targetThread);return 0;}function registerUiEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.uiEvent)JSEvents.uiEvent=_malloc(36);target=findEventTarget(target);var uiEventHandlerFunc=function uiEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;if(e.target!=target){// Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that
// was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log
// message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,
// causing a new scroll, etc..
return;}var b=document.body;// Take document.body to a variable, Closure compiler does not outline access to it on its own.
if(!b){// During a page unload 'body' can be null, with "Cannot read property 'clientWidth' of null" being thrown
return;}var uiEvent=JSEvents.uiEvent;HEAP32[uiEvent>>2]=e.detail;HEAP32[uiEvent+4>>2]=b.clientWidth;HEAP32[uiEvent+8>>2]=b.clientHeight;HEAP32[uiEvent+12>>2]=innerWidth;HEAP32[uiEvent+16>>2]=innerHeight;HEAP32[uiEvent+20>>2]=outerWidth;HEAP32[uiEvent+24>>2]=outerHeight;HEAP32[uiEvent+28>>2]=pageXOffset;HEAP32[uiEvent+32>>2]=pageYOffset;if(getWasmTableEntry(callbackfunc)(eventTypeId,uiEvent,userData))e.preventDefault();};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:uiEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_resize_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerUiEventCallback(target,userData,useCapture,callbackfunc,10,"resize",targetThread);return 0;}function registerTouchEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.touchEvent)JSEvents.touchEvent=_malloc(1696);target=findEventTarget(target);var touchEventHandlerFunc=function touchEventHandlerFunc(e){assert(e);var t,touches={},et=e.touches;// To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches, 
// only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in
// each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.
for(var i=0;i<et.length;++i){t=et[i];// Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any
// changed/target states we may have set from previous frame.
t.isChanged=t.onTarget=0;touches[t.identifier]=t;}// Mark which touches are part of the changedTouches list.
for(var i=0;i<e.changedTouches.length;++i){t=e.changedTouches[i];t.isChanged=1;touches[t.identifier]=t;}// Mark which touches are part of the targetTouches list.
for(var i=0;i<e.targetTouches.length;++i){touches[e.targetTouches[i].identifier].onTarget=1;}var touchEvent=JSEvents.touchEvent;HEAPF64[touchEvent>>3]=e.timeStamp;var idx=touchEvent>>2;// Pre-shift the ptr to index to HEAP32 to save code size
HEAP32[idx+3]=e.ctrlKey;HEAP32[idx+4]=e.shiftKey;HEAP32[idx+5]=e.altKey;HEAP32[idx+6]=e.metaKey;idx+=7;// Advance to the start of the touch array.
var targetRect=getBoundingClientRect(target);var numTouches=0;for(var i in touches){t=touches[i];HEAP32[idx+0]=t.identifier;HEAP32[idx+1]=t.screenX;HEAP32[idx+2]=t.screenY;HEAP32[idx+3]=t.clientX;HEAP32[idx+4]=t.clientY;HEAP32[idx+5]=t.pageX;HEAP32[idx+6]=t.pageY;HEAP32[idx+7]=t.isChanged;HEAP32[idx+8]=t.onTarget;HEAP32[idx+9]=t.clientX-targetRect.left;HEAP32[idx+10]=t.clientY-targetRect.top;idx+=13;if(++numTouches>31){break;}}HEAP32[touchEvent+8>>2]=numTouches;if(getWasmTableEntry(callbackfunc)(eventTypeId,touchEvent,userData))e.preventDefault();};var eventHandler={target:target,allowsDeferredCalls:eventTypeString=='touchstart'||eventTypeString=='touchend',eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:touchEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_touchcancel_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerTouchEventCallback(target,userData,useCapture,callbackfunc,25,"touchcancel",targetThread);return 0;}function _emscripten_set_touchend_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerTouchEventCallback(target,userData,useCapture,callbackfunc,23,"touchend",targetThread);return 0;}function _emscripten_set_touchmove_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerTouchEventCallback(target,userData,useCapture,callbackfunc,24,"touchmove",targetThread);return 0;}function _emscripten_set_touchstart_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){registerTouchEventCallback(target,userData,useCapture,callbackfunc,22,"touchstart",targetThread);return 0;}function fillVisibilityChangeEventData(eventStruct){var visibilityStates=["hidden","visible","prerender","unloaded"];var visibilityState=visibilityStates.indexOf(document.visibilityState);// Assigning a boolean to HEAP32 with expected type coercion.
/** @suppress{checkTypes} */HEAP32[eventStruct>>2]=document.hidden;HEAP32[eventStruct+4>>2]=visibilityState;}function registerVisibilityChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.visibilityChangeEvent)JSEvents.visibilityChangeEvent=_malloc(8);var visibilityChangeEventHandlerFunc=function visibilityChangeEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var visibilityChangeEvent=JSEvents.visibilityChangeEvent;fillVisibilityChangeEventData(visibilityChangeEvent);if(getWasmTableEntry(callbackfunc)(eventTypeId,visibilityChangeEvent,userData))e.preventDefault();};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:visibilityChangeEventHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_visibilitychange_callback_on_thread(userData,useCapture,callbackfunc,targetThread){registerVisibilityChangeEventCallback(specialHTMLTargets[1],userData,useCapture,callbackfunc,21,"visibilitychange",targetThread);return 0;}function registerWheelEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.wheelEvent)JSEvents.wheelEvent=_malloc(104);// The DOM Level 3 events spec event 'wheel'
var wheelHandlerFunc=function wheelHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var wheelEvent=JSEvents.wheelEvent;fillMouseEventData(wheelEvent,e,target);HEAPF64[wheelEvent+72>>3]=e["deltaX"];HEAPF64[wheelEvent+80>>3]=e["deltaY"];HEAPF64[wheelEvent+88>>3]=e["deltaZ"];HEAP32[wheelEvent+96>>2]=e["deltaMode"];if(getWasmTableEntry(callbackfunc)(eventTypeId,wheelEvent,userData))e.preventDefault();};var eventHandler={target:target,allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:wheelHandlerFunc,useCapture:useCapture};JSEvents.registerOrRemoveHandler(eventHandler);}function _emscripten_set_wheel_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){target=findEventTarget(target);if(typeof target.onwheel!='undefined'){registerWheelEventCallback(target,userData,useCapture,callbackfunc,9,"wheel",targetThread);return 0;}else{return-1;}}function _emscripten_set_window_title(title){setWindowTitle(UTF8ToString(title));}function _emscripten_sleep(){throw'Please compile your program with async support in order to use asynchronous operations like emscripten_sleep';}var ENV={};function getExecutableName(){return thisProgram||'./this.program';}function getEnvStrings(){if(!getEnvStrings.strings){// Default values.
// Browser language detection #8751
var lang=((typeof navigator==="undefined"?"undefined":_typeof(navigator))=='object'&&navigator.languages&&navigator.languages[0]||'C').replace('-','_')+'.UTF-8';var env={'USER':'web_user','LOGNAME':'web_user','PATH':'/','PWD':'/','HOME':'/home/web_user','LANG':lang,'_':getExecutableName()};// Apply the user-provided values, if any.
for(var x in ENV){// x is a key in ENV; if ENV[x] is undefined, that means it was
// explicitly set to be so. We allow user code to do that to
// force variables with default values to remain unset.
if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x];}var strings=[];for(var x in env){strings.push(x+'='+env[x]);}getEnvStrings.strings=strings;}return getEnvStrings.strings;}/** @param {boolean=} dontAddNull */function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===(str.charCodeAt(i)&0xff));HEAP8[buffer++>>0]=str.charCodeAt(i);}// Null-terminate the pointer to the HEAP.
if(!dontAddNull)HEAP8[buffer>>0]=0;}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1;});return 0;}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1;});HEAPU32[penviron_buf_size>>2]=bufSize;return 0;}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module['onExit'])Module['onExit'](code);ABORT=true;}quit_(code,new ExitStatus(code));}/** @param {boolean|number=} implicit */function exitJS(status,implicit){EXITSTATUS=status;checkUnflushedContent();// if exit() was called explicitly, warn the user if the runtime isn't actually being shut down
if(keepRuntimeAlive()&&!implicit){var msg='program exited (with status: '+status+'), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)';readyPromiseReject(msg);err(msg);}_proc_exit(status);}var _exit=exitJS;function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return e.errno;}}function _fd_fdstat_get(fd,pbuf){try{var stream=SYSCALLS.getStreamFromFD(fd);// All character devices are terminals (other things a Linux system would
// assume is a character device, like the mouse, we have special APIs for).
var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4;HEAP8[pbuf>>0]=type;// TODO HEAP16[(((pbuf)+(2))>>1)] = ?;
// TODO (tempI64 = [?>>>0,(tempDouble=?,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);
// TODO (tempI64 = [?>>>0,(tempDouble=?,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);
return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return e.errno;}}/** @param {number=} offset */function doReadv(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;// nothing more to read
if(typeof offset!=='undefined'){offset+=curr;}}return ret;}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return e.errno;}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var offset=convertI32PairToI53Checked(offset_low,offset_high);if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;// reset readdir state
return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return e.errno;}}/** @param {number=} offset */function doWritev(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(typeof offset!=='undefined'){offset+=curr;}}return ret;}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0;}catch(e){if(typeof FS=='undefined'||!(e instanceof FS.ErrnoError))throw e;return e.errno;}}function _glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,2);}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){// no-op
}return sum;}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){// we spill over to next month
days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1);}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1);}}else{// we stay in current month
newDate.setDate(newDate.getDate()+days);return newDate;}}return newDate;}function writeArrayToMemory(array,buffer){assert(array.length>=0,'writeArrayToMemory array must have a length (should be an array or typed array)');HEAP8.set(array,buffer);}function _strftime(s,maxsize,format,tm){// size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
// http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):''};var pattern=UTF8ToString(format);// expand format
var EXPANSION_RULES_1={'%c':'%a %b %d %H:%M:%S %Y',// Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
'%D':'%m/%d/%y',// Equivalent to %m / %d / %y
'%F':'%Y-%m-%d',// Equivalent to %Y - %m - %d
'%h':'%b',// Equivalent to %b
'%r':'%I:%M:%S %p',// Replaced by the time in a.m. and p.m. notation
'%R':'%H:%M',// Replaced by the time in 24-hour notation
'%T':'%H:%M:%S',// Replaced by the time
'%x':'%m/%d/%y',// Replaced by the locale's appropriate date representation
'%X':'%H:%M:%S',// Replaced by the locale's appropriate time representation
// Modified Conversion Specifiers
'%Ec':'%c',// Replaced by the locale's alternative appropriate date and time representation.
'%EC':'%C',// Replaced by the name of the base year (period) in the locale's alternative representation.
'%Ex':'%m/%d/%y',// Replaced by the locale's alternative date representation.
'%EX':'%H:%M:%S',// Replaced by the locale's alternative time representation.
'%Ey':'%y',// Replaced by the offset from %EC (year only) in the locale's alternative representation.
'%EY':'%Y',// Replaced by the full alternative year representation.
'%Od':'%d',// Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.
'%Oe':'%e',// Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.
'%OH':'%H',// Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.
'%OI':'%I',// Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.
'%Om':'%m',// Replaced by the month using the locale's alternative numeric symbols.
'%OM':'%M',// Replaced by the minutes using the locale's alternative numeric symbols.
'%OS':'%S',// Replaced by the seconds using the locale's alternative numeric symbols.
'%Ou':'%u',// Replaced by the weekday as a number in the locale's alternative representation (Monday=1).
'%OU':'%U',// Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.
'%OV':'%V',// Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.
'%Ow':'%w',// Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.
'%OW':'%W',// Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.
'%Oy':'%y'// Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.
};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,'g'),EXPANSION_RULES_1[rule]);}var WEEKDAYS=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];var MONTHS=['January','February','March','April','May','June','July','August','September','October','November','December'];function leadingSomething(value,digits,character){var str=typeof value=='number'?value.toString():value||'';while(str.length<digits){str=character[0]+str;}return str;}function leadingNulls(value,digits){return leadingSomething(value,digits,'0');}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0;}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate());}}return compare;}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:// Sunday
return new Date(janFourth.getFullYear()-1,11,29);case 1:// Monday
return janFourth;case 2:// Tuesday
return new Date(janFourth.getFullYear(),0,3);case 3:// Wednesday
return new Date(janFourth.getFullYear(),0,2);case 4:// Thursday
return new Date(janFourth.getFullYear(),0,1);case 5:// Friday
return new Date(janFourth.getFullYear()-1,11,31);case 6:// Saturday
return new Date(janFourth.getFullYear()-1,11,30);}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){// this date is after the start of the first week of this year
if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1;}return thisDate.getFullYear();}return thisDate.getFullYear()-1;}var EXPANSION_RULES_2={'%a':function a(date){return WEEKDAYS[date.tm_wday].substring(0,3);},'%A':function A(date){return WEEKDAYS[date.tm_wday];},'%b':function b(date){return MONTHS[date.tm_mon].substring(0,3);},'%B':function B(date){return MONTHS[date.tm_mon];},'%C':function C(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2);},'%d':function d(date){return leadingNulls(date.tm_mday,2);},'%e':function e(date){return leadingSomething(date.tm_mday,2,' ');},'%g':function g(date){// %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.
// In this system, weeks begin on a Monday and week 1 of the year is the week that includes
// January 4th, which is also the week that includes the first Thursday of the year, and
// is also the first week that contains at least four days in the year.
// If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of
// the last week of the preceding year; thus, for Saturday 2nd January 1999,
// %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,
// or 31st is a Monday, it and any following days are part of week 1 of the following year.
// Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
return getWeekBasedYear(date).toString().substring(2);},'%G':function G(date){return getWeekBasedYear(date);},'%H':function H(date){return leadingNulls(date.tm_hour,2);},'%I':function I(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2);},'%j':function j(date){// Day of the year (001-366)
return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3);},'%m':function m(date){return leadingNulls(date.tm_mon+1,2);},'%M':function M(date){return leadingNulls(date.tm_min,2);},'%n':function n(){return'\n';},'%p':function p(date){if(date.tm_hour>=0&&date.tm_hour<12){return'AM';}return'PM';},'%S':function S(date){return leadingNulls(date.tm_sec,2);},'%t':function t(){return'\t';},'%u':function u(date){return date.tm_wday||7;},'%U':function U(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2);},'%V':function V(date){// Replaced by the week number of the year (Monday as the first day of the week)
// as a decimal number [01,53]. If the week containing 1 January has four
// or more days in the new year, then it is considered week 1.
// Otherwise, it is the last week of the previous year, and the next week is week 1.
// Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);// If 1 Jan is just 1-3 days past Monday, the previous week
// is also in this year.
if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++;}if(!val){val=52;// If 31 December of prev year a Thursday, or Friday of a
// leap year, then the prev year has 53 weeks.
var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&__isLeapYear(date.tm_year%400-1)){val++;}}else if(val==53){// If 1 January is not a Thursday, and not a Wednesday of a
// leap year, then this year has only 52 weeks.
var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!__isLeapYear(date.tm_year)))val=1;}return leadingNulls(val,2);},'%w':function w(date){return date.tm_wday;},'%W':function W(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2);},'%y':function y(date){// Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
return(date.tm_year+1900).toString().substring(2);},'%Y':function Y(date){// Replaced by the year as a decimal number (for example, 1997). [ tm_year]
return date.tm_year+1900;},'%z':function z(date){// Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
// For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;// convert from minutes into hhmm format (which means 60 minutes = 100 units)
off=off/60*100+off%60;return(ahead?'+':'-')+String("0000"+off).slice(-4);},'%Z':function Z(date){return date.tm_zone;},'%%':function _(){return'%';}};// Replace %% with a pair of NULLs (which cannot occur in a C string), then
// re-inject them after processing.
pattern=pattern.replace(/%%/g,'\0\0');for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,'g'),EXPANSION_RULES_2[rule](date));}}pattern=pattern.replace(/\0\0/g,'%');var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0;}writeArrayToMemory(bytes,s);return bytes.length-1;}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s,maxsize,format,tm);// no locale support yet
}function allocateUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8Array(str,HEAP8,ret,size);return ret;}var FSNode=/** @constructor */function FSNode(parent,name,mode,rdev){if(!parent){parent=this;// root node sets parent to itself
}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev;};var readMode=292/*292*/|73/*73*/;var writeMode=146/*146*/;Object.defineProperties(FSNode.prototype,{read:{get:/** @this{FSNode} */function get(){return(this.mode&readMode)===readMode;},set:/** @this{FSNode} */function set(val){val?this.mode|=readMode:this.mode&=~readMode;}},write:{get:/** @this{FSNode} */function get(){return(this.mode&writeMode)===writeMode;},set:/** @this{FSNode} */function set(val){val?this.mode|=writeMode:this.mode&=~writeMode;}},isFolder:{get:/** @this{FSNode} */function get(){return FS.isDir(this.mode);}},isDevice:{get:/** @this{FSNode} */function get(){return FS.isChrdev(this.mode);}}});FS.FSNode=FSNode;FS.staticInit();Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_unlink"]=FS.unlink;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;;ERRNO_CODES={'EPERM':63,'ENOENT':44,'ESRCH':71,'EINTR':27,'EIO':29,'ENXIO':60,'E2BIG':1,'ENOEXEC':45,'EBADF':8,'ECHILD':12,'EAGAIN':6,'EWOULDBLOCK':6,'ENOMEM':48,'EACCES':2,'EFAULT':21,'ENOTBLK':105,'EBUSY':10,'EEXIST':20,'EXDEV':75,'ENODEV':43,'ENOTDIR':54,'EISDIR':31,'EINVAL':28,'ENFILE':41,'EMFILE':33,'ENOTTY':59,'ETXTBSY':74,'EFBIG':22,'ENOSPC':51,'ESPIPE':70,'EROFS':69,'EMLINK':34,'EPIPE':64,'EDOM':18,'ERANGE':68,'ENOMSG':49,'EIDRM':24,'ECHRNG':106,'EL2NSYNC':156,'EL3HLT':107,'EL3RST':108,'ELNRNG':109,'EUNATCH':110,'ENOCSI':111,'EL2HLT':112,'EDEADLK':16,'ENOLCK':46,'EBADE':113,'EBADR':114,'EXFULL':115,'ENOANO':104,'EBADRQC':103,'EBADSLT':102,'EDEADLOCK':16,'EBFONT':101,'ENOSTR':100,'ENODATA':116,'ETIME':117,'ENOSR':118,'ENONET':119,'ENOPKG':120,'EREMOTE':121,'ENOLINK':47,'EADV':122,'ESRMNT':123,'ECOMM':124,'EPROTO':65,'EMULTIHOP':36,'EDOTDOT':125,'EBADMSG':9,'ENOTUNIQ':126,'EBADFD':127,'EREMCHG':128,'ELIBACC':129,'ELIBBAD':130,'ELIBSCN':131,'ELIBMAX':132,'ELIBEXEC':133,'ENOSYS':52,'ENOTEMPTY':55,'ENAMETOOLONG':37,'ELOOP':32,'EOPNOTSUPP':138,'EPFNOSUPPORT':139,'ECONNRESET':15,'ENOBUFS':42,'EAFNOSUPPORT':5,'EPROTOTYPE':67,'ENOTSOCK':57,'ENOPROTOOPT':50,'ESHUTDOWN':140,'ECONNREFUSED':14,'EADDRINUSE':3,'ECONNABORTED':13,'ENETUNREACH':40,'ENETDOWN':38,'ETIMEDOUT':73,'EHOSTDOWN':142,'EHOSTUNREACH':23,'EINPROGRESS':26,'EALREADY':7,'EDESTADDRREQ':17,'EMSGSIZE':35,'EPROTONOSUPPORT':66,'ESOCKTNOSUPPORT':137,'EADDRNOTAVAIL':4,'ENETRESET':39,'EISCONN':30,'ENOTCONN':53,'ETOOMANYREFS':141,'EUSERS':136,'EDQUOT':19,'ESTALE':72,'ENOTSUP':138,'ENOMEDIUM':148,'EILSEQ':25,'EOVERFLOW':61,'ECANCELED':11,'ENOTRECOVERABLE':56,'EOWNERDEAD':62,'ESTRPIPE':135};;// exports
Module["requestFullscreen"]=function Module_requestFullscreen(lockPointer,resizeCanvas){Browser.requestFullscreen(lockPointer,resizeCanvas);};Module["requestFullScreen"]=function Module_requestFullScreen(){Browser.requestFullScreen();};Module["requestAnimationFrame"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func);};Module["setCanvasSize"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates);};Module["pauseMainLoop"]=function Module_pauseMainLoop(){Browser.mainLoop.pause();};Module["resumeMainLoop"]=function Module_resumeMainLoop(){Browser.mainLoop.resume();};Module["getUserMedia"]=function Module_getUserMedia(){Browser.getUserMedia();};Module["createContext"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes);};var preloadedImages={};var preloadedAudios={};;var GLctx;;for(var i=0;i<32;++i)tempFixedLengthArray.push(new Array(i));;var miniTempWebGLFloatBuffersStorage=new Float32Array(288);for(/**@suppress{duplicate}*/var i=0;i<288;++i){miniTempWebGLFloatBuffers[i]=miniTempWebGLFloatBuffersStorage.subarray(0,i+1);};var __miniTempWebGLIntBuffersStorage=new Int32Array(288);for(/**@suppress{duplicate}*/var i=0;i<288;++i){__miniTempWebGLIntBuffers[i]=__miniTempWebGLIntBuffersStorage.subarray(0,i+1);};// include: base64Utils.js
// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149
// This code was written by Tyler Akins and has been placed in the
// public domain.  It would be nice if you left this header intact.
// Base64 code from Tyler Akins -- http://rumkin.com
/**
 * Decodes a base64 string.
 * @param {string} input The string to decode.
 */var decodeBase64=typeof atob=='function'?atob:function(input){var keyStr='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';var output='';var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;// remove all characters that are not A-Z, a-z, 0-9, +, /, or =
input=input.replace(/[^A-Za-z0-9\+\/\=]/g,'');do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2);}if(enc4!==64){output=output+String.fromCharCode(chr3);}}while(i<input.length);return output;};// Converts a string of base64 into a byte array.
// Throws error on invalid input.
function intArrayFromBase64(s){try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i);}return bytes;}catch(_){throw new Error('Converting base64 string to bytes failed.');}}// If filename is a base64 data URI, parses and returns data (Buffer on node,
// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.
function tryParseAsDataURI(filename){if(!isDataURI(filename)){return;}return intArrayFromBase64(filename.slice(dataURIPrefix.length));}// end include: base64Utils.js
function checkIncomingModuleAPI(){ignoredModuleProp('fetchSettings');}var wasmImports={"__assert_fail":___assert_fail,"__cxa_throw":___cxa_throw,"__syscall_chmod":___syscall_chmod,"__syscall_fchmod":___syscall_fchmod,"__syscall_fcntl64":___syscall_fcntl64,"__syscall_fstat64":___syscall_fstat64,"__syscall_ftruncate64":___syscall_ftruncate64,"__syscall_getcwd":___syscall_getcwd,"__syscall_getdents64":___syscall_getdents64,"__syscall_ioctl":___syscall_ioctl,"__syscall_lstat64":___syscall_lstat64,"__syscall_mkdirat":___syscall_mkdirat,"__syscall_newfstatat":___syscall_newfstatat,"__syscall_openat":___syscall_openat,"__syscall_rmdir":___syscall_rmdir,"__syscall_stat64":___syscall_stat64,"__syscall_unlinkat":___syscall_unlinkat,"_emscripten_get_now_is_monotonic":__emscripten_get_now_is_monotonic,"_localtime_js":__localtime_js,"_mktime_js":__mktime_js,"_tzset_js":__tzset_js,"abort":_abort,"eglBindAPI":_eglBindAPI,"eglChooseConfig":_eglChooseConfig,"eglCreateContext":_eglCreateContext,"eglCreateWindowSurface":_eglCreateWindowSurface,"eglDestroyContext":_eglDestroyContext,"eglDestroySurface":_eglDestroySurface,"eglGetConfigAttrib":_eglGetConfigAttrib,"eglGetDisplay":_eglGetDisplay,"eglGetError":_eglGetError,"eglInitialize":_eglInitialize,"eglMakeCurrent":_eglMakeCurrent,"eglQueryString":_eglQueryString,"eglSwapBuffers":_eglSwapBuffers,"eglSwapInterval":_eglSwapInterval,"eglTerminate":_eglTerminate,"eglWaitGL":_eglWaitGL,"eglWaitNative":_eglWaitNative,"emscripten_asm_const_int":_emscripten_asm_const_int,"emscripten_asm_const_int_sync_on_main_thread":_emscripten_asm_const_int_sync_on_main_thread,"emscripten_date_now":_emscripten_date_now,"emscripten_exit_fullscreen":_emscripten_exit_fullscreen,"emscripten_exit_pointerlock":_emscripten_exit_pointerlock,"emscripten_get_device_pixel_ratio":_emscripten_get_device_pixel_ratio,"emscripten_get_element_css_size":_emscripten_get_element_css_size,"emscripten_get_gamepad_status":_emscripten_get_gamepad_status,"emscripten_get_now":_emscripten_get_now,"emscripten_get_num_gamepads":_emscripten_get_num_gamepads,"emscripten_get_screen_size":_emscripten_get_screen_size,"emscripten_glActiveTexture":_emscripten_glActiveTexture,"emscripten_glAttachShader":_emscripten_glAttachShader,"emscripten_glBeginQuery":_emscripten_glBeginQuery,"emscripten_glBeginQueryEXT":_emscripten_glBeginQueryEXT,"emscripten_glBeginTransformFeedback":_emscripten_glBeginTransformFeedback,"emscripten_glBindAttribLocation":_emscripten_glBindAttribLocation,"emscripten_glBindBuffer":_emscripten_glBindBuffer,"emscripten_glBindBufferBase":_emscripten_glBindBufferBase,"emscripten_glBindBufferRange":_emscripten_glBindBufferRange,"emscripten_glBindFramebuffer":_emscripten_glBindFramebuffer,"emscripten_glBindRenderbuffer":_emscripten_glBindRenderbuffer,"emscripten_glBindSampler":_emscripten_glBindSampler,"emscripten_glBindTexture":_emscripten_glBindTexture,"emscripten_glBindTransformFeedback":_emscripten_glBindTransformFeedback,"emscripten_glBindVertexArray":_emscripten_glBindVertexArray,"emscripten_glBindVertexArrayOES":_emscripten_glBindVertexArrayOES,"emscripten_glBlendColor":_emscripten_glBlendColor,"emscripten_glBlendEquation":_emscripten_glBlendEquation,"emscripten_glBlendEquationSeparate":_emscripten_glBlendEquationSeparate,"emscripten_glBlendFunc":_emscripten_glBlendFunc,"emscripten_glBlendFuncSeparate":_emscripten_glBlendFuncSeparate,"emscripten_glBlitFramebuffer":_emscripten_glBlitFramebuffer,"emscripten_glBufferData":_emscripten_glBufferData,"emscripten_glBufferSubData":_emscripten_glBufferSubData,"emscripten_glCheckFramebufferStatus":_emscripten_glCheckFramebufferStatus,"emscripten_glClear":_emscripten_glClear,"emscripten_glClearBufferfi":_emscripten_glClearBufferfi,"emscripten_glClearBufferfv":_emscripten_glClearBufferfv,"emscripten_glClearBufferiv":_emscripten_glClearBufferiv,"emscripten_glClearBufferuiv":_emscripten_glClearBufferuiv,"emscripten_glClearColor":_emscripten_glClearColor,"emscripten_glClearDepthf":_emscripten_glClearDepthf,"emscripten_glClearStencil":_emscripten_glClearStencil,"emscripten_glClientWaitSync":_emscripten_glClientWaitSync,"emscripten_glColorMask":_emscripten_glColorMask,"emscripten_glCompileShader":_emscripten_glCompileShader,"emscripten_glCompressedTexImage2D":_emscripten_glCompressedTexImage2D,"emscripten_glCompressedTexImage3D":_emscripten_glCompressedTexImage3D,"emscripten_glCompressedTexSubImage2D":_emscripten_glCompressedTexSubImage2D,"emscripten_glCompressedTexSubImage3D":_emscripten_glCompressedTexSubImage3D,"emscripten_glCopyBufferSubData":_emscripten_glCopyBufferSubData,"emscripten_glCopyTexImage2D":_emscripten_glCopyTexImage2D,"emscripten_glCopyTexSubImage2D":_emscripten_glCopyTexSubImage2D,"emscripten_glCopyTexSubImage3D":_emscripten_glCopyTexSubImage3D,"emscripten_glCreateProgram":_emscripten_glCreateProgram,"emscripten_glCreateShader":_emscripten_glCreateShader,"emscripten_glCullFace":_emscripten_glCullFace,"emscripten_glDeleteBuffers":_emscripten_glDeleteBuffers,"emscripten_glDeleteFramebuffers":_emscripten_glDeleteFramebuffers,"emscripten_glDeleteProgram":_emscripten_glDeleteProgram,"emscripten_glDeleteQueries":_emscripten_glDeleteQueries,"emscripten_glDeleteQueriesEXT":_emscripten_glDeleteQueriesEXT,"emscripten_glDeleteRenderbuffers":_emscripten_glDeleteRenderbuffers,"emscripten_glDeleteSamplers":_emscripten_glDeleteSamplers,"emscripten_glDeleteShader":_emscripten_glDeleteShader,"emscripten_glDeleteSync":_emscripten_glDeleteSync,"emscripten_glDeleteTextures":_emscripten_glDeleteTextures,"emscripten_glDeleteTransformFeedbacks":_emscripten_glDeleteTransformFeedbacks,"emscripten_glDeleteVertexArrays":_emscripten_glDeleteVertexArrays,"emscripten_glDeleteVertexArraysOES":_emscripten_glDeleteVertexArraysOES,"emscripten_glDepthFunc":_emscripten_glDepthFunc,"emscripten_glDepthMask":_emscripten_glDepthMask,"emscripten_glDepthRangef":_emscripten_glDepthRangef,"emscripten_glDetachShader":_emscripten_glDetachShader,"emscripten_glDisable":_emscripten_glDisable,"emscripten_glDisableVertexAttribArray":_emscripten_glDisableVertexAttribArray,"emscripten_glDrawArrays":_emscripten_glDrawArrays,"emscripten_glDrawArraysInstanced":_emscripten_glDrawArraysInstanced,"emscripten_glDrawArraysInstancedANGLE":_emscripten_glDrawArraysInstancedANGLE,"emscripten_glDrawArraysInstancedARB":_emscripten_glDrawArraysInstancedARB,"emscripten_glDrawArraysInstancedEXT":_emscripten_glDrawArraysInstancedEXT,"emscripten_glDrawArraysInstancedNV":_emscripten_glDrawArraysInstancedNV,"emscripten_glDrawBuffers":_emscripten_glDrawBuffers,"emscripten_glDrawBuffersEXT":_emscripten_glDrawBuffersEXT,"emscripten_glDrawBuffersWEBGL":_emscripten_glDrawBuffersWEBGL,"emscripten_glDrawElements":_emscripten_glDrawElements,"emscripten_glDrawElementsInstanced":_emscripten_glDrawElementsInstanced,"emscripten_glDrawElementsInstancedANGLE":_emscripten_glDrawElementsInstancedANGLE,"emscripten_glDrawElementsInstancedARB":_emscripten_glDrawElementsInstancedARB,"emscripten_glDrawElementsInstancedEXT":_emscripten_glDrawElementsInstancedEXT,"emscripten_glDrawElementsInstancedNV":_emscripten_glDrawElementsInstancedNV,"emscripten_glDrawRangeElements":_emscripten_glDrawRangeElements,"emscripten_glEnable":_emscripten_glEnable,"emscripten_glEnableVertexAttribArray":_emscripten_glEnableVertexAttribArray,"emscripten_glEndQuery":_emscripten_glEndQuery,"emscripten_glEndQueryEXT":_emscripten_glEndQueryEXT,"emscripten_glEndTransformFeedback":_emscripten_glEndTransformFeedback,"emscripten_glFenceSync":_emscripten_glFenceSync,"emscripten_glFinish":_emscripten_glFinish,"emscripten_glFlush":_emscripten_glFlush,"emscripten_glFramebufferRenderbuffer":_emscripten_glFramebufferRenderbuffer,"emscripten_glFramebufferTexture2D":_emscripten_glFramebufferTexture2D,"emscripten_glFramebufferTextureLayer":_emscripten_glFramebufferTextureLayer,"emscripten_glFrontFace":_emscripten_glFrontFace,"emscripten_glGenBuffers":_emscripten_glGenBuffers,"emscripten_glGenFramebuffers":_emscripten_glGenFramebuffers,"emscripten_glGenQueries":_emscripten_glGenQueries,"emscripten_glGenQueriesEXT":_emscripten_glGenQueriesEXT,"emscripten_glGenRenderbuffers":_emscripten_glGenRenderbuffers,"emscripten_glGenSamplers":_emscripten_glGenSamplers,"emscripten_glGenTextures":_emscripten_glGenTextures,"emscripten_glGenTransformFeedbacks":_emscripten_glGenTransformFeedbacks,"emscripten_glGenVertexArrays":_emscripten_glGenVertexArrays,"emscripten_glGenVertexArraysOES":_emscripten_glGenVertexArraysOES,"emscripten_glGenerateMipmap":_emscripten_glGenerateMipmap,"emscripten_glGetActiveAttrib":_emscripten_glGetActiveAttrib,"emscripten_glGetActiveUniform":_emscripten_glGetActiveUniform,"emscripten_glGetActiveUniformBlockName":_emscripten_glGetActiveUniformBlockName,"emscripten_glGetActiveUniformBlockiv":_emscripten_glGetActiveUniformBlockiv,"emscripten_glGetActiveUniformsiv":_emscripten_glGetActiveUniformsiv,"emscripten_glGetAttachedShaders":_emscripten_glGetAttachedShaders,"emscripten_glGetAttribLocation":_emscripten_glGetAttribLocation,"emscripten_glGetBooleanv":_emscripten_glGetBooleanv,"emscripten_glGetBufferParameteri64v":_emscripten_glGetBufferParameteri64v,"emscripten_glGetBufferParameteriv":_emscripten_glGetBufferParameteriv,"emscripten_glGetError":_emscripten_glGetError,"emscripten_glGetFloatv":_emscripten_glGetFloatv,"emscripten_glGetFragDataLocation":_emscripten_glGetFragDataLocation,"emscripten_glGetFramebufferAttachmentParameteriv":_emscripten_glGetFramebufferAttachmentParameteriv,"emscripten_glGetInteger64i_v":_emscripten_glGetInteger64i_v,"emscripten_glGetInteger64v":_emscripten_glGetInteger64v,"emscripten_glGetIntegeri_v":_emscripten_glGetIntegeri_v,"emscripten_glGetIntegerv":_emscripten_glGetIntegerv,"emscripten_glGetInternalformativ":_emscripten_glGetInternalformativ,"emscripten_glGetProgramBinary":_emscripten_glGetProgramBinary,"emscripten_glGetProgramInfoLog":_emscripten_glGetProgramInfoLog,"emscripten_glGetProgramiv":_emscripten_glGetProgramiv,"emscripten_glGetQueryObjecti64vEXT":_emscripten_glGetQueryObjecti64vEXT,"emscripten_glGetQueryObjectivEXT":_emscripten_glGetQueryObjectivEXT,"emscripten_glGetQueryObjectui64vEXT":_emscripten_glGetQueryObjectui64vEXT,"emscripten_glGetQueryObjectuiv":_emscripten_glGetQueryObjectuiv,"emscripten_glGetQueryObjectuivEXT":_emscripten_glGetQueryObjectuivEXT,"emscripten_glGetQueryiv":_emscripten_glGetQueryiv,"emscripten_glGetQueryivEXT":_emscripten_glGetQueryivEXT,"emscripten_glGetRenderbufferParameteriv":_emscripten_glGetRenderbufferParameteriv,"emscripten_glGetSamplerParameterfv":_emscripten_glGetSamplerParameterfv,"emscripten_glGetSamplerParameteriv":_emscripten_glGetSamplerParameteriv,"emscripten_glGetShaderInfoLog":_emscripten_glGetShaderInfoLog,"emscripten_glGetShaderPrecisionFormat":_emscripten_glGetShaderPrecisionFormat,"emscripten_glGetShaderSource":_emscripten_glGetShaderSource,"emscripten_glGetShaderiv":_emscripten_glGetShaderiv,"emscripten_glGetString":_emscripten_glGetString,"emscripten_glGetStringi":_emscripten_glGetStringi,"emscripten_glGetSynciv":_emscripten_glGetSynciv,"emscripten_glGetTexParameterfv":_emscripten_glGetTexParameterfv,"emscripten_glGetTexParameteriv":_emscripten_glGetTexParameteriv,"emscripten_glGetTransformFeedbackVarying":_emscripten_glGetTransformFeedbackVarying,"emscripten_glGetUniformBlockIndex":_emscripten_glGetUniformBlockIndex,"emscripten_glGetUniformIndices":_emscripten_glGetUniformIndices,"emscripten_glGetUniformLocation":_emscripten_glGetUniformLocation,"emscripten_glGetUniformfv":_emscripten_glGetUniformfv,"emscripten_glGetUniformiv":_emscripten_glGetUniformiv,"emscripten_glGetUniformuiv":_emscripten_glGetUniformuiv,"emscripten_glGetVertexAttribIiv":_emscripten_glGetVertexAttribIiv,"emscripten_glGetVertexAttribIuiv":_emscripten_glGetVertexAttribIuiv,"emscripten_glGetVertexAttribPointerv":_emscripten_glGetVertexAttribPointerv,"emscripten_glGetVertexAttribfv":_emscripten_glGetVertexAttribfv,"emscripten_glGetVertexAttribiv":_emscripten_glGetVertexAttribiv,"emscripten_glHint":_emscripten_glHint,"emscripten_glInvalidateFramebuffer":_emscripten_glInvalidateFramebuffer,"emscripten_glInvalidateSubFramebuffer":_emscripten_glInvalidateSubFramebuffer,"emscripten_glIsBuffer":_emscripten_glIsBuffer,"emscripten_glIsEnabled":_emscripten_glIsEnabled,"emscripten_glIsFramebuffer":_emscripten_glIsFramebuffer,"emscripten_glIsProgram":_emscripten_glIsProgram,"emscripten_glIsQuery":_emscripten_glIsQuery,"emscripten_glIsQueryEXT":_emscripten_glIsQueryEXT,"emscripten_glIsRenderbuffer":_emscripten_glIsRenderbuffer,"emscripten_glIsSampler":_emscripten_glIsSampler,"emscripten_glIsShader":_emscripten_glIsShader,"emscripten_glIsSync":_emscripten_glIsSync,"emscripten_glIsTexture":_emscripten_glIsTexture,"emscripten_glIsTransformFeedback":_emscripten_glIsTransformFeedback,"emscripten_glIsVertexArray":_emscripten_glIsVertexArray,"emscripten_glIsVertexArrayOES":_emscripten_glIsVertexArrayOES,"emscripten_glLineWidth":_emscripten_glLineWidth,"emscripten_glLinkProgram":_emscripten_glLinkProgram,"emscripten_glPauseTransformFeedback":_emscripten_glPauseTransformFeedback,"emscripten_glPixelStorei":_emscripten_glPixelStorei,"emscripten_glPolygonOffset":_emscripten_glPolygonOffset,"emscripten_glProgramBinary":_emscripten_glProgramBinary,"emscripten_glProgramParameteri":_emscripten_glProgramParameteri,"emscripten_glQueryCounterEXT":_emscripten_glQueryCounterEXT,"emscripten_glReadBuffer":_emscripten_glReadBuffer,"emscripten_glReadPixels":_emscripten_glReadPixels,"emscripten_glReleaseShaderCompiler":_emscripten_glReleaseShaderCompiler,"emscripten_glRenderbufferStorage":_emscripten_glRenderbufferStorage,"emscripten_glRenderbufferStorageMultisample":_emscripten_glRenderbufferStorageMultisample,"emscripten_glResumeTransformFeedback":_emscripten_glResumeTransformFeedback,"emscripten_glSampleCoverage":_emscripten_glSampleCoverage,"emscripten_glSamplerParameterf":_emscripten_glSamplerParameterf,"emscripten_glSamplerParameterfv":_emscripten_glSamplerParameterfv,"emscripten_glSamplerParameteri":_emscripten_glSamplerParameteri,"emscripten_glSamplerParameteriv":_emscripten_glSamplerParameteriv,"emscripten_glScissor":_emscripten_glScissor,"emscripten_glShaderBinary":_emscripten_glShaderBinary,"emscripten_glShaderSource":_emscripten_glShaderSource,"emscripten_glStencilFunc":_emscripten_glStencilFunc,"emscripten_glStencilFuncSeparate":_emscripten_glStencilFuncSeparate,"emscripten_glStencilMask":_emscripten_glStencilMask,"emscripten_glStencilMaskSeparate":_emscripten_glStencilMaskSeparate,"emscripten_glStencilOp":_emscripten_glStencilOp,"emscripten_glStencilOpSeparate":_emscripten_glStencilOpSeparate,"emscripten_glTexImage2D":_emscripten_glTexImage2D,"emscripten_glTexImage3D":_emscripten_glTexImage3D,"emscripten_glTexParameterf":_emscripten_glTexParameterf,"emscripten_glTexParameterfv":_emscripten_glTexParameterfv,"emscripten_glTexParameteri":_emscripten_glTexParameteri,"emscripten_glTexParameteriv":_emscripten_glTexParameteriv,"emscripten_glTexStorage2D":_emscripten_glTexStorage2D,"emscripten_glTexStorage3D":_emscripten_glTexStorage3D,"emscripten_glTexSubImage2D":_emscripten_glTexSubImage2D,"emscripten_glTexSubImage3D":_emscripten_glTexSubImage3D,"emscripten_glTransformFeedbackVaryings":_emscripten_glTransformFeedbackVaryings,"emscripten_glUniform1f":_emscripten_glUniform1f,"emscripten_glUniform1fv":_emscripten_glUniform1fv,"emscripten_glUniform1i":_emscripten_glUniform1i,"emscripten_glUniform1iv":_emscripten_glUniform1iv,"emscripten_glUniform1ui":_emscripten_glUniform1ui,"emscripten_glUniform1uiv":_emscripten_glUniform1uiv,"emscripten_glUniform2f":_emscripten_glUniform2f,"emscripten_glUniform2fv":_emscripten_glUniform2fv,"emscripten_glUniform2i":_emscripten_glUniform2i,"emscripten_glUniform2iv":_emscripten_glUniform2iv,"emscripten_glUniform2ui":_emscripten_glUniform2ui,"emscripten_glUniform2uiv":_emscripten_glUniform2uiv,"emscripten_glUniform3f":_emscripten_glUniform3f,"emscripten_glUniform3fv":_emscripten_glUniform3fv,"emscripten_glUniform3i":_emscripten_glUniform3i,"emscripten_glUniform3iv":_emscripten_glUniform3iv,"emscripten_glUniform3ui":_emscripten_glUniform3ui,"emscripten_glUniform3uiv":_emscripten_glUniform3uiv,"emscripten_glUniform4f":_emscripten_glUniform4f,"emscripten_glUniform4fv":_emscripten_glUniform4fv,"emscripten_glUniform4i":_emscripten_glUniform4i,"emscripten_glUniform4iv":_emscripten_glUniform4iv,"emscripten_glUniform4ui":_emscripten_glUniform4ui,"emscripten_glUniform4uiv":_emscripten_glUniform4uiv,"emscripten_glUniformBlockBinding":_emscripten_glUniformBlockBinding,"emscripten_glUniformMatrix2fv":_emscripten_glUniformMatrix2fv,"emscripten_glUniformMatrix2x3fv":_emscripten_glUniformMatrix2x3fv,"emscripten_glUniformMatrix2x4fv":_emscripten_glUniformMatrix2x4fv,"emscripten_glUniformMatrix3fv":_emscripten_glUniformMatrix3fv,"emscripten_glUniformMatrix3x2fv":_emscripten_glUniformMatrix3x2fv,"emscripten_glUniformMatrix3x4fv":_emscripten_glUniformMatrix3x4fv,"emscripten_glUniformMatrix4fv":_emscripten_glUniformMatrix4fv,"emscripten_glUniformMatrix4x2fv":_emscripten_glUniformMatrix4x2fv,"emscripten_glUniformMatrix4x3fv":_emscripten_glUniformMatrix4x3fv,"emscripten_glUseProgram":_emscripten_glUseProgram,"emscripten_glValidateProgram":_emscripten_glValidateProgram,"emscripten_glVertexAttrib1f":_emscripten_glVertexAttrib1f,"emscripten_glVertexAttrib1fv":_emscripten_glVertexAttrib1fv,"emscripten_glVertexAttrib2f":_emscripten_glVertexAttrib2f,"emscripten_glVertexAttrib2fv":_emscripten_glVertexAttrib2fv,"emscripten_glVertexAttrib3f":_emscripten_glVertexAttrib3f,"emscripten_glVertexAttrib3fv":_emscripten_glVertexAttrib3fv,"emscripten_glVertexAttrib4f":_emscripten_glVertexAttrib4f,"emscripten_glVertexAttrib4fv":_emscripten_glVertexAttrib4fv,"emscripten_glVertexAttribDivisor":_emscripten_glVertexAttribDivisor,"emscripten_glVertexAttribDivisorANGLE":_emscripten_glVertexAttribDivisorANGLE,"emscripten_glVertexAttribDivisorARB":_emscripten_glVertexAttribDivisorARB,"emscripten_glVertexAttribDivisorEXT":_emscripten_glVertexAttribDivisorEXT,"emscripten_glVertexAttribDivisorNV":_emscripten_glVertexAttribDivisorNV,"emscripten_glVertexAttribI4i":_emscripten_glVertexAttribI4i,"emscripten_glVertexAttribI4iv":_emscripten_glVertexAttribI4iv,"emscripten_glVertexAttribI4ui":_emscripten_glVertexAttribI4ui,"emscripten_glVertexAttribI4uiv":_emscripten_glVertexAttribI4uiv,"emscripten_glVertexAttribIPointer":_emscripten_glVertexAttribIPointer,"emscripten_glVertexAttribPointer":_emscripten_glVertexAttribPointer,"emscripten_glViewport":_emscripten_glViewport,"emscripten_glWaitSync":_emscripten_glWaitSync,"emscripten_has_asyncify":_emscripten_has_asyncify,"emscripten_memcpy_big":_emscripten_memcpy_big,"emscripten_request_fullscreen_strategy":_emscripten_request_fullscreen_strategy,"emscripten_request_pointerlock":_emscripten_request_pointerlock,"emscripten_resize_heap":_emscripten_resize_heap,"emscripten_sample_gamepad_data":_emscripten_sample_gamepad_data,"emscripten_set_beforeunload_callback_on_thread":_emscripten_set_beforeunload_callback_on_thread,"emscripten_set_blur_callback_on_thread":_emscripten_set_blur_callback_on_thread,"emscripten_set_canvas_element_size":_emscripten_set_canvas_element_size,"emscripten_set_element_css_size":_emscripten_set_element_css_size,"emscripten_set_focus_callback_on_thread":_emscripten_set_focus_callback_on_thread,"emscripten_set_fullscreenchange_callback_on_thread":_emscripten_set_fullscreenchange_callback_on_thread,"emscripten_set_gamepadconnected_callback_on_thread":_emscripten_set_gamepadconnected_callback_on_thread,"emscripten_set_gamepaddisconnected_callback_on_thread":_emscripten_set_gamepaddisconnected_callback_on_thread,"emscripten_set_keydown_callback_on_thread":_emscripten_set_keydown_callback_on_thread,"emscripten_set_keypress_callback_on_thread":_emscripten_set_keypress_callback_on_thread,"emscripten_set_keyup_callback_on_thread":_emscripten_set_keyup_callback_on_thread,"emscripten_set_main_loop":_emscripten_set_main_loop,"emscripten_set_mousedown_callback_on_thread":_emscripten_set_mousedown_callback_on_thread,"emscripten_set_mouseenter_callback_on_thread":_emscripten_set_mouseenter_callback_on_thread,"emscripten_set_mouseleave_callback_on_thread":_emscripten_set_mouseleave_callback_on_thread,"emscripten_set_mousemove_callback_on_thread":_emscripten_set_mousemove_callback_on_thread,"emscripten_set_mouseup_callback_on_thread":_emscripten_set_mouseup_callback_on_thread,"emscripten_set_pointerlockchange_callback_on_thread":_emscripten_set_pointerlockchange_callback_on_thread,"emscripten_set_resize_callback_on_thread":_emscripten_set_resize_callback_on_thread,"emscripten_set_touchcancel_callback_on_thread":_emscripten_set_touchcancel_callback_on_thread,"emscripten_set_touchend_callback_on_thread":_emscripten_set_touchend_callback_on_thread,"emscripten_set_touchmove_callback_on_thread":_emscripten_set_touchmove_callback_on_thread,"emscripten_set_touchstart_callback_on_thread":_emscripten_set_touchstart_callback_on_thread,"emscripten_set_visibilitychange_callback_on_thread":_emscripten_set_visibilitychange_callback_on_thread,"emscripten_set_wheel_callback_on_thread":_emscripten_set_wheel_callback_on_thread,"emscripten_set_window_title":_emscripten_set_window_title,"emscripten_sleep":_emscripten_sleep,"environ_get":_environ_get,"environ_sizes_get":_environ_sizes_get,"exit":_exit,"fd_close":_fd_close,"fd_fdstat_get":_fd_fdstat_get,"fd_read":_fd_read,"fd_seek":_fd_seek,"fd_write":_fd_write,"glGetFloatv":_glGetFloatv,"strftime":_strftime,"strftime_l":_strftime_l};var asm=createWasm();/** @type {function(...*):?} */var ___wasm_call_ctors=createExportWrapper("__wasm_call_ctors");/** @type {function(...*):?} */var _memcpy=createExportWrapper("memcpy");/** @type {function(...*):?} */var _malloc=createExportWrapper("malloc");/** @type {function(...*):?} */var _free=createExportWrapper("free");/** @type {function(...*):?} */var _fflush=Module["_fflush"]=createExportWrapper("fflush");/** @type {function(...*):?} */var ___errno_location=createExportWrapper("__errno_location");/** @type {function(...*):?} */var _I_WebMain=Module["_I_WebMain"]=createExportWrapper("I_WebMain");/** @type {function(...*):?} */var _main=Module["_main"]=createExportWrapper("__main_argc_argv");/** @type {function(...*):?} */var ___dl_seterr=createExportWrapper("__dl_seterr");/** @type {function(...*):?} */var _emscripten_stack_init2=function _emscripten_stack_init(){return(_emscripten_stack_init2=Module["asm"]["emscripten_stack_init"]).apply(null,arguments);};/** @type {function(...*):?} */var _emscripten_stack_get_free2=function _emscripten_stack_get_free(){return(_emscripten_stack_get_free2=Module["asm"]["emscripten_stack_get_free"]).apply(null,arguments);};/** @type {function(...*):?} */var _emscripten_stack_get_base2=function _emscripten_stack_get_base(){return(_emscripten_stack_get_base2=Module["asm"]["emscripten_stack_get_base"]).apply(null,arguments);};/** @type {function(...*):?} */var _emscripten_stack_get_end2=function _emscripten_stack_get_end(){return(_emscripten_stack_get_end2=Module["asm"]["emscripten_stack_get_end"]).apply(null,arguments);};/** @type {function(...*):?} */var stackSave=createExportWrapper("stackSave");/** @type {function(...*):?} */var stackRestore=createExportWrapper("stackRestore");/** @type {function(...*):?} */var stackAlloc=createExportWrapper("stackAlloc");/** @type {function(...*):?} */var _emscripten_stack_get_current2=function _emscripten_stack_get_current(){return(_emscripten_stack_get_current2=Module["asm"]["emscripten_stack_get_current"]).apply(null,arguments);};/** @type {function(...*):?} */var ___cxa_is_pointer_type=createExportWrapper("__cxa_is_pointer_type");/** @type {function(...*):?} */var dynCall_iiiiiiji=Module["dynCall_iiiiiiji"]=createExportWrapper("dynCall_iiiiiiji");/** @type {function(...*):?} */var dynCall_iji=Module["dynCall_iji"]=createExportWrapper("dynCall_iji");/** @type {function(...*):?} */var dynCall_iiji=Module["dynCall_iiji"]=createExportWrapper("dynCall_iiji");/** @type {function(...*):?} */var dynCall_iijii=Module["dynCall_iijii"]=createExportWrapper("dynCall_iijii");/** @type {function(...*):?} */var dynCall_vijji=Module["dynCall_vijji"]=createExportWrapper("dynCall_vijji");/** @type {function(...*):?} */var dynCall_jiji=Module["dynCall_jiji"]=createExportWrapper("dynCall_jiji");/** @type {function(...*):?} */var dynCall_ji=Module["dynCall_ji"]=createExportWrapper("dynCall_ji");/** @type {function(...*):?} */var dynCall_iiiiij=Module["dynCall_iiiiij"]=createExportWrapper("dynCall_iiiiij");/** @type {function(...*):?} */var dynCall_iiiiijj=Module["dynCall_iiiiijj"]=createExportWrapper("dynCall_iiiiijj");/** @type {function(...*):?} */var dynCall_iiiiiijj=Module["dynCall_iiiiiijj"]=createExportWrapper("dynCall_iiiiiijj");/** @type {function(...*):?} */var dynCall_viijii=Module["dynCall_viijii"]=createExportWrapper("dynCall_viijii");// include: postamble.js
// === Auto-generated postamble setup entry stuff ===
Module["addRunDependency"]=addRunDependency;Module["removeRunDependency"]=removeRunDependency;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;Module["LZ4"]=LZ4;var missingLibrarySymbols=['inetPton4','inetNtop4','inetPton6','inetNtop6','readSockaddr','writeSockaddr','getHostByName','traverseStack','convertPCtoSourceLocation','jstoi_s','getDynCaller','runtimeKeepalivePush','runtimeKeepalivePop','maybeExit','asmjsMangle','handleAllocator','getNativeTypeSize','STACK_SIZE','STACK_ALIGN','POINTER_SIZE','ASSERTIONS','writeI53ToI64Clamped','writeI53ToI64Signaling','writeI53ToU64Clamped','writeI53ToU64Signaling','convertU32PairToI53','getCFunc','ccall','cwrap','uleb128Encode','sigToWasmTypes','generateFuncType','convertJsFunctionToWasm','getEmptyTableSlot','updateTableMap','getFunctionAddress','addFunction','removeFunction','reallyNegative','unSign','strLen','reSign','formatString','intArrayToString','AsciiToString','stringToAscii','UTF16ToString','stringToUTF16','lengthBytesUTF16','UTF32ToString','stringToUTF32','lengthBytesUTF32','writeStringToMemory','getSocketFromFD','getSocketAddress','fillDeviceOrientationEventData','registerDeviceOrientationEventCallback','fillDeviceMotionEventData','registerDeviceMotionEventCallback','screenOrientation','fillOrientationChangeEventData','registerOrientationChangeEventCallback','hideEverythingExceptGivenElement','restoreHiddenElements','softFullscreenResizeWebGLRenderTarget','registerPointerlockErrorEventCallback','fillBatteryEventData','battery','registerBatteryEventCallback','jsStackTrace','stackTrace','checkWasiClock','createDyncallWrapper','setImmediateWrapped','clearImmediateWrapped','polyfillSetImmediate','newNativePromise','getPromise','exception_addRef','exception_decRef','_setNetworkCallback','writeGLArray','SDL_unicode','SDL_ttfContext','SDL_audio','GLFW_Window','runAndAbortIfError','ALLOC_NORMAL','ALLOC_STACK','allocate'];missingLibrarySymbols.forEach(missingLibrarySymbol);var unexportedSymbols=['run','UTF8ArrayToString','UTF8ToString','stringToUTF8Array','stringToUTF8','lengthBytesUTF8','addOnPreRun','addOnInit','addOnPreMain','addOnExit','addOnPostRun','FS_createFolder','FS_createLink','out','err','callMain','abort','keepRuntimeAlive','wasmMemory','stackAlloc','stackSave','stackRestore','getTempRet0','setTempRet0','writeStackCookie','checkStackCookie','ptrToString','zeroMemory','stringToNewUTF8','exitJS','getHeapMax','emscripten_realloc_buffer','ENV','ERRNO_CODES','ERRNO_MESSAGES','setErrNo','DNS','Protocols','Sockets','getRandomDevice','timers','warnOnce','UNWIND_CACHE','readEmAsmArgsArray','readEmAsmArgs','runEmAsmFunction','runMainThreadEmAsm','jstoi_q','getExecutableName','listenOnce','autoResumeAudioContext','dynCallLegacy','dynCall','handleException','callUserCallback','safeSetTimeout','asyncLoad','alignMemory','mmapAlloc','writeI53ToI64','readI53FromI64','readI53FromU64','convertI32PairToI53','convertI32PairToI53Checked','freeTableIndexes','functionsInTableMap','setValue','getValue','PATH','PATH_FS','intArrayFromString','UTF16Decoder','allocateUTF8','allocateUTF8OnStack','writeArrayToMemory','writeAsciiToMemory','SYSCALLS','JSEvents','registerKeyEventCallback','specialHTMLTargets','maybeCStringToJsString','findEventTarget','findCanvasEventTarget','getBoundingClientRect','fillMouseEventData','registerMouseEventCallback','registerWheelEventCallback','registerUiEventCallback','registerFocusEventCallback','fillFullscreenChangeEventData','registerFullscreenChangeEventCallback','JSEvents_requestFullscreen','JSEvents_resizeCanvasForFullscreen','registerRestoreOldStyle','setLetterbox','currentFullscreenStrategy','restoreOldWindowedStyle','doRequestFullscreen','fillPointerlockChangeEventData','registerPointerlockChangeEventCallback','requestPointerLock','fillVisibilityChangeEventData','registerVisibilityChangeEventCallback','registerTouchEventCallback','fillGamepadEventData','registerGamepadEventCallback','registerBeforeUnloadEventCallback','setCanvasElementSize','getCanvasElementSize','demangle','demangleAll','ExitStatus','getEnvStrings','doReadv','doWritev','dlopenMissingError','promiseMap','uncaughtExceptionCount','exceptionLast','exceptionCaught','ExceptionInfo','Browser','setMainLoop','wget','FS','MEMFS','TTY','PIPEFS','SOCKFS','tempFixedLengthArray','miniTempWebGLFloatBuffers','heapObjectForWebGLType','heapAccessShiftForWebGLHeap','GL','emscriptenWebGLGet','computeUnpackAlignedImageSize','emscriptenWebGLGetTexPixelData','emscriptenWebGLGetUniform','webglGetUniformLocation','webglPrepareUniformLocationsBeforeFirstUse','webglGetLeftBracePos','emscriptenWebGLGetVertexAttrib','AL','SDL','SDL_gfx','GLUT','EGL','GLFW','GLEW','IDBStore','emscriptenWebGLGetIndexed','IDBFS'];unexportedSymbols.forEach(unexportedRuntimeSymbol);var calledRun;dependenciesFulfilled=function runCaller(){// If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller;// try this again later, after new deps are fulfilled
};function callMain(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];assert(runDependencies==0,'cannot call main when async dependencies remain! (listen on Module["onRuntimeInitialized"])');assert(__ATPRERUN__.length==0,'cannot call main when preRun functions remain to be called');var entryFunction=_main;args.unshift(thisProgram);var argc=args.length;var argv=stackAlloc((argc+1)*4);var argv_ptr=argv>>2;args.forEach(function(arg){HEAP32[argv_ptr++]=allocateUTF8OnStack(arg);});HEAP32[argv_ptr]=0;try{var ret=entryFunction(argc,argv);// In PROXY_TO_PTHREAD builds, we should never exit the runtime below, as
// execution is asynchronously handed off to a pthread.
// if we're not running an evented main loop, it's time to exit
exitJS(ret,/* implicit = */true);return ret;}catch(e){return handleException(e);}}function stackCheckInit(){// This is normally called automatically during __wasm_call_ctors but need to
// get these values before even running any of the ctors so we call it redundantly
// here.
_emscripten_stack_init2();// TODO(sbc): Move writeStackCookie to native to to avoid this.
writeStackCookie();}/** @type {function(Array=)} */function run(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:arguments_;if(runDependencies>0){return;}stackCheckInit();preRun();// a preRun added a dependency, run will be called later
if(runDependencies>0){return;}function doRun(){// run may have just been called through dependencies being fulfilled just in this very frame,
// or while the async setStatus time below was happening
if(calledRun)return;calledRun=true;Module['calledRun']=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module['onRuntimeInitialized'])Module['onRuntimeInitialized']();if(shouldRunNow)callMain(args);postRun();}if(Module['setStatus']){Module['setStatus']('Running...');setTimeout(function(){setTimeout(function(){Module['setStatus']('');},1);doRun();},1);}else{doRun();}checkStackCookie();}function checkUnflushedContent(){// Compiler settings do not allow exiting the runtime, so flushing
// the streams is not possible. but in ASSERTIONS mode we check
// if there was something to flush, and if so tell the user they
// should request that the runtime be exitable.
// Normally we would not even include flush() at all, but in ASSERTIONS
// builds we do so just for this check, and here we see if there is any
// content to flush, that is, we check if there would have been
// something a non-ASSERTIONS build would have not seen.
// How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0
// mode (which has its own special function for this; otherwise, all
// the code is inside libc)
var oldOut=out;var oldErr=err;var has=false;out=err=function err(x){has=true;};try{// it doesn't matter if it fails
_fflush(0);// also flush in the JS FS layer
['stdout','stderr'].forEach(function(name){var info=FS.analyzePath('/dev/'+name);if(!info)return;var stream=info.object;var rdev=stream.rdev;var tty=TTY.ttys[rdev];if(tty&&tty.output&&tty.output.length){has=true;}});}catch(e){}out=oldOut;err=oldErr;if(has){warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');}}if(Module['preInit']){if(typeof Module['preInit']=='function')Module['preInit']=[Module['preInit']];while(Module['preInit'].length>0){Module['preInit'].pop()();}}// shouldRunNow refers to calling main(), not run().
var shouldRunNow=true;if(Module['noInitialRun'])shouldRunNow=false;run();// end include: postamble.js
return createEdgeModule.ready;};}();if(( false?undefined:_typeof(exports))==='object'&&( false?undefined:_typeof(module))==='object')module.exports=createEdgeModule;else if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return createEdgeModule;}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("RoC8")(module)))

/***/ }),

/***/ "qVkA":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./style/index.css
// extracted by mini-css-extract-plugin

// EXTERNAL MODULE: external "preact"
var external_preact_ = __webpack_require__("HteQ");

// CONCATENATED MODULE: ../node_modules/preact/hooks/dist/hooks.module.js

var hooks_module_t,
  hooks_module_r,
  hooks_module_u,
  hooks_module_i,
  hooks_module_o = 0,
  f = [],
  c = [],
  e = external_preact_["options"].__b,
  a = external_preact_["options"].__r,
  v = external_preact_["options"].diffed,
  l = external_preact_["options"].__c,
  m = external_preact_["options"].unmount;
function d(t, u) {
  external_preact_["options"].__h && external_preact_["options"].__h(hooks_module_r, t, hooks_module_o || u), hooks_module_o = 0;
  var i = hooks_module_r.__H || (hooks_module_r.__H = {
    __: [],
    __h: []
  });
  return t >= i.__.length && i.__.push({
    __V: c
  }), i.__[t];
}
function h(n) {
  return hooks_module_o = 1, s(B, n);
}
function s(n, u, i) {
  var o = d(hooks_module_t++, 2);
  if (o.t = n, !o.__c && (o.__ = [i ? i(u) : B(void 0, u), function (n) {
    var t = o.__N ? o.__N[0] : o.__[0],
      r = o.t(t, n);
    t !== r && (o.__N = [r, o.__[1]], o.__c.setState({}));
  }], o.__c = hooks_module_r, !hooks_module_r.u)) {
    var f = function f(n, t, r) {
      if (!o.__c.__H) return !0;
      var u = o.__c.__H.__.filter(function (n) {
        return n.__c;
      });
      if (u.every(function (n) {
        return !n.__N;
      })) return !c || c.call(this, n, t, r);
      var i = !1;
      return u.forEach(function (n) {
        if (n.__N) {
          var t = n.__[0];
          n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
        }
      }), !(!i && o.__c.props === n) && (!c || c.call(this, n, t, r));
    };
    hooks_module_r.u = !0;
    var c = hooks_module_r.shouldComponentUpdate,
      e = hooks_module_r.componentWillUpdate;
    hooks_module_r.componentWillUpdate = function (n, t, r) {
      if (this.__e) {
        var u = c;
        c = void 0, f(n, t, r), c = u;
      }
      e && e.call(this, n, t, r);
    }, hooks_module_r.shouldComponentUpdate = f;
  }
  return o.__N || o.__;
}
function p(u, i) {
  var o = d(hooks_module_t++, 3);
  !external_preact_["options"].__s && z(o.__H, i) && (o.__ = u, o.i = i, hooks_module_r.__H.__h.push(o));
}
function y(u, i) {
  var o = d(hooks_module_t++, 4);
  !external_preact_["options"].__s && z(o.__H, i) && (o.__ = u, o.i = i, hooks_module_r.__h.push(o));
}
function _(n) {
  return hooks_module_o = 5, F(function () {
    return {
      current: n
    };
  }, []);
}
function A(n, t, r) {
  hooks_module_o = 6, y(function () {
    return "function" == typeof n ? (n(t()), function () {
      return n(null);
    }) : n ? (n.current = t(), function () {
      return n.current = null;
    }) : void 0;
  }, null == r ? r : r.concat(n));
}
function F(n, r) {
  var u = d(hooks_module_t++, 7);
  return z(u.__H, r) ? (u.__V = n(), u.i = r, u.__h = n, u.__V) : u.__;
}
function T(n, t) {
  return hooks_module_o = 8, F(function () {
    return n;
  }, t);
}
function q(n) {
  var u = hooks_module_r.context[n.__c],
    i = d(hooks_module_t++, 9);
  return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub(hooks_module_r)), u.props.value) : n.__;
}
function x(t, r) {
  external_preact_["options"].useDebugValue && external_preact_["options"].useDebugValue(r ? r(t) : t);
}
function P(n) {
  var u = d(hooks_module_t++, 10),
    i = h();
  return u.__ = n, hooks_module_r.componentDidCatch || (hooks_module_r.componentDidCatch = function (n, t) {
    u.__ && u.__(n, t), i[1](n);
  }), [i[0], function () {
    i[1](void 0);
  }];
}
function V() {
  var n = d(hooks_module_t++, 11);
  if (!n.__) {
    for (var u = hooks_module_r.__v; null !== u && !u.__m && null !== u.__;) u = u.__;
    var i = u.__m || (u.__m = [0, 0]);
    n.__ = "P" + i[0] + "-" + i[1]++;
  }
  return n.__;
}
function b() {
  for (var t; t = f.shift();) if (t.__P && t.__H) try {
    t.__H.__h.forEach(k), t.__H.__h.forEach(w), t.__H.__h = [];
  } catch (r) {
    t.__H.__h = [], external_preact_["options"].__e(r, t.__v);
  }
}
external_preact_["options"].__b = function (n) {
  hooks_module_r = null, e && e(n);
}, external_preact_["options"].__r = function (n) {
  a && a(n), hooks_module_t = 0;
  var i = (hooks_module_r = n.__c).__H;
  i && (hooks_module_u === hooks_module_r ? (i.__h = [], hooks_module_r.__h = [], i.__.forEach(function (n) {
    n.__N && (n.__ = n.__N), n.__V = c, n.__N = n.i = void 0;
  })) : (i.__h.forEach(k), i.__h.forEach(w), i.__h = [])), hooks_module_u = hooks_module_r;
}, external_preact_["options"].diffed = function (t) {
  v && v(t);
  var o = t.__c;
  o && o.__H && (o.__H.__h.length && (1 !== f.push(o) && hooks_module_i === external_preact_["options"].requestAnimationFrame || ((hooks_module_i = external_preact_["options"].requestAnimationFrame) || j)(b)), o.__H.__.forEach(function (n) {
    n.i && (n.__H = n.i), n.__V !== c && (n.__ = n.__V), n.i = void 0, n.__V = c;
  })), hooks_module_u = hooks_module_r = null;
}, external_preact_["options"].__c = function (t, r) {
  r.some(function (t) {
    try {
      t.__h.forEach(k), t.__h = t.__h.filter(function (n) {
        return !n.__ || w(n);
      });
    } catch (u) {
      r.some(function (n) {
        n.__h && (n.__h = []);
      }), r = [], external_preact_["options"].__e(u, t.__v);
    }
  }), l && l(t, r);
}, external_preact_["options"].unmount = function (t) {
  m && m(t);
  var r,
    u = t.__c;
  u && u.__H && (u.__H.__.forEach(function (n) {
    try {
      k(n);
    } catch (n) {
      r = n;
    }
  }), u.__H = void 0, r && external_preact_["options"].__e(r, u.__v));
};
var g = "function" == typeof requestAnimationFrame;
function j(n) {
  var t,
    r = function r() {
      clearTimeout(u), g && cancelAnimationFrame(t), setTimeout(n);
    },
    u = setTimeout(r, 100);
  g && (t = requestAnimationFrame(r));
}
function k(n) {
  var t = hooks_module_r,
    u = n.__c;
  "function" == typeof u && (n.__c = void 0, u()), hooks_module_r = t;
}
function w(n) {
  var t = hooks_module_r;
  n.__c = n.__(), hooks_module_r = t;
}
function z(n, t) {
  return !n || n.length !== t.length || t.some(function (t, r) {
    return t !== n[r];
  });
}
function B(n, t) {
  return "function" == typeof t ? t(n) : t;
}

// EXTERNAL MODULE: ./edge-classic.js
var edge_classic = __webpack_require__("fZh3");
var edge_classic_default = /*#__PURE__*/__webpack_require__.n(edge_classic);

// CONCATENATED MODULE: ./routes/home/index.tsx



var windowWidth = 1280;
var windowHeight = 720;
if (typeof window !== "undefined") {
  windowWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);
  windowHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);
  window.addEventListener('load', function () {
    window.focus();
    document.body.addEventListener('click', function (e) {
      window.focus();
    }, false);
  });
}
var home_Edge = function Edge() {
  p(function () {
    var canvas = document.querySelector('#canvas');
    if (!canvas) {
      throw "Unable to get canvas";
    }
    console.log("EDGE: canvas created at ".concat(windowWidth, " x ").concat(windowHeight));
    canvas.addEventListener("webglcontextlost", function (e) {
      alert('FIXME: WebGL context lost, please reload the page');
      e.preventDefault();
    }, false);
    edge_classic_default()({
      edgePostInit: function edgePostInit() {
        console.log("post init!");
      },
      preEdgeSyncFS: function preEdgeSyncFS() {},
      postEdgeSyncFS: function postEdgeSyncFS() {},
      arguments: ["-windowed", "-width", windowWidth.toString(), "-height", windowHeight.toString(), "-iwad", "freedoom2.wad", "-home", "/edge-classic"],
      preInit: function preInit() {},
      preRun: [],
      postRun: [],
      print: function () {
        return function (text) {
          text = Array.prototype.slice.call(arguments).join(' ');
          console.log(text);
        };
      }(),
      printErr: function printErr(text) {
        text = Array.prototype.slice.call(arguments).join(' ');
        console.error(text);
      },
      canvas: canvas,
      setStatus: function setStatus(text) {
        console.log("status", text);
      },
      monitorRunDependencies: function monitorRunDependencies(left) {
        console.log("left " + left);
      }
    }).then(function (module) {
      module.canvas = canvas;
    });
    return function () {};
  }, []);
  return Object(external_preact_["h"])("div", null, Object(external_preact_["h"])("canvas", {
    style: "display:block;",
    id: "canvas",
    width: "".concat(windowWidth, "px"),
    height: "".concat(windowHeight, "px"),
    onContextMenu: function onContextMenu(event) {
      return event.preventDefault();
    }
  }));
};
var home_Home = function Home() {
  return Object(external_preact_["h"])("div", {
    style: "width:100vw;"
  }, Object(external_preact_["h"])(home_Edge, null));
};
/* harmony default export */ var home = (home_Home);
// CONCATENATED MODULE: ./components/app.tsx


var app_App = function App() {
  return Object(external_preact_["h"])("div", {
    id: "app"
  }, Object(external_preact_["h"])("main", null, Object(external_preact_["h"])(home, null)));
};
/* harmony default export */ var app = (app_App);
// CONCATENATED MODULE: ./index.ts


/* harmony default export */ var index = __webpack_exports__["default"] = (app);

/***/ })

/******/ });
//# sourceMappingURL=ssr-bundle.js.map