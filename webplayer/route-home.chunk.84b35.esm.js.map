{"version":3,"sources":["webpack:///../node_modules/preact/hooks/src/index.js","webpack:///./routes/home/index.tsx","webpack:///./edge-classic.js"],"names":["d","t","u","n","__h","r","o","i","__H","__","length","push","__V","c","h","__c","B","__N","setState","f","filter","every","call","this","forEach","props","shouldComponentUpdate","e","componentWillUpdate","__e","s","b","shift","__P","k","w","__v","j","clearTimeout","g","cancelAnimationFrame","setTimeout","requestAnimationFrame","z","some","__b","a","__r","v","diffed","l","m","unmount","windowWidth","windowHeight","EdgeState","window","document","documentElement","clientWidth","clientHeight","addEventListener","focus","body","Choose","callback","database","dbrequest","indexedDB","open","onerror","console","error","onupgradeneeded","db","target","result","objectStoreNames","contains","log","createObjectStore","createIndex","unique","onsuccess","style","onClick","getElementById","click","id","type","onChange","files","preventDefault","alert","file","name","toLowerCase","endsWith","reader","FileReader","readAsArrayBuffer","onload","contents","Uint8Array","trans","transaction","path","objectStore","put","timestamp","Date","mode","oncomplete","Loading","Playing","wad","state","useState","loading","canvas","querySelector","args","toString","createEdgeModule","edgePostInit","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","arguments","preInit","preRun","postRun","print","text","Array","prototype","slice","join","printErr","setStatus","monitorRunDependencies","left","then","module","__s","width","height","onContextMenu","event","Edge","setWad","Home","_scriptDir","currentScript","src","undefined","assert","condition","abort","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","buffer","UTF8Decoder","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","updateMemoryViews","wasmMemory","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","addRunDependency","runDependencies","removeRunDependency","runDependencyWatcher","clearInterval","dependenciesFulfilled","what","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","isDataURI","filename","startsWith","dataURIPrefix","getBinary","wasmBinaryFile","wasmBinary","readBinary","ExitStatus","status","message","callRuntimeCallbacks","callbacks","dynCall","sig","apply","concat","dynCallLegacy","setValue","value","tempI64","tempDouble","Math","abs","min","floor","ceil","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","set_adjusted_ptr","add_ref","release_ref","prev","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","mmapAlloc","convertI32PairToI53Checked","lo","hi","NaN","__isLeapYear","year","__yday_from_date","date","getFullYear","__MONTH_DAYS_LEAP_CUMULATIVE","__MONTH_DAYS_REGULAR_CUMULATIVE","getMonth","getDate","allocateUTF8","size","ret","_malloc","_emscripten_set_main_loop_timing","Browser","mainLoop","timingMode","timingValue","func","running","scheduler","timeUntilNextTick","max","tickStartTime","_emscripten_get_now","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","data","stopPropagation","ENVIRONMENT_IS_WORKER","postMessage","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","arg","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","queue","start","now","blocker","remainingBlockers","remaining","next","counted","out","updateStatus","currentFrameNumber","GL","newRenderingFrameStarted","runIter","SDL","audio","queueNewAudioData","handleException","quit_","callUserCallback","safeSetTimeout","timeout","warnOnce","shown","readEmAsmArgs","sigPtr","buf","readEmAsmArgsArray","withStackSave","stack","stackSave","stackRestore","findEventTarget","cString","specialHTMLTargets","findCanvasEventTarget","getCanvasElementSize","stackAlloc","targetInt","_emscripten_get_canvas_element_size","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","getBoundingClientRect","indexOf","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","removeEventListener","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","GLctxObject","GLctx","viewport","currentFullscreenStrategy","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","canvasSize","registerRestoreOldStyle","cssWidth","softFullscreen","innerWidth","screen","cssHeight","innerHeight","rect","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","scaleMode","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","canvasResolutionScaleMode","devicePixelRatio","newWidth","newHeight","JSEvents_requestFullscreen","requestFullscreen","webkitRequestFullscreen","JSEvents","fullscreenEnabled","Element","ALLOW_KEYBOARD_INPUT","requestPointerLock","fillGamepadEventData","eventStruct","axes","buttons","pressed","connected","index","mapping","convertI32PairToI53","__glGenObject","buffers","createFunction","objectTable","getNewId","recordError","__glGetActiveAttribOrUniform","funcName","program","bufSize","info","programs","numBytesWrittenExclNull","writeI53ToI64","num","emscriptenWebGLGet","name_","p","formats","getParameter","currentContext","version","getSupportedExtensions","emscriptenWebGLGetIndexed","WebGLBuffer","stringToNewUTF8","jsString","webglGetLeftBracePos","lastIndexOf","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","getProgramParameter","getActiveUniform","nm","sz","lb","arrayName","uniformIdCounter","webglGetUniformLocation","location","currentProgram","webglLoc","getUniformLocation","emscriptenWebGLGetUniform","params","getUniform","emscriptenWebGLGetVertexAttrib","pname","clientBuffers","enabled","getVertexAttrib","fround","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","clz32","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","format","pixels","byteSize","sizePerPixel","__colorChannelsInGlTextureFormat","bytes","alignment","y","computeUnpackAlignedImageSize","unpackAlignment","emscripten_realloc_buffer","grow","byteLength","registerFocusEventCallback","userData","useCapture","callbackfunc","eventTypeId","eventTypeString","focusEvent","eventHandler","handlerFunc","nodeName","getNodeNameForTarget","registerOrRemoveHandler","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","isFullscreen","reportedElement","previousFullscreenElement","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","allowsDeferredCalls","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","key","code","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","top","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","touches","et","isChanged","onTarget","identifier","changedTouches","targetTouches","targetRect","numTouches","pageX","pageY","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","getEnvStrings","strings","env","navigator","languages","replace","thisProgram","x","ENV","_proc_exit","noExitRuntime","exitJS","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","setDate","setMonth","setFullYear","__addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","substring","twelveHour","array","sum","__arraySum","val","jan1","dec31","off","ahead","includes","set","runAndAbortIfError","callMain","entryFunction","_main","unshift","argc","argv","argv_ptr","allocateUTF8OnStack","run","arguments_","doRun","calledRun","FS","initialized","ignorePermissions","TTY","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","cb","__ATPOSTRUN__","__ATPRERUN__","Promise","resolve","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","responseType","onprogress","url","total","loaded","addedTotal","dataFileDownloads","download","Error","response","statusText","responseURL","send","runWithFS","check","msg","processPackageData","arrayBuffer","constructor","ArrayBuffer","byteArray","compressedData","loadPackage","preloadFallback","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","PACKAGE_UUID","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","deleteObjectStore","openDatabase","getRequest","get","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","putMetadataRequest","uuid","cacheRemotePackage","pathname","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","setWindowTitle","moduleOverrides","_extends","toThrow","ENVIRONMENT_IS_WEB","scriptDirectory","href","substr","responseText","title","bind","warn","TextDecoder","__ATEXIT__","ASM_CONSTS","$0","$1","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","edgePreSyncFS","edgePostSyncFS","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","ctx","elements","SDL2","capture","audioContext","object","listenOnce","resume","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","connect","destination","no_microphone","silenceBuffer","createBuffer","video","catch","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","ctxCanvas","imageCtx","image","createImageData","dst","CanvasPixelArray","data32Data","data32","data8","putImageData","$4","hot_x","hot_y","createElement","getContext","toDataURL","urlBuf","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","split","dirname","root","dir","basename","lastSlash","paths","join2","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","end","fromParts","toParts","samePartsLength","outputParts","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","write","put_char","default_tty_ops","prompt","readline","default_tty1_ops","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","hasOwnProperty","newname","oldpath","position","canOwn","whence","prot","flags","allocated","dbs","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","Object","values","getDB","req","fileStore","indexNames","isRealDir","toAbsolute","mountpoint","map","stat","pop","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","create","keys","e2","remove","sort","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","exports","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ref","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","createPath","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","defineProperties","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","staticInit","getMode","canRead","canWrite","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","doXHR","setRequestHeader","overrideMimeType","_length","_chunkSize","fn","createPreloadedFile","dontCreateFile","preFinish","processData","handledByPreloadPlugin","noRunDep","dep","asyncLoad","saveFilesToDB","fail","ok","putRequest","loadFilesFromDB","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","doMsync","addr","varargs","getStr","nowIsMonotonic","performance","pause","expected","expectedBlockers","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","test","getMimetype","bb","append","getBlob","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","fullscreenChange","canvasContainer","parentNode","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","insertBefore","removeChild","setWindowedCanvasSize","appendChild","nextRAF","fakeRequestAnimationFrame","delay","RAF","safeRequestAnimationFrame","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","lastTouches","calculateMouseEvent","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","adjustedY","coords","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","wNative","hNative","widthNative","heightNative","round","factor","removeProperty","setProperty","EGL","errorCode","defaultDisplayInitialized","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","param","lowLatency","counter","framebuffers","renderbuffers","textures","shaders","vaos","contexts","offscreenCanvases","queries","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","lastError","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","generateTempBuffers","quads","context","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","bindBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","getTempIndexBuffer","ibo","prevIBO","vb","getSource","shader","string","source","calcBufLength","stride","usedTempBuffers","preDrawHandleClientVertexAttribBindings","resetBufferBinding","maxVertexAttribs","clientside","bufferSubData","vertexAttribPointerAdaptor","normalized","postDrawHandleClientVertexAttribBindings","currentArrayBufferBinding","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","attributes","enableExtensionsByDefault","initExtensions","deleteContext","removeAllHandlersOnTarget","initExtensionsDone","ext","getExtension","divisor","first","primcount","indices","__webgl_enable_ANGLE_instanced_arrays","vao","__webgl_enable_OES_vertex_array_object","bufs","__webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","__webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","disjointTimerQueryExt","multiDrawWebgl","__webgl_enable_WEBGL_multi_draw","_eglWaitGL","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","runDeferredCalls","eventListenerFunc","jsEventHandler","webkitFullscreenEnabled","tempFixedLengthArray","miniTempWebGLFloatBuffers","__miniTempWebGLIntBuffers","_exit","Asyncify","instrumentWasmImports","imports","ASYNCIFY_IMPORTS","original","instrumentWasmExports","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","doRewind","handleSleep","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","wakeUp","readMode","writeMode","miniTempWebGLFloatBuffersStorage","__miniTempWebGLIntBuffersStorage","atob","wasmImports","___errno_location","length_low","length_high","isNaN","cwdLengthInBytes","dirp","struct_size","child","op","argp","nofollow","time","tmPtr","getSeconds","getMinutes","getHours","yday","getTimezoneOffset","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timezone","daylight","tzname","extractZone","match","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","api","attrib_list","configs","hmm","contextAttribs","glesContextVersion","minorVersion","surface","draw","isContextLost","interval","argbuf","runEmAsmFunction","runMainThreadEmAsm","webkitExitFullscreen","gamepadState","lastGamepadState","x0","attachShader","bindAttribLocation","currentElementArrayBufferBinding","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","ptrsize","framebuffer","bindFramebuffer","renderbuffer","bindRenderbuffer","unit","sampler","texture","bindTexture","x1","x2","x3","x4","x5","x6","x7","x8","x9","usage","drawbuffer","sync","timeout_low","timeout_high","clientWaitSync","red","green","blue","colorMask","compileShader","level","internalFormat","border","imageSize","xoffset","yoffset","zoffset","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","shaderType","createShader","deleteBuffer","deleteFramebuffer","deleteProgram","ids","query","deleteRenderbuffer","deleteShader","deleteSync","deleteTexture","transformFeedback","depthMask","detachShader","disableVertexAttribArray","drawArrays","bufArray","drawElements","_glDrawElements","enableVertexAttribArray","fenceSync","attachment","renderbuffertarget","framebufferRenderbuffer","textarget","framebufferTexture2D","layer","framebufferTextureLayer","arrays","uniformBlockIndex","uniformBlockName","uniformCount","uniformIndices","maxCount","getAttachedShaders","getAttribLocation","getBufferParameter","getError","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","internalformat","maxLength","infoLog","getProgramInfoLog","getActiveAttrib","getActiveUniformBlockName","getRenderbufferParameter","getShaderInfoLog","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","getShaderSource","getShaderParameter","exts","glVersion","glslVersion","ver_num","getSyncParameter","getTexParameter","uniformNames","names","arrayIndex","uniformBaseName","leftBrace","parseInt","sizeAndId","pointer","getVertexAttribOffset","numAttachments","attachments","list","isBuffer","fb","isFramebuffer","isProgram","rb","isRenderbuffer","isShader","isSync","isTexture","linkProgram","pixelStorei","readPixels","pixelData","invert","sampleCoverage","shaderSource","texImage2D","texParameterf","texParameteri","texSubImage2D","varyings","bufferMode","vars","v0","uniform1f","uniform1fv","view","uniform1i","uniform1iv","uniform1ui","uniform1uiv","v1","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform2ui","uniform2uiv","v2","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform3ui","uniform3uiv","v3","uniform4f","uniform4fv","uniform4i","uniform4iv","uniform4ui","uniform4uiv","uniformBlockBinding","transpose","uniformMatrix2fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","useProgram","validateProgram","vertexAttrib1f","vertexAttrib2f","vertexAttrib3f","vertexAttrib4f","vertexAttribI4i","vertexAttribI4ui","vertexAttribPointer","waitSync","dest","copyWithin","deferUntilInEventHandler","fullscreenStrategy","doRequestFullscreen","requestedSize","multiple","oldSize","maxHeapSize","cutDown","overGrownHeapSize","getGamepads","webkitGetGamepads","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","dynCall_v","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","uiEvent","outerWidth","outerHeight","registerUiEventCallback","onwheel","wheelEvent","registerWheelEventCallback","ms","__environ","environ_buf","writeAsciiToMemory","penviron_count","penviron_buf_size","pbuf","iov","iovcnt","pnum","doReadv","offset_low","offset_high","newOffset","doWritev","receiveInstance","instance","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","binary","instantiate","reason","instantiateStreaming","createWasm","runCaller","ready"],"mappings":"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","file":"route-home.chunk.84b35.esm.js","sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { h, FunctionComponent } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport createEdgeModule from '../../edge-classic';\n\nlet windowWidth = 1280;\nlet windowHeight = 720;\n\n// https://www.raymondcamden.com/2018/10/05/storing-retrieving-photos-in-indexeddb\n\nif (typeof window !== \"undefined\") {\n\n    //windowWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n    //windowHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n\n    windowWidth = document.documentElement.clientWidth;\n    windowHeight = document.documentElement.clientHeight;\n\n    window.addEventListener('load', function () {\n        window.focus();\n        document.body.addEventListener('click', function (e) {\n            window.focus();\n        }, false);\n    });\n}\n\nenum EdgeState {\n    Choose,\n    Loading,\n    Playing\n};\n\nconst Choose: FunctionComponent<{ callback: (wad: string) => void }> = ({ callback }) => {\n\n    if (typeof window !== \"undefined\") {\n\n        let database: IDBDatabase | undefined;\n\n        const dbrequest = window.indexedDB.open('/edge-classic');\n\n        dbrequest.onerror = function (e) {\n            console.error('Unable to open database.');\n        }\n\n        dbrequest.onupgradeneeded = (e) => {\n            // Save the IDBDatabase interface\n            const db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\n\n            if (!db.objectStoreNames.contains(\"FILE_DATA\")) {\n                console.log(\"Creating FILE_DATA object store\");\n                const store = db.createObjectStore(\"FILE_DATA\", {});\n                store.createIndex(\"timestamp\", \"timestamp\", { unique: false });\n\n            }\n        };\n\n        dbrequest.onsuccess = (e) => {\n            const db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\n            database = db;\n        }\n\n        return <div>\n            <div style=\"padding:24px;text-align:center\">\n                <button style=\"font-size:24px;padding:8px\" onClick={() => {\n                    callback(\"freedoom2.wad\");\n                }}>Play Freedoom</button>\n            </div>\n            <div style=\"padding:24px;text-align:center\">\n                <button style=\"font-size:24px;padding:8px\" onClick={() => document.getElementById('getWadFile').click()}>Choose Wad</button>\n            </div>\n            <input id=\"getWadFile\" style=\"display:none\" type=\"file\" onChange={(e) => {\n\n                if (!database) {\n                    console.error(\"No database on wad upload\");\n                    return;\n                }\n\n                //const file = e.target.files[0];\n                const files = (e.target as any).files as File[];\n                if (files.length !== 1) {\n                    e.preventDefault();\n                    alert(\"Please select a single wad file\");\n                    return;\n                }\n\n                const file = files[0];\n                if (!file.name.toLowerCase().endsWith(\".wad\")) {\n                    e.preventDefault();\n                    alert(\"Please select a single wad file\");\n                    return;\n                }\n\n                var reader = new FileReader();\n                reader.readAsArrayBuffer(file);\n\n                reader.onload = function (e) {\n                    //alert(e.target.result);\n                    let bits = e.target.result;\n\n                    const contents = new Uint8Array(bits as ArrayBuffer);\n\n                    const trans = database.transaction(['FILE_DATA'], 'readwrite');\n                    const path = `/edge-classic/${file.name}`;\n                    let addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\n\n                    addReq.onerror = function (e) {\n                        console.log('error storing data');\n                        console.error(e);\n                    }\n\n                    trans.oncomplete = function (e) {\n                        console.log('data stored');\n                        callback(file.name);\n                    }\n                }\n\n            }} />\n        </div>\n    } else {\n        return null;\n    }\n}\n\nconst Loading = () => {\n    return <div style={`font-size:24px;color:white;text-align:center;padding-top:48px;`}>Loading - Please Wait - TODO: fancy progress indicator</div>\n}\n\nconst Playing: FunctionComponent<{ wad: string }> = ({ wad }) => {\n\n    const [state, setState] = useState<{ loading: boolean, wad?: string }>({ loading: true });\n\n    useEffect(() => {\n\n        const canvas = document.querySelector('#canvas');\n        if (!canvas) {\n            throw \"Unable to get canvas\";\n        }\n\n        console.log(`EDGE: canvas created at ${windowWidth} x ${windowHeight}`)\n\n        canvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\n\n        const args = [\"-home\", \"edge-classic\", \"-udmf_strict\", \"0\", \"-windowed\", \"-width\", windowWidth.toString(), \"-height\", windowHeight.toString(), \"-iwad\", \"freedoom2.wad\"];\n\n        if (wad !== \"freedoom2.wad\") {\n            args.push(\"-file\")\n            args.push(`edge-classic/${wad}`);\n        }\n\n        createEdgeModule({\n            edgePostInit: () => {\n                console.log(\"Post-Init!\");\n                setState({ ...state, loading: false });\n            },\n            preEdgeSyncFS: () => {\n            },\n            postEdgeSyncFS: () => {\n            },\n            arguments: args,\n            preInit: () => {\n                console.log(\"Pre-Init\");\n            },\n            preRun: [],\n            postRun: [],\n            print: (function () {\n                return function (text) {\n                    text = Array.prototype.slice.call(arguments).join(' ');\n                    console.log(text);\n                };\n            })(),\n            printErr: function (text) {\n                text = Array.prototype.slice.call(arguments).join(' ');\n                console.error(text);\n            },\n            canvas: canvas,\n            setStatus: function (text) { console.log(\"status\", text) },\n            monitorRunDependencies: function (left) { console.log(\"left \" + left) },\n        }).then(module => {\n            module.canvas = canvas;\n        });\n\n\n        return () => {\n\n        };\n\n    }, [])\n\n    return <div>\n        {state.loading && <Loading />}\n        <canvas style={state.loading ? \"display:none;\" : \"display:block;\"} id=\"canvas\" width={`${windowWidth}px`} height={`${windowHeight}px`} onContextMenu={(event) => event.preventDefault()}></canvas>\n    </div>\n}\n\nconst Edge = () => {\n\n    const [wad, setWad] = useState(\"\");\n\n    return <div>\n        {!wad && <Choose callback={(wad) => { setWad(wad) }} />}\n        {!!wad && <Playing wad={wad} />}\n    </div>\n};\n\nconst Home = () => {\n    return (\n        <div style=\"width:100vw;\">\n            <Edge />\n        </div>\n    );\n};\n\nexport default Home;\n","\r\nvar createEdgeModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(createEdgeModule = {})  {\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof createEdgeModule != 'undefined' ? createEdgeModule : {};\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nModule['ready'] = new Promise(function(resolve, reject) {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n  var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n  if (!Module.expectedDataFileDownloads) {\r\n    Module.expectedDataFileDownloads = 0;\r\n  }\r\n\r\n  Module.expectedDataFileDownloads++;\r\n  (function() {\r\n    // When running as a pthread, FS operations are proxied to the main thread, so we don't need to\r\n    // fetch the .data bundle on the worker\r\n    if (Module['ENVIRONMENT_IS_PTHREAD']) return;\r\n    var loadPackage = function(metadata) {\r\n\r\n      var PACKAGE_PATH = '';\r\n      if (typeof window === 'object') {\r\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\r\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\r\n        // web worker\r\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\r\n      }\r\n      var PACKAGE_NAME = 'C:/Dev/edge-classic-web-player/src/edge-classic.data';\r\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\r\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\r\n        Module['locateFile'] = Module['locateFilePackage'];\r\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\r\n      }\r\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\r\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\r\n\r\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\r\n        \r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', packageName, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = function(event) {\r\n          var url = packageName;\r\n          var size = packageSize;\r\n          if (event.total) size = event.total;\r\n          if (event.loaded) {\r\n            if (!xhr.addedTotal) {\r\n              xhr.addedTotal = true;\r\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\r\n              Module.dataFileDownloads[url] = {\r\n                loaded: event.loaded,\r\n                total: size\r\n              };\r\n            } else {\r\n              Module.dataFileDownloads[url].loaded = event.loaded;\r\n            }\r\n            var total = 0;\r\n            var loaded = 0;\r\n            var num = 0;\r\n            for (var download in Module.dataFileDownloads) {\r\n            var data = Module.dataFileDownloads[download];\r\n              total += data.total;\r\n              loaded += data.loaded;\r\n              num++;\r\n            }\r\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');\r\n          } else if (!Module.dataFileDownloads) {\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\r\n          }\r\n        };\r\n        xhr.onerror = function(event) {\r\n          throw new Error(\"NetworkError for: \" + packageName);\r\n        }\r\n        xhr.onload = function(event) {\r\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            var packageData = xhr.response;\r\n            callback(packageData);\r\n          } else {\r\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\r\n          }\r\n        };\r\n        xhr.send(null);\r\n      };\r\n\r\n      function handleError(error) {\r\n        console.error('package error:', error);\r\n      };\r\n\r\n    function runWithFS() {\r\n\r\n      function assert(check, msg) {\r\n        if (!check) throw msg + new Error().stack;\r\n      }\r\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\r\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\r\n\r\n        var PACKAGE_UUID = metadata['package_uuid'];\r\n        var indexedDB;\r\n        if (typeof window === 'object') {\r\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        } else if (typeof location !== 'undefined') {\r\n          // worker\r\n          indexedDB = self.indexedDB;\r\n        } else {\r\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\r\n        }\r\n        var IDB_RO = \"readonly\";\r\n        var IDB_RW = \"readwrite\";\r\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\r\n        var DB_VERSION = 1;\r\n        var METADATA_STORE_NAME = 'METADATA';\r\n        var PACKAGE_STORE_NAME = 'PACKAGES';\r\n        function openDatabase(callback, errback) {\r\n          try {\r\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\r\n          } catch (e) {\r\n            return errback(e);\r\n          }\r\n          openRequest.onupgradeneeded = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n\r\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\r\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\r\n            }\r\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\r\n\r\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\r\n              db.deleteObjectStore(METADATA_STORE_NAME);\r\n            }\r\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n            callback(db);\r\n          };\r\n          openRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        };\r\n\r\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\r\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\r\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\r\n        // We set the chunk size to 64MB to stay well-below the limit\r\n        var CHUNK_SIZE = 64 * 1024 * 1024;\r\n\r\n        function cacheRemotePackage(\r\n          db,\r\n          packageName,\r\n          packageData,\r\n          packageMeta,\r\n          callback,\r\n          errback\r\n        ) {\r\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\r\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\r\n          var chunkSliceStart = 0;\r\n          var nextChunkSliceStart = 0;\r\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\r\n          var finishedChunks = 0;\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            nextChunkSliceStart += CHUNK_SIZE;\r\n            var putPackageRequest = packages.put(\r\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\r\n              'package/' + packageName + '/' + chunkId\r\n            );\r\n            chunkSliceStart = nextChunkSliceStart;\r\n            putPackageRequest.onsuccess = function(event) {\r\n              finishedChunks++;\r\n              if (finishedChunks == chunkCount) {\r\n                var transaction_metadata = db.transaction(\r\n                  [METADATA_STORE_NAME],\r\n                  IDB_RW\r\n                );\r\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\r\n                var putMetadataRequest = metadata.put(\r\n                  {\r\n                    'uuid': packageMeta.uuid,\r\n                    'chunkCount': chunkCount\r\n                  },\r\n                  'metadata/' + packageName\r\n                );\r\n                putMetadataRequest.onsuccess = function(event) {\r\n                  callback(packageData);\r\n                };\r\n                putMetadataRequest.onerror = function(error) {\r\n                  errback(error);\r\n                };\r\n              }\r\n            };\r\n            putPackageRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n        /* Check if there's a cached package, and if so whether it's the latest available */\r\n        function checkCachedPackage(db, packageName, callback, errback) {\r\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\r\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\r\n          var getRequest = metadata.get('metadata/' + packageName);\r\n          getRequest.onsuccess = function(event) {\r\n            var result = event.target.result;\r\n            if (!result) {\r\n              return callback(false, null);\r\n            } else {\r\n              return callback(PACKAGE_UUID === result['uuid'], result);\r\n            }\r\n          };\r\n          getRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        }\r\n\r\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\r\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\r\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\r\n\r\n          var chunksDone = 0;\r\n          var totalSize = 0;\r\n          var chunkCount = metadata['chunkCount'];\r\n          var chunks = new Array(chunkCount);\r\n\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            var getRequest = packages.get('package/' + packageName + '/' + chunkId);\r\n            getRequest.onsuccess = function(event) {\r\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\r\n              if (chunkCount == 1) {\r\n                callback(event.target.result);\r\n              } else {\r\n                chunksDone++;\r\n                totalSize += event.target.result.byteLength;\r\n                chunks.push(event.target.result);\r\n                if (chunksDone == chunkCount) {\r\n                  if (chunksDone == 1) {\r\n                    callback(event.target.result);\r\n                  } else {\r\n                    var tempTyped = new Uint8Array(totalSize);\r\n                    var byteOffset = 0;\r\n                    for (var chunkId in chunks) {\r\n                      var buffer = chunks[chunkId];\r\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\r\n                      byteOffset += buffer.byteLength;\r\n                      buffer = undefined;\r\n                    }\r\n                    chunks = undefined;\r\n                    callback(tempTyped.buffer);\r\n                    tempTyped = undefined;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            getRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n      function processPackageData(arrayBuffer) {\r\n        assert(arrayBuffer, 'Loading data file failed.');\r\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\r\n        var byteArray = new Uint8Array(arrayBuffer);\r\n        var curr;\r\n        var compressedData = {\"data\":null,\"cachedOffset\":36671238,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,1150,2274,3169,4186,5106,5959,6893,7993,8958,9937,10812,11759,12659,13833,15001,16089,17217,18084,19216,20517,21707,22672,23764,25096,26500,28045,29543,30832,32189,33280,34541,36070,37316,38558,39686,41025,42402,43839,45353,46659,47923,49061,50214,51588,52961,54370,55910,57369,58402,59511,60714,62068,63479,64930,66498,67807,68881,70001,71160,72651,74030,75553,77082,78133,79217,80332,81569,83069,84540,86062,87491,88553,89816,90954,92389,93715,94913,95930,96818,97778,98714,99637,100536,101490,102434,103031,104005,104778,105478,106488,107398,108317,109277,110307,110892,111323,111659,111999,112426,112789,113162,113919,114485,115044,115762,116376,116994,117602,118237,119196,120137,120983,121725,122435,123364,124361,125186,125768,126680,127513,128375,128888,129533,130290,130864,131617,132429,133141,133951,134624,135458,135992,136662,137309,137725,138462,139084,139777,140564,141111,142019,142597,143066,143692,144449,145115,145624,146113,146791,147244,147686,148126,148732,149374,150164,150588,151021,151911,152766,153934,154442,154922,155429,156182,156927,157819,158499,159158,159812,160591,161375,161888,162758,163589,164205,164826,165513,166379,167079,167568,168100,168914,169610,170429,171400,172393,173208,174046,174561,175406,176307,177168,178054,178930,179791,180628,181454,182370,183139,183948,184822,185649,186538,187363,188393,189168,190087,191002,191922,192847,193776,194721,195688,196667,197645,198622,199590,200551,201511,202478,203434,204439,205327,206164,206967,207770,208638,209481,210285,211107,211927,212623,213470,214320,215198,215886,216708,217427,218219,218924,219616,220195,221268,222026,222774,223560,223977,224605,226588,228397,229200,230337,232385,233717,234324,236022,237955,238837,239780,241495,242836,244719,246767,248772,250786,252803,254836,256884,258896,260944,262977,265007,267055,269108,271149,273197,275249,277288,279342,281145,283193,285245,287293,289346,291394,293425,294994,295334,295782,296188,297398,298598,299905,301130,302032,302919,304008,305086,306135,306893,307998,309188,310390,311368,313416,315473,317521,319576,321631,323679,325727,327783,329831,331879,333927,335975,338028,340085,341544,343096,344582,345928,347422,348733,350110,351601,353649,355697,357745,359793,361841,363889,365937,367985,370033,372081,373976,376024,378072,380120,382168,384216,386264,388312,390360,392259,394307,396355,398403,400451,402499,404547,406569,408526,410574,412622,414670,416718,418766,420814,422713,424761,426809,428857,430905,432953,435001,436901,438949,440997,443045,445093,447141,449189,451237,453262,455197,457245,459293,461341,463389,465437,467485,469533,471581,473629,474830,476877,478925,480982,483030,485078,487126,489174,491222,493277,493435,493999,496023,498065,500113,502170,504053,505518,507575,509266,510608,512146,513316,513524,513744,514053,514273,514522,514735,514955,515169,515381,515612,515826,517220,518869,520431,522229,524176,526080,527975,529845,531747,533402,534513,535931,537039,538018,539049,540196,541237,542298,543391,544468,545651,546990,548127,549504,550497,551575,552685,553716,554886,556242,557373,558606,559610,560765,561822,562883,564006,565139,566162,567207,568517,569707,571054,572100,573649,575281,577157,579061,581109,583157,585205,587253,589301,591349,593397,595426,597281,599329,601377,603425,605473,607487,609379,611310,612801,613968,614799,615352,615853,617347,619328,621378,623115,624545,625762,626953,628061,629978,631975,633320,634526,635710,636540,638453,639746,641187,642653,643275,643392,643679,645076,647124,649176,651161,653209,655257,657292,659343,661387,663337,664874,666650,668698,670746,672794,674842,676890,678938,680986,683034,685082,687139,689196,691252,693300,695220,696779,698579,700437,702485,704533,706454,708455,710503,712560,714416,716464,718512,720560,722608,724656,726704,728752,730800,732848,734896,736944,738992,741040,743088,745136,747184,749232,751280,753328,755376,757424,759472,761520,763568,765616,767664,769712,771760,773808,775856,777904,779952,782000,784048,786096,788144,790192,792240,794288,796336,798384,800432,802480,804528,806576,808624,810672,812720,814768,816816,818864,820912,822960,825008,827056,829104,831152,833200,835248,837296,839344,841392,843440,845488,847536,849584,851632,853680,855728,857776,859824,861872,863920,865968,868016,870064,872112,874160,876208,878256,880304,882352,884400,886285,888333,890381,892429,894477,896525,898573,900621,902669,904717,906765,908813,910861,912909,914957,917005,919053,921101,923149,925197,927245,929293,931341,933389,935437,937485,939531,941579,943619,945637,947622,949598,950945,952317,953734,955145,956531,957919,959399,960851,962386,964053,965713,967194,968660,970079,971396,972974,974659,976389,978117,979762,981399,982882,984346,985945,987585,989234,990897,992554,994117,995672,997109,998716,1000601,1001881,1003229,1004520,1005724,1006922,1008135,1009267,1010502,1011968,1013399,1014787,1016101,1017398,1018630,1019933,1021391,1022926,1024588,1026156,1027728,1029328,1030863,1032420,1034009,1035527,1037053,1038558,1040014,1041414,1042789,1044156,1045633,1046945,1048200,1049592,1050858,1051927,1053181,1054307,1055569,1056744,1057934,1059206,1060319,1061598,1063503,1065560,1067590,1069577,1071604,1073646,1075657,1077681,1079656,1081691,1083689,1085745,1087787,1089767,1091815,1093832,1095856,1097884,1099863,1101911,1103960,1105931,1107964,1109990,1112038,1114072,1116047,1118095,1120130,1122124,1124172,1126229,1128211,1130259,1132293,1134288,1136336,1138376,1140349,1142397,1144445,1146471,1148499,1150555,1152525,1154550,1156531,1158579,1160627,1162654,1164702,1166753,1168616,1170412,1172460,1174462,1176341,1178183,1180231,1182086,1183874,1185922,1187970,1190018,1191893,1193653,1195697,1197577,1199359,1201411,1203190,1204949,1206815,1208510,1210119,1211608,1212905,1214420,1214929,1215490,1216322,1216830,1217577,1218475,1219780,1220699,1221636,1222499,1223601,1224749,1225742,1226968,1227999,1228687,1229594,1230780,1232093,1233373,1234618,1235947,1236750,1237796,1238792,1239857,1240817,1241858,1242420,1242956,1243562,1244184,1244775,1245350,1246329,1247111,1247885,1248783,1249764,1250823,1251646,1252474,1253476,1254293,1255240,1256034,1256892,1257732,1258564,1259588,1260430,1261229,1262112,1262948,1263965,1264609,1265325,1266099,1266810,1267933,1268514,1269258,1269773,1270325,1270882,1271576,1272305,1273129,1273935,1274572,1275247,1276181,1277362,1278147,1279095,1279977,1280914,1281874,1282393,1283414,1284035,1284943,1285942,1286923,1287786,1288509,1289483,1289757,1290409,1291150,1292160,1292562,1293109,1293956,1294664,1295330,1295880,1296509,1297214,1298129,1298930,1299579,1300206,1300798,1301939,1303154,1304367,1305616,1306693,1307888,1309166,1310588,1312272,1314320,1316368,1318425,1320473,1322521,1324569,1326617,1328665,1330713,1332761,1334818,1336866,1338914,1340962,1343010,1345058,1347106,1349154,1351202,1353250,1355226,1355909,1357957,1360005,1362053,1364101,1366149,1368197,1370245,1372293,1374341,1376389,1378437,1380485,1382533,1384581,1386629,1388677,1390725,1392773,1394821,1396869,1398917,1400965,1403013,1405061,1407109,1409157,1411205,1413253,1415301,1417349,1419397,1421445,1423493,1425541,1427589,1429637,1431685,1433733,1435781,1437829,1439877,1441925,1443973,1446021,1448069,1450117,1452165,1454213,1456261,1458309,1460357,1462405,1464453,1466501,1468549,1470597,1472645,1474693,1476741,1478789,1480837,1482885,1484933,1486981,1489029,1491077,1492585,1494117,1495678,1497225,1498749,1500252,1501754,1503321,1504818,1506329,1507872,1509512,1511232,1513008,1514783,1516516,1517963,1519702,1521259,1522965,1524836,1526597,1528283,1530147,1531898,1533718,1535586,1537345,1538890,1540773,1542436,1544137,1545859,1547432,1548969,1550667,1552239,1554053,1555928,1557598,1559100,1560455,1561783,1563024,1564336,1565785,1567253,1568720,1570139,1571608,1573081,1574565,1576063,1577457,1578814,1580246,1581700,1583669,1585300,1586795,1588107,1589619,1591138,1592704,1594145,1595609,1596978,1598149,1599477,1601010,1602439,1603622,1604906,1606327,1607892,1609311,1610775,1612216,1613589,1614985,1616411,1617917,1619352,1620850,1622332,1623798,1625270,1626744,1628323,1629821,1631416,1632853,1634445,1635994,1637538,1639065,1640547,1641956,1643574,1645142,1646577,1648022,1649393,1650996,1652675,1654325,1655956,1657579,1659115,1660704,1662418,1664020,1665524,1667175,1668737,1670555,1672177,1673271,1674393,1675527,1676628,1677587,1678599,1679661,1680745,1681874,1683052,1684140,1685363,1686621,1687966,1689437,1690924,1692478,1694085,1695625,1697225,1698809,1700262,1701613,1703198,1704798,1706321,1707859,1709276,1710670,1712089,1713352,1714680,1716067,1717304,1718703,1720161,1721676,1723206,1724706,1726222,1727596,1728836,1730009,1731020,1732064,1733117,1734231,1735399,1736591,1737604,1738490,1739536,1740532,1741407,1742379,1743403,1744787,1746661,1747729,1748804,1749955,1751055,1752033,1753004,1754075,1755172,1756289,1757515,1758797,1760105,1761282,1762782,1764348,1765851,1767358,1768860,1770331,1771925,1773517,1775024,1776486,1778097,1779725,1781102,1782606,1784127,1785687,1787336,1789003,1790838,1792716,1794585,1796193,1797959,1799779,1801538,1803081,1804736,1806097,1807501,1808818,1809807,1810889,1812025,1813102,1814238,1815425,1816526,1817355,1818366,1819406,1820318,1821262,1822230,1823357,1825405,1827069,1828744,1830419,1832166,1833950,1835691,1837421,1839210,1840994,1842828,1844642,1846539,1848300,1850043,1851837,1853614,1855438,1857258,1859081,1860875,1862755,1864554,1866313,1868090,1869855,1871606,1873380,1875060,1876847,1878635,1880386,1882120,1883908,1885721,1887489,1889245,1891000,1892716,1894448,1896147,1897890,1899618,1901343,1903044,1904666,1906517,1908395,1910276,1912120,1913930,1915762,1917638,1919503,1921344,1923114,1924800,1926360,1927290,1929225,1931273,1933321,1935369,1937417,1939465,1941513,1943561,1945609,1947657,1949705,1951753,1953801,1955849,1957897,1959945,1961993,1964041,1966089,1968137,1970185,1972233,1974281,1976329,1978377,1980425,1982473,1984521,1986569,1988617,1990665,1992713,1994761,1996809,1998857,2000905,2002953,2005001,2007049,2009097,2011145,2013193,2015241,2017289,2019337,2021385,2023433,2025481,2027529,2029577,2031625,2033673,2035721,2037769,2039817,2041865,2043913,2045961,2048009,2050057,2052105,2054153,2056201,2058249,2060297,2062345,2064393,2066441,2068489,2070537,2072585,2074633,2076681,2078729,2080777,2082825,2084873,2086921,2088969,2091017,2093065,2095113,2097161,2099209,2101257,2103305,2105353,2107401,2109449,2111497,2113545,2115593,2117641,2119689,2121737,2123785,2125833,2127881,2129929,2131977,2134025,2136073,2138121,2140169,2142217,2144265,2146313,2148361,2150409,2152457,2154505,2156553,2158601,2160649,2162697,2164745,2166793,2168841,2170889,2172937,2174985,2177033,2179081,2181129,2183183,2185231,2187279,2189327,2191375,2193423,2195471,2197519,2199567,2201615,2203663,2205711,2207759,2209807,2211855,2213903,2215951,2217999,2220047,2222095,2224143,2226191,2228239,2230287,2232335,2234383,2236431,2238479,2240527,2242575,2244623,2246671,2248719,2250767,2252815,2254863,2256911,2258959,2261007,2263055,2265103,2267151,2269199,2271247,2273295,2275343,2277391,2279439,2281487,2283535,2285583,2287631,2289679,2291727,2293775,2295823,2297871,2299919,2301967,2304015,2306072,2308121,2310140,2312166,2314209,2316257,2318314,2320362,2322410,2324464,2326512,2328560,2330608,2332656,2334704,2336752,2338800,2340848,2342896,2344944,2346992,2349040,2351088,2353136,2355184,2357232,2359280,2361337,2363385,2365433,2367481,2369529,2371577,2373625,2375673,2377721,2379769,2381817,2383865,2385913,2387961,2390009,2392057,2394105,2396153,2398201,2400249,2402297,2404353,2406388,2408403,2410447,2412495,2414543,2416598,2418646,2420693,2422741,2424789,2426837,2428885,2430933,2432981,2435029,2437077,2439125,2441173,2443221,2445269,2447317,2449365,2451413,2453461,2455509,2457557,2459608,2461656,2463704,2465752,2467800,2469848,2471896,2473944,2475992,2478040,2480088,2482136,2484184,2486232,2488280,2490328,2492376,2494424,2496472,2498529,2500577,2502634,2504677,2506693,2508727,2510783,2512840,2514888,2516944,2518991,2521039,2523087,2525135,2527183,2529231,2531279,2533327,2535375,2537423,2539471,2541519,2543567,2545615,2547663,2549711,2551759,2553807,2555855,2557903,2559951,2561999,2564047,2566095,2568143,2570191,2572239,2574287,2576335,2578383,2580431,2582479,2584527,2586575,2588623,2590671,2592719,2594767,2596815,2598863,2600911,2602959,2605007,2607055,2609103,2611151,2613199,2615247,2617295,2619343,2621391,2623439,2625487,2627535,2629583,2631631,2633679,2635727,2637775,2639823,2641871,2643919,2645967,2648015,2650063,2652111,2654159,2656207,2658255,2660303,2662351,2664399,2666447,2668495,2670543,2672591,2674639,2676687,2678735,2680783,2682831,2684879,2686927,2688975,2691023,2693071,2695119,2697167,2699215,2701263,2703311,2705359,2707407,2709455,2711503,2713551,2715599,2717647,2719695,2721743,2723791,2725839,2727887,2729935,2731983,2734031,2736079,2738127,2740175,2742223,2744271,2746319,2748367,2750415,2752463,2754511,2756559,2758607,2760655,2762703,2764751,2766799,2768847,2770895,2772943,2774991,2777039,2779087,2781135,2783183,2785231,2787283,2789293,2791319,2793365,2795419,2797476,2799524,2801578,2803626,2805674,2807722,2809770,2811818,2813866,2815914,2817962,2820010,2822058,2824106,2826154,2828202,2830250,2832298,2834346,2836394,2838442,2840102,2840684,2841309,2841932,2842589,2843274,2843988,2844829,2845822,2846843,2847865,2848742,2850117,2851551,2853139,2854786,2856149,2857424,2858959,2860606,2862272,2864059,2865686,2867268,2868992,2870657,2872284,2874057,2875666,2877281,2879037,2880743,2882471,2884270,2885954,2887568,2889233,2890989,2892741,2894522,2896245,2897593,2899064,2900420,2901616,2902821,2904245,2905555,2906788,2908055,2909313,2910671,2912158,2913742,2915254,2916813,2918397,2920074,2922122,2923527,2924932,2926427,2927981,2929453,2930920,2932470,2933951,2935402,2936918,2938548,2940148,2941543,2943164,2944820,2946480,2948179,2949966,2951687,2953351,2955054,2956627,2958209,2959709,2961277,2962890,2964499,2966083,2967693,2969325,2970903,2972451,2974002,2975655,2977265,2978908,2980503,2982128,2983701,2985272,2986893,2988544,2990142,2991709,2992961,2994178,2995668,2997153,2998546,2999903,3001396,3002934,3004544,3006160,3007607,3008993,3010497,3012507,3014191,3015866,3017509,3019232,3020983,3022722,3024476,3026169,3027849,3029582,3031378,3033152,3034632,3036177,3037845,3039445,3041117,3042933,3044651,3046245,3047948,3049555,3051090,3052613,3054195,3055888,3057462,3059009,3060549,3062163,3063816,3065448,3067057,3068728,3070380,3072097,3073831,3075613,3077281,3078902,3080521,3082242,3083857,3085407,3086753,3088095,3089807,3091509,3093145,3094697,3096398,3098143,3099916,3101757,3103458,3105053,3106727,3108671,3110336,3111755,3113148,3114549,3115982,3117353,3118801,3120283,3121617,3123035,3124521,3126052,3127209,3128622,3130170,3131706,3133218,3134920,3136562,3138128,3139764,3141299,3142756,3144206,3145767,3147327,3148900,3150343,3151848,3153373,3154933,3156401,3157911,3159484,3161008,3162594,3164173,3165765,3167404,3168933,3170464,3172050,3173537,3174938,3176202,3177113,3178383,3179728,3181095,3182356,3183768,3185240,3186744,3188282,3189731,3191046,3192424,3194088,3196033,3197218,3198591,3199949,3201386,3202861,3204412,3205890,3207340,3208762,3210242,3211695,3213139,3214609,3215960,3217334,3218179,3219049,3220144,3221452,3223017,3224653,3226448,3228291,3230146,3232022,3233866,3235610,3237349,3238730,3240507,3242287,3244142,3246024,3247863,3249665,3251469,3253259,3254885,3256293,3257439,3258473,3259608,3261007,3262119,3263444,3264747,3265880,3267137,3268373,3269792,3271309,3272775,3274265,3275676,3277075,3278471,3279830,3280502,3282550,3284598,3286646,3288694,3290742,3292790,3294838,3296886,3298934,3300982,3303030,3305078,3307126,3309174,3311222,3313270,3315318,3317366,3319414,3321462,3323510,3325558,3327606,3329654,3331702,3333750,3335798,3337846,3339894,3341942,3343990,3346038,3348086,3350134,3352182,3354230,3356278,3358326,3360374,3362422,3364470,3366518,3368566,3370614,3372662,3374710,3376758,3378806,3380854,3382902,3384950,3386998,3389046,3391094,3393142,3395190,3397238,3399286,3401334,3403382,3405430,3407478,3409526,3411574,3413622,3415670,3417718,3419766,3421814,3423862,3425910,3427958,3430006,3432054,3434102,3436150,3438198,3440246,3442294,3444342,3446390,3448438,3450486,3452534,3454582,3456630,3458678,3460726,3462774,3464822,3466870,3468918,3470966,3473014,3475062,3477110,3479166,3481214,3483262,3485310,3487358,3489406,3491454,3493502,3495550,3497598,3499646,3501694,3503742,3505798,3507846,3509894,3511950,3513998,3516046,3518094,3520142,3522190,3524238,3526286,3528334,3530382,3532430,3534478,3536526,3538574,3540622,3542670,3544718,3546766,3548814,3550862,3552910,3554958,3557006,3559054,3561102,3563150,3565198,3567246,3569294,3571342,3573390,3575438,3577486,3579534,3581582,3583630,3585678,3587726,3589774,3591822,3593870,3595918,3597966,3600014,3602062,3604110,3606158,3608206,3610254,3612302,3614350,3616398,3618446,3620494,3622542,3624590,3626638,3628686,3630734,3632782,3634830,3636878,3638926,3640974,3643022,3645070,3647118,3649166,3651214,3653262,3655310,3657358,3659406,3661454,3663502,3665550,3667598,3669646,3671694,3673742,3675790,3677838,3679886,3681934,3683982,3686030,3688078,3690126,3692174,3694222,3696270,3698318,3700366,3702414,3704462,3706510,3708558,3710606,3712654,3714702,3716750,3718798,3720846,3722894,3724942,3726990,3729038,3731086,3733134,3735182,3737230,3739278,3741335,3743383,3745431,3747479,3749527,3751575,3753631,3755679,3757727,3759775,3761823,3763871,3765919,3767967,3770015,3772063,3774111,3776159,3778207,3780255,3782303,3784351,3786399,3788447,3790495,3792543,3794591,3796639,3798687,3800735,3802783,3804831,3806359,3807944,3809530,3811157,3812757,3814303,3815842,3817469,3819053,3820622,3822231,3823928,3825693,3827515,3829310,3831083,3832557,3834265,3835850,3837587,3839480,3841284,3843057,3844926,3846779,3848604,3850483,3852332,3854072,3855917,3857602,3859292,3861064,3862739,3864396,3866165,3867782,3869619,3871529,3873237,3874721,3876113,3877469,3878747,3880101,3881620,3883098,3884566,3886097,3887643,3889147,3890665,3892253,3893720,3895169,3896655,3898137,3900148,3901768,3903226,3904674,3906167,3907673,3909213,3910747,3912236,3913753,3915271,3916875,3918644,3920483,3922441,3924422,3926429,3928418,3930419,3932432,3934432,3936403,3938297,3940085,3941877,3943770,3945708,3947565,3949546,3951566,3953478,3955324,3957144,3958943,3960670,3962404,3964131,3965956,3967792,3969697,3971658,3973649,3975650,3977660,3979646,3981516,3983152,3984671,3986170,3987695,3989198,3990707,3992215,3993718,3995179,3996620,3998062,3999494,4001350,4002923,4003995,4005095,4006208,4007309,4008294,4009339,4010417,4011489,4012631,4013811,4014924,4016138,4017414,4018774,4020246,4021750,4023319,4024907,4026444,4028045,4029624,4031046,4032429,4034008,4035620,4037141,4038683,4040101,4041515,4042922,4044196,4045522,4046911,4048169,4049587,4051012,4052515,4054037,4055542,4057062,4058411,4059642,4060827,4061826,4062862,4063888,4065016,4066169,4067335,4068349,4069228,4070244,4071264,4072175,4073123,4074130,4075570,4077483,4079019,4080586,4082144,4083764,4085354,4086980,4088648,4090191,4091800,4093410,4095093,4096647,4098071,4099653,4101226,4102791,4104476,4106178,4107750,4109331,4110940,4112412,4113899,4115329,4116937,4118542,4119996,4121480,4123044,4124581,4126144,4127656,4129206,4130794,4132396,4134033,4135701,4137392,4138942,4140460,4142128,4143762,4145274,4146707,4147879,4149346,4150906,4152436,4153872,4155343,4156952,4158600,4160311,4162034,4163587,4165112,4166768,4168816,4170146,4171436,4172706,4173978,4175286,4176559,4177940,4179206,4180433,4181720,4183057,4184231,4185586,4186923,4188388,4189781,4191208,4192668,4194064,4195530,4197045,4198560,4200049,4201582,4203151,4204718,4206388,4207969,4209568,4211119,4212708,4214259,4215787,4217265,4218899,4220613,4222246,4223925,4225608,4227030,4228393,4229778,4231143,4232368,4233609,4234816,4236076,4237356,4238512,4239710,4240895,4242044,4243265,4244452,4245724,4247015,4248287,4250298,4251368,4252195,4252957,4253854,4254788,4255575,4256252,4257165,4258025,4258887,4259661,4260442,4261446,4262565,4263830,4265060,4266375,4267660,4268975,4270435,4271946,4273521,4275041,4276701,4278283,4279930,4281536,4283143,4284785,4286406,4287992,4289524,4290997,4292476,4293978,4295532,4297098,4298548,4300003,4301447,4302811,4304150,4305421,4306600,4307835,4308973,4310127,4311121,4312087,4313122,4314164,4315126,4316071,4317073,4318106,4319007,4319768,4321335,4323247,4324928,4326604,4328326,4330097,4331835,4333605,4335362,4337138,4338955,4340789,4342656,4344517,4346271,4348024,4349817,4351615,4353452,4355270,4357064,4358941,4360769,4362550,4364302,4366052,4367803,4369581,4371285,4373036,4374868,4376581,4378345,4380092,4381943,4383720,4385493,4387255,4389002,4390726,4392431,4394149,4395921,4397656,4399369,4401016,4402778,4404614,4406506,4408328,4410158,4411972,4413851,4415752,4417610,4419408,4421103,4422744,4424488,4426536,4428465,4430382,4432283,4434238,4436143,4438031,4439945,4441864,4443729,4445608,4447534,4449458,4451259,4453062,4454811,4456553,4458315,4460160,4461962,4463792,4465571,4467428,4469265,4471089,4472899,4474659,4476396,4478070,4479662,4481217,4482909,4484667,4486480,4488225,4489986,4491704,4493387,4495109,4496797,4498523,4500282,4502059,4503853,4505589,4507406,4509317,4511208,4513160,4514987,4516772,4518651,4520572,4522500,4524414,4526317,4528226,4530101,4532149,4534128,4536067,4538064,4540062,4542057,4544069,4546058,4548020,4549942,4551835,4553831,4555844,4557825,4559772,4561656,4563589,4565585,4567550,4569509,4571501,4573509,4575534,4577456,4579376,4581283,4583191,4585109,4586932,4588665,4590417,4592242,4594168,4596089,4598015,4599969,4601955,4603913,4605902,4607833,4609759,4611756,4613680,4615494,4617325,4619176,4621044,4622891,4624719,4626526,4628332,4630183,4632006,4633735,4635403,4637002,4638494,4639907,4641917,4643652,4645506,4647397,4649258,4651079,4652881,4654696,4656564,4658335,4660068,4661657,4663210,4664614,4666472,4668358,4670297,4672089,4673976,4675840,4677714,4679622,4681547,4683347,4685064,4686684,4688238,4689642,4691439,4693452,4695298,4697123,4699031,4700959,4702814,4704576,4706304,4707852,4709294,4710854,4712468,4714081,4715833,4717697,4719413,4721426,4723209,4725034,4727020,4728669,4730642,4732612,4734059,4735450,4737061,4738582,4740059,4741947,4743663,4744924,4746522,4748109,4749636,4751192,4753076,4754507,4755951,4757636,4759183,4760730,4762624,4764187,4765191,4766290,4767258,4768323,4769462,4770514,4771673,4772677,4773696,4774820,4775948,4777139,4778214,4779311,4780415,4781597,4782769,4783980,4785182,4786435,4787729,4789037,4790342,4791521,4792711,4793789,4794832,4795849,4796861,4797894,4798964,4800007,4800909,4801819,4802791,4803720,4804713,4805725,4806756,4807802,4808832,4809856,4810853,4811748,4812804,4813771,4814800,4815814,4816910,4818077,4819183,4820279,4821342,4822337,4823330,4824209,4825633,4827495,4828777,4830045,4831306,4832562,4833861,4835171,4836551,4837861,4839086,4840391,4841643,4842772,4844063,4845360,4846732,4848030,4849345,4850659,4852035,4853511,4855137,4856759,4858350,4859782,4861123,4862515,4864067,4865620,4867348,4869041,4870662,4872110,4873390,4874758,4876182,4877658,4879114,4880631,4882159,4883516,4884872,4886261,4887567,4888814,4890068,4891348,4892588,4893760,4894930,4896145,4897322,4898482,4899693,4900916,4902224,4903478,4904834,4905942,4906854,4907734,4908569,4909427,4910591,4911736,4912647,4913565,4914484,4915458,4916378,4917026,4918035,4918842,4919660,4920937,4922085,4923538,4925031,4926477,4927970,4928636,4928975,4929314,4929657,4931136,4932439,4933670,4934976,4936038,4937071,4938260,4939449,4940410,4941639,4942732,4943926,4945073,4946156,4947386,4948442,4949581,4950671,4951776,4952905,4954153,4955201,4956597,4957433,4958336,4959193,4960251,4961067,4962175,4963150,4964071,4965037,4965873,4966868,4967867,4968420,4969417,4970192,4970956,4972249,4973558,4975074,4976523,4978011,4979334,4979674,4980012,4980367,4981231,4982465,4983820,4985077,4986172,4987276,4988210,4989342,4990484,4991632,4992716,4993790,4995128,4996223,4997306,4998422,4999464,5000631,5001797,5002997,5004112,5005244,5006519,5007753,5009068,5010426,5011632,5012396,5013122,5013824,5014626,5015866,5016581,5017275,5018007,5018700,5019680,5020607,5021482,5022374,5023340,5024306,5025268,5026238,5027164,5027926,5028819,5029791,5030696,5031627,5032524,5033109,5033898,5034608,5035410,5036116,5036835,5037655,5038545,5039513,5040141,5040945,5041717,5042537,5043385,5044239,5045041,5045997,5046924,5047782,5048634,5049410,5050271,5051091,5052273,5053045,5053766,5054764,5055577,5056410,5058290,5058959,5059004,5059052,5059101,5059823,5060768,5061902,5062986,5064350,5065923,5067207,5068781,5070616,5072411,5074088,5075788,5077468,5078328,5079520,5081070,5082818,5084607,5086429,5088181,5090018,5091833,5093539,5095129,5096800,5098495,5100394,5102229,5104109,5105957,5107765,5109514,5111409,5113274,5115160,5117012,5118777,5120395,5121973,5123521,5125279,5126687,5127959,5129284,5130556,5131773,5132824,5133818,5134689,5135124,5135169,5135213,5135258,5136412,5138160,5139453,5140836,5142029,5143277,5144677,5146099,5147439,5148848,5150160,5151566,5153047,5154520,5155915,5157386,5158817,5160288,5161785,5163193,5164747,5166150,5167520,5168904,5170296,5171654,5172806,5173969,5175324,5176641,5177975,5179388,5180767,5182018,5183306,5184740,5186104,5187419,5188750,5190194,5191727,5193136,5194663,5196051,5197428,5198789,5200212,5201653,5203123,5204496,5205812,5207246,5208489,5209854,5211236,5212508,5213701,5214849,5216300,5218045,5218173,5218406,5218621,5218824,5219051,5219464,5219857,5220218,5220654,5221089,5221326,5221694,5222380,5223233,5224187,5225117,5226243,5227557,5229193,5230910,5232702,5234453,5236255,5238098,5239928,5241637,5243315,5244969,5246676,5248544,5250374,5252280,5254142,5255939,5257728,5259645,5261502,5263365,5265255,5266479,5267487,5268395,5269251,5269999,5270480,5270835,5271221,5271554,5271974,5272290,5272694,5272892,5273086,5273244,5273466,5273635,5273854,5275902,5276031,5276080,5276125,5276183,5276271,5276400,5276570,5276758,5276912,5277135,5277381,5277640,5278071,5278889,5279898,5280890,5281950,5283329,5284896,5286481,5288124,5289763,5291482,5293243,5294998,5296701,5298233,5299801,5301389,5303084,5304733,5306463,5308246,5309963,5311577,5313219,5314807,5316446,5318072,5319382,5320315,5321316,5322196,5322825,5323183,5323412,5323565,5323676,5323779,5323947,5324105,5324183,5324248,5324292,5324337,5324387,5324434,5325505,5326593,5327523,5328925,5330115,5331288,5332427,5334019,5334936,5336112,5337121,5339052,5340550,5341688,5342998,5344361,5345745,5347054,5349043,5350565,5351829,5353136,5354502,5355916,5357284,5358926,5359862,5360762,5361778,5363604,5364777,5365596,5366490,5368040,5369525,5371107,5372742,5374200,5375797,5377458,5379014,5380593,5382106,5383713,5385290,5386989,5388429,5390059,5391661,5393168,5394640,5396077,5397482,5399054,5400524,5401858,5402995,5404025,5405331,5406684,5407882,5409041,5410538,5412098,5413531,5414827,5416118,5417517,5419001,5420284,5421534,5423270,5424840,5426102,5427714,5429404,5430913,5432607,5434354,5436219,5437458,5438916,5440644,5442183,5443773,5445614,5447418,5449241,5450422,5451980,5453713,5455263,5456966,5458856,5460722,5462384,5463610,5465185,5466915,5468506,5470270,5472153,5474047,5475538,5476818,5478451,5480196,5481772,5483441,5485337,5487230,5488769,5490126,5491716,5493454,5494967,5496623,5498480,5500386,5501839,5503149,5504778,5506456,5507967,5509662,5511454,5513305,5514539,5516025,5517761,5519313,5520900,5522654,5524386,5526044,5527270,5528834,5530534,5532060,5533721,5535512,5537415,5538736,5540095,5541773,5543366,5544915,5546686,5548531,5550430,5551894,5553368,5554765,5556209,5557716,5559206,5560679,5561913,5562980,5563825,5564589,5565436,5566325,5567194,5568461,5570148,5571676,5573087,5574517,5575907,5577124,5578519,5579691,5580969,5582329,5583640,5584852,5585923,5586877,5587755,5588391,5589525,5591332,5592850,5594231,5595693,5597078,5598350,5599748,5600944,5602194,5603561,5604900,5606122,5607248,5608170,5609072,5609716,5610662,5612527,5613983,5615465,5616750,5617840,5619077,5620435,5621768,5622810,5623946,5625189,5626248,5627410,5628617,5629912,5631161,5632253,5633046,5633896,5634890,5636598,5638157,5639586,5641093,5642453,5643759,5645132,5646287,5647554,5648884,5650175,5651326,5652146,5652992,5653627,5654667,5656531,5658040,5659467,5660921,5662334,5663620,5664982,5666245,5667412,5668772,5670141,5671440,5672564,5673522,5674452,5675244,5675901,5677349,5678948,5680275,5681776,5683387,5684988,5686541,5688021,5689726,5691110,5692615,5694123,5695774,5697372,5698763,5700582,5702052,5703606,5705044,5706720,5708328,5709851,5711453,5712852,5714428,5716300,5717913,5719413,5720778,5721910,5723156,5724621,5726032,5727331,5728276,5729307,5730738,5732481,5734060,5735617,5736972,5738237,5739405,5740893,5742280,5743513,5744568,5745831,5747067,5748400,5749338,5750572,5752282,5754077,5755844,5757673,5759351,5760926,5762355,5764224,5766132,5767897,5769661,5771446,5773405,5775267,5776371,5777232,5778501,5779146,5779716,5780301,5781055,5781710,5782367,5783008,5783930,5784735,5785764,5786570,5787359,5788186,5788973,5789771,5790721,5791594,5792499,5793486,5794311,5795204,5796155,5797029,5798057,5799035,5799964,5801013,5801669,5802356,5802968,5803687,5804456,5805291,5806206,5807089,5807926,5808801,5809591,5810422,5811294,5812319,5813402,5814106,5815028,5815913,5816791,5818066,5819544,5820415,5821715,5823155,5825203,5826724,5828239,5830287,5831328,5832212,5832974,5833960,5834979,5836011,5836964,5837998,5839139,5840409,5841829,5843468,5845112,5846777,5848332,5849681,5851091,5852567,5854152,5855807,5857473,5859156,5860804,5862401,5863996,5865505,5867015,5868453,5870240,5872081,5873955,5875783,5877539,5879318,5880926,5882333,5883667,5885026,5886393,5887684,5888829,5889595,5890360,5891907,5892651,5893344,5894321,5895474,5896895,5898006,5898903,5899999,5900934,5901872,5902547,5903342,5904226,5905199,5906177,5907366,5908499,5909677,5910956,5912253,5913437,5914703,5916097,5917398,5918791,5920088,5921431,5922724,5923734,5924618,5925311,5925821,5926314,5926941,5927831,5928710,5929512,5930343,5931249,5932291,5933190,5934117,5935152,5937018,5937953,5938661,5939689,5940829,5941949,5943218,5944600,5945931,5947189,5948712,5950172,5951485,5952300,5953179,5954289,5955578,5956994,5958252,5959482,5960718,5961833,5963017,5964184,5965434,5966754,5967940,5969212,5970631,5971917,5973171,5974509,5975884,5977213,5978521,5979767,5980995,5982207,5983251,5984237,5985333,5986466,5987727,5988879,5990417,5991986,5993192,5994480,5995821,5997292,5998738,6000206,6001855,6003631,6005427,6007245,6009070,6010839,6012572,6014285,6015901,6017596,6019344,6020956,6022616,6024232,6025899,6027461,6028945,6030598,6032272,6033854,6035419,6036983,6038577,6040133,6041530,6042691,6043742,6045142,6046761,6048284,6049866,6051425,6052883,6054227,6055669,6057113,6059021,6059066,6059114,6059161,6059206,6059250,6059335,6059751,6060426,6061182,6062027,6062957,6063935,6064910,6065965,6066898,6068045,6069152,6070413,6071758,6072922,6074222,6075558,6076706,6077928,6079057,6080053,6081276,6082318,6083539,6084711,6085739,6086671,6087618,6088418,6089058,6089780,6090434,6090779,6090824,6090868,6090916,6090965,6091012,6091790,6092866,6093701,6095011,6095908,6097245,6098615,6100306,6101871,6103725,6105108,6106059,6106712,6108285,6109230,6110232,6111240,6112243,6113194,6114220,6115238,6116232,6117256,6118201,6119209,6120230,6121237,6122188,6123199,6124185,6125178,6126132,6127149,6128155,6129179,6130182,6131127,6132135,6133157,6134178,6135131,6136150,6137159,6138165,6139114,6140142,6141166,6142181,6143130,6144180,6145668,6146816,6147981,6149069,6150159,6151312,6152203,6152926,6154318,6155428,6155949,6156513,6157254,6157933,6158587,6159782,6160968,6161868,6162679,6163528,6164677,6165821,6166883,6167629,6168517,6169394,6170287,6171438,6172726,6174020,6175286,6176697,6177679,6178537,6179441,6180398,6181274,6182008,6182838,6183452,6184061,6184576,6185180,6185765,6186604,6187585,6188402,6189264,6190173,6191165,6192228,6192997,6193937,6194908,6195781,6196707,6197551,6198487,6199255,6200141,6201091,6201907,6202702,6203625,6204413,6205253,6205881,6206638,6207396,6208069,6209139,6209756,6210440,6210989,6211540,6212068,6212763,6213463,6214412,6215060,6215783,6216489,6217380,6218625,6219355,6220247,6221192,6222130,6223026,6223698,6224641,6225321,6226176,6227044,6228091,6229053,6229701,6230601,6230889,6231485,6232287,6233340,6233680,6234263,6235246,6235909,6236619,6237167,6237823,6238539,6239526,6240309,6240930,6241540,6242118,6243613,6245422,6247452,6249318,6251133,6252828,6254566,6256283,6258019,6259778,6261665,6263610,6265534,6267582,6269630,6271678,6273726,6275774,6277822,6279870,6281918,6283966,6286014,6288062,6290110,6292158,6294206,6296254,6298302,6300350,6302398,6304446,6306494,6308542,6310590,6312638,6314686,6316734,6317500,6317549,6317594,6317638,6317683,6317731,6317780,6317825,6317869,6317914,6317962,6318011,6318086,6318835,6319839,6321271,6322674,6324214,6325786,6327232,6328777,6330317,6331916,6333579,6335274,6337015,6338758,6340456,6342155,6343778,6345455,6347070,6348711,6350316,6351930,6353372,6354675,6355970,6357114,6358298,6359248,6359726,6360091,6360316,6360462,6360534,6360581,6360626,6360670,6360715,6360765,6360812,6360857,6360901,6360946,6360996,6361043,6362104,6364152,6366200,6368248,6370296,6372344,6374392,6376440,6378488,6380536,6382584,6384632,6386680,6388728,6390776,6392824,6394872,6396920,6398968,6401016,6403072,6405120,6407168,6409216,6411264,6413312,6415360,6417408,6419465,6420963,6422165,6423343,6424526,6425796,6426922,6428130,6429311,6430489,6431739,6433004,6434335,6435540,6436859,6438188,6439541,6441239,6442832,6444351,6445767,6447170,6448604,6450192,6451640,6453025,6454589,6456231,6457749,6459250,6460747,6462309,6463815,6465178,6466572,6468029,6469486,6470946,6472239,6473417,6474740,6476001,6477277,6478450,6479506,6480387,6481439,6482461,6483596,6484605,6485427,6486134,6486831,6487663,6488374,6489006,6489682,6490306,6491949,6493698,6494891,6495935,6497088,6498108,6499251,6500553,6501895,6503018,6504269,6505411,6506662,6508002,6509240,6510776,6512282,6514057,6515831,6517483,6519234,6521012,6522609,6524176,6525669,6527241,6528542,6530119,6531767,6533265,6534685,6536307,6537841,6539472,6540983,6542678,6544225,6545635,6546953,6548312,6549557,6550752,6551880,6552931,6553945,6555009,6555933,6556915,6557876,6558917,6559992,6560945,6561825,6562531,6563150,6563545,6564010,6564387,6565522,6567109,6567842,6568512,6569135,6569815,6570495,6571207,6571878,6572520,6573213,6573883,6574605,6575248,6576290,6577871,6579425,6580968,6582550,6584196,6585829,6587371,6588874,6590304,6591458,6592331,6593497,6594978,6596430,6597989,6599522,6600982,6602491,6603921,6605258,6606470,6607457,6608589,6609985,6611498,6612954,6614418,6615910,6617291,6618565,6619599,6620328,6621017,6621664,6622351,6623009,6623730,6624436,6625109,6625791,6626450,6627134,6627789,6628755,6630694,6631374,6632044,6632715,6633381,6634053,6634709,6635369,6636047,6636764,6637388,6638054,6638728,6639520,6640865,6642498,6644089,6645702,6647435,6649131,6650709,6652199,6653612,6654992,6656306,6657692,6659013,6660264,6661603,6662917,6664283,6665511,6666740,6667872,6669515,6671174,6672825,6674463,6676130,6677750,6679283,6680714,6681865,6682917,6683700,6684450,6685094,6685788,6686487,6687137,6687817,6688493,6689157,6689856,6690524,6691205,6691824,6692520,6694566,6695080,6695521,6696049,6696669,6697315,6698064,6698969,6699836,6700871,6701949,6703013,6704149,6705516,6707029,6708581,6710172,6711738,6713285,6714783,6716240,6717660,6719122,6720572,6722033,6723556,6725008,6726449,6727847,6729256,6730520,6731919,6733330,6734795,6736422,6738018,6739544,6740974,6742248,6743339,6744552,6745823,6747055,6748342,6749560,6750721,6751811,6752817,6753817,6754840,6755884,6756895,6757859,6758786,6759606,6760261,6760829,6761218,6762783,6763712,6764039,6764525,6765081,6765744,6766480,6767320,6768179,6769069,6770090,6771106,6772250,6773477,6774853,6776393,6778026,6779709,6781442,6783100,6784716,6786199,6787653,6788991,6790293,6791611,6793044,6794473,6795914,6797342,6798768,6800270,6801689,6803143,6804578,6806014,6807463,6809032,6810727,6812351,6813846,6815154,6816447,6817655,6818894,6820104,6821303,6822559,6823737,6824798,6825854,6826922,6827929,6828771,6829588,6830289,6830938,6831405,6832615,6833999,6834360,6834852,6835506,6836171,6836873,6837670,6838512,6839459,6840553,6841591,6842649,6844085,6845630,6847102,6848579,6850157,6851641,6853071,6854313,6855597,6856937,6858315,6859666,6861089,6862490,6863904,6865241,6866559,6867941,6869313,6870686,6871975,6873305,6874622,6875908,6877313,6878829,6880366,6881992,6883400,6884878,6886267,6887629,6888826,6890027,6891254,6892434,6893586,6894654,6895688,6896661,6897618,6898535,6899260,6899916,6900394,6901111,6902763,6904276,6906093,6907384,6909010,6910850,6912066,6913990,6915520,6917068,6918462,6919352,6921164,6922256,6923868,6925568,6926817,6928601,6929825,6931463,6933237,6934833,6936336,6937959,6939644,6941273,6942858,6944430,6946261,6947864,6949502,6951109,6952594,6954369,6956049,6957559,6958982,6960448,6961823,6963344,6964929,6966934,6968681,6970456,6971997,6973457,6974863,6976263,6977802,6979480,6981197,6982966,6984688,6986474,6988268,6990316,6992364,6994412,6996460,6998508,7000556,7002604,7004652,7006700,7008748,7010805,7012853,7014901,7016958,7019006,7021054,7023102,7025150,7027198,7029246,7031231,7033279,7035258,7037306,7039288,7041250,7043221,7045269,7047325,7049373,7051421,7053398,7054810,7056380,7057393,7059441,7061489,7063537,7065585,7067633,7069681,7071729,7073777,7075825,7077873,7079921,7081969,7084017,7086065,7088113,7090161,7092209,7094257,7096305,7098353,7100401,7102449,7104497,7106545,7108593,7110641,7112689,7114737,7116785,7118833,7120881,7122929,7124977,7127025,7129073,7131121,7133169,7135217,7137265,7139313,7141361,7143409,7145457,7147505,7149553,7151601,7153649,7155697,7157745,7159793,7161841,7163889,7165937,7167985,7170033,7172081,7174129,7176177,7178225,7180273,7182321,7184369,7186417,7188465,7190513,7192561,7194609,7196657,7198705,7200753,7202801,7204849,7206897,7208945,7210993,7213041,7215089,7217137,7219185,7221233,7223281,7225329,7227377,7229425,7231473,7233521,7235569,7237617,7239665,7241713,7243761,7245809,7247857,7249905,7251953,7254001,7256049,7258097,7260145,7262193,7264241,7266289,7268337,7270385,7272433,7274481,7276529,7278577,7280625,7282673,7284721,7286769,7288817,7290865,7292913,7294961,7297009,7299057,7301105,7303153,7305201,7307249,7309297,7311345,7313393,7315441,7317489,7319537,7321585,7323633,7325681,7327729,7329777,7331825,7333873,7335921,7337969,7340017,7342065,7344113,7346161,7348209,7350257,7352305,7354353,7356401,7358449,7360497,7362545,7364593,7366641,7368689,7370737,7372785,7374833,7376881,7378929,7380977,7383025,7385073,7387121,7389169,7391217,7393265,7395313,7397361,7399409,7401457,7403505,7405553,7407601,7409649,7411697,7413745,7415793,7417841,7419889,7421937,7423985,7426033,7428081,7430129,7432177,7434225,7436273,7438321,7440369,7442417,7444465,7446513,7448561,7450609,7452657,7454705,7456753,7458801,7460849,7462897,7464945,7466993,7469041,7471089,7473137,7475185,7477233,7479281,7481329,7483377,7485425,7487473,7489521,7491569,7493617,7495665,7497713,7499761,7501809,7503857,7505905,7507953,7510001,7512049,7514097,7516145,7518193,7520241,7522289,7524337,7526385,7528433,7530481,7532529,7534577,7536625,7538673,7540721,7542769,7544817,7546865,7548913,7550961,7553009,7555057,7557105,7559153,7561201,7563249,7565297,7567345,7569393,7571441,7573489,7575537,7577585,7579633,7581681,7583729,7585777,7587825,7589873,7591921,7593969,7596017,7598065,7600113,7602161,7604209,7606257,7608305,7610353,7612401,7614449,7616497,7618545,7620593,7622641,7624689,7626737,7628785,7630833,7632881,7634929,7636977,7639025,7641073,7643121,7645169,7647217,7649265,7651313,7653361,7655409,7657457,7659505,7661553,7663601,7665649,7667697,7669745,7671793,7673841,7675889,7677937,7679985,7682033,7684081,7686129,7688177,7690225,7692273,7694321,7696369,7698417,7700465,7702513,7704561,7706609,7708657,7710705,7712753,7714801,7716849,7718897,7720945,7722993,7725041,7727089,7729137,7731185,7733233,7735281,7737329,7739377,7741425,7743473,7745521,7747569,7749617,7751665,7753713,7755761,7757809,7759857,7761905,7763953,7766001,7768049,7770097,7772145,7774193,7776241,7778289,7780337,7782385,7784433,7786481,7788529,7790577,7792625,7794673,7796721,7798769,7800817,7802865,7804913,7806961,7809009,7811057,7813105,7815153,7817201,7819249,7821297,7823345,7825393,7827441,7829489,7831537,7833585,7835633,7837681,7839729,7841777,7843825,7845873,7847921,7849969,7852017,7854065,7856113,7858161,7860209,7862257,7864305,7866353,7868401,7870449,7872497,7874545,7876593,7878641,7880689,7882737,7884785,7886833,7888881,7890929,7892977,7895025,7897073,7899121,7901169,7903217,7905265,7907313,7909361,7911409,7913457,7915505,7917553,7919601,7921649,7923697,7925745,7927793,7929841,7931889,7933937,7935985,7938033,7940081,7942129,7944177,7946225,7948273,7950321,7952369,7954417,7956465,7958513,7960561,7962609,7964657,7966705,7968753,7970801,7972849,7974897,7976945,7978993,7981041,7983089,7985137,7987185,7989233,7991281,7993329,7995163,7996904,7998701,8000475,8002249,8004053,8005823,8007594,8009364,8011136,8012883,8014624,8016339,8018048,8019693,8021348,8022992,8024619,8026265,8027944,8029587,8031165,8032799,8034525,8036254,8037939,8039665,8041405,8043150,8044934,8046669,8048428,8050175,8051906,8053570,8055190,8056894,8058547,8060241,8061901,8063552,8065229,8066946,8068686,8070410,8072174,8073889,8075631,8077411,8079184,8080936,8082691,8084432,8086216,8087977,8089729,8091502,8093480,8095177,8096605,8098096,8099597,8101147,8102594,8104124,8105633,8107056,8108518,8110111,8111749,8113176,8114711,8116388,8118098,8119762,8121534,8123310,8124942,8126672,8128279,8129860,8131407,8132917,8134514,8136122,8137703,8139317,8140930,8142548,8144138,8145684,8147247,8148857,8150500,8152088,8153728,8155295,8156869,8158442,8160084,8161715,8163285,8164702,8165856,8167265,8168768,8170246,8171610,8173096,8174609,8176199,8177809,8179346,8180734,8182205,8183968,8185868,8187115,8188337,8189574,8190815,8192042,8193330,8194574,8195845,8197104,8198381,8199675,8201237,8202533,8203825,8205099,8206420,8207749,8209071,8210380,8211612,8212856,8214138,8215433,8216667,8217915,8219151,8220398,8221667,8222911,8224121,8225346,8226528,8227761,8228988,8230188,8231423,8232658,8233896,8235154,8236390,8237645,8238914,8240204,8241502,8242959,8244332,8245623,8246904,8248203,8249512,8250810,8252114,8253341,8254623,8255889,8257140,8258495,8260543,8262142,8263770,8265522,8267163,8268777,8270406,8272143,8273907,8275713,8277472,8279182,8280898,8282260,8283472,8284674,8285994,8287625,8289243,8290902,8292680,8294456,8296197,8297911,8299620,8301374,8303108,8304765,8306505,8308175,8309958,8311704,8313415,8315161,8316917,8318640,8320419,8322156,8323947,8325621,8327192,8328784,8330271,8331564,8332908,8334198,8335709,8337251,8338811,8340448,8342062,8343674,8345352,8346849,8348364,8350013,8351596,8353223,8354540,8355361,8356892,8358614,8360044,8361807,8362989,8363612,8364212,8364840,8365452,8366113,8366706,8367282,8367902,8368530,8369168,8369823,8371222,8371715,8372251,8372890,8373449,8373923,8374307,8374714,8375621,8377245,8378928,8380113,8381151,8382362,8383420,8384672,8386246,8387671,8388633,8389781,8391402,8392890,8393936,8394980,8396322,8396703,8397156,8397638,8398113,8398630,8399081,8399601,8399939,8400297,8400555,8400852,8401179,8401825,8403447,8404421,8405583,8406497,8407424,8408646,8409713,8410682,8411921,8413170,8413944,8415034,8415876,8416784,8417931,8419052,8420151,8421472,8422539,8423603,8424400,8425409,8426671,8427707,8428947,8429787,8430792,8431623,8432716,8433586,8434593,8435718,8436860,8437782,8438871,8439929,8441071,8442181,8443295,8444809,8446691,8448125,8449785,8450785,8452833,8454881,8456929,8458977,8461025,8463073,8465121,8467169,8469217,8471265,8473313,8475361,8477409,8479457,8481505,8483553,8485601,8487649,8489697,8491754,8493802,8495850,8497898,8499946,8501994,8504051,8506099,8508156,8510204,8512252,8514300,8516348,8518396,8520444,8522492,8524540,8526588,8528636,8530684,8532732,8534780,8536828,8538876,8540924,8542972,8545020,8547068,8549116,8551164,8553212,8555260,8557308,8559356,8561404,8563452,8565500,8567548,8569596,8571644,8573692,8575740,8577788,8579836,8581884,8583932,8585970,8588018,8590066,8592114,8594162,8596210,8598258,8600306,8602354,8604402,8606450,8608498,8610546,8612594,8614642,8616690,8618738,8620786,8622834,8624882,8626930,8628978,8631026,8633074,8635122,8637170,8639218,8641266,8643314,8645362,8647410,8649458,8651506,8653554,8655602,8657650,8659698,8661746,8663794,8665842,8667890,8669938,8671986,8674034,8676082,8678139,8679535,8680268,8681024,8681932,8682878,8683924,8685048,8686120,8687244,8688367,8689461,8690419,8691234,8691976,8693006,8694343,8695647,8697075,8698512,8700042,8701528,8703052,8704387,8705866,8707420,8709036,8710580,8712089,8713673,8715345,8717056,8718721,8720259,8721757,8723309,8724871,8726352,8727842,8729287,8730566,8731864,8733077,8734164,8735089,8736083,8737151,8738253,8739308,8740475,8741716,8742963,8744046,8745037,8745883,8746625,8747436,8748222,8749434,8751343,8752812,8754227,8755715,8757284,8758718,8760219,8761776,8763228,8764693,8766240,8767877,8769366,8770847,8772499,8774167,8775823,8777558,8779349,8781016,8782726,8784413,8785972,8787549,8789038,8790617,8792229,8793823,8795395,8797015,8798641,8800231,8801780,8803343,8804974,8806587,8808203,8809823,8811419,8812973,8814538,8816147,8817797,8819411,8820913,8822100,8823424,8824912,8826390,8827763,8829168,8830648,8832234,8833844,8835453,8836896,8838302,8839876,8841924,8842448,8843061,8843698,8844265,8844949,8845690,8846412,8847282,8848279,8849263,8850303,8851282,8852513,8853806,8855131,8856434,8857730,8859076,8860490,8861838,8863328,8864705,8866137,8867548,8869056,8870598,8872011,8873450,8874894,8876130,8877122,8878147,8879027,8880297,8881615,8882850,8884057,8885116,8886143,8887073,8888079,8889133,8889943,8890907,8891928,8892754,8893443,8894284,8895194,8896016,8896450,8897169,8897872,8898565,8899281,8899888,8900488,8902293,8903904,8905405,8906909,8908529,8910142,8911728,8913331,8914951,8916640,8918252,8919863,8921541,8923174,8924818,8926448,8928090,8929703,8931330,8933008,8934725,8936396,8938093,8939866,8941636,8943373,8945035,8946779,8948559,8950344,8952120,8953948,8955839,8957762,8959633,8961524,8963393,8965227,8967007,8968825,8970622,8972416,8974243,8976007,8977828,8979615,8981407,8983053,8984580,8986195,8987838,8989428,8990941,8992365,8993926,8995502,8997163,8998810,9000524,9002059,9003572,9005056,9006572,9008107,9009619,9011152,9012441,9013175,9013894,9014458,9015113,9015849,9016601,9017264,9017888,9018470,9019049,9019708,9020377,9021093,9021725,9022455,9023213,9023894,9024626,9025433,9026199,9026938,9027507,9028029,9028528,9030431,9032474,9034241,9035986,9037712,9039380,9041073,9042779,9044496,9046222,9047913,9049607,9051351,9053387,9055221,9056970,9058667,9060346,9062104,9063840,9065594,9066927,9067916,9068880,9070672,9072309,9073886,9075810,9077428,9078911,9080360,9081852,9083329,9084786,9086268,9087759,9089235,9090732,9091349,9091952,9092501,9093135,9093802,9094266,9094811,9095355,9096007,9096568,9097154,9097747,9098356,9098862,9099229,9099623,9100149,9100618,9100808,9101282,9101863,9102229,9102545,9103058,9103256,9103839,9104509,9106492,9108398,9110053,9111706,9113365,9115053,9116718,9118384,9120056,9121747,9123430,9125125,9126806,9128558,9130603,9132252,9133949,9135617,9137369,9139122,9140801,9142514,9143950,9144616,9145417,9146278,9148185,9149961,9151658,9153337,9154945,9156749,9158460,9159979,9161450,9162962,9164471,9165959,9167457,9168968,9170464,9171957,9173457,9174970,9176457,9177939,9179448,9180921,9182427,9183917,9185416,9186897,9188385,9189304,9189727,9190185,9190697,9191348,9191995,9192493,9193184,9193789,9194250,9194630,9195126,9195668,9196135,9196540,9196901,9197357,9197917,9198522,9199124,9199766,9200483,9201089,9201699,9202386,9202979,9203509,9204121,9204581,9204962,9205392,9206032,9206385,9206835,9207215,9207771,9208235,9208605,9209246,9209636,9210139,9210527,9211132,9211671,9212259,9212909,9213258,9213739,9214232,9214670,9215160,9215681,9215933,9216417,9216934,9217352,9217824,9218152,9218435,9218866,9220283,9222259,9224285,9226310,9228304,9230346,9232195,9233894,9235587,9237273,9238960,9240668,9242367,9244077,9245750,9247435,9249117,9250825,9252508,9254193,9255873,9257565,9259273,9260961,9262688,9264413,9266113,9267820,9269496,9271213,9272884,9274598,9276274,9278076,9280124,9282172,9284146,9285819,9287471,9289144,9290844,9292602,9294346,9295994,9297629,9299372,9301128,9302823,9304494,9306181,9307932,9309671,9311353,9313014,9314656,9316356,9317975,9319116,9320018,9320925,9321716,9322534,9323223,9324215,9325304,9326313,9327444,9328640,9329811,9330832,9331872,9332924,9333919,9334816,9335684,9336900,9337440,9339369,9341355,9343288,9345093,9346728,9348239,9349765,9351239,9352738,9354257,9355763,9357247,9358698,9360226,9361706,9363193,9364023,9364606,9364908,9365371,9365808,9366218,9366740,9367095,9367632,9368261,9368858,9369353,9369896,9370510,9371044,9371347,9371690,9371820,9372035,9372554,9373215,9373743,9374259,9374636,9375195,9375489,9376007,9376546,9376670,9377040,9378129,9380164,9382199,9383939,9385652,9387324,9389033,9390727,9392428,9394136,9395815,9397499,9399257,9400989,9402673,9404354,9406304,9408316,9410036,9411719,9413402,9415099,9416835,9418556,9420255,9422108,9423817,9425442,9426606,9427536,9429083,9430317,9432186,9434010,9435431,9437060,9438542,9440030,9441523,9443010,9444497,9445987,9447478,9448938,9450411,9451212,9451409,9451655,9451762,9452209,9452734,9452976,9453203,9453521,9453940,9454156,9454619,9454976,9455410,9455551,9455657,9455848,9456161,9456505,9456890,9457345,9457723,9457949,9458277,9458796,9459291,9459728,9459978,9460888,9462887,9464930,9466728,9468435,9470128,9471821,9473506,9475187,9476875,9478549,9480226,9481926,9483645,9485352,9487098,9489146,9491077,9492868,9494740,9496451,9498182,9499874,9501577,9503383,9505238,9507079,9508840,9509508,9510041,9510860,9511799,9512720,9513788,9515460,9517118,9518885,9520443,9521947,9523439,9524938,9526434,9527914,9529164,9529602,9529950,9530270,9530642,9531139,9531292,9531677,9532150,9532601,9532982,9533274,9533766,9534059,9534341,9534656,9535070,9535767,9537732,9539611,9541303,9543004,9544675,9546345,9548044,9549724,9551429,9553279,9555207,9556959,9558667,9560334,9562062,9563890,9565720,9566985,9567853,9569428,9570745,9572435,9574027,9575525,9577016,9578505,9579322,9579932,9580353,9580839,9581363,9581844,9582413,9582902,9583400,9583712,9584023,9584448,9586318,9588033,9589685,9591341,9592999,9594673,9596544,9598207,9599912,9601545,9603256,9604075,9605863,9607510,9609046,9610547,9612021,9613537,9615042,9616531,9618030,9619530,9621014,9622493,9624015,9625510,9627009,9628516,9630012,9631513,9633012,9633802,9634306,9634782,9635142,9635452,9635913,9636376,9636816,9637153,9637525,9638038,9638560,9638995,9639402,9639806,9640176,9640654,9641114,9641512,9641895,9642121,9642291,9642603,9642921,9643242,9643456,9643646,9643917,9644283,9644594,9644807,9645167,9645484,9645836,9646092,9646552,9646873,9647189,9647578,9647902,9648289,9648729,9649178,9649480,9649906,9650138,9650411,9650793,9651093,9651489,9651994,9652438,9652844,9654585,9656554,9658476,9660437,9662476,9664127,9665793,9667457,9669117,9670799,9672498,9674174,9675857,9677541,9679270,9680951,9682637,9684307,9685983,9687660,9689321,9690996,9692665,9694349,9696002,9697679,9699369,9701049,9702821,9704869,9706917,9708645,9710266,9711897,9713540,9715182,9716787,9718617,9720251,9721987,9723675,9725379,9727031,9728613,9730258,9731919,9733623,9735248,9736708,9737261,9737897,9738453,9739105,9739662,9740663,9741859,9743438,9744589,9745754,9746756,9747932,9749504,9750891,9752328,9753810,9755194,9756499,9758350,9760180,9762002,9763823,9765467,9767053,9768536,9769992,9771467,9772955,9774462,9775944,9777450,9778941,9780437,9781938,9783425,9784014,9784545,9785103,9785778,9786365,9786961,9787352,9787881,9788177,9788450,9788860,9789227,9789607,9790074,9790662,9791128,9791536,9791937,9792471,9793018,9793652,9794286,9794848,9795275,9795761,9796153,9796434,9796942,9797600,9798272,9798958,9799469,9799734,9800179,9800619,9801038,9801269,9801889,9803885,9805862,9807891,9809622,9811332,9813018,9814710,9816416,9818108,9819774,9821472,9823189,9824884,9826566,9828313,9830029,9831737,9833446,9835149,9837060,9839108,9841043,9842815,9844559,9846293,9848096,9849895,9851621,9853451,9855162,9856907,9858738,9860495,9862222,9864028,9865003,9865907,9866792,9868138,9869748,9871269,9872948,9874668,9876526,9878161,9879721,9881378,9883032,9884516,9886002,9887510,9888997,9890484,9891984,9893481,9894959,9896445,9897944,9899442,9900940,9902421,9903904,9905384,9906846,9908321,9909797,9911299,9912813,9914309,9915083,9915703,9916293,9916947,9917458,9917992,9918519,9919156,9919757,9920270,9920860,9921245,9921711,9922220,9922767,9923287,9923779,9924123,9924690,9925139,9925761,9926267,9926835,9927429,9927890,9928303,9928729,9929266,9929745,9930368,9930751,9931147,9931637,9932088,9932455,9933057,9933341,9933609,9934188,9934467,9935014,9935503,9936031,9936506,9936677,9937100,9937602,9937929,9938250,9938756,9938903,9939194,9939601,9940049,9940479,9941002,9941391,9941660,9942135,9942675,9943121,9943270,9943671,9944111,9944582,9944936,9945125,9945565,9946201,9946644,9947055,9947426,9947914,9948322,9948993,9949598,9951112,9953160,9955208,9957251,9959307,9961355,9963403,9965213,9966949,9968691,9970440,9972205,9973987,9975732,9977453,9979181,9980892,9982628,9984362,9986091,9987790,9989544,9991302,9993053,9994812,9996568,9998316,10000062,10001823,10003560,10005299,10007013,10008772,10010531,10012307,10014074,10015816,10017567,10019341,10021102,10022822,10024563,10026592,10028640,10030688,10032736,10034762,10036548,10038340,10040132,10041964,10043845,10045683,10047404,10049225,10051036,10052832,10054584,10056324,10058151,10059980,10061787,10063596,10065391,10067222,10069057,10070943,10072762,10074452,10076281,10078149,10079990,10081849,10083674,10085531,10087388,10089210,10091100,10092904,10094616,10095456,10096299,10097145,10097884,10098731,10099925,10101292,10102836,10103875,10105205,10106581,10108022,10108985,10109845,10110705,10111832,10113172,10114439,10115749,10117521,10119488,10121405,10123196,10124893,10126425,10128006,10129584,10131151,10132734,10134240,10135716,10137212,10138733,10140258,10141755,10143207,10144660,10146156,10147655,10149138,10150613,10152111,10153621,10155147,10156619,10158106,10159616,10161102,10162597,10163853,10164391,10164989,10165568,10166017,10166572,10166958,10167393,10167968,10168597,10169242,10169820,10170487,10171186,10171779,10172229,10172771,10173318,10173915,10174410,10174715,10175197,10175670,10176222,10176765,10177276,10177763,10178229,10178621,10179086,10179722,10179961,10180187,10180461,10180873,10181368,10181642,10182021,10182385,10182763,10183199,10183727,10184150,10184389,10184802,10185201,10185645,10186066,10186323,10186633,10186944,10187341,10187838,10188019,10188242,10188402,10188765,10188904,10189419,10189913,10190459,10190925,10191472,10191935,10192469,10193893,10195917,10197824,10199796,10201775,10203761,10205449,10207104,10208795,10210476,10212139,10213818,10215540,10217240,10218928,10220611,10222270,10223915,10225583,10227285,10228989,10230667,10232368,10234074,10235759,10237449,10239117,10240810,10242492,10244164,10245852,10247507,10249176,10250841,10252804,10254852,10256900,10258562,10260247,10261956,10263688,10265410,10267240,10268909,10270608,10272264,10273999,10275769,10277510,10279235,10280942,10282698,10284420,10286194,10287847,10289532,10291303,10293030,10293936,10294808,10295358,10295983,10296625,10297294,10298125,10299200,10300285,10300932,10301675,10302263,10302964,10303671,10304432,10304996,10305652,10306447,10307088,10307381,10308054,10308764,10309710,10310469,10311019,10311530,10312042,10313603,10314364,10315583,10317243,10318977,10320776,10322526,10324269,10325922,10327524,10329099,10330698,10332298,10333765,10335242,10336731,10338209,10339689,10341157,10342639,10344109,10345588,10347040,10348536,10350002,10351480,10352939,10354415,10355895,10357372,10358841,10360310,10361777,10363262,10364751,10366232,10367715,10369206,10370696,10372169,10373642,10375081,10376560,10378016,10379468,10380930,10382382,10383854,10385341,10386796,10388254,10389731,10391173,10392666,10394156,10395647,10397109,10398574,10400039,10401521,10402971,10404439,10405865,10407282,10408697,10410156,10411633,10413133,10414581,10416036,10417525,10418985,10420456,10421927,10423414,10424896,10426379,10427847,10429319,10430770,10432246,10433719,10435194,10436674,10438150,10439610,10441028,10441878,10442448,10442812,10443440,10443966,10444442,10444800,10445260,10445787,10446187,10446440,10446905,10447525,10447990,10448584,10448963,10449484,10450069,10450701,10451205,10451871,10452413,10452943,10453514,10454016,10454413,10454976,10455506,10456115,10456642,10457028,10457515,10458025,10458561,10459129,10459503,10460000,10460497,10460973,10461521,10462148,10462764,10463364,10463971,10464407,10464688,10464998,10465620,10466050,10466582,10467131,10467770,10468305,10468839,10469388,10469859,10470430,10470877,10471266,10471691,10472261,10472682,10473148,10473687,10474220,10474661,10475058,10475555,10475969,10476512,10477017,10477503,10477835,10478393,10478973,10479537,10480119,10480777,10481351,10481957,10482447,10483057,10483548,10484135,10484759,10485086,10485434,10485809,10486239,10486731,10487238,10487783,10488210,10488502,10488868,10489431,10489639,10490099,10490533,10491056,10491591,10491766,10492359,10492931,10493420,10493966,10494452,10494883,10495224,10495540,10496074,10496260,10496470,10496734,10497237,10497806,10498388,10498842,10499141,10499600,10499976,10500304,10500605,10500942,10501284,10501820,10502248,10502707,10503226,10503722,10504247,10504807,10505402,10505852,10506366,10506933,10507414,10507905,10508361,10508717,10509248,10509872,10510344,10510896,10511432,10511919,10512374,10512829,10513089,10513368,10513971,10514353,10514864,10515422,10515959,10516489,10516992,10517342,10517675,10518209,10518638,10519140,10519579,10520041,10520465,10520928,10521346,10521938,10522590,10523107,10523588,10524061,10524535,10525013,10525486,10526152,10526721,10527165,10527553,10527991,10528466,10528943,10529381,10530032,10530467,10530797,10531178,10531544,10531791,10532096,10532522,10532884,10533197,10533678,10533902,10534349,10534837,10535439,10536026,10536367,10536790,10537226,10537688,10538190,10538731,10539173,10539685,10540257,10540669,10541242,10541741,10542200,10542681,10543133,10543298,10543679,10544166,10544656,10545266,10545807,10546242,10546679,10547224,10547760,10548181,10548649,10549251,10549811,10550252,10550709,10551196,10551776,10552325,10552793,10553234,10553772,10554114,10554211,10554572,10555182,10555757,10556246,10556770,10557261,10557819,10558350,10558859,10559398,10559621,10561327,10563269,10565207,10567125,10569053,10570972,10572962,10575007,10576951,10578968,10580919,10582899,10584881,10586799,10588790,10590770,10592728,10594665,10596717,10598772,10600421,10602076,10603707,10605354,10607045,10608735,10610458,10612166,10613864,10615533,10617228,10618908,10620599,10622274,10623953,10625634,10627306,10628980,10630668,10632350,10634023,10635726,10637402,10639089,10640781,10642477,10644163,10645844,10647517,10649187,10650874,10652580,10654263,10655950,10657630,10659293,10660994,10662655,10664350,10666033,10667713,10669366,10671014,10672670,10674352,10676040,10677715,10679380,10681056,10682711,10684346,10686029,10687719,10689385,10691057,10692755,10694453,10696149,10697832,10699528,10701213,10702876,10704561,10706233,10707867,10709575,10711280,10712996,10714656,10716319,10717969,10719627,10721321,10722989,10724640,10726314,10727981,10729631,10731298,10732974,10734651,10736323,10738004,10739661,10741326,10742988,10744719,10746419,10748108,10749785,10751456,10753165,10754854,10756525,10758199,10759926,10761612,10763309,10764990,10766669,10768333,10769993,10771668,10773385,10775063,10776717,10778436,10780484,10782532,10784580,10786628,10788676,10790724,10792772,10794820,10796868,10798916,10800911,10802595,10804148,10805819,10807557,10809339,10811085,10812845,10814511,10816234,10817947,10819633,10821268,10822963,10824691,10826376,10828096,10829818,10831540,10833212,10834937,10836659,10838392,10840148,10841813,10843481,10845147,10846858,10848580,10850257,10851922,10853527,10855179,10856842,10858549,10860278,10861871,10863594,10865323,10867034,10868763,10870525,10872250,10873998,10875673,10877395,10879034,10880793,10882535,10884241,10885897,10887564,10889314,10891084,10892647,10894120,10895690,10897216,10898950,10900665,10902328,10904103,10905913,10907670,10909386,10911110,10912779,10914469,10916286,10918005,10919584,10921307,10923079,10924809,10926619,10928348,10930039,10931457,10932304,10933136,10933907,10934725,10935488,10936281,10937052,10937669,10938323,10938909,10939429,10940141,10940698,10941197,10941486,10942068,10942677,10943419,10944194,10945036,10945576,10946277,10946922,10947671,10948462,10949298,10949988,10950717,10951518,10952284,10952872,10953869,10954811,10955425,10956221,10957136,10957898,10958642,10959338,10959957,10960674,10961232,10961928,10962688,10963454,10964315,10965102,10965780,10966518,10967248,10967907,10968335,10968671,10969248,10970034,10970687,10971395,10971959,10972435,10973309,10973922,10974825,10975799,10976677,10977319,10977797,10978297,10978908,10979492,10980252,10980943,10981584,10982260,10982713,10983285,10983849,10984466,10985102,10985993,10986657,10987398,10988372,10988959,10989432,10990241,10990985,10991642,10992027,10992854,10993592,10994541,10995325,10996139,10996774,10997403,10997986,10998631,10999515,11000218,11000799,11001437,11002175,11002822,11003604,11004295,11004819,11005345,11005797,11006213,11007141,11008000,11008911,11009739,11010504,11011138,11011957,11012427,11012950,11013964,11014759,11015422,11016088,11016877,11017531,11018146,11018850,11019662,11020358,11020938,11021578,11022233,11022827,11023436,11024188,11024839,11025246,11025551,11025852,11026180,11026461,11026781,11027218,11027528,11027812,11028138,11028448,11028725,11029092,11029531,11030066,11030665,11031316,11031610,11032168,11032735,11033365,11034093,11034721,11035325,11035914,11036741,11037407,11038045,11038737,11039663,11040410,11040855,11041137,11041624,11042110,11042392,11042844,11043237,11043461,11043957,11044396,11044681,11044962,11045270,11045449,11045896,11046497,11046869,11047531,11048185,11048907,11049363,11049653,11049848,11050094,11050374,11050549,11050688,11050909,11051187,11052188,11053957,11055331,11057171,11059076,11060978,11062929,11064854,11066749,11068716,11070663,11072589,11074537,11076474,11078402,11080291,11082070,11083975,11085860,11087677,11089441,11090933,11092401,11093875,11095365,11096848,11098335,11099825,11101309,11102810,11104307,11105061,11105582,11106019,11106582,11106996,11107407,11107945,11108434,11108826,11109167,11109547,11109955,11110504,11111037,11111456,11112034,11112447,11112685,11113148,11113438,11113856,11114229,11114583,11114923,11115385,11115650,11115982,11116402,11116593,11116986,11117375,11117877,11119427,11121373,11123406,11125132,11126825,11128532,11130236,11131941,11133676,11135359,11137067,11138769,11140463,11142143,11143826,11145503,11147171,11148846,11150867,11152894,11154589,11156349,11158066,11159811,11161607,11163335,11165102,11166875,11168623,11170358,11172052,11173658,11174467,11175237,11176025,11177525,11179034,11180383,11181557,11182919,11184610,11186309,11187981,11189515,11190979,11192482,11193967,11195400,11196894,11198376,11199875,11201368,11202864,11203696,11203879,11204386,11204836,11205227,11205779,11206430,11206970,11207532,11208166,11208712,11209169,11209621,11210004,11210372,11210604,11211126,11211525,11211791,11212270,11212567,11212895,11213470,11213989,11214248,11214666,11215067,11215271,11215744,11217759,11219802,11221699,11223381,11225074,11226770,11228489,11230212,11231891,11233589,11235283,11237000,11238694,11240399,11242095,11243824,11245872,11247764,11249386,11251136,11252963,11254787,11256587,11258338,11260079,11261918,11263690,11265450,11267252,11268681,11269245,11270064,11271159,11272039,11273253,11274738,11276132,11277764,11279493,11281181,11282734,11284356,11285849,11287347,11288828,11290322,11291793,11293292,11294790,11296296,11297773,11299236,11300709,11302179,11303673,11305137,11306617,11308089,11309585,11311067,11312543,11314044,11315509,11316978,11318455,11319932,11321423,11322889,11324375,11325867,11327345,11328834,11330308,11331801,11333297,11334795,11336267,11337763,11338954,11339477,11340011,11340558,11341224,11341968,11342581,11343132,11343719,11344346,11344846,11345488,11346101,11346737,11347333,11347971,11348585,11349206,11349766,11350296,11350938,11351677,11352253,11352865,11353447,11354059,11354715,11355306,11355916,11356514,11357108,11357460,11358052,11358603,11359257,11359773,11360314,11360898,11361413,11361927,11362512,11363014,11363550,11364151,11364729,11365216,11365636,11365906,11366123,11366605,11367046,11367463,11367990,11368413,11368842,11369292,11369988,11370579,11371070,11371320,11371494,11371880,11371997,11372148,11372390,11372976,11373365,11373901,11374465,11374865,11375512,11376086,11376611,11377278,11377848,11378494,11379096,11379576,11380044,11380489,11381057,11381628,11382221,11382756,11383360,11383726,11384113,11384666,11385161,11385633,11386046,11386328,11386562,11387072,11387637,11388356,11388890,11389402,11389770,11390291,11390899,11391475,11392024,11392558,11393238,11393782,11394425,11394908,11395417,11396424,11398426,11400432,11402408,11404403,11406382,11408323,11410275,11412240,11414267,11416069,11417788,11419505,11421227,11422934,11424642,11426354,11428060,11429769,11431475,11433166,11434865,11436539,11438258,11439971,11441670,11443351,11445040,11446717,11448427,11450098,11451750,11453414,11455036,11456719,11458379,11460068,11461751,11463450,11465140,11466827,11468489,11470189,11471873,11473575,11475271,11476969,11478622,11480294,11481989,11483674,11485330,11487000,11488674,11490345,11492008,11493850,11495898,11497946,11499994,11502042,11503832,11505590,11507330,11509053,11510672,11512387,11514105,11515923,11517658,11519469,11521199,11522901,11524605,11526295,11527980,11529666,11531324,11533036,11534750,11536478,11538217,11539892,11541612,11543363,11545143,11546782,11548408,11550082,11551800,11553496,11555229,11556858,11558274,11559198,11560083,11560947,11561743,11562550,11563429,11564255,11565062,11565752,11566712,11567731,11568703,11569472,11570429,11571253,11572414,11573740,11574964,11576068,11577015,11578117,11579345,11580440,11581707,11582802,11584186,11585609,11587048,11588191,11589130,11590431,11591437,11592236,11593018,11593448,11594253,11594845,11595192,11595738,11596729,11597773,11598768,11599841,11601053,11601816,11602588,11603194,11603912,11604980,11606231,11607110,11608095,11609550,11611168,11612993,11614853,11616711,11618572,11620512,11622441,11624359,11626290,11627947,11629495,11630975,11632461,11633952,11635452,11636934,11638424,11639875,11641361,11642853,11644334,11645686,11646189,11646501,11646817,11647369,11647868,11648226,11648655,11649223,11649638,11649847,11650045,11650222,11650498,11650831,11651124,11651569,11651991,11652419,11652876,11653204,11653500,11653905,11654373,11654673,11655074,11655407,11655714,11656090,11656488,11656791,11657102,11657491,11657910,11658174,11660101,11662075,11664095,11665893,11667587,11669258,11670947,11672646,11674328,11676008,11677712,11679420,11681133,11682821,11684519,11686234,11687927,11689603,11691539,11693587,11695274,11696956,11698706,11700442,11702183,11703913,11705724,11707539,11709260,11711009,11712700,11714408,11715422,11716086,11717154,11718678,11719942,11720543,11721425,11722722,11724552,11726384,11728049,11729655,11731142,11732619,11734125,11735600,11737111,11738630,11739701,11740189,11740764,11741339,11741840,11742300,11742790,11743299,11743710,11744122,11744593,11744954,11745244,11745511,11745855,11746275,11746731,11747158,11747438,11747856,11748363,11748526,11748865,11750601,11752584,11754334,11756045,11757761,11759434,11761130,11762832,11764484,11766172,11767870,11769579,11771482,11773416,11775155,11777007,11778741,11780517,11782286,11784000,11785816,11787672,11788515,11789336,11790724,11792442,11793874,11795312,11796859,11798511,11800068,11801541,11802918,11804379,11805856,11807333,11808835,11810312,11811778,11813249,11814737,11816235,11817746,11819232,11820726,11822223,11823710,11824399,11824884,11825344,11825945,11826528,11827004,11827503,11827996,11828433,11829066,11829601,11830104,11830634,11831271,11831608,11831977,11832416,11832809,11833145,11833535,11834159,11834593,11834998,11835435,11835714,11835890,11836337,11836961,11837556,11838130,11838688,11839244,11839658,11840251,11840733,11841004,11841607,11841878,11842508,11843089,11843562,11843987,11844523,11844960,11845517,11846896,11848880,11850922,11852911,11854733,11856438,11858147,11859841,11861546,11863212,11864911,11866583,11868250,11869998,11871680,11873365,11875040,11876739,11878474,11880201,11881919,11883658,11885385,11887107,11888932,11890980,11893037,11894723,11896428,11898124,11899835,11901610,11903250,11904956,11906645,11908262,11909965,11911752,11913550,11915258,11917055,11918828,11920467,11921332,11922152,11923013,11924301,11926034,11927422,11928832,11930361,11931864,11933435,11935048,11936925,11938714,11940353,11941880,11943257,11944781,11946293,11947777,11949244,11950724,11952208,11953691,11955164,11956628,11958104,11959597,11961098,11962567,11964054,11964891,11965402,11966051,11966584,11967079,11967423,11967927,11968519,11969097,11969486,11969878,11970328,11970726,11971201,11971458,11971765,11972281,11972846,11973327,11973827,11974364,11974846,11975398,11975795,11976100,11976344,11976520,11976897,11977429,11977837,11978119,11978261,11978397,11978684,11979019,11979238,11979544,11980010,11980480,11980812,11981344,11981623,11981853,11982205,11982488,11983617,11985579,11987441,11989432,11991330,11993020,11994693,11996387,11998047,11999731,12001435,12003118,12004826,12006490,12008159,12009813,12011527,12013219,12014879,12016565,12018222,12019905,12021592,12023282,12025031,12027079,12029127,12030868,12032571,12034309,12036011,12037751,12039458,12041247,12042920,12044606,12046325,12047955,12049638,12051341,12053054,12054814,12056620,12057283,12058100,12058530,12059223,12060181,12060951,12061770,12062559,12063416,12064242,12064798,12065546,12066902,12068528,12070271,12071932,12073592,12075196,12076803,12078251,12079750,12081259,12082756,12084254,12085771,12087201,12088669,12090174,12091656,12093163,12094684,12096158,12097654,12099155,12100648,12102116,12103561,12105065,12106571,12108082,12109149,12109673,12110291,12110673,12110996,12111494,12111982,12112540,12113062,12113606,12114030,12114393,12114925,12115516,12115696,12116086,12116757,12117262,12117735,12118191,12118610,12119045,12119224,12119389,12119702,12120321,12120836,12121321,12121903,12122431,12122931,12123396,12123785,12124191,12124611,12125134,12125707,12126266,12126549,12126961,12127443,12127790,12128165,12128505,12128655,12128816,12129289,12129841,12130213,12130780,12131249,12131587,12132019,12132450,12132907,12133223,12133568,12133812,12134019,12134411,12134799,12135194,12135624,12136076,12136567,12136782,12137301,12137666,12138147,12138558,12139160,12141186,12143217,12145209,12147213,12149240,12151269,12152962,12154670,12156344,12158012,12159680,12161382,12163039,12164704,12166418,12168108,12169798,12171491,12173169,12174866,12176524,12178204,12179892,12181584,12183295,12184996,12186693,12188365,12190033,12191682,12193404,12195123,12196797,12198481,12200183,12201904,12203606,12205483,12207531,12209579,12211636,12213319,12215062,12216666,12218354,12220074,12221706,12223414,12225206,12226940,12228728,12230401,12232107,12233853,12235543,12237277,12239000,12240716,12242436,12244104,12245815,12247638,12249322,12251035,12252778,12254626,12256173,12256892,12257392,12258028,12258646,12259159,12260024,12260648,12261476,12262031,12262251,12262554,12263327,12264051,12264572,12265055,12265477,12265849,12266211,12266658,12267156,12267426,12267551,12268343,12269685,12270348,12271640,12273229,12274941,12276775,12278498,12280287,12281953,12283339,12284839,12286330,12287836,12289351,12290851,12291385,12291700,12291925,12292151,12292588,12292908,12293101,12293300,12293561,12293784,12294171,12294638,12295076,12295365,12295837,12296309,12297209,12299191,12300975,12302671,12304369,12306086,12307758,12309435,12311110,12312831,12314807,12316574,12318344,12320148,12321865,12323496,12324829,12325634,12326580,12327831,12329436,12331148,12332732,12334314,12335818,12337332,12338832,12340304,12341812,12343307,12344775,12346279,12347761,12349241,12350719,12352207,12353714,12355215,12356683,12358174,12359660,12360815,12361388,12362006,12362646,12363066,12363587,12364106,12364643,12365166,12365690,12366250,12366818,12367270,12367844,12368439,12369008,12369533,12370044,12370441,12371009,12371583,12372150,12372689,12373200,12373795,12374215,12374656,12375168,12375793,12376188,12376663,12377096,12377536,12377985,12378451,12378938,12379352,12379822,12380296,12380779,12381112,12381720,12382146,12382725,12383339,12383834,12384461,12385022,12385434,12385914,12386499,12386973,12387377,12388001,12388471,12388945,12389518,12390115,12390702,12391295,12392113,12394132,12396159,12398205,12400229,12402204,12403909,12405624,12407330,12409050,12410732,12412431,12414140,12415843,12417543,12419225,12420900,12422573,12424270,12425971,12427681,12429367,12431084,12432793,12434477,12436149,12437807,12439454,12441169,12442856,12444583,12446268,12448306,12450354,12452288,12454095,12455807,12457624,12459318,12461009,12462702,12464338,12466116,12467822,12469722,12471478,12473308,12475071,12476724,12478410,12480257,12482052,12483709,12484584,12485316,12486150,12486926,12487610,12489077,12490815,12492097,12493332,12495005,12496768,12498265,12499672,12500597,12502324,12504194,12506046,12507819,12509643,12511329,12512950,12514324,12515859,12517363,12518845,12520342,12521823,12523304,12524791,12526264,12527732,12529242,12530722,12532175,12533667,12535160,12536659,12538179,12539674,12541178,12542660,12544150,12545662,12546470,12546704,12546895,12547094,12547504,12547963,12548481,12548935,12549366,12549875,12550435,12551073,12551514,12551824,12552246,12552637,12553168,12553421,12553920,12554480,12555052,12555415,12555871,12556085,12556309,12556760,12556935,12557348,12557813,12558347,12558885,12559350,12559905,12560289,12560841,12561269,12561523,12562001,12562467,12562834,12563390,12563960,12564500,12565121,12565420,12565631,12566012,12566354,12566877,12567270,12567722,12568253,12568837,12569316,12569975,12570613,12571087,12571610,12572143,12572503,12572874,12573338,12573718,12573865,12574172,12574532,12574961,12575362,12575632,12576611,12578610,12580652,12582668,12584686,12586731,12588466,12590155,12591839,12593553,12595211,12596873,12598540,12600219,12601875,12603570,12605268,12606932,12608614,12610297,12612004,12613711,12615415,12617094,12618774,12620472,12622182,12623880,12625578,12627271,12628996,12630693,12632386,12634080,12635726,12637436,12639394,12641442,12643490,12645430,12647075,12648821,12650592,12652286,12654032,12655643,12657393,12659140,12660825,12662575,12664357,12666155,12667969,12669648,12671373,12673109,12674808,12676515,12678278,12679935,12681592,12683190,12684658,12685398,12686148,12686899,12687697,12688497,12689197,12689829,12690433,12691165,12691883,12692837,12693861,12694907,12695832,12696525,12697362,12698167,12699222,12700275,12701163,12702244,12703221,12704260,12705062,12706051,12706943,12707689,12708102,12708962,12709242,12709502,12710733,12711968,12713607,12715463,12717282,12719125,12720939,12722638,12724149,12725677,12727197,12728707,12730191,12731684,12733169,12734680,12736177,12737666,12739179,12740545,12740958,12741449,12741645,12741909,12742376,12742949,12743354,12743834,12744250,12744748,12745183,12745648,12745927,12746412,12746772,12747164,12747610,12747982,12748354,12748699,12749107,12749562,12749941,12750330,12750754,12750993,12751343,12751551,12751879,12752200,12752608,12753082,12753243,12753531,12753790,12754702,12756698,12758673,12760605,12762280,12763961,12765648,12767332,12768984,12770672,12772346,12774032,12775707,12777369,12779072,12780752,12782448,12784155,12785845,12787737,12789785,12791649,12793426,12795165,12796906,12798619,12800339,12802047,12803719,12805373,12807139,12808877,12810618,12812325,12813885,12814409,12815060,12815756,12816833,12818009,12819064,12819976,12821532,12823429,12825328,12827059,12828582,12830135,12831601,12833106,12834608,12836099,12837603,12839102,12840606,12842098,12843596,12845083,12846574,12848090,12849610,12851111,12852601,12854079,12855572,12857069,12858586,12860079,12861561,12863065,12864563,12866047,12867547,12869072,12870583,12872048,12873559,12875072,12876568,12878033,12879139,12879558,12880113,12880662,12880984,12881540,12882135,12882687,12883309,12883866,12884479,12885011,12885456,12885885,12886449,12886921,12887446,12887919,12888501,12889100,12889732,12890350,12890888,12891418,12891987,12892399,12892902,12893447,12894054,12894667,12894968,12895445,12895914,12896413,12897021,12897462,12897953,12898410,12898899,12899514,12900065,12900436,12901093,12901474,12901897,12902212,12902474,12902860,12903293,12903700,12904004,12904381,12904882,12905086,12905658,12905961,12906498,12907068,12907640,12907939,12908455,12909000,12909593,12910187,12910766,12911274,12911745,12912262,12912775,12913305,12913813,12914294,12914768,12915185,12915470,12916020,12916539,12917008,12917400,12917887,12918296,12918750,12919310,12919597,12920101,12920663,12920974,12921372,12921736,12922056,12922655,12923067,12923463,12923779,12924187,12924557,12925014,12925553,12925866,12926350,12926694,12926896,12927201,12927568,12927968,12928299,12928590,12929034,12929299,12929594,12930004,12930583,12932588,12934614,12936663,12938640,12940622,12942649,12944645,12946663,12948711,12950618,12952302,12953987,12955664,12957337,12959032,12960721,12962396,12964107,12965832,12967510,12969240,12970951,12972679,12974400,12976123,12977860,12979598,12981313,12983023,12984745,12986453,12988141,12989853,12991538,12993231,12994911,12996587,12998266,12999970,13001679,13003384,13005058,13006727,13008394,13010061,13011762,13013474,13015191,13016925,13018679,13020405,13022155,13023827,13025476,13027183,13028873,13030566,13032217,13033901,13035628,13037676,13039724,13041772,13043820,13045868,13047633,13049356,13051001,13052699,13054278,13055960,13057709,13059440,13061149,13062969,13064703,13066474,13068209,13069957,13071636,13073344,13075053,13076781,13078470,13080115,13081813,13083400,13085057,13086792,13088553,13090234,13091921,13093578,13095194,13096866,13098556,13100287,13102078,13103739,13105542,13107209,13108771,13110447,13111768,13112544,13113291,13114114,13114956,13115718,13116279,13117067,13117684,13118297,13119259,13120181,13121043,13122049,13122750,13123153,13123811,13124395,13125227,13126193,13126607,13127370,13127919,13128645,13129387,13130019,13130612,13131236,13131885,13132059,13132652,13133562,13134353,13135180,13136170,13137289,13138266,13139267,13140141,13141061,13141843,13142340,13143174,13144788,13146305,13148189,13149976,13151793,13153677,13155486,13157278,13159172,13160984,13162618,13164242,13165738,13167239,13168740,13170229,13171730,13173218,13174702,13176194,13177676,13179158,13179811,13180226,13180764,13181280,13181665,13182171,13182621,13183111,13183483,13183867,13184194,13184615,13184676,13184801,13185036,13185572,13186093,13186742,13187297,13187811,13188436,13188897,13189203,13189263,13189413,13189877,13190148,13190548,13190830,13191155,13191215,13191385,13192682,13194730,13196778,13198638,13200317,13202002,13203706,13205405,13207118,13208849,13210585,13212276,13213947,13215636,13217344,13219059,13220779,13222663,13224711,13226620,13228465,13230253,13232094,13233843,13235603,13237364,13239151,13240864,13242662,13244490,13246307,13247714,13248504,13249201,13250144,13251036,13251685,13252716,13254013,13254889,13256420,13258029,13259688,13261185,13262744,13264300,13265805,13267277,13268778,13270270,13271777,13273249,13274747,13276231,13277717,13279213,13280711,13282195,13283680,13285060,13285339,13285642,13285919,13286294,13286653,13287105,13287437,13287847,13288175,13288377,13288837,13289346,13289868,13290450,13290970,13291456,13291931,13292221,13292534,13292952,13293308,13293625,13294053,13294474,13294980,13295235,13295640,13295979,13296315,13296760,13297144,13297497,13297953,13298341,13298741,13299204,13299590,13299771,13301644,13303600,13305643,13307531,13309178,13310858,13312529,13314246,13315931,13317629,13319320,13321039,13322757,13324455,13326165,13327834,13329479,13331126,13332792,13334432,13336344,13338392,13340154,13341790,13343517,13345386,13347269,13349116,13350870,13352673,13354538,13356400,13358132,13359803,13361489,13362835,13363443,13364094,13364797,13365477,13365818,13366225,13366573,13366976,13367357,13367691,13368151,13368586,13369778,13371161,13371975,13372299,13373692,13375179,13376693,13378216,13379799,13381568,13383177,13384812,13386446,13387928,13389425,13390953,13392472,13394005,13395529,13397049,13398556,13400065,13401587,13403090,13404590,13406103,13407631,13409127,13410654,13412161,13413671,13415175,13416681,13418206,13419716,13421240,13422732,13424256,13425785,13427300,13428806,13430360,13431889,13433408,13434950,13436473,13437992,13439531,13441036,13442531,13444028,13445532,13447035,13448531,13450016,13451484,13452960,13454458,13455958,13457458,13458408,13458967,13459345,13459964,13460393,13460870,13461506,13462026,13462360,13463060,13463748,13464420,13465144,13465835,13466525,13467223,13467875,13468520,13469156,13469799,13470521,13471257,13471813,13472476,13473083,13473488,13474054,13474624,13475228,13475778,13476487,13477134,13477780,13478420,13479065,13479706,13480309,13480922,13481439,13482073,13482618,13483124,13483838,13484421,13484934,13485585,13486093,13486619,13487166,13487696,13488304,13488893,13489539,13490102,13490706,13491277,13491841,13492369,13492913,13493439,13494006,13494665,13495074,13495494,13496152,13496626,13497210,13497831,13498380,13499040,13499608,13500223,13500841,13501380,13501976,13502449,13503102,13503776,13504299,13504819,13505353,13505990,13506406,13506981,13507519,13508026,13508703,13509279,13509705,13510197,13510857,13511456,13512067,13512744,13513354,13514045,13514770,13515430,13516105,13516745,13517474,13518160,13518885,13519463,13519986,13520666,13521291,13521940,13522556,13523056,13523573,13524208,13524810,13525365,13526011,13526640,13527172,13527783,13528367,13528970,13529564,13530142,13530725,13531203,13531621,13532040,13532591,13533183,13533729,13534259,13534846,13535381,13535937,13536408,13536881,13537525,13538065,13538638,13539079,13539548,13540021,13540599,13541075,13541594,13542160,13542460,13542896,13543492,13543994,13544509,13544996,13545403,13546031,13548062,13550117,13552165,13554215,13556240,13558281,13560338,13562394,13564449,13566506,13568556,13570596,13572651,13574410,13576127,13577805,13579487,13581200,13582921,13584641,13586322,13588019,13589721,13591423,13593139,13594829,13596536,13598239,13599928,13601649,13603388,13605113,13606841,13608581,13610299,13612053,13613788,13615542,13617300,13619042,13620806,13622534,13624251,13625954,13627669,13629371,13631070,13632780,13634432,13636099,13637817,13639539,13641224,13642925,13644629,13646329,13648028,13649755,13651496,13653238,13654996,13656759,13658517,13660257,13661972,13663681,13665421,13667157,13668897,13670632,13672376,13674132,13675880,13677606,13679368,13681103,13682850,13684573,13686317,13688252,13690300,13692348,13694396,13696444,13698492,13700540,13702588,13704343,13706043,13707665,13709398,13711163,13712828,13714532,13716268,13718013,13719728,13721486,13723273,13725111,13726928,13728741,13730580,13732354,13734186,13735940,13737741,13739500,13741304,13743014,13744670,13746329,13748071,13749796,13751416,13752999,13754751,13756484,13758169,13759915,13761578,13763322,13765092,13766932,13768736,13770556,13772400,13774229,13775888,13777616,13779227,13780869,13782587,13784414,13786255,13788033,13789856,13791718,13793539,13795334,13796888,13797731,13798630,13799573,13800480,13801472,13802223,13802992,13803842,13804810,13805818,13807028,13808391,13809697,13810841,13812080,13813257,13814483,13815751,13817048,13818257,13819446,13820707,13821671,13822392,13823137,13824043,13824951,13825853,13826913,13828110,13829372,13829931,13830392,13831617,13833238,13834734,13836672,13838493,13840198,13842096,13843987,13845850,13847666,13849489,13851326,13853164,13855057,13856644,13858217,13859730,13861242,13862721,13864235,13865726,13867222,13868715,13870213,13871706,13872375,13872444,13872696,13872931,13872978,13873161,13873425,13873793,13874056,13874436,13874737,13875057,13875213,13875558,13875866,13876070,13876218,13876307,13876707,13877129,13877628,13877757,13878175,13878698,13879072,13879525,13879795,13879999,13880511,13882465,13884503,13886404,13888083,13889802,13891495,13893204,13894914,13896573,13898259,13899988,13901707,13903414,13905104,13906782,13908453,13910501,13912466,13914239,13916000,13917564,13919377,13921071,13922873,13924631,13926399,13928270,13930091,13931837,13932938,13933500,13935153,13936659,13938325,13939863,13941465,13943059,13944552,13945746,13947233,13948739,13949670,13950137,13950572,13951082,13951629,13952129,13952605,13953689,13955494,13957205,13958872,13960753,13962483,13964229,13965169,13965848,13967091,13968593,13970079,13971569,13973068,13974539,13974884,13975199,13975664,13976067,13976660,13976822,13977000,13977439,13977839,13978298,13978428,13978877,13979353,13980883,13982721,13984390,13986081,13987772,13989453,13991130,13993015,13994719,13996391,13998145,13999864,14001551,14002222,14003578,14005315,14007057,14008647,14010091,14011600,14013070,14014583,14016083,14016565,14017038,14017391,14017734,14018213,14018556,14018982,14019341,14019913,14020306,14020755,14021149,14021613,14022155,14022618,14023138,14025008,14026821,14028490,14030156,14031837,14033515,14035193,14036890,14038764,14040475,14042192,14043917,14045634,14047402,14047982,14048711,14049874,14050760,14051945,14053581,14055304,14057352,14059408,14061455,14063510,14065566,14067047,14068638,14070159,14071429,14072292,14073097,14073899,14074740,14075646,14076330,14078279,14080294,14082289,14084208,14086128,14087150,14087810,14089004,14090188,14091520,14092876,14094271,14095628,14096812,14097764,14098751,14099441,14100568,14101734,14102864,14103967,14104693,14105674,14106597,14107579,14108652,14109695,14110718,14111882,14112964,14114140,14114769,14115441,14116249,14117178,14118019,14118803,14119628,14120347,14121112,14123160,14124977,14126013,14127095,14128123,14129081,14130073,14131190,14132262,14133299,14134287,14135364,14136545,14137449,14138560,14139591,14140515,14141531,14142307,14143217,14143951,14144757,14145625,14147032,14148447,14150008,14151380,14153272,14155329,14157377,14159414,14160969,14162774,14164801,14166849,14168897,14170954,14172685,14174733,14176623,14178334,14180382,14182430,14184478,14186526,14188574,14190622,14192670,14194718,14196749,14198780,14200789,14202806,14204854,14206892,14208883,14210752,14212487,14214274,14216322,14218370,14220418,14222466,14224514,14226562,14228610,14230660,14232708,14234756,14236813,14238847,14240790,14242694,14244515,14246105,14247492,14249484,14251469,14253200,14255035,14257077,14259132,14261180,14263228,14265276,14267332,14269380,14271428,14273476,14275524,14277572,14279620,14281668,14283716,14285762,14287479,14288437,14290308,14292356,14294404,14296452,14298500,14300548,14302596,14304644,14306692,14308740,14310788,14312836,14314884,14316932,14318980,14321028,14323076,14325124,14327181,14329236,14331088,14332818,14334866,14336914,14338962,14340949,14342639,14344079,14345373,14346420,14347317,14347852,14349202,14351250,14353307,14355355,14357403,14359451,14361499,14363556,14365604,14367660,14369656,14371215,14372349,14373840,14375888,14377936,14379906,14381826,14383611,14385173,14386530,14387478,14388186,14388540,14388674,14390127,14392182,14394230,14396287,14398341,14400389,14402437,14404485,14406533,14408581,14410629,14412677,14414724,14416776,14418642,14420338,14421856,14423081,14424985,14427033,14429081,14431129,14433177,14435225,14437273,14439329,14441377,14443425,14445473,14447525,14449540,14451549,14453324,14454912,14456088,14456923,14458739,14460568,14462609,14464637,14466692,14468747,14470743,14472532,14473980,14474798,14476638,14478683,14480731,14482777,14484527,14486575,14488630,14490552,14491712,14491737,14491958,14492007,14492048,14494096,14496144,14498192,14500240,14502294,14504342,14506396,14508442,14510418,14512414,14514462,14516519,14518567,14520577,14522625,14524673,14526721,14528769,14530817,14532865,14534913,14536968,14539016,14541069,14542733,14544503,14546527,14548080,14549862,14551722,14553757,14555506,14556899,14558297,14560093,14562106,14564144,14566192,14568249,14570304,14572354,14574281,14575915,14576732,14577061,14579117,14581165,14583213,14585261,14587316,14589372,14591427,14593475,14595523,14597560,14599583,14601493,14603325,14605253,14606992,14608731,14610779,14612827,14614884,14616932,14618980,14621028,14623085,14625133,14627049,14629097,14631154,14633202,14635250,14637298,14639346,14641394,14643442,14645030,14647075,14649032,14650982,14652035,14654017,14656065,14658119,14660045,14661640,14663688,14665736,14667784,14669832,14671888,14673936,14675984,14678032,14680080,14682075,14683575,14684990,14686899,14688859,14690868,14692917,14694972,14697013,14699049,14701086,14703134,14705188,14707234,14709265,14711301,14713321,14715288,14717274,14719311,14721361,14723411,14725448,14727495,14729520,14731555,14733600,14735644,14737683,14739721,14741744,14743713,14745530,14747181,14748646,14749986,14751162,14752416,14753567,14754692,14755711,14756829,14757840,14758876,14759912,14760735,14761611,14762354,14763099,14763678,14764095,14764400,14764599,14764746,14764812,14764855,14766056,14768088,14770128,14772176,14774228,14776216,14777973,14779685,14781098,14781906,14783658,14785706,14787754,14789802,14791783,14793787,14795835,14797883,14799926,14801916,14803964,14806012,14808060,14810059,14812107,14814155,14816203,14818250,14820297,14822354,14824402,14826456,14828498,14830538,14832593,14834585,14836547,14838427,14840175,14841928,14843637,14845364,14847415,14849463,14851520,14853568,14855623,14857670,14859672,14861480,14863533,14865590,14867647,14869704,14871752,14873802,14875858,14877757,14879812,14881869,14883813,14885586,14887200,14889257,14891311,14893082,14894654,14896702,14898759,14900807,14902855,14904903,14906951,14909008,14911056,14913098,14915061,14916830,14918404,14919875,14921235,14922470,14923649,14925706,14927754,14929802,14931859,14933908,14935854,14937675,14939035,14939485,14940165,14941481,14943144,14944994,14946945,14948849,14950784,14952762,14954736,14956562,14958204,14959626,14960870,14961649,14962081,14963143,14965105,14967149,14968906,14970081,14971273,14973321,14975369,14977417,14979465,14981513,14983561,14985609,14987657,14989608,14991634,14993685,14995636,14997265,14998534,14999556,15001613,15003641,15005169,15006608,15008656,15010704,15012752,15014799,15016847,15018898,15020946,15023001,15024966,15026933,15028432,15030471,15032429,15033895,15034528,15036549,15038597,15040645,15042693,15044741,15046789,15048837,15050817,15052589,15054646,15056694,15058742,15060790,15062838,15064886,15066932,15068180,15069441,15071166,15073170,15075224,15077272,15079320,15081058,15082254,15084257,15086105,15088161,15090209,15092257,15094314,15096363,15098285,15099774,15100942,15101773,15102370,15102756,15103078,15103199,15104370,15106418,15108466,15110514,15112562,15114610,15116658,15118706,15120754,15122802,15124850,15126898,15128946,15130994,15133042,15135090,15137138,15139186,15140824,15142552,15144600,15146648,15148696,15150744,15152792,15154840,15156888,15158571,15158801,15159774,15161400,15163269,15165320,15167376,15169433,15171481,15173529,15175577,15177625,15179673,15181721,15183769,15185744,15187444,15189028,15190425,15191689,15192794,15193816,15194801,15195596,15196363,15197262,15198256,15198938,15200339,15202338,15204386,15206434,15208482,15210530,15212578,15214626,15216674,15218722,15220770,15222818,15224866,15226914,15228971,15230411,15231319,15232002,15233088,15235145,15237202,15239250,15241306,15243121,15244543,15246591,15248449,15249895,15250999,15251684,15252429,15252997,15255052,15257047,15258499,15258929,15260524,15262398,15264341,15266398,15268446,15270494,15272549,15274596,15276631,15278299,15280017,15281792,15283796,15285684,15287732,15289789,15291837,15293885,15295933,15297990,15300047,15302104,15304127,15305921,15307485,15308562,15309262,15310644,15312644,15314692,15316740,15318788,15320836,15322884,15324932,15326980,15329028,15331042,15332859,15334410,15335641,15336545,15337056,15337325,15338953,15341009,15343044,15344956,15346828,15348520,15350201,15352220,15354275,15356126,15357685,15359003,15360792,15362490,15364451,15366495,15368459,15370461,15371682,15373525,15375340,15377209,15378933,15380981,15382766,15384649,15386224,15387628,15388802,15390146,15392195,15394134,15396128,15398136,15400120,15402071,15403996,15406044,15408100,15410132,15412010,15413181,15414127,15416175,15418223,15420271,15422319,15424367,15426068,15426722,15428764,15430812,15432869,15434917,15436795,15437371,15438644,15440699,15442745,15444793,15446841,15448889,15450937,15452994,15454960,15457008,15458624,15460530,15462578,15464317,15466365,15468413,15470063,15472059,15474116,15475799,15477058,15478664,15480528,15481133,15483009,15485057,15487105,15489153,15490861,15491150,15491253,15492188,15494142,15496199,15498247,15500304,15502352,15504409,15506464,15508398,15510446,15512494,15514495,15516497,15518550,15520518,15522566,15524623,15526672,15528727,15530760,15532817,15534670,15536641,15538312,15540291,15541702,15543579,15544825,15546442,15548088,15549750,15551013,15552313,15554145,15556183,15557921,15559853,15561901,15563949,15566006,15568056,15569670,15570744,15571535,15572586,15574625,15575975,15577424,15579261,15581309,15583357,15585405,15587453,15589501,15591558,15593606,15595654,15597702,15599758,15601738,15603584,15605225,15606648,15607913,15608823,15609805,15611853,15613901,15615949,15617997,15620045,15621984,15622391,15624343,15626389,15628437,15630462,15632376,15634378,15636428,15638476,15640524,15642572,15644620,15646676,15648729,15650758,15652604,15654109,15655159,15655674,15657701,15659749,15661797,15663845,15665659,15666026,15666557,15668516,15670564,15672612,15674660,15676708,15678765,15680813,15682861,15684884,15686570,15687150,15687516,15688676,15690496,15692552,15694600,15696648,15698696,15700744,15702792,15704840,15706888,15708936,15710984,15713014,15714953,15716771,15718537,15720287,15721885,15723324,15724633,15725873,15727099,15728227,15729050,15729663,15730230,15730743,15731255,15731646,15732152,15732530,15733004,15733412,15733909,15734441,15734933,15735298,15735564,15736251,15737461,15738663,15739900,15741078,15742152,15743121,15744005,15744763,15745319,15745664,15745827,15745921,15746657,15748236,15750037,15752060,15754108,15756156,15758196,15760225,15762214,15764052,15765990,15767780,15769776,15771707,15773559,15774937,15776966,15779011,15781056,15783100,15785124,15787147,15789189,15791226,15793244,15795261,15797237,15799285,15801182,15803124,15805177,15807225,15809273,15811084,15812819,15814830,15816673,15818454,15820501,15822423,15823688,15825289,15827222,15829276,15831324,15833175,15835105,15837121,15838890,15840861,15842807,15844855,15846903,15848951,15850818,15852850,15854893,15856679,15858152,15859802,15861219,15862460,15863047,15863584,15864054,15864375,15865146,15865704,15866667,15868260,15869721,15871144,15872567,15873823,15875211,15876801,15878533,15880323,15882155,15884054,15886018,15888047,15890085,15892140,15894194,15896242,15898290,15900347,15902403,15904460,15906505,15908546,15910521,15912522,15914496,15916439,15918236,15919944,15921656,15923337,15925021,15926584,15928038,15929472,15930936,15932367,15933752,15935034,15936241,15937456,15938631,15939801,15940868,15941861,15942813,15943769,15945029,15946587,15948064,15949493,15950952,15952388,15953919,15955444,15957005,15958467,15960014,15961534,15963109,15964767,15966393,15967964,15969554,15971113,15972625,15974358,15976028,15977869,15979570,15981329,15983136,15985018,15986911,15988735,15990701,15992692,15994623,15996658,15998703,16000759,16002813,16004861,16006909,16008957,16010976,16012925,16014727,16016382,16017682,16018650,16020506,16022341,16024396,16026444,16028492,16030375,16030709,16031173,16033207,16035264,16037321,16038711,16040766,16042359,16043891,16045939,16047869,16049091,16051123,16053171,16055219,16057267,16058939,16060857,16062882,16064618,16065935,16067778,16069826,16071874,16073922,16075979,16078027,16080058,16082028,16084076,16086124,16088172,16090220,16092268,16094316,16096364,16098412,16100460,16102508,16104556,16106553,16108605,16110653,16112701,16114749,16116797,16118848,16120796,16122798,16124836,16126884,16128932,16130977,16133025,16135073,16137130,16139178,16141226,16143274,16145241,16146367,16148415,16150468,16152516,16154571,16156619,16158662,16160719,16162719,16164596,16166504,16168127,16169740,16171241,16172837,16174656,16176342,16177823,16179230,16180426,16181457,16182077,16182954,16185002,16187050,16189098,16191146,16193185,16194984,16196389,16196694,16197354,16199071,16201119,16203168,16204854,16206492,16208041,16209920,16211295,16211636,16212000,16212930,16213456,16213735,16214181,16214564,16215034,16215427,16215765,16215999,16216741,16217566,16218360,16219237,16219804,16220368,16221538,16222324,16222929,16224140,16225558,16227030,16228458,16229663,16230846,16231606,16232455,16233267,16233799,16234114,16234385,16234936,16235345,16236013,16237113,16237765,16238204,16238770,16239186,16239877,16240418,16240903,16241471,16241810,16242331,16242762,16243518,16244200,16245229,16246031,16247099,16247678,16248416,16249468,16250042,16250778,16251850,16252546,16252810,16253412,16254165,16254726,16255364,16255795,16256091,16256397,16256682,16256985,16257541,16257859,16258187,16258415,16258869,16259481,16260062,16260722,16261382,16261739,16261947,16262372,16262856,16263532,16263983,16264304,16264890,16265441,16265589,16265934,16266497,16266978,16267274,16267805,16268134,16268850,16269742,16270597,16270710,16270902,16271165,16271442,16272135,16272934,16273260,16273597,16274098,16274383,16274882,16275402,16275672,16276519,16277326,16277828,16278051,16278472,16278800,16279262,16279498,16279745,16280088,16280627,16281529,16282051,16282475,16282944,16283550,16284060,16284513,16284928,16285406,16286072,16286403,16286733,16287413,16287990,16288493,16288791,16289021,16289546,16290232,16290568,16290899,16291529,16291768,16292591,16293219,16293630,16294118,16294537,16294901,16295513,16296130,16296686,16297201,16297745,16298336,16298735,16298917,16299591,16300224,16300950,16301628,16302685,16303760,16304884,16305937,16307120,16308272,16308631,16308961,16309915,16311033,16312176,16313180,16313680,16314762,16315564,16316042,16316342,16316580,16316969,16317140,16317353,16317492,16317717,16317852,16318405,16318527,16318676,16318809,16318948,16319415,16320000,16320534,16320998,16321651,16322231,16322799,16323520,16323944,16324510,16324668,16325362,16325638,16325952,16326365,16326903,16327454,16327931,16328199,16328814,16329061,16329325,16329655,16330336,16330483,16330757,16331007,16331253,16331629,16331843,16332131,16332397,16332789,16332976,16333089,16333344,16333532,16333894,16334323,16334847,16335378,16335944,16336859,16337508,16337917,16338360,16338841,16339528,16340157,16340558,16341138,16342050,16342754,16343565,16344389,16344802,16345183,16345455,16345855,16346320,16346527,16346931,16347248,16347652,16347872,16348143,16348374,16348659,16349485,16350612,16351244,16351587,16352424,16352835,16353379,16353792,16354059,16354565,16355240,16355620,16355995,16356175,16356633,16357562,16358158,16359077,16359744,16360142,16360845,16361039,16361479,16361654,16361954,16362174,16362481,16362996,16363651,16364211,16364715,16365219,16365931,16366524,16367134,16367496,16367556,16368083,16368747,16369443,16370147,16370591,16370893,16371376,16371738,16372094,16372466,16373417,16374744,16375981,16377318,16378025,16379175,16380520,16382182,16383119,16383371,16383490,16383741,16384280,16384633,16384815,16384937,16385286,16385670,16386069,16386562,16386952,16387927,16388857,16389671,16389885,16390312,16390651,16390836,16391180,16391382,16391587,16391801,16392148,16392650,16393071,16393594,16394051,16394488,16394994,16395458,16396165,16396557,16397108,16397482,16397860,16398292,16398640,16399095,16399349,16399564,16399963,16400323,16400547,16400853,16401155,16401370,16401610,16402179,16402532,16402846,16403030,16403175,16403817,16404059,16404473,16404772,16405325,16405786,16406336,16406626,16406821,16407231,16407692,16407923,16408316,16408864,16409224,16409744,16410532,16410937,16411240,16411851,16412514,16412792,16413562,16414071,16414310,16414436,16414678,16414837,16414989,16415225,16415654,16415819,16415981,16416148,16416321,16416633,16416858,16417048,16417391,16417551,16417977,16418534,16418923,16419128,16419405,16419629,16419894,16420370,16421047,16421369,16421867,16422230,16422417,16422651,16422802,16423222,16423644,16424256,16424441,16424736,16425115,16425312,16425502,16425893,16425993,16426375,16426845,16427093,16427285,16427625,16427753,16428059,16428161,16428274,16428681,16429290,16429790,16430198,16430556,16430868,16431108,16431384,16431589,16432063,16432433,16432538,16433231,16433960,16434358,16434856,16435281,16435659,16436069,16436803,16437512,16438487,16439259,16439934,16440857,16442343,16443401,16444671,16446033,16447474,16448923,16450305,16451847,16453422,16454891,16456418,16457970,16459436,16460944,16462453,16464040,16465561,16467122,16468609,16470081,16471652,16473107,16474512,16475833,16477089,16478296,16479604,16480987,16482272,16483487,16484646,16485724,16486869,16488458,16489984,16491721,16493498,16495233,16496984,16498675,16500371,16502075,16503819,16505515,16507247,16508961,16510653,16512401,16514147,16515904,16517633,16519376,16520915,16522581,16524244,16525897,16527599,16529300,16530999,16532720,16534441,16536119,16537760,16539427,16541105,16542715,16544284,16545934,16547606,16549408,16551047,16552761,16554352,16556002,16557668,16559369,16561112,16562888,16564714,16566513,16568321,16570162,16571999,16573735,16575450,16577125,16578895,16580692,16582540,16584324,16586038,16587700,16589521,16591280,16592966,16594774,16596513,16598228,16599931,16601527,16603194,16604694,16606575,16608172,16609829,16611424,16613009,16614622,16616228,16617917,16619611,16621318,16622963,16624678,16626418,16628090,16629826,16631548,16633253,16634929,16636697,16638404,16640083,16641790,16643454,16645123,16646810,16648436,16650064,16651671,16653277,16654866,16656380,16657875,16659375,16661223,16662347,16663488,16664347,16665173,16665655,16666870,16668287,16669731,16671166,16672408,16673464,16674661,16675847,16677130,16678533,16679827,16681137,16682457,16683698,16684917,16686004,16686948,16687728,16688570,16689431,16690271,16690928,16691623,16692600,16693712,16694683,16695907,16697097,16698963,16700402,16701850,16703237,16704656,16706226,16707647,16709172,16710640,16712114,16713484,16714772,16716010,16717277,16717489,16717724,16717943,16718159,16718391,16719143,16720531,16722126,16723474,16724455,16725776,16726982,16727884,16729190,16730631,16731664,16733241,16734899,16736122,16737297,16738843,16739933,16741704,16742811,16744450,16746119,16747728,16749170,16750866,16752324,16753538,16755214,16756511,16758142,16759631,16760842,16762551,16763627,16765184,16766735,16768261,16769953,16771353,16772840,16774291,16775778,16777547,16778699,16780049,16781683,16783394,16784620,16786214,16787712,16789205,16790773,16792424,16793825,16795153,16796705,16798238,16799688,16801417,16802873,16804600,16805968,16807329,16808863,16810336,16812020,16813430,16814604,16816338,16817889,16819397,16821053,16822350,16823984,16825008,16826483,16827956,16829623,16831027,16832512,16834085,16835535,16836997,16838580,16839890,16841404,16842729,16844235,16845649,16847038,16848333,16849907,16851286,16852419,16853825,16855086,16856639,16858139,16859736,16861385,16863088,16864553,16865839,16867368,16868832,16870115,16871818,16873267,16874832,16876340,16877890,16879095,16880782,16882512,16883904,16885260,16887134,16888529,16890261,16891465,16893060,16894661,16896010,16897486,16898873,16900533,16902263,16903838,16905603,16907298,16908821,16910166,16911912,16913671,16915308,16916971,16918208,16919884,16921426,16923002,16924512,16926230,16927715,16929263,16931054,16932327,16934047,16935719,16937428,16938886,16940669,16942304,16944090,16945985,16947871,16949757,16951814,16953843,16955877,16957919,16959936,16961984,16964006,16966059,16968075,16970106,16972154,16974197,16976245,16978289,16980299,16982308,16984207,16986235,16988246,16990281,16992331,16994386,16996428,16998469,17000510,17002533,17004558,17006567,17008610,17010660,17012687,17014733,17016788,17018806,17020831,17022854,17024867,17026882,17028882,17030920,17032964,17035016,17037042,17039077,17041128,17043154,17045144,17047111,17049124,17051135,17053114,17055147,17057169,17059191,17061209,17063259,17065286,17067291,17069284,17071285,17073282,17075261,17077267,17079271,17081284,17083321,17085374,17087394,17089399,17091408,17093411,17095407,17097389,17099405,17101409,17103455,17105510,17107542,17109590,17111586,17113584,17115605,17117633,17119645,17121684,17123733,17125774,17127817,17129857,17131908,17133948,17135988,17138018,17140050,17142069,17144034,17146061,17148061,17150018,17152002,17154007,17155974,17157910,17159914,17161898,17163883,17165833,17167790,17169756,17171722,17173710,17175709,17177658,17179581,17181556,17183552,17185511,17187460,17189450,17191439,17193415,17195411,17197369,17199347,17201321,17203308,17205306,17207265,17209222,17211222,17213194,17215196,17217148,17219109,17221092,17223096,17225068,17227068,17229047,17231024,17233014,17234997,17236989,17238911,17240890,17242883,17244869,17246846,17248827,17250801,17252775,17254755,17256752,17258718,17260681,17262699,17264695,17266698,17268687,17270692,17272684,17274700,17276684,17278668,17280679,17282638,17284573,17286608,17288629,17290603,17292499,17294494,17296521,17298508,17300481,17302501,17304517,17306530,17308512,17310522,17312558,17314537,17316528,17318533,17320541,17322572,17324604,17326611,17328619,17330647,17332672,17334673,17336662,17338637,17340648,17342673,17344666,17346657,17348572,17350467,17352508,17354551,17356579,17358544,17360510,17362430,17364336,17366232,17368033,17369935,17371861,17373699,17375518,17377342,17379322,17381309,17383312,17385216,17387062,17388952,17390887,17392674,17394554,17396546,17398478,17400403,17402380,17404315,17406193,17408142,17410035,17412003,17413876,17415835,17417760,17419740,17421620,17423592,17425418,17427310,17429187,17431061,17432963,17434940,17436887,17438853,17440834,17442823,17444599,17446526,17448348,17450353,17452192,17454134,17456056,17458037,17459974,17461941,17463974,17465752,17467689,17469413,17471411,17473391,17475281,17477256,17479148,17481066,17482992,17484969,17486874,17488775,17490742,17492759,17494507,17496288,17498116,17499885,17501681,17503581,17505423,17507358,17509123,17511059,17512885,17514780,17516734,17518628,17520587,17522507,17524388,17526306,17528179,17530102,17531973,17533934,17535763,17537712,17539703,17541635,17543580,17545463,17547409,17549312,17551202,17553074,17554978,17556771,17558653,17560543,17562433,17564258,17566002,17567660,17569247,17570804,17572525,17574414,17576124,17578062,17580042,17581998,17583973,17585971,17587953,17589894,17591877,17593865,17595823,17597805,17599797,17601778,17603225,17604614,17606030,17607447,17608884,17610347,17611934,17613339,17614944,17616491,17618014,17619560,17621287,17622977,17624501,17626200,17628183,17630193,17632092,17634113,17636057,17637962,17639870,17641756,17643739,17645735,17647745,17649653,17651630,17653557,17655445,17657318,17659206,17661221,17663249,17665222,17667193,17669147,17671133,17672961,17674889,17676826,17678805,17680804,17682740,17684745,17686700,17688669,17690474,17692359,17694331,17696265,17698286,17700203,17702189,17704046,17705984,17707822,17709708,17711665,17713616,17715641,17717553,17719528,17721461,17723436,17725250,17727145,17729124,17731114,17733123,17735087,17737088,17739033,17740939,17742844,17744733,17746687,17748669,17750571,17752537,17754429,17756412,17758365,17760267,17762189,17763956,17765670,17767317,17768986,17770661,17772357,17774087,17775797,17777500,17779214,17780863,17782535,17784249,17785996,17787722,17789391,17791060,17792725,17794417,17796164,17797870,17799556,17801186,17802844,17804518,17806230,17807916,17809675,17811407,17813055,17814630,17816227,17817917,17819684,17821342,17823006,17824617,17826225,17827876,17829632,17831383,17833087,17834752,17836428,17838026,17839740,17841557,17843341,17845004,17846621,17848278,17850033,17851870,17853705,17855518,17857262,17859005,17860759,17862591,17864461,17866277,17868072,17869901,17871711,17873442,17875184,17876991,17878677,17880302,17881994,17883773,17885437,17887085,17888686,17890477,17892174,17893793,17895570,17897399,17898967,17900641,17902435,17904046,17905639,17907354,17909009,17910673,17912386,17914219,17915935,17917609,17919388,17921217,17922984,17924659,17926363,17928181,17929892,17931629,17933391,17935136,17937017,17938963,17940898,17942913,17944889,17946840,17948749,17950720,17952653,17954601,17956580,17958550,17960537,17962523,17964523,17966514,17968512,17970506,17972492,17974469,17976424,17978429,17980395,17982393,17984393,17986369,17988336,17990315,17992277,17994244,17996241,17998261,18000271,18002256,18004232,18006224,18008194,18010167,18012134,18014107,18016077,18018063,18020026,18021990,18023978,18025954,18027915,18029878,18031836,18033803,18035762,18037743,18039706,18041676,18043624,18045607,18047552,18049515,18051475,18053430,18055375,18057341,18059288,18061256,18063200,18065167,18067110,18069076,18071019,18072984,18074932,18076897,18078844,18080808,18082758,18084725,18086640,18088551,18090446,18092381,18094267,18096179,18098099,18100003,18101913,18103827,18105731,18107638,18109586,18111473,18113389,18115294,18117189,18119119,18120939,18122910,18124745,18126579,18128541,18130364,18132207,18134168,18136009,18137827,18139798,18141653,18143479,18145438,18147312,18149148,18151091,18152972,18154796,18156725,18158607,18160428,18162352,18164253,18166065,18167944,18169807,18171589,18173479,18175310,18177126,18179018,18180811,18182657,18184547,18186366,18188178,18190063,18191840,18193679,18195576,18197340,18199192,18201085,18202821,18204693,18206585,18208375,18210257,18212125,18213970,18215882,18217718,18219565,18221475,18223289,18225178,18227059,18228892,18230807,18232666,18234503,18236412,18238237,18240113,18242012,18243834,18245741,18247596,18249506,18251347,18253215,18255124,18256972,18258840,18260745,18262596,18264468,18266370,18268220,18270093,18271994,18273840,18275716,18277617,18279467,18281350,18283247,18285098,18286983,18288877,18290729,18292622,18294531,18296386,18298251,18300162,18302021,18303866,18305788,18307637,18309467,18311407,18313268,18315123,18317032,18318899,18320761,18322641,18324516,18326389,18328254,18330136,18332021,18333874,18335764,18337655,18339529,18341442,18343346,18345268,18347186,18349102,18351017,18352958,18354877,18356783,18358700,18360605,18362527,18364445,18366361,18368276,18370221,18372148,18374136,18376117,18378104,18380107,18382091,18384073,18386046,18388041,18390028,18392008,18393988,18395944,18397850,18399772,18401674,18403609,18405502,18407459,18409307,18411217,18413121,18414974,18416923,18418900,18420829,18422810,18424744,18426709,18428651,18430628,18432579,18434537,18436503,18438472,18440419,18442398,18444364,18446301,18448291,18450199,18452159,18454026,18455937,18457827,18459712,18461626,18463477,18465445,18467270,18469256,18471095,18473038,18474914,18476813,18478700,18480595,18482536,18484308,18486229,18488015,18489935,18491754,18493631,18495484,18497319,18499211,18501008,18502941,18504740,18506620,18508480,18510319,18512185,18513996,18515914,18517836,18519881,18521906,18523931,18525939,18527951,18529957,18531980,18533982,18536033,18538053,18540104,18542145,18544171,18546188,18548197,18550154,18552183,18554177,18556208,18558239,18560283,18562338,18564365,18566402,18568426,18570424,18572452,18574467,18576517,18578561,18580613,18582656,18584697,18586734,18588764,18590740,18592608,18594653,18596644,18598667,18600715,18602750,18604785,18606786,18608764,18610765,18612767,18614729,18616698,18618720,18620754,18622762,18624795,18626802,18628801,18630781,18632804,18634793,18636746,18638734,18640756,18642790,18644804,18646833,18648856,18650831,18652827,18654848,18656833,18658785,18660768,18662792,18664830,18666863,18668901,18670943,18672961,18675011,18677016,18679033,18681007,18683000,18684988,18687018,18689052,18691103,18693157,18695208,18697253,18699281,18701305,18703316,18705345,18707355,18709403,18711444,18713479,18715509,18717471,18719453,18721430,18723447,18725429,18727422,18729410,18731362,18733356,18735352,18737310,18739261,18741233,18743187,18745183,18747136,18749100,18751120,18753069,18755005,18756999,18758951,18760762,18762608,18764630,18766618,18768604,18770605,18772595,18774560,18776529,18778478,18780521,18782508,18784451,18786335,18788234,18790148,18792138,18794115,18795994,18797902,18799885,18801846,18803792,18805605,18807514,18809506,18811491,18813426,18815253,18817157,18819125,18821102,18822976,18824811,18826747,18828590,18830455,18832398,18834370,18836306,18838287,18840174,18842030,18843920,18845782,18847709,18849610,18851584,18853537,18855436,18857323,18859213,18861085,18863041,18865003,18866953,18868879,18870699,18872633,18874446,18876374,18878380,18880316,18882204,18884046,18885904,18887783,18889680,18891611,18893489,18895392,18897268,18899125,18901044,18902936,18904766,18906682,18908585,18910418,18912311,18914106,18915893,18917874,18919836,18921760,18923682,18925623,18927456,18929297,18931153,18932982,18934801,18936694,18938673,18940615,18942573,18944510,18946356,18948226,18950178,18952148,18954114,18956130,18958146,18960134,18961837,18963817,18965834,18967843,18969855,18971837,18973799,18975809,18977838,18979807,18981814,18983727,18985727,18987722,18989759,18991701,18993537,18995544,18997544,18999530,19001529,19003342,19005338,19007350,19009382,19011367,19013358,19015306,19017250,19019260,19021260,19023263,19025291,19027330,19029357,19031346,19033354,19035363,19037380,19039394,19041385,19043355,19045326,19047357,19049377,19051285,19053098,19054897,19056742,19058732,19060752,19062740,19064715,19066731,19068719,19070700,19072608,19074576,19076558,19078459,19080389,19082349,19084313,19086243,19088224,19090216,19092222,19094234,19096219,19098183,19100125,19102120,19104102,19106085,19107995,19109907,19111861,19113818,19115771,19117615,19119579,19121532,19123486,19125330,19127298,19129266,19131259,19133221,19135232,19137224,19139222,19141252,19143216,19145125,19147036,19148989,19150892,19152814,19154744,19156710,19158664,19160589,19162513,19164504,19166515,19168527,19170502,19172484,19174455,19176470,19178479,19180453,19182419,19184415,19186352,19188320,19190253,19192202,19194150,19196130,19198097,19200077,19202075,19204105,19206106,19208085,19210067,19212069,19214082,19216044,19217989,19219951,19221946,19223885,19225876,19227763,19229759,19231733,19233755,19235719,19237662,19239651,19241667,19243652,19245622,19247570,19249543,19251537,19253579,19255494,19257497,19259496,19261470,19263493,19265427,19267429,19269441,19271412,19273444,19275406,19277384,19279391,19281371,19283312,19285295,19287280,19289291,19291260,19293226,19295140,19297109,19299072,19301057,19302979,19304972,19306926,19308865,19310824,19312797,19314787,19316796,19318733,19320680,19322662,19324617,19326554,19328503,19330456,19332383,19334272,19336126,19338072,19340061,19341983,19343885,19345865,19347733,19349681,19351654,19353540,19355506,19357480,19359431,19361391,19363398,19365321,19367302,19369274,19371231,19373205,19375155,19377152,19379176,19381172,19383221,19385244,19387224,19389221,19391233,19393198,19395211,19397241,19399283,19401328,19403378,19405381,19407361,19409369,19411340,19413357,19415393,19417425,19419468,19421469,19423499,19425525,19427538,19429535,19431567,19433614,19435642,19437693,19439726,19441739,19443706,19445727,19447689,19449718,19451750,19453790,19455842,19457889,19459914,19461887,19463905,19465879,19467917,19469948,19471998,19474049,19476092,19478109,19480107,19482047,19484023,19485833,19487809,19489769,19491772,19493751,19495761,19497800,19499809,19501815,19503788,19505793,19507768,19509564,19511536,19513501,19515460,19517449,19519442,19521397,19523197,19525158,19527102,19529068,19531062,19533054,19534957,19536803,19538621,19540374,19541977,19543676,19545184,19546804,19548305,19549883,19551309,19552889,19554382,19555654,19557093,19558545,19559877,19561087,19562584,19563869,19565224,19566419,19567931,19569038,19570457,19571735,19572581,19574167,19575480,19576809,19577987,19579209,19580771,19581599,19582829,19584252,19585377,19586937,19588037,19589367,19590649,19591810,19593441,19594568,19596012,19597518,19598843,19600406,19601762,19603276,19604804,19606273,19607907,19609141,19610630,19612152,19613445,19614927,19616269,19617617,19618950,19620084,19621673,19622919,19624375,19625594,19626434,19628084,19629472,19630742,19631940,19633172,19634783,19635631,19636849,19638301,19639512,19641094,19642154,19643455,19644679,19646117,19647509,19648876,19650343,19651858,19653108,19654745,19656172,19657680,19659257,19660555,19662186,19663477,19664987,19666505,19667711,19669323,19670523,19671895,19673140,19674584,19675955,19677260,19678689,19679884,19680791,19682444,19683836,19685046,19686262,19687507,19689106,19689878,19691120,19692564,19693727,19695318,19696393,19697727,19698978,19700407,19701824,19703207,19704682,19706165,19707383,19708996,19710504,19711958,19713551,19714940,19716381,19717796,19719277,19720692,19721821,19723434,19724624,19726097,19727278,19728858,19730060,19731334,19732728,19733811,19734866,19736360,19737783,19738875,19740189,19741671,19742806,19743812,19745084,19746404,19747586,19748998,19750216,19751586,19752727,19754277,19755401,19756826,19758330,19759653,19761271,19762653,19764176,19765684,19767119,19768739,19769989,19771433,19772921,19774322,19775649,19777125,19778403,19779779,19780909,19782508,19783733,19785227,19786502,19787367,19788980,19790325,19791674,19792841,19794135,19795785,19796653,19797844,19799273,19800540,19802040,19803159,19804480,19805708,19807005,19808568,19809820,19811324,19812834,19814067,19815677,19817035,19818555,19820128,19821471,19823130,19824406,19825914,19827444,19828698,19830345,19831525,19832924,19834212,19835576,19836993,19838226,19839638,19840789,19841695,19843328,19844723,19845956,19847194,19848545,19850065,19850946,19852218,19853687,19854864,19856476,19857548,19858920,19860125,19861584,19862981,19864351,19865850,19867367,19868590,19870175,19871635,19873162,19874793,19876151,19877712,19879099,19880688,19882204,19883323,19884919,19886122,19887464,19888725,19890075,19891443,19892656,19894096,19895294,19896155,19897734,19899119,19900341,19901563,19902855,19904419,19905305,19906561,19907991,19909102,19910670,19911737,19913049,19914304,19915794,19917089,19918299,19919779,19921321,19922681,19924300,19925758,19927306,19928872,19930279,19931900,19933290,19934855,19936367,19937524,19939098,19940441,19941784,19943089,19944254,19945812,19946998,19948417,19949678,19950543,19952148,19953487,19954814,19955970,19957198,19958781,19959617,19960841,19962254,19963449,19964852,19966012,19967302,19968695,19970015,19971629,19972750,19974246,19975832,19977267,19978804,19980263,19981790,19983249,19984797,19986419,19987736,19989189,19990696,19992048,19993273,19994895,19996157,19997536,19998707,20000330,20001491,20002984,20004303,20005169,20006741,20008037,20009377,20010517,20011794,20013291,20014383,20015437,20016783,20018147,20019405,20020884,20022075,20023403,20024594,20026233,20027460,20028957,20030423,20031724,20033344,20034767,20036350,20037860,20039354,20041066,20042354,20043887,20045422,20046766,20048050,20049637,20050974,20052378,20053530,20055157,20056326,20057850,20059183,20060070,20061574,20062857,20064233,20065351,20066714,20067979,20069314,20070278,20071611,20073070,20074376,20076002,20077056,20078506,20079801,20081430,20082655,20084063,20085597,20087029,20088351,20090021,20091669,20093208,20094836,20096229,20097932,20099142,20100355,20101645,20103037,20104376,20106255,20107722,20109160,20110360,20111693,20113245,20114701,20116247,20118005,20119367,20120690,20121982,20123538,20124945,20126438,20128253,20129684,20131131,20132418,20133794,20135274,20136628,20138040,20139847,20141335,20142882,20144176,20145448,20146919,20148153,20149502,20150985,20152601,20153681,20154912,20156146,20157777,20159248,20160551,20161985,20163529,20164874,20166394,20168066,20169867,20171591,20173481,20175020,20176941,20178802,20180626,20182339,20184231,20186048,20187881,20189753,20191132,20192794,20194491,20196245,20197970,20199669,20201322,20202894,20204154,20205123,20207038,20209025,20210945,20212720,20213966,20214840,20216644,20218148,20219953,20221751,20223646,20225328,20227225,20228834,20230437,20232289,20233927,20235812,20237689,20239580,20241357,20243080,20244817,20246358,20248312,20250264,20251988,20253983,20255932,20257888,20259733,20261601,20263362,20265083,20266905,20268738,20270638,20272512,20274183,20275869,20277489,20279039,20280903,20282556,20284175,20285826,20287362,20288977,20290417,20292102,20294122,20296169,20298170,20300066,20302050,20304082,20306092,20308033,20310035,20312081,20314100,20316050,20318048,20320088,20322111,20324043,20326019,20327981,20329918,20331884,20333833,20335758,20337668,20339667,20341689,20343704,20345700,20347724,20349748,20351754,20353756,20355678,20357572,20359628,20361673,20363702,20365646,20367617,20369499,20371363,20373314,20375229,20377149,20379086,20380986,20382916,20384787,20386708,20388586,20390494,20392431,20394271,20396168,20398118,20399979,20401926,20403843,20405753,20407655,20409185,20410543,20412461,20414128,20415949,20417373,20418697,20419939,20421835,20423416,20425042,20426720,20428448,20429996,20431575,20433153,20434738,20436198,20437540,20439264,20440935,20442341,20443448,20445087,20446779,20448186,20449291,20451269,20453144,20454932,20456650,20458449,20460232,20461894,20463779,20465585,20467280,20468952,20470631,20472364,20473877,20475723,20477442,20478811,20480379,20481885,20483572,20484973,20486251,20487529,20489240,20490766,20492188,20493366,20494582,20496339,20497937,20499611,20501253,20503280,20505246,20507219,20509216,20511177,20513051,20514769,20516575,20518445,20520344,20522209,20524088,20525990,20527952,20529798,20531700,20533584,20535561,20537452,20539046,20540985,20542632,20544050,20545636,20547261,20548683,20550072,20551798,20553264,20554734,20556352,20557947,20559674,20561259,20562876,20564626,20566269,20567821,20569610,20571268,20572852,20574250,20575842,20577633,20579318,20580701,20581953,20583642,20584893,20586713,20588572,20590344,20591999,20593430,20594857,20596657,20598213,20599781,20601374,20602901,20604647,20606295,20607763,20609416,20611076,20612625,20614233,20615559,20617096,20618706,20620266,20621873,20623182,20624818,20626352,20627948,20629588,20630749,20632291,20633818,20635289,20636545,20637677,20639149,20640344,20641824,20643072,20644659,20645743,20647141,20648589,20649808,20651320,20652604,20653877,20655478,20656962,20658464,20660278,20662053,20663717,20665558,20667384,20669300,20671127,20673012,20674851,20676802,20678310,20679975,20681604,20683201,20684813,20686294,20688301,20689915,20691489,20693161,20694861,20696646,20698237,20699655,20701257,20702746,20704326,20705905,20707331,20708946,20710367,20712013,20713486,20715088,20716521,20718125,20719646,20721241,20722694,20724414,20726308,20727962,20729920,20731617,20733504,20735002,20736614,20738103,20739701,20741301,20743296,20745145,20746999,20748923,20750785,20752708,20754559,20756165,20756672,20757272,20757737,20758537,20759103,20759733,20760167,20760816,20762189,20764198,20766165,20768121,20770063,20772032,20774001,20775961,20777893,20779725,20781364,20782970,20784624,20786439,20788023,20789636,20791182,20792774,20794564,20796118,20797873,20799266,20800771,20802225,20803718,20805115,20806520,20808017,20809569,20810874,20812102,20813395,20814906,20816328,20817839,20819259,20820595,20822222,20823703,20825281,20826733,20828162,20829538,20830961,20832399,20833816,20835157,20836573,20838338,20840091,20841886,20843750,20845647,20847537,20849371,20851127,20852887,20854651,20856315,20858072,20859879,20861724,20863493,20865214,20866905,20868370,20869176,20870007,20870862,20871949,20873656,20875343,20877050,20878669,20880366,20881949,20883517,20885174,20886854,20888561,20890218,20891952,20893618,20895379,20897172,20899034,20900821,20902515,20904188,20905635,20907427,20908884,20910662,20912198,20914117,20915721,20917581,20919375,20921237,20922955,20924814,20926617,20928491,20929702,20930768,20931806,20932848,20933931,20934993,20936058,20937140,20938641,20940199,20941762,20943267,20944852,20946377,20947921,20949453,20951019,20952557,20954034,20955680,20957280,20958793,20959860,20960899,20961948,20963115,20964563,20965982,20967762,20969551,20971134,20972286,20973561,20975057,20976361,20977462,20978964,20980677,20981911,20983478,20985100,20986661,20988225,20989850,20991457,20992807,20994039,20994907,20996014,20996674,20997570,20998324,20999074,21000564,21001921,21003152,21003670,21004502,21005049,21005581,21006343,21006899,21007801,21008536,21009474,21010002,21010730,21011417,21012097,21012950,21013439,21014276,21014992,21015921,21016430,21016963,21017887,21018582,21019450,21019896,21020703,21021314,21022117,21022384,21022652,21023179,21023386,21024025,21024263,21024854,21025116,21025313,21025840,21026007,21026558,21026746,21027249,21027287,21027706,21027968,21028201,21028757,21028978,21030165,21031595,21033111,21034323,21035508,21036743,21037995,21039145,21040098,21041089,21042058,21043034,21043976,21044968,21045971,21047364,21048746,21050124,21051536,21053017,21054533,21055943,21057322,21058719,21060322,21061793,21063307,21064881,21066493,21068064,21069574,21071057,21072662,21074055,21075462,21076877,21078275,21079686,21081103,21082553,21083980,21085372,21086755,21088185,21089551,21090829,21091771,21092715,21093644,21094733,21095687,21096636,21097583,21098487,21099573,21100491,21101470,21102375,21103720,21105120,21106568,21107937,21109276,21110219,21111130,21112055,21113137,21114835,21116400,21117987,21119576,21121037,21122591,21124175,21125763,21127494,21128864,21130191,21131543,21132825,21134117,21135412,21136790,21138133,21139742,21141292,21142826,21144102,21145439,21146855,21148122,21149623,21151228,21152912,21154464,21156022,21157610,21159400,21161081,21162838,21164419,21165876,21167103,21168567,21169996,21171404,21172643,21173823,21175300,21176735,21178273,21179751,21181131,21182737,21184168,21185886,21187557,21189227,21190882,21192478,21194127,21195783,21197432,21199120,21200786,21202488,21204145,21205819,21207339,21208995,21210634,21212212,21213881,21215548,21217209,21218853,21220474,21222072,21223741,21225421,21226966,21228684,21230361,21232059,21233737,21235243,21236878,21238544,21240136,21241849,21243515,21245152,21246782,21248451,21250296,21251929,21253550,21255166,21256984,21258664,21260334,21262000,21263656,21265471,21267039,21268753,21270350,21271888,21272830,21273787,21274732,21275819,21277335,21278865,21280444,21281932,21283463,21284766,21286062,21287393,21288749,21289890,21291092,21292342,21293749,21294889,21295876,21296869,21297996,21299340,21300495,21301593,21302666,21303863,21304917,21305855,21306746,21308248,21309759,21311264,21312800,21314337,21315853,21317380,21318903,21320446,21322070,21323481,21324855,21326239,21327617,21329014,21330390,21331742,21333364,21334898,21336418,21337944,21339523,21341086,21342615,21344140,21345695,21347445,21349031,21350635,21352294,21353922,21355515,21357120,21358782,21360512,21362049,21363507,21364918,21366291,21367728,21369179,21370572,21372000,21373785,21375560,21377294,21378978,21380728,21382462,21384171,21385868,21387657,21389492,21391221,21392915,21394551,21396286,21397984,21399666,21401331,21403026,21404044,21405220,21406374,21407477,21408594,21409650,21410957,21412097,21413145,21414130,21415081,21415757,21416434,21417093,21418208,21419959,21421644,21423405,21425074,21426816,21428500,21430243,21431903,21433767,21435517,21437249,21438902,21440581,21442261,21443983,21445706,21447515,21449325,21451081,21452878,21454602,21456380,21458125,21459894,21461618,21463494,21465227,21466959,21468595,21470256,21471931,21473630,21475322,21477058,21478511,21480022,21481388,21482860,21484265,21485252,21486269,21487266,21488806,21490662,21492437,21494278,21495999,21497837,21499620,21501483,21503291,21504909,21506094,21507306,21508635,21510340,21511404,21512408,21513488,21515179,21516852,21518455,21520055,21521708,21523265,21524907,21526481,21528176,21529749,21531214,21532630,21534056,21535414,21536891,21538310,21539732,21541201,21542849,21544378,21545927,21547464,21548962,21550411,21551856,21553300,21554912,21556527,21558163,21559768,21561322,21562988,21564605,21566208,21567875,21569476,21570933,21572367,21573854,21575265,21576719,21578174,21579588,21581175,21583039,21584865,21586708,21588428,21590296,21592066,21593925,21595767,21597479,21599128,21600734,21602365,21603906,21605552,21607160,21608775,21610473,21612031,21613506,21614967,21616377,21617909,21619380,21620867,21622368,21624082,21625900,21627742,21629613,21631291,21633168,21634980,21636839,21638694,21640317,21641958,21643577,21645296,21646819,21648455,21650056,21651695,21653345,21654823,21656242,21657695,21659068,21660575,21662045,21663484,21664979,21666839,21668641,21670455,21672340,21674014,21675845,21677658,21679513,21681230,21681893,21683599,21684604,21685292,21686458,21687131,21687815,21688998,21689686,21690720,21692222,21692863,21693573,21694282,21695701,21696849,21698004,21699335,21700624,21701473,21702568,21703779,21704998,21706265,21707548,21709105,21710543,21711893,21712901,21714167,21715845,21717417,21719157,21720801,21722542,21724095,21725662,21727358,21729066,21730094,21731203,21732683,21734106,21735642,21736732,21737729,21738738,21739762,21741154,21742258,21743384,21744492,21745633,21747212,21749233,21751262,21753265,21755268,21757292,21759293,21761284,21763295,21765323,21767359,21769362,21771370,21773383,21775389,21777403,21779361,21781378,21783406,21785422,21787427,21789413,21791424,21793442,21795429,21797420,21799446,21801471,21803489,21805497,21807512,21809522,21811525,21813467,21815487,21817536,21819432,21821357,21823233,21825149,21827068,21828922,21830783,21832657,21834539,21836424,21838312,21840136,21842019,21843844,21845681,21847578,21849432,21851093,21852765,21854434,21856130,21857799,21859445,21861046,21862795,21864459,21866120,21867775,21869421,21871071,21872736,21874371,21875971,21877669,21879083,21880510,21881942,21883354,21884805,21886222,21887617,21889045,21890671,21892078,21893532,21895182,21896571,21898023,21899517,21901195,21902601,21904077,21905625,21907233,21908770,21910152,21911743,21913292,21914871,21916190,21917679,21919043,21920944,21922725,21924222,21925854,21927499,21929051,21930625,21932145,21933851,21935471,21937030,21938617,21940277,21942032,21943727,21945293,21946857,21948534,21950064,21951644,21953170,21954741,21956293,21957834,21959361,21960885,21962425,21963888,21965557,21967139,21968658,21970326,21972021,21973635,21975302,21977028,21978849,21980372,21981882,21983846,21985766,21987465,21989170,21990981,21992937,21994854,21996786,21998763,22000686,22002645,22004558,22006481,22008330,22010153,22011996,22013901,22015893,22017733,22019607,22021433,22023252,22025008,22026784,22028555,22030466,22032449,22034402,22036362,22038289,22040210,22042127,22044055,22045975,22047975,22049851,22051744,22053606,22055421,22057228,22059063,22060844,22062732,22064748,22066749,22068725,22070706,22072643,22074592,22076508,22078449,22080450,22082264,22084072,22085829,22087625,22089387,22091174,22092898,22094683,22096570,22098434,22100239,22102041,22103862,22105667,22107495,22109283,22111111,22112536,22113976,22115455,22116859,22118294,22119712,22121120,22122508,22124440,22126421,22128364,22130393,22132345,22134270,22136162,22138084,22139999,22141923,22143794,22145767,22147708,22149650,22151587,22153475,22155384,22157308,22159213,22161147,22163045,22164572,22166080,22167677,22169294,22170861,22172472,22173984,22175551,22177486,22179290,22181081,22182820,22184602,22186338,22188070,22189796,22191577,22192928,22194253,22195556,22196895,22198202,22199524,22200891,22202238,22203879,22205360,22206864,22208393,22209984,22211497,22212978,22214424,22216021,22217616,22219213,22220843,22222438,22224072,22225633,22227265,22228687,22229994,22231302,22232527,22233820,22234976,22236225,22237660,22239622,22241505,22243362,22245263,22247156,22249052,22250923,22252816,22254778,22256682,22258548,22260414,22262297,22264185,22266067,22267933,22269812,22271440,22272874,22274299,22275654,22277091,22278545,22280022,22281484,22283133,22284814,22286541,22288264,22289998,22291636,22293221,22294780,22296315,22297811,22299337,22300900,22302526,22304169,22305925,22307619,22309283,22311079,22312526,22313981,22315450,22316945,22318351,22319699,22321119,22322542,22324219,22325704,22327219,22328748,22329878,22331437,22332910,22334427,22336004,22337574,22339088,22340613,22342092,22343258,22344727,22346255,22347763,22349612,22351576,22353507,22355417,22356858,22358265,22359678,22361014,22362429,22363841,22365243,22366645,22368084,22369219,22370393,22371455,22372171,22373291,22374472,22375638,22377073,22378449,22379912,22381534,22383437,22385309,22387187,22389087,22391000,22392883,22394787,22396640,22398211,22399809,22401242,22402725,22404202,22405281,22406152,22407000,22407827,22408759,22409559,22410400,22411187,22412173,22413118,22414006,22414801,22415727,22416691,22417717,22418698,22419972,22421311,22422581,22423852,22425166,22425245,22425921,22426508,22427099,22427307,22427830,22428228,22429250,22430405,22431228,22432208,22432954,22434324,22435202,22436389,22437492,22437865,22438038,22438532,22438923,22439830,22441098,22442628,22444084,22445987,22447773,22449544,22451392,22453229,22455011,22456775,22458521,22460349,22461962,22463616,22465244,22466830,22468450,22470081,22471714,22473237,22474821,22476149,22477494,22478811,22480275,22481933,22483556,22485256,22486935,22488608,22490288,22491947,22493614,22495285,22496951,22498593,22500167,22501629,22503458,22505309,22507136,22508879,22510701,22512539,22514373,22516142,22517900,22519353,22520814,22522266,22523724,22525593,22527453,22529306,22531197,22533036,22534901,22536754,22538601,22540457,22542077,22543874,22545476,22546621,22547743,22548848,22549973,22551816,22553818,22555825,22557767,22559706,22561664,22563594,22565476,22567356,22569291,22571253,22573183,22575114,22577040,22578949,22580868,22582836,22584772,22586420,22588171,22589918,22591748,22593541,22595271,22596897,22598535,22600591,22602647,22604701,22606737,22608785,22610833,22612881,22614923,22616977,22619029,22621082,22623126,22625173,22627225,22629270,22631291,22633344,22635304,22637196,22639083,22640903,22642745,22644605,22646447,22648294,22650251,22652113,22654017,22655887,22657730,22659561,22661425,22663277,22665156,22666784,22668160,22669252,22669965,22670839,22671580,22672241,22672775,22673565,22674403,22675299,22675938,22676278,22677090,22677962,22678798,22679289,22679798,22680579,22681483,22682269,22682656,22683325,22684127,22684972,22685656,22686052,22687117,22688268,22689369,22689980,22690493,22691662,22692712,22693925,22694478,22695027,22696268,22697309,22698452,22699012,22699592,22700815,22701903,22702984,22703879,22705114,22706522,22707940,22709584,22711325,22712385,22713482,22714612,22715758,22716925,22718078,22719146,22720332,22721460,22722582,22723687,22724881,22726012,22727079,22728093,22729160,22730797,22731851,22732944,22734126,22735257,22736311,22737377,22738450,22739465,22740471,22741378,22742370,22743406,22744371,22745230,22745989,22746878,22748354,22748824,22749362,22749864,22750385,22750921,22751471,22752017,22752568,22753025,22753507,22754028,22754521,22755026,22755553,22756076,22756603,22757729,22759193,22760678,22762189,22763715,22765224,22766715,22768251,22769703,22771063,22772015,22773023,22774221,22775904,22777325,22778737,22780104,22781387,22782848,22784461,22786168,22787824,22789496,22791125,22792732,22794361,22796038,22797697,22799457,22800947,22802410,22803937,22805436,22806894,22808423,22809912,22811378,22812589,22813754,22814933,22816226,22817571,22818867,22820235,22821385,22822693,22824102,22825527,22826954,22828466,22829954,22831533,22833027,22834607,22836331,22837341,22838470,22839606,22840743,22841888,22842967,22844033,22845164,22846294,22847450,22848591,22849792,22850899,22851980,22853016,22854121,22855749,22856843,22857957,22859119,22860232,22861321,22862407,22863473,22864479,22865478,22866396,22867377,22868431,22869408,22870235,22871022,22871902,22873372,22873829,22874348,22874842,22875362,22875894,22876417,22876980,22877522,22877971,22878440,22878946,22879444,22879959,22880504,22881041,22881561,22882815,22884605,22886388,22888180,22889945,22891766,22893525,22895381,22896806,22898224,22899621,22900999,22902476,22903831,22905030,22906183,22907566,22909219,22910512,22911785,22913168,22914687,22915708,22916742,22917755,22919023,22920618,22922324,22924019,22925600,22927179,22928377,22929517,22930673,22932032,22933345,22935028,22936712,22938373,22939990,22941690,22943371,22944967,22946583,22948260,22949587,22950796,22952298,22953317,22955213,22956850,22958835,22960594,22962368,22963980,22965675,22967388,22969070,22970742,22972505,22974288,22975881,22977415,22978919,22980469,22982032,22983551,22985126,22986664,22988077,22989707,22991314,22992915,22994500,22996045,22997631,22999201,23000837,23002449,23004112,23005915,23007567,23008917,23010566,23012351,23014032,23015698,23016881,23017915,23019052,23020222,23021326,23022485,23023537,23024623,23025715,23026878,23027970,23029183,23030357,23031426,23032474,23033575,23034990,23035702,23036838,23038000,23039092,23039511,23040679,23041859,23043000,23043909,23044797,23045931,23047144,23048298,23048706,23049792,23050987,23052160,23053071,23053979,23055158,23056398,23057629,23057997,23058988,23060244,23061354,23062247,23063294,23064496,23065697,23066863,23067254,23068181,23069402,23070513,23071496,23072536,23073695,23074874,23076018,23076536,23077406,23078619,23079753,23080725,23082295,23083352,23084420,23085578,23086694,23087790,23088843,23089903,23090931,23091941,23092858,23093847,23094923,23095873,23096700,23097448,23098340,23099604,23100602,23101846,23102951,23103822,23104472,23105561,23106800,23107931,23109059,23110132,23111318,23112554,23113725,23114979,23116128,23117239,23118464,23119630,23120967,23122079,23123303,23124449,23125637,23126841,23127952,23129191,23130381,23131661,23132900,23133978,23134908,23136026,23137299,23138516,23139584,23140565,23141632,23142985,23144201,23145217,23146229,23147364,23148652,23149767,23150793,23151818,23152929,23154301,23154718,23155272,23156199,23157630,23159341,23161165,23163026,23164888,23166622,23168071,23168942,23169442,23169941,23170469,23171021,23171526,23172932,23174075,23175249,23176761,23178007,23179058,23180363,23181873,23183044,23184181,23185675,23186976,23188026,23189306,23191024,23192776,23194675,23196401,23198147,23200076,23201779,23203623,23205404,23207160,23209013,23210882,23212615,23214330,23216232,23217925,23219755,23221643,23223337,23225228,23226964,23228805,23230554,23232406,23234152,23235942,23237794,23239557,23241313,23243187,23244921,23246770,23248541,23250290,23252211,23253906,23255738,23257516,23259404,23261175,23263031,23264767,23266502,23268493,23270169,23271970,23273865,23275588,23277390,23279202,23281031,23282739,23284594,23286375,23288129,23290027,23291752,23293499,23295390,23297152,23298931,23300736,23302486,23304501,23306326,23308149,23309815,23311714,23313446,23315302,23317098,23318840,23320733,23322415,23324242,23326103,23327896,23329598,23330634,23331922,23333082,23334373,23335611,23336838,23338046,23339182,23339707,23340505,23341345,23342238,23342848,23343214,23344058,23344932,23345770,23346238,23346747,23347540,23348450,23349249,23349642,23350320,23351086,23351960,23352628,23354049,23355148,23356230,23357368,23358514,23359679,23360817,23361879,23363028,23364113,23365292,23366434,23367655,23368789,23369880,23370936,23372079,23373532,23374940,23376677,23377714,23378818,23379969,23381127,23382159,23383240,23384334,23385382,23386379,23387319,23388302,23389346,23390358,23391163,23391935,23392801,23394020,23395477,23396885,23398585,23399040,23399567,23400040,23400571,23401112,23401628,23402212,23402732,23403190,23403664,23404158,23404656,23405167,23405711,23406260,23406796,23408057,23409680,23411335,23412931,23414601,23416283,23417921,23419567,23421249,23422970,23424761,23426418,23428047,23429638,23431263,23432926,23434572,23434664,23435463,23436573,23436925,23437360,23437795,23438754,23440530,23442562,23444611,23446645,23448668,23450650,23452675,23454627,23456647,23458664,23460687,23462694,23464700,23466717,23468700,23470714,23472706,23474332,23475774,23477277,23478931,23480064,23481182,23482633,23483756,23484878,23485999,23487120,23488240,23489361,23490615,23490757,23490891,23492818,23494825,23496763,23498645,23500556,23502436,23504251,23506123,23508044,23509924,23511854,23513763,23515699,23517678,23519578,23521445,23523349,23525292,23527170,23528959,23530959,23532897,23534783,23536664,23538616,23540527,23542277,23544052,23545868,23547640,23549536,23551440,23553333,23555173,23557095,23558996,23560880,23562754,23564662,23566575,23568413,23570246,23572101,23574000,23575843,23577389,23578984,23580432,23582022,23583664,23585251,23586815,23588261,23589769,23591363,23592970,23594601,23596205,23597683,23599254,23600819,23602353,23604065,23605629,23607311,23608881,23610380,23612229,23614082,23615874,23617655,23619486,23621348,23623196,23625032,23626887,23628629,23629956,23631233,23632573,23633942,23635257,23636573,23637874,23639270,23640816,23642295,23643763,23645221,23646695,23648148,23649607,23651048,23652671,23654120,23655582,23657027,23658512,23659996,23661460,23662902,23664368,23666004,23667465,23668906,23670377,23671880,23673362,23674805,23676241,23677835,23679294,23680699,23682104,23683557,23685036,23686482,23687911,23689323,23690923,23692295,23693685,23695096,23696587,23698046,23699452,23700887,23702492,23703926,23705308,23706656,23708140,23709618,23711030,23712433,23713837,23715426,23716799,23718153,23719575,23721025,23722502,23723920,23725321,23726906,23728380,23729779,23731230,23732733,23734198,23735663,23737105,23738508,23740141,23741593,23743013,23744476,23745951,23747448,23748909,23750353,23751803,23753324,23754647,23755976,23757356,23758713,23760080,23761377,23762611,23764164,23765505,23766824,23768171,23769554,23770891,23772245,23773569,23774823,23776388,23777723,23779020,23780361,23781720,23783058,23784378,23785640,23787179,23788643,23790095,23791554,23793039,23794523,23796017,23797464,23798860,23800501,23801910,23803312,23804802,23806282,23807779,23809222,23810608,23812207,23813647,23815019,23816427,23817901,23819368,23820783,23822218,23823607,23825216,23826628,23828012,23829441,23830920,23832376,23833811,23835208,23836680,23838224,23839603,23840987,23842403,23843889,23845340,23846754,23848159,23849771,23851236,23852636,23854065,23855490,23856953,23858406,23859825,23861227,23863025,23864780,23866616,23868342,23870210,23871789,23873542,23875334,23877165,23878992,23880765,23882405,23884120,23885920,23887668,23889397,23891195,23893052,23894871,23896757,23898585,23900482,23902325,23904230,23906066,23907945,23909781,23911608,23913374,23915195,23917019,23918801,23920561,23922382,23924323,23926115,23927894,23929614,23931395,23933123,23934888,23936616,23938405,23940276,23942084,23943853,23945601,23947386,23949140,23950895,23952665,23954614,23956501,23958314,23960141,23961953,23963747,23965589,23967378,23969173,23971061,23972782,23974567,23976298,23978035,23979758,23981512,23983282,23985135,23986932,23988768,23990594,23992417,23994247,23996007,23997775,23999564,24001369,24003172,24004907,24006658,24008294,24009899,24011650,24013378,24014976,24016777,24018574,24020306,24022080,24023734,24025383,24027046,24028721,24030525,24032416,24034083,24035693,24037320,24038971,24040664,24042350,24044030,24045686,24047471,24049163,24050801,24052458,24054164,24055865,24057551,24059229,24061026,24062835,24064591,24066372,24068160,24069994,24071789,24073627,24075410,24077255,24079039,24080722,24082472,24084265,24086056,24087842,24089610,24091470,24093225,24095054,24096933,24098800,24100688,24102617,24104522,24106325,24108127,24109808,24111493,24113235,24115000,24116740,24118543,24120257,24122060,24123797,24125461,24127278,24129086,24130891,24132733,24134565,24136296,24138032,24139431,24140957,24142470,24143978,24145492,24147007,24148514,24150062,24152108,24154080,24156011,24158020,24160013,24161940,24163933,24165872,24167783,24169751,24171737,24173748,24175698,24177640,24179624,24181616,24183638,24185250,24185748,24185788,24185823,24185863,24186182,24186221,24186261,24186295,24186957,24188818,24190607,24192429,24194282,24196110,24197920,24199692,24201535,24203307,24204756,24206219,24207651,24209100,24210531,24211952,24213383,24214972,24216819,24218655,24220461,24222206,24223989,24225756,24227538,24229347,24230570,24231380,24231417,24231457,24231497,24231740,24231822,24231860,24231900,24231940,24233016,24234098,24235855,24237574,24239315,24241068,24242827,24244533,24246252,24247989,24249760,24251625,24252661,24253910,24255357,24256563,24257405,24258978,24260410,24261652,24262702,24264507,24266116,24267764,24268279,24268319,24268351,24268391,24268710,24268749,24268789,24268821,24269377,24270753,24272198,24273404,24274616,24276299,24277959,24279586,24281281,24282966,24284636,24286299,24287915,24289506,24289545,24289585,24289623,24289663,24290766,24291125,24291239,24292434,24294275,24296291,24298024,24299675,24301272,24302912,24304595,24306248,24307960,24309698,24311385,24313104,24314847,24316593,24318323,24320032,24321733,24323418,24325145,24326226,24327362,24327768,24328824,24330645,24332401,24334126,24335859,24337589,24339392,24341063,24342789,24344657,24346500,24348323,24350209,24351985,24353905,24355701,24357561,24359439,24361283,24362961,24364614,24366365,24368004,24369808,24371598,24373305,24375185,24376972,24378942,24380719,24382675,24384487,24386421,24388286,24390168,24392123,24393404,24394584,24395707,24396747,24397962,24399404,24400769,24402130,24403504,24404901,24406079,24407258,24408338,24409487,24410627,24411910,24413572,24414233,24415069,24416016,24417013,24418412,24420111,24421279,24422062,24422692,24423544,24424998,24426616,24428359,24429924,24430793,24432110,24433762,24435133,24436338,24437285,24438041,24438998,24439732,24440214,24441151,24442356,24443737,24444932,24446164,24447488,24448857,24450258,24451579,24452967,24454898,24456796,24458671,24460596,24462439,24464295,24466189,24468077,24469931,24471838,24473771,24475714,24477547,24479435,24481314,24483279,24484490,24485440,24486365,24487340,24488912,24490868,24492594,24494498,24496392,24497537,24498731,24499922,24501138,24503159,24505183,24507176,24509211,24511149,24513068,24514954,24516848,24518794,24520836,24522871,24524908,24526965,24528734,24530559,24532345,24534194,24535997,24537799,24539508,24541315,24543161,24545107,24547058,24548983,24550945,24552548,24553825,24555140,24556762,24558077,24559246,24560532,24561818,24563154,24564338,24565599,24566833,24568434,24569881,24571112,24572297,24573988,24575593,24576399,24577186,24578736,24580359,24581220,24581985,24583233,24584483,24585617,24586345,24587338,24588939,24590563,24591940,24593349,24594949,24596796,24598538,24600333,24602114,24603942,24605711,24607564,24609408,24611234,24612886,24614554,24616226,24617965,24619740,24621516,24623342,24625084,24626714,24628155,24629559,24630999,24632563,24634024,24635451,24636887,24638485,24639997,24641444,24642935,24644474,24646063,24647551,24649037,24650587,24652490,24654472,24656422,24658340,24660361,24662335,24664320,24666293,24668300,24670054,24671830,24673581,24675343,24677142,24678718,24680261,24681837,24683729,24685631,24687444,24689337,24691264,24693036,24694866,24696627,24698476,24700435,24702297,24704128,24706036,24707902,24709726,24711508,24713326,24715224,24716673,24718206,24719836,24721454,24722661,24723902,24725523,24726835,24728005,24729285,24730503,24732200,24733373,24734607,24735881,24737708,24739485,24741273,24743032,24744821,24746642,24748436,24750218,24752011,24753878,24755713,24757525,24759342,24760810,24761684,24762522,24763351,24764354,24765505,24766665,24767836,24768992,24770284,24771499,24772684,24773921,24775236,24776632,24778052,24779353,24780953,24782792,24784656,24786505,24788371,24790231,24792030,24793885,24795715,24797666,24799570,24801502,24803419,24805347,24807261,24809184,24811146,24813048,24814886,24816746,24818566,24820296,24822138,24823962,24825673,24827270,24828923,24830697,24832544,24834392,24836288,24838176,24839972,24841863,24843739,24845224,24846695,24848101,24849605,24851153,24852757,24854530,24856114,24857658,24859292,24860938,24862632,24864318,24866073,24867831,24869625,24871428,24873318,24875364,24877417,24879376,24881337,24883324,24885307,24887284,24889276,24891215,24893187,24895101,24897014,24898150,24899465,24900851,24901902,24903627,24905413,24907151,24908902,24910628,24912160,24913784,24915294,24916945,24918723,24920484,24922262,24923994,24925856,24927641,24929446,24931208,24932991,24934679,24936392,24938113,24939736,24941403,24943222,24945021,24946644,24947829,24948831,24949886,24951016,24952376,24953281,24954165,24955085,24956390,24957357,24958579,24959504,24960824,24961346,24962032,24962504,24963110,24964091,24964844,24965626,24966304,24967052,24968221,24969418,24970636,24971624,24972922,24974294,24975733,24977138,24978423,24979876,24981474,24983109,24984453,24985869,24987516,24989047,24990509,24992231,24993846,24995507,24997024,24997221,24997441,24997640,24998008,24998802,24999291,24999731,25000191,25001914,25003945,25005993,25008043,25010073,25012108,25014158,25016179,25018198,25020181,25022137,25024073,25026046,25027956,25029865,25031795,25033708,25035408,25036844,25038199,25039686,25041120,25042238,25043456,25044577,25045658,25047110,25048549,25049950,25051392,25053127,25054993,25056802,25058634,25060518,25062384,25064180,25065966,25067856,25069655,25071392,25073129,25074898,25076590,25078361,25080163,25081861,25083456,25084870,25086356,25087806,25089290,25090719,25092163,25093754,25095206,25097051,25098905,25100779,25102657,25104248,25105442,25106671,25107888,25109494,25111348,25113146,25114915,25116774,25118132,25119581,25121042,25122448,25124402,25126440,25128481,25130500,25132543,25134538,25136539,25138513,25140503,25142030,25143524,25145025,25146507,25148263,25149924,25151593,25153269,25155239,25157201,25159194,25161199,25163207,25164942,25166651,25168369,25170174,25172222,25174270,25176311,25178368,25179865,25181155,25182221,25182748,25183281,25183815,25184598,25185788,25187258,25188715,25189870,25191103,25192609,25194000,25195388,25196677,25198238,25199746,25201371,25202823,25204214,25205903,25207643,25209440,25211276,25212903,25214113,25215444,25216686,25218041,25219006,25219978,25220995,25222121,25222986,25223915,25224933,25225972,25226935,25228937,25230905,25232848,25234787,25236817,25238830,25240804,25242820,25244781,25246341,25247803,25249437,25251154,25252804,25254479,25256177,25257807,25259614,25261122,25262655,25264254,25266087,25267677,25269403,25271080,25272772,25274285,25275983,25277576,25279028,25280493,25282088,25283618,25285052,25286902,25288815,25290683,25292523,25294414,25296301,25298169,25300036,25301931,25303571,25305102,25306540,25308193,25310169,25312151,25314123,25316119,25318094,25319916,25321708,25323507,25325343,25327203,25329131,25331059,25332885,25334283,25335753,25337178,25338537,25340038,25341529,25343038,25344525,25346045,25347595,25349353,25351047,25352656,25354129,25355724,25357254,25358733,25360484,25362217,25363845,25365593,25367279,25369003,25370669,25372439,25374115,25375784,25377318,25379009,25380685,25382350,25383998,25385529,25387220,25388816,25390400,25391974,25393451,25394938,25396709,25398063,25399789,25401448,25402944,25404451,25405984,25407502,25409010,25410520,25412176,25413785,25415113,25416421,25417768,25419290,25420903,25422748,25424153,25425674,25427357,25428794,25430531,25432294,25433980,25435614,25437191,25438467,25439685,25440924,25442222,25443547,25444769,25446105,25447833,25449209,25450686,25451961,25453352,25454447,25455607,25456870,25458084,25459388,25460805,25462224,25463599,25465018,25466616,25467858,25469129,25470684,25472427,25474268,25475953,25477324,25478489,25479481,25480386,25481303,25482372,25483530,25484783,25486058,25487483,25489127,25490700,25492356,25494201,25495660,25496847,25497830,25498845,25499781,25500475,25501354,25502675,25503796,25505065,25506321,25507572,25508867,25510344,25512023,25513756,25515618,25517487,25519239,25521017,25522743,25524151,25525425,25526626,25527951,25529233,25530536,25531857,25533124,25534356,25535624,25536930,25538230,25539579,25541295,25542858,25544551,25546151,25547673,25549117,25550785,25552436,25554075,25555472,25556705,25557886,25559195,25560486,25561709,25563118,25564587,25566442,25567889,25569133,25570529,25571742,25572970,25574061,25575325,25576721,25578322,25580047,25581679,25583299,25584729,25586095,25587553,25588878,25590706,25592155,25593580,25594827,25596082,25597340,25598510,25599761,25601160,25602791,25604504,25606203,25607876,25609389,25611024,25612747,25614249,25615909,25617456,25618452,25618709,25619744,25621307,25622348,25622616,25623568,25625125,25626149,25626401,25627366,25628932,25629979,25630231,25631197,25632728,25633795,25634047,25634970,25636509,25637572,25637809,25638645,25639855,25641118,25642406,25643792,25645152,25646393,25647747,25649009,25650414,25651712,25652996,25654274,25655737,25657060,25658352,25659675,25661001,25662450,25663872,25665174,25666418,25667656,25668898,25670165,25671400,25672672,25674237,25675427,25676565,25677790,25679018,25680223,25681390,25682594,25683835,25685343,25686601,25687845,25689145,25690383,25691622,25692878,25694147,25695762,25697501,25699243,25701003,25702657,25704326,25706028,25707834,25709711,25710890,25712216,25713561,25714940,25716240,25717648,25718895,25720246,25721608,25722979,25724340,25725685,25727036,25728440,25729835,25731210,25733052,25734725,25736337,25737904,25739553,25741128,25742637,25744108,25745361,25746741,25748148,25749573,25751155,25752671,25754115,25755655,25757342,25759281,25760946,25762534,25764120,25765763,25767354,25768888,25770408,25771689,25773107,25774471,25775877,25777425,25778916,25780391,25781923,25783571,25785481,25787164,25788775,25790369,25792021,25793616,25795187,25796701,25797994,25799367,25800731,25802107,25803641,25805134,25806641,25808138,25809760,25811627,25813353,25814974,25816589,25818173,25819772,25821364,25822856,25824182,25825518,25826914,25828292,25829815,25831331,25832866,25834342,25835922,25837747,25839249,25840455,25841588,25842567,25843423,25844363,25845467,25846414,25847543,25848727,25850017,25851233,25852213,25853174,25854203,25855277,25856380,25857978,25859189,25860372,25861410,25862261,25863172,25864240,25865223,25866316,25867446,25868709,25869917,25870981,25871883,25872910,25873950,25875029,25877004,25878938,25880826,25882776,25884750,25886745,25888681,25890615,25892488,25894327,25896099,25897909,25899798,25901714,25903655,25905599,25907561,25909031,25911003,25912927,25914895,25916885,25918857,25920827,25922789,25924771,25926670,25928429,25930193,25931966,25933738,25935485,25937323,25939088,25940815,25942603,25944367,25946148,25947897,25949621,25951331,25953350,25955301,25957190,25959083,25960983,25962954,25964514,25965211,25966098,25968072,25970038,25972048,25974025,25975967,25977944,25979940,25981894,25983899,25985855,25987804,25989783,25991755,25993729,25995692,25997637,25999588,26001368,26002930,26004490,26006071,26007640,26009221,26010784,26012349,26014017,26015810,26017442,26019148,26020706,26022357,26024193,26025991,26027828,26029634,26031301,26032839,26034392,26035865,26037572,26039227,26040963,26042541,26044273,26045898,26047598,26049298,26051074,26052918,26054757,26056596,26058479,26060297,26061949,26063663,26065229,26067036,26068870,26070688,26072523,26074374,26075926,26077530,26079118,26080667,26082350,26084028,26085765,26087415,26089174,26090892,26092686,26094423,26096237,26097797,26099362,26101074,26102797,26104455,26106021,26107882,26109504,26111276,26112945,26114757,26116416,26118116,26119698,26121359,26123080,26124598,26126133,26127878,26129538,26131163,26132554,26134166,26136102,26137890,26138929,26140824,26142748,26144379,26146141,26147684,26149712,26151717,26153729,26155476,26156894,26158164,26159355,26160686,26161900,26163451,26165041,26166618,26168134,26169589,26171093,26172589,26174078,26175626,26177078,26178305,26179265,26180157,26181171,26182522,26183607,26184577,26185687,26186760,26188541,26190364,26192223,26194109,26195898,26197754,26199519,26201312,26203293,26205019,26206597,26208228,26209889,26211598,26213374,26215150,26216814,26218677,26220500,26222377,26224255,26226024,26227900,26229670,26231470,26233419,26235241,26236845,26238515,26240164,26241907,26243692,26245489,26247173,26249017,26250810,26252702,26254494,26256418,26258194,26260139,26261923,26263840,26265828,26267706,26269704,26271668,26273559,26275497,26277482,26279415,26281421,26283259,26284940,26286702,26288518,26290300,26292127,26293985,26295809,26297490,26299117,26300363,26301670,26303348,26304908,26306551,26307710,26308899,26309968,26310997,26311406,26311745,26313014,26314258,26315538,26316833,26318168,26319645,26320904,26322244,26323525,26324977,26326333,26327618,26328969,26330250,26331679,26333016,26334308,26335683,26336986,26338439,26340027,26341149,26342615,26344013,26345884,26347795,26349763,26351808,26353845,26355853,26357838,26359797,26361776,26363408,26364998,26366531,26368002,26369734,26371295,26373035,26374778,26376308,26378055,26379854,26381445,26383206,26384761,26386372,26387989,26389617,26391272,26393077,26394987,26396892,26398706,26400344,26402086,26403922,26405869,26407816,26409669,26411337,26413090,26414946,26416874,26418685,26420426,26422078,26423952,26425866,26427765,26429633,26431245,26433025,26434944,26436941,26438879,26440802,26442510,26444201,26446087,26447973,26449845,26451603,26452895,26453884,26454848,26455850,26457295,26458802,26460392,26461983,26463621,26465238,26466936,26468572,26470184,26471783,26473615,26475320,26477053,26478786,26480391,26482104,26483726,26485351,26487031,26488739,26490666,26492405,26494117,26495859,26497578,26499345,26501070,26502670,26504392,26506058,26507808,26509473,26511094,26512763,26514386,26515906,26517894,26519793,26521650,26523571,26525518,26527450,26529325,26531016,26532789,26534430,26536109,26537899,26539842,26541709,26543607,26545496,26547402,26549393,26551323,26553278,26555219,26557137,26558950,26560743,26562523,26564325,26566225,26568184,26570058,26571942,26573864,26575770,26577624,26579480,26581111,26582465,26583713,26585121,26586809,26588397,26590053,26591695,26593608,26595477,26597316,26599165,26601016,26602852,26604683,26606560,26608437,26610316,26612208,26614097,26614918,26615440,26616062,26617070,26618084,26619037,26620354,26621605,26622913,26623888,26625705,26627404,26629021,26630591,26632352,26633931,26635573,26637264,26638824,26640315,26641948,26643399,26644713,26645983,26647577,26649252,26650913,26652627,26654339,26656050,26657739,26659349,26661053,26662399,26663767,26665326,26666766,26668316,26669760,26671275,26672725,26674224,26675609,26676934,26678226,26680107,26681903,26683727,26685599,26687458,26689304,26691167,26692968,26694862,26696676,26698505,26700344,26702267,26704175,26706042,26707905,26709782,26711777,26713788,26715753,26717665,26719565,26721442,26723383,26725291,26727222,26729115,26731048,26732951,26734838,26736693,26738578,26740473,26742360,26744113,26745605,26747077,26748695,26750331,26751931,26753525,26755173,26756786,26758407,26760048,26761664,26763425,26765078,26766723,26768392,26770039,26771664,26773317,26774954,26776679,26778334,26780001,26781639,26783285,26784916,26786550,26788198,26789831,26791741,26793610,26795488,26797318,26799181,26801053,26802892,26804753,26806601,26808513,26810382,26812211,26814055,26815902,26817741,26819582,26821429,26823381,26825262,26827108,26828973,26830839,26832693,26834536,26836402,26838277,26839840,26841236,26842666,26844079,26845381,26846825,26848240,26849823,26851231,26852530,26854015,26855482,26856907,26858326,26860190,26862062,26863895,26865710,26867523,26869361,26871199,26873127,26875067,26876722,26878469,26880179,26881855,26883559,26885209,26887042,26888630,26890356,26891941,26893663,26895424,26897141,26898868,26900633,26902346,26903955,26905593,26907490,26909321,26911166,26913027,26914624,26916469,26918348,26920219,26922048,26923912,26925559,26927303,26929069,26930829,26932629,26934362,26936005,26937774,26939443,26941117,26942939,26944548,26946291,26948043,26949860,26951609,26953386,26955090,26956760,26958450,26960075,26961775,26963500,26964837,26966066,26967344,26968531,26969795,26971084,26972244,26973649,26975331,26976873,26978375,26980003,26981681,26983235,26984806,26986387,26987918,26989483,26991025,26992602,26994481,26996357,26998283,27000151,27002025,27003627,27005247,27006667,27008308,27010056,27011857,27013649,27015346,27017103,27018585,27020065,27021773,27023470,27025240,27026710,27028093,27029582,27031431,27033332,27034808,27036268,27037884,27039333,27040880,27042420,27043870,27045556,27047050,27048529,27050038,27051576,27053060,27054655,27056084,27057559,27059106,27060578,27062179,27063659,27065147,27066654,27068307,27069873,27071327,27072880,27074219,27075698,27077119,27078644,27080551,27082395,27084233,27086027,27087837,27089654,27091415,27093143,27094834,27096411,27098218,27099916,27101700,27103479,27105091,27106855,27108646,27110268,27112148,27114083,27115940,27117822,27119717,27121462,27123385,27125106,27126862,27128624,27130204,27131969,27133709,27135499,27137109,27138861,27140612,27142384,27144063,27145863,27147502,27149361,27151055,27152711,27154384,27156022,27157738,27159455,27161283,27162931,27164614,27166288,27168057,27169749,27171492,27173148,27174864,27176587,27178364,27179878,27181283,27182970,27184733,27186390,27188112,27189887,27191470,27192935,27194519,27196034,27197558,27198955,27200470,27201977,27203504,27205146,27206941,27208641,27210399,27212188,27213851,27215552,27217293,27218933,27220532,27222232,27223857,27225565,27227159,27228768,27230408,27232123,27233770,27235414,27237010,27238712,27240346,27241999,27243640,27245295,27247025,27248645,27250298,27251924,27253616,27255229,27256863,27258473,27260190,27261822,27263463,27265108,27266778,27268474,27270106,27271726,27273315,27275081,27276707,27278408,27280115,27281899,27283535,27285160,27286777,27288502,27290129,27291742,27293440,27295133,27296932,27298543,27300160,27301796,27303511,27305186,27307075,27308831,27310487,27312122,27313922,27315702,27317316,27319054,27320872,27322666,27324368,27326293,27328163,27330040,27331979,27333984,27335921,27337857,27339813,27341804,27343518,27345374,27347319,27349325,27351319,27353334,27355323,27357137,27359079,27360903,27362718,27364639,27366649,27368673,27370680,27372683,27374646,27376591,27378523,27380431,27382317,27384222,27386139,27388081,27390029,27392003,27393784,27395672,27397563,27399453,27401314,27403040,27404639,27406283,27408239,27410000,27411816,27413387,27414988,27416622,27418240,27419792,27421613,27423041,27424452,27425769,27427117,27428511,27430022,27431539,27432863,27434292,27435829,27437304,27438705,27440153,27441611,27443135,27444618,27446052,27447754,27449505,27451313,27452985,27454696,27456397,27458140,27459873,27461542,27463254,27464939,27466689,27468356,27470028,27471694,27473389,27475044,27476758,27478433,27480114,27481752,27483491,27485185,27486821,27488455,27490194,27491828,27493477,27495130,27496883,27498813,27500699,27502613,27504542,27506436,27508358,27510234,27512125,27514049,27515838,27517616,27519408,27521343,27523342,27525323,27527363,27529412,27531453,27533491,27535511,27537531,27539571,27541617,27543659,27545707,27547758,27549815,27551852,27553908,27555956,27557787,27559633,27561495,27563417,27565349,27567236,27569123,27571014,27572739,27574204,27575682,27577069,27578759,27580382,27582023,27583547,27585127,27586773,27588335,27589954,27591490,27592909,27594448,27596063,27597622,27599165,27600843,27602253,27603653,27605214,27606628,27608407,27610279,27612065,27613791,27615445,27617094,27618940,27620759,27622620,27624458,27626258,27628028,27629704,27631542,27633380,27635174,27636820,27638826,27640809,27642817,27644724,27646613,27648547,27650137,27651810,27653548,27655293,27657004,27658780,27660578,27662323,27663984,27665766,27667462,27669144,27670823,27672466,27674027,27675541,27677040,27678555,27680084,27681626,27683161,27684675,27686237,27687739,27689235,27690756,27692231,27693783,27695316,27696822,27698310,27699794,27701123,27702419,27703695,27704909,27706896,27708839,27710762,27712638,27714582,27716541,27718487,27720433,27722275,27723622,27724913,27726226,27727565,27728896,27730216,27731527,27732980,27734606,27736069,27737545,27739146,27740797,27742263,27743860,27745432,27747157,27748844,27750503,27752178,27753816,27755480,27757115,27758772,27760483,27762104,27763349,27764618,27765926,27767201,27768516,27769771,27770963,27772445,27773671,27774752,27775785,27776903,27778113,27779289,27780302,27781675,27783159,27784427,27785722,27786957,27788200,27789443,27790702,27792086,27793437,27794984,27796293,27797605,27798939,27800277,27801580,27802860,27804202,27805947,27807523,27809159,27810892,27812605,27814220,27815726,27816961,27818851,27820855,27822304,27823374,27824632,27825817,27827166,27828248,27829847,27831805,27833716,27835280,27837037,27838847,27840663,27842401,27843977,27845923,27847055,27847484,27848054,27848544,27849115,27849644,27850178,27850640,27851527,27851964,27853079,27854398,27855841,27857172,27858368,27859480,27859918,27860796,27861373,27862781,27864220,27865743,27867253,27868646,27869669,27870331,27871767,27872872,27874294,27875445,27876931,27878288,27879477,27880671,27882498,27884272,27885978,27887709,27889518,27889781,27889895,27891101,27891612,27892256,27892909,27893460,27893958,27894712,27895354,27895838,27897137,27898076,27899014,27900440,27901848,27903238,27904673,27906101,27907667,27909252,27910964,27912557,27914184,27915756,27917360,27919211,27920767,27921863,27923002,27924185,27925455,27926777,27928038,27929348,27930621,27932077,27933604,27935210,27936846,27938540,27940115,27941474,27942862,27944245,27945079,27945104,27945134,27945159,27945676,27946313,27947579,27948241,27949735,27951367,27953046,27954645,27956286,27957457,27959134,27960627,27962215,27963732,27965449,27967361,27969306,27971205,27973159,27975052,27976740,27977647,27978823,27980320,27981637,27982583,27983538,27984769,27986097,27987514,27988938,27990442,27991978,27993526,27995166,27996883,27998638,28000157,28001759,28003259,28004825,28006411,28007920,28009476,28011208,28013264,28015315,28017351,28019361,28021249,28023196,28025222,28027170,28028909,28030835,28032710,28034667,28036667,28038709,28040699,28042736,28044732,28046760,28048741,28050777,28052824,28054857,28056566,28058418,28060439,28062461,28064468,28066396,28068067,28069655,28070887,28072121,28073298,28074765,28076766,28078663,28080384,28082143,28084042,28085913,28087670,28089460,28091226,28093078,28095011,28096977,28098939,28100907,28102875,28104839,28106854,28108713,28110252,28111800,28113348,28114854,28116363,28117952,28119465,28120976,28122352,28123754,28125073,28126404,28127704,28129023,28130366,28131929,28133945,28135950,28137944,28139912,28141911,28143862,28145793,28147729,28149741,28151553,28153270,28154924,28156589,28158306,28159965,28161211,28161430,28161897,28163135,28164440,28165721,28166693,28167720,28168669,28169780,28170966,28172620,28174323,28175891,28177607,28179338,28181005,28182537,28184117,28185688,28187308,28188850,28190437,28191927,28193414,28194641,28196012,28197075,28198236,28199489,28200819,28202035,28203390,28204821,28206346,28207928,28209526,28210984,28212439,28213855,28215097,28216051,28217159,28218738,28220227,28220953,28222133,28223420,28224810,28226307,28227759,28229264,28230735,28231889,28233186,28234634,28236151,28237866,28239587,28241442,28243272,28245061,28246850,28248416,28250054,28251660,28253313,28254885,28256500,28257986,28259566,28261075,28262519,28263757,28265172,28266690,28268258,28269642,28271013,28272381,28273791,28275153,28276388,28276861,28277487,28277928,28278709,28280139,28281681,28283230,28284767,28286187,28287663,28289216,28290680,28292053,28293364,28294515,28295699,28297011,28298420,28299925,28301277,28302370,28303188,28303474,28304415,28306155,28308059,28309853,28311629,28313190,28314557,28315572,28316713,28318267,28319854,28321414,28322952,28324523,28326087,28327627,28329362,28331115,28332946,28334668,28336498,28338262,28340151,28341906,28343634,28345043,28346444,28347806,28349225,28350657,28352176,28353836,28355547,28357091,28358641,28360127,28361604,28363155,28364694,28366164,28367836,28369746,28371539,28373083,28374294,28375026,28375840,28376698,28377922,28379431,28381017,28382680,28384399,28385880,28387485,28388828,28390161,28391387,28392345,28392928,28393763,28394563,28395413,28396022,28397017,28398437,28399606,28400108,28400654,28401146,28402191,28403952,28405604,28406689,28407813,28408818,28410008,28411382,28412730,28413799,28414962,28415903,28416956,28418378,28419847,28421269,28422710,28424143,28425719,28427399,28429170,28430807,28432618,28434492,28436339,28437901,28439271,28440268,28441446,28442607,28443795,28444750,28445764,28446621,28447745,28448733,28449911,28451141,28452277,28452720,28453268,28453883,28454542,28455022,28455558,28456167,28456816,28457292,28457850,28458473,28459178,28459685,28460261,28460870,28461525,28461950,28462446,28463011,28464119,28465990,28467644,28468682,28469819,28470849,28471982,28473012,28474107,28475212,28476589,28478387,28480040,28481737,28483446,28485088,28486759,28488491,28490022,28491170,28492528,28494191,28495858,28497561,28499325,28501196,28502583,28502850,28503242,28503517,28503877,28504069,28504366,28504622,28504977,28505032,28505297,28505322,28505508,28505659,28505941,28506220,28506499,28506748,28507447,28508901,28510407,28512037,28513538,28514623,28515757,28516850,28517972,28519110,28520472,28521966,28523498,28524955,28526607,28528467,28530343,28532040,28533747,28535109,28536729,28538365,28540016,28541401,28542842,28544111,28545395,28547048,28548603,28550148,28551372,28552979,28554445,28555932,28557403,28558768,28560042,28561487,28562954,28564376,28565895,28567417,28568929,28570205,28571349,28572649,28573986,28575333,28576556,28577886,28578953,28580075,28581097,28582940,28584988,28587036,28589084,28591132,28593180,28595228,28597276,28599324,28601372,28603420,28605468,28607516,28609564,28611612,28613660,28615708,28617756,28619804,28621852,28623900,28625948,28627996,28630044,28632092,28634149,28636204,28638088,28640136,28642184,28644232,28646280,28648328,28650376,28652424,28654472,28656520,28658568,28660616,28662664,28664712,28666760,28668808,28670856,28672904,28674952,28677000,28679048,28681096,28683144,28685192,28687240,28689288,28691338,28693249,28695212,28697260,28699308,28701277,28703325,28705363,28707378,28709426,28711474,28713522,28715570,28717618,28719666,28721640,28723688,28725736,28727784,28729832,28731880,28733928,28735907,28737955,28740003,28742051,28744099,28746075,28748123,28750171,28752219,28754198,28756246,28758294,28760342,28762390,28764438,28766486,28768461,28770509,28772557,28774605,28776659,28778547,28780595,28782643,28784691,28786739,28788642,28790690,28792665,28794713,28796686,28798734,28800782,28802830,28804878,28806926,28808974,28811022,28813070,28815118,28817166,28819214,28821262,28823310,28825358,28827406,28829454,28831502,28833548,28835460,28837378,28839426,28841474,28843522,28845570,28847618,28849666,28851714,28853762,28855810,28857858,28859906,28861954,28864002,28866059,28868107,28870155,28872212,28874239,28876061,28878109,28880157,28882205,28884253,28886310,28888347,28890191,28892239,28894287,28896335,28898383,28900429,28902456,28904328,28906376,28908424,28910472,28912520,28914568,28916616,28918664,28920712,28922760,28924808,28926856,28928904,28930952,28933000,28935048,28937096,28939153,28941210,28943258,28945306,28947354,28949402,28951450,28953506,28955554,28957608,28959660,28961694,28963432,28965480,28967528,28969576,28971624,28973672,28975720,28977768,28979816,28981864,28983912,28985960,28988008,28990056,28992104,28994152,28996200,28998248,29000296,29002344,29004392,29006440,29008488,29010536,29012590,29014638,29016694,29018742,29020761,29022589,29024499,29026547,29028518,29030566,29032538,29034586,29036634,29038682,29040730,29042778,29044826,29046874,29048922,29050970,29053018,29055066,29057114,29059162,29061210,29063258,29065306,29067354,29069402,29071450,29073498,29075546,29077603,29079651,29081699,29083747,29085790,29087659,29089707,29091755,29093803,29095851,29097899,29099947,29101995,29104043,29106091,29108139,29110187,29112235,29114283,29116331,29118379,29120427,29122475,29124523,29126571,29128619,29130667,29132715,29134763,29136820,29138868,29140916,29142809,29144861,29146909,29148957,29151005,29152958,29155006,29157054,29159102,29161150,29163108,29165156,29167204,29169252,29171300,29173348,29175396,29177373,29179421,29181469,29183517,29185565,29187613,29189661,29191629,29193677,29195725,29197773,29199828,29201876,29203849,29205897,29207945,29209993,29212041,29214089,29216137,29218185,29220233,29222281,29224329,29226377,29228425,29230473,29232521,29234569,29236552,29238600,29240648,29242696,29244744,29246792,29248840,29250888,29252936,29254984,29257032,29259080,29261128,29263176,29265224,29267272,29269320,29271296,29273344,29275392,29277440,29279488,29281536,29283584,29285632,29287680,29289728,29291776,29293824,29295872,29297920,29299968,29302016,29304064,29306112,29308160,29310132,29312180,29314228,29316276,29318324,29320372,29322420,29324468,29326516,29328564,29330612,29332660,29334708,29336756,29338804,29340852,29342900,29344948,29346926,29348974,29351022,29353070,29355118,29357166,29359214,29361262,29363310,29365358,29367406,29369454,29371502,29373550,29375598,29377646,29379694,29381742,29383718,29385766,29387814,29389862,29391910,29393958,29396006,29398054,29400102,29402150,29404198,29406246,29408294,29410342,29412390,29414438,29416486,29418470,29420518,29422566,29424537,29426585,29428557,29430605,29432581,29434629,29436608,29438656,29440630,29442438,29444324,29446347,29448395,29450430,29452377,29454266,29456277,29458334,29460382,29462360,29464260,29466233,29468282,29470339,29472344,29474183,29476163,29478219,29480267,29482285,29484204,29486145,29488183,29490240,29492290,29494231,29496159,29498180,29500228,29502276,29504256,29506163,29508211,29510259,29512307,29514355,29516403,29518451,29520499,29522547,29524595,29526643,29528691,29530739,29532787,29534763,29536811,29538859,29540907,29542955,29545003,29547051,29549099,29551147,29553195,29555243,29557291,29559339,29561387,29563361,29565409,29567457,29569505,29571553,29573601,29575649,29577697,29579745,29581793,29583841,29585816,29587864,29589912,29591960,29594008,29596056,29598104,29600152,29602200,29604248,29606230,29608278,29610326,29612374,29614422,29616400,29618448,29620496,29622544,29624592,29626566,29628614,29630587,29632565,29634613,29636588,29638567,29640615,29642663,29644711,29646759,29648739,29650787,29652835,29654883,29656931,29658913,29660891,29662868,29664916,29666964,29669012,29671060,29673108,29675156,29677204,29679252,29681300,29683348,29685396,29687444,29689492,29691540,29693588,29695636,29697684,29699732,29701703,29703751,29705799,29707847,29709895,29711943,29713991,29716039,29718087,29720135,29722183,29724231,29726279,29728327,29730375,29732423,29734471,29736519,29738496,29740544,29742521,29744569,29746544,29748526,29750574,29752552,29754600,29756648,29758625,29760673,29762721,29764695,29766743,29768717,29770765,29772738,29774786,29776759,29778807,29780780,29782828,29784876,29786924,29788972,29791020,29793068,29795116,29797164,29799212,29801260,29803308,29805356,29807404,29809452,29811500,29813548,29815525,29817573,29819621,29821669,29823717,29825765,29827813,29829861,29831909,29833957,29836005,29838053,29840101,29842149,29844197,29846245,29848293,29850341,29852320,29854368,29856416,29858464,29860436,29862484,29864532,29866511,29868559,29870607,29872655,29874703,29876683,29878731,29880779,29882827,29884875,29886855,29888903,29890951,29892999,29895047,29897095,29899143,29901191,29903239,29905287,29907335,29909383,29911363,29913411,29915459,29917507,29919555,29921603,29923651,29925630,29927678,29929726,29931774,29933822,29935870,29937918,29939897,29941945,29943993,29946041,29948089,29950137,29952185,29954233,29956281,29958329,29960377,29962425,29964473,29966521,29968569,29970617,29972665,29974713,29976684,29978732,29980780,29982828,29984876,29986924,29988972,29991020,29993068,29995116,29997164,29999212,30001260,30003308,30005356,30007404,30009452,30011430,30013478,30015526,30017574,30019622,30021670,30023718,30025766,30027814,30029862,30031910,30033958,30036006,30038054,30040102,30042150,30044198,30046246,30048294,30050347,30052395,30054424,30056354,30058279,30060327,30062375,30064423,30066471,30068519,30070567,30072615,30074663,30076711,30078759,30080807,30082855,30084912,30086965,30089013,30091061,30093110,30095139,30097153,30099156,30101044,30102804,30104852,30106900,30108948,30110996,30113044,30115092,30117140,30119188,30121236,30123284,30125332,30127380,30129428,30131476,30133524,30135572,30137620,30139668,30141716,30143764,30145812,30147860,30149828,30151876,30153924,30155972,30158020,30160068,30162116,30164164,30166212,30168260,30170308,30172356,30174404,30176452,30178500,30180548,30182596,30184644,30186692,30188740,30190788,30192836,30194808,30196856,30198904,30200952,30203000,30205048,30207096,30209144,30211192,30213240,30215288,30217336,30219384,30221432,30223480,30225528,30227576,30229624,30231672,30233648,30235696,30237744,30239792,30241840,30243888,30245936,30247984,30250032,30252080,30254128,30256176,30258224,30260272,30262320,30264368,30266416,30268464,30270446,30272418,30274466,30276514,30278562,30280610,30282658,30284706,30286754,30288802,30290850,30292898,30294946,30296994,30299042,30301090,30303138,30305186,30307164,30309212,30311260,30313308,30315356,30317404,30319452,30321500,30323548,30325596,30327644,30329692,30331740,30333788,30335836,30337884,30339932,30341980,30343956,30346004,30348052,30350100,30352148,30354196,30356174,30358150,30360198,30362176,30364224,30366272,30368320,30370368,30372416,30374464,30376512,30378560,30380608,30382585,30384633,30386681,30388729,30390777,30392825,30394873,30396921,30398969,30401017,30403065,30405113,30407161,30409209,30411257,30413305,30415353,30417401,30419449,30421497,30423545,30425602,30427650,30429698,30431746,30433794,30435842,30437890,30439938,30441986,30444034,30446082,30448130,30450104,30452152,30454200,30456248,30458296,30460344,30462392,30464440,30466488,30468536,30470584,30472632,30474680,30476728,30478776,30480824,30482872,30484920,30486968,30489016,30491064,30493112,30495160,30497208,30499256,30501304,30503352,30505400,30507448,30509496,30511544,30513601,30515581,30517629,30519677,30521725,30523773,30525821,30527869,30529917,30531965,30533937,30535985,30538033,30540081,30542129,30544177,30546225,30548273,30550251,30552299,30554347,30556321,30558369,30560417,30562394,30564442,30566490,30568538,30570586,30572634,30574682,30576730,30578778,30580826,30582874,30584922,30586970,30589018,30590992,30593040,30595088,30597136,30599184,30601232,30603280,30605328,30607376,30609424,30611472,30613520,30615568,30617616,30619586,30621634,30623682,30625730,30627778,30629826,30631874,30633922,30635970,30638018,30639996,30642044,30644092,30646140,30648188,30650236,30652284,30654332,30656380,30658428,30660476,30662453,30664429,30666477,30668525,30670502,30672550,30674598,30676572,30678621,30680564,30682619,30684588,30686573,30688621,30690594,30692642,30694619,30696667,30698642,30700690,30702667,30704715,30706763,30708811,30710859,30712907,30714955,30717003,30719051,30721099,30723147,30725195,30727243,30729291,30731339,30733387,30735435,30737483,30739531,30741579,30743627,30745675,30747723,30749771,30751819,30753867,30755841,30757889,30759937,30761985,30764033,30766081,30768129,30770177,30772225,30774273,30776321,30778369,30780417,30782465,30784513,30786561,30788609,30790657,30792705,30794753,30796801,30798849,30800897,30802945,30804993,30807041,30809019,30811067,30813115,30815163,30817211,30819259,30821307,30823286,30825334,30827382,30829430,30831478,30833526,30835574,30837552,30839600,30841571,30843551,30845599,30847647,30849695,30851743,30853791,30855764,30857812,30859860,30861908,30863956,30865933,30867981,30870029,30872077,30874125,30876173,30878221,30880269,30882317,30884365,30886413,30888461,30890509,30892557,30894605,30896653,30898628,30900676,30902724,30904772,30906820,30908868,30910916,30912964,30915012,30917060,30919108,30921156,30923204,30925252,30927300,30929348,30931319,30933367,30935349,30937397,30939445,30941422,30943470,30945518,30947566,30949614,30951662,30953710,30955758,30957806,30959854,30961902,30963950,30965998,30968046,30970094,30972142,30974190,30976247,30978295,30980343,30982391,30984439,30986475,30988506,30990270,30992231,30994279,30996327,30998375,31000423,31002471,31004519,31006567,31008615,31010663,31012711,31014759,31016807,31018855,31020903,31022951,31024999,31027047,31029095,31031143,31033199,31035250,31037286,31039250,31041071,31043119,31045167,31047215,31049263,31051311,31053359,31055407,31057455,31059503,31061551,31063599,31065647,31067695,31069743,31071791,31073847,31075895,31077943,31079999,31082052,31084100,31086011,31087984,31090032,31092080,31094128,31096176,31098224,31100272,31102320,31104368,31106416,31108464,31110512,31112560,31114608,31116656,31118712,31120760,31122817,31124865,31126913,31128961,31130995,31132827,31134875,31136923,31138971,31141019,31143067,31145115,31147092,31149069,31151048,31153096,31155144,31157192,31159240,31161288,31163336,31165384,31167432,31169408,31171456,31173504,31175552,31177600,31179648,31181696,31183744,31185792,31187765,31189813,31191861,31193909,31195966,31198023,31199993,31202041,31204089,31206137,31208185,31210169,31212217,31214265,31216313,31218361,31220409,31222457,31224505,31226553,31228601,31230649,31232697,31234745,31236793,31238841,31240889,31242937,31244985,31247033,31249081,31251129,31253177,31255225,31257273,31259210,31261258,31263306,31265354,31267402,31269450,31271498,31273546,31275594,31277642,31279690,31281738,31283786,31285834,31287882,31289930,31291978,31294026,31296074,31298122,31300170,31302218,31304266,31306204,31308252,31310300,31312348,31314396,31316444,31318492,31320540,31322588,31324636,31326684,31328732,31330780,31332828,31334876,31336924,31338972,31341020,31343068,31345116,31347171,31349219,31351267,31353273,31355160,31357208,31359256,31361304,31363352,31365400,31367448,31369496,31371544,31373592,31375640,31377688,31379736,31381784,31383832,31385880,31387928,31389976,31392024,31394072,31396120,31398177,31400234,31402015,31404063,31406040,31408088,31410064,31412112,31414088,31416136,31418107,31420155,31422203,31424251,31426299,31428354,31430247,31432295,31434343,31436391,31438439,31440487,31442535,31444485,31446533,31448581,31450629,31452677,31454725,31456773,31458821,31460869,31462917,31464899,31466947,31468995,31471043,31473091,31475139,31477187,31479235,31481283,31483331,31485379,31487350,31489326,31491302,31493274,31495255,31497303,31499195,31501174,31503222,31505270,31507318,31509366,31511414,31513462,31515510,31517558,31519606,31521654,31523702,31525750,31527798,31529846,31531894,31533942,31535990,31537961,31540009,31542057,31544105,31546153,31548210,31550258,31552306,31554354,31556402,31558450,31560498,31562546,31564594,31566642,31568690,31570738,31572716,31574764,31576812,31578860,31580908,31582956,31585004,31587052,31589100,31591148,31593196,31595244,31597292,31599340,31601388,31603436,31605414,31607462,31609510,31611558,31613606,31615654,31617702,31619750,31621798,31623846,31625894,31627942,31629990,31632038,31634086,31636134,31638115,31640163,31642211,31644259,31646307,31648283,31650331,31652379,31654427,31656475,31658448,31660496,31662544,31664592,31666640,31668688,31670736,31672784,31674832,31676880,31678928,31680976,31683024,31685072,31687120,31689168,31691216,31693264,31695312,31697291,31699339,31701387,31703435,31705483,31707531,31709579,31711627,31713675,31715723,31717771,31719819,31721867,31723915,31725963,31728011,31730059,31732107,31734155,31736203,31738181,31740229,31742277,31744325,31746373,31748421,31750397,31752445,31754493,31756541,31758589,31760637,31762626,31764674,31766722,31768770,31770818,31772866,31774914,31776962,31779010,31781058,31783106,31785154,31787202,31789250,31791298,31793346,31795394,31797371,31799419,31801467,31803515,31805563,31807611,31809659,31811707,31813755,31815803,31817851,31819899,31821947,31823995,31826043,31828091,31830139,31832187,31834160,31836208,31838256,31840304,31842352,31844400,31846448,31848496,31850473,31852521,31854569,31856617,31858665,31860713,31862761,31864809,31866857,31868835,31870883,31872931,31874979,31877027,31879075,31881123,31883171,31885219,31887267,31889315,31891363,31893411,31895459,31897507,31899555,31901603,31903575,31905623,31907671,31909719,31911767,31913815,31915863,31917911,31919959,31922007,31924055,31926103,31928151,31930199,31932247,31934295,31936277,31938325,31940307,31942279,31944327,31946375,31948423,31950412,31952460,31954508,31956490,31958538,31960512,31962486,31964465,31966455,31968250,31970298,31972268,31974248,31976296,31978344,31980392,31982440,31984488,31986543,31988591,31990639,31992684,31994688,31996564,31998447,32000495,32002543,32004591,32006639,32008687,32010735,32012783,32014831,32016879,32018930,32020850,32022806,32024854,32026902,32028950,32030998,32033046,32035094,32037142,32039190,32041168,32043216,32045264,32047312,32049360,32051408,32053456,32055504,32057552,32059600,32061582,32063630,32065678,32067726,32069774,32071749,32073797,32075845,32077893,32079941,32081917,32083965,32086013,32088061,32090109,32092157,32094157,32096114,32098162,32100210,32102258,32104306,32106354,32108180,32110201,32112249,32114297,32116345,32118393,32120441,32122497,32124545,32126593,32128641,32130689,32132737,32134785,32136833,32138881,32140929,32142977,32145025,32147073,32149121,32151169,32153217,32155265,32157313,32159361,32161409,32163454,32165350,32167400,32169448,32171496,32173544,32175592,32177640,32179688,32181736,32183784,32185832,32187880,32189928,32191976,32194024,32196072,32198120,32200168,32202216,32204264,32206312,32208360,32210408,32212456,32214504,32216552,32218600,32219983,32221027,32222541,32223967,32225394,32226989,32228169,32229196,32230533,32231942,32233389,32234831,32236415,32238289,32240166,32242054,32243931,32245809,32247633,32249687,32251735,32253783,32255831,32257879,32259927,32261975,32264023,32266071,32268119,32270167,32272215,32274263,32276311,32278359,32280407,32282455,32284503,32286551,32288529,32290577,32292625,32294673,32296721,32298769,32300817,32302865,32304913,32306961,32309009,32311057,32313105,32315153,32317201,32319249,32321297,32323345,32325393,32327441,32329415,32331463,32333511,32335559,32337607,32339655,32341703,32343751,32345799,32347847,32349895,32351943,32353991,32356039,32358087,32360135,32362183,32364231,32366279,32368260,32370308,32372356,32374404,32376452,32378500,32380548,32382596,32384653,32386701,32388749,32390797,32392845,32394893,32396941,32398989,32401037,32403085,32405133,32407181,32409157,32411205,32413253,32415301,32417349,32419397,32421445,32423493,32425541,32427589,32429637,32431685,32433733,32435781,32437829,32439877,32441925,32443973,32446021,32448005,32450053,32452101,32454149,32456197,32458245,32460293,32462341,32464389,32466437,32468485,32470533,32472581,32474629,32476677,32478725,32480773,32482821,32484869,32486917,32488891,32490939,32492987,32495035,32497083,32499131,32501179,32503227,32505275,32507323,32509371,32511419,32513467,32515515,32517563,32519611,32521659,32523707,32525755,32527803,32529775,32531823,32533871,32535919,32537967,32540015,32542063,32544111,32546159,32548207,32550255,32552303,32554351,32556399,32558447,32560495,32562543,32564591,32566639,32568617,32570665,32572713,32574761,32576733,32578781,32580752,32582556,32583917,32585321,32587084,32588318,32589481,32591043,32592424,32593521,32594315,32595219,32595965,32596800,32597718,32599194,32601242,32602295,32602320,32602345,32603292,32605340,32607397,32607559,32607584,32608119,32609263,32610474,32611358,32612839,32614337,32615060,32615969,32616868,32617756,32619804,32621747,32623755,32625803,32627851,32629899,32631947,32633995,32635954,32638002,32640050,32641989,32644037,32646085,32648085,32650133,32652181,32654229,32656277,32658325,32660373,32662379,32664257,32666243,32668291,32670188,32672192,32674145,32676151,32678152,32680161,32682209,32684257,32686305,32688353,32690300,32692137,32694185,32696233,32698281,32700329,32702335,32704383,32706252,32708300,32710348,32712396,32714396,32716444,32718446,32720494,32722542,32724590,32726638,32728686,32730734,32732782,32734785,32736833,32738881,32740929,32742977,32745025,32747073,32749075,32751123,32753171,32755170,32757045,32759093,32761141,32763189,32765237,32767285,32769333,32771337,32773385,32775433,32777481,32779529,32781537,32783585,32785462,32787510,32789558,32791561,32793451,32795416,32797464,32799407,32801455,32803373,32805306,32807354,32809402,32811450,32813498,32815546,32817594,32819642,32821690,32823675,32825723,32827771,32829770,32831818,32833757,32835805,32837747,32839722,32841676,32843616,32845563,32847432,32849372,32851420,32853468,32855419,32857467,32859515,32861563,32863571,32865619,32867611,32869659,32871707,32873755,32875803,32877851,32879899,32881947,32883995,32886043,32888091,32890139,32892187,32894195,32896243,32898291,32900339,32902387,32904435,32906439,32908487,32910535,32912583,32914631,32916679,32918727,32920676,32922724,32924772,32926820,32928868,32930916,32932964,32935012,32936972,32938935,32940983,32942862,32944910,32946958,32949006,32951054,32953102,32955150,32957198,32959246,32961236,32963284,32965332,32967380,32969378,32971426,32973436,32975415,32977463,32979511,32981559,32983607,32985655,32987703,32989751,32991747,32993795,32995843,32997891,32999939,33001987,33004035,33006083,33008131,33010179,33012227,33014275,33016323,33018371,33020419,33022467,33024515,33026517,33028479,33030420,33032419,33034352,33036357,33038405,33040453,33042322,33044193,33046241,33048289,33050337,33052385,33054389,33056437,33058485,33060533,33062581,33064629,33066677,33068492,33070444,33072382,33074430,33076434,33078279,33080112,33082160,33084208,33086256,33088304,33090352,33092356,33094366,33096414,33098287,33100335,33102383,33104431,33106479,33108527,33110575,33112623,33114671,33116674,33118722,33120770,33122818,33124866,33126914,33128962,33131010,33133058,33135106,33137154,33139202,33141207,33143255,33145303,33147351,33149399,33151447,33153387,33155435,33157483,33159452,33161205,33162790,33164838,33166886,33168934,33170982,33172915,33174963,33177011,33179059,33181007,33183055,33185103,33187053,33189101,33191149,33193149,33195106,33197093,33199041,33201089,33203137,33204884,33206932,33208807,33210855,33212903,33214951,33216999,33219047,33221095,33223061,33225109,33227157,33229205,33231253,33233301,33235349,33237397,33239398,33241446,33243494,33245542,33247590,33249638,33251592,33253640,33255688,33257736,33259784,33261656,33263704,33265752,33267722,33269770,33271670,33273718,33275717,33277715,33279656,33281704,33283694,33285742,33287790,33289838,33291886,33293934,33295982,33297976,33300024,33302026,33304082,33306130,33308178,33310226,33312233,33314281,33316329,33318377,33320425,33322473,33324421,33326469,33328517,33330523,33332571,33334489,33336522,33338570,33340618,33342666,33344671,33346719,33348767,33350815,33352818,33354866,33356914,33358847,33360895,33362843,33364891,33366847,33368798,33370806,33372744,33374792,33376732,33378780,33380828,33382876,33384721,33386686,33388644,33390646,33392694,33394742,33396790,33398838,33400886,33402829,33404877,33406756,33408762,33410729,33412623,33414671,33416719,33418767,33420815,33422863,33424885,33426883,33428931,33430930,33432870,33434757,33436667,33438610,33440658,33442706,33444754,33446802,33448850,33450898,33452736,33454784,33456832,33458880,33460884,33462932,33464980,33467028,33468970,33471018,33472958,33475006,33476962,33479010,33481058,33483064,33485112,33487160,33489208,33491209,33493257,33495305,33497307,33499355,33501403,33503451,33505499,33507547,33509545,33511593,33513641,33515642,33517690,33519738,33521786,33523657,33525705,33527753,33529801,33531849,33533897,33535897,33537945,33539993,33542041,33544028,33546076,33548024,33550072,33552074,33553943,33555885,33557933,33559981,33561860,33563786,33565834,33567882,33569886,33571934,33573982,33575986,33578034,33580034,33582082,33584137,33586185,33588233,33590281,33592329,33594377,33596425,33598370,33600418,33602466,33604514,33606562,33608610,33610608,33612656,33614619,33616667,33618715,33620763,33622811,33624868,33626743,33628791,33630839,33632650,33634531,33636579,33638627,33640675,33642723,33644771,33646263,33647871,33649915,33651963,33654011,33655960,33658008,33660056,33662104,33664105,33666153,33667973,33670000,33672048,33673937,33675797,33677845,33679890,33681799,33683672,33685720,33687768,33689816,33691773,33693642,33695690,33697738,33699786,33701834,33703882,33705880,33707928,33709930,33711957,33714005,33715960,33717974,33720022,33722048,33724075,33726123,33728171,33730128,33732071,33733993,33736041,33738089,33740137,33742185,33744233,33746281,33748280,33750328,33752376,33754424,33756472,33758474,33760522,33762570,33764618,33766617,33768665,33770713,33771922,33773970,33776018,33778066,33780114,33782119,33784167,33786215,33788263,33790266,33792314,33794362,33796410,33798458,33800506,33802512,33804560,33806608,33808656,33810704,33812752,33814800,33816799,33818847,33820895,33822943,33824991,33826997,33829045,33831093,33833141,33835072,33837120,33839168,33841216,33843264,33845272,33847320,33849368,33851416,33853421,33855469,33857425,33859473,33861521,33863569,33865617,33867665,33869351,33871228,33873276,33875278,33877326,33879256,33881190,33883114,33885162,33887210,33889258,33891306,33893184,33895232,33897280,33899328,33901376,33903424,33905472,33907520,33909568,33911616,33913664,33915712,33917760,33919808,33921856,33923904,33925952,33927831,33929879,33931927,33933799,33935856,33937904,33939952,33941827,33943875,33945923,33947971,33950019,33952067,33954115,33956163,33958039,33959918,33961793,33963841,33965714,33967216,33969264,33971188,33973191,33975239,33977287,33979229,33981277,33983325,33985323,33987263,33989311,33991180,33993228,33995227,33997229,33999277,34001275,34003219,34005224,34007272,34009223,34011271,34013319,34015367,34017370,34019418,34021466,34023417,34025465,34027513,34029561,34031501,34033549,34035597,34037484,34039341,34041389,34043437,34045485,34047533,34049536,34051584,34053632,34055680,34057683,34059731,34061779,34063732,34065780,34067828,34069769,34071817,34073767,34075707,34077755,34079803,34081773,34083821,34085869,34087808,34089810,34091858,34093836,34095770,34097818,34099866,34101914,34103841,34105746,34107794,34109842,34111721,34113769,34115817,34117686,34119734,34121782,34123830,34125878,34127926,34129974,34132022,34134070,34136078,34138126,34140174,34142222,34144270,34146274,34148322,34150370,34152418,34154420,34156468,34158364,34160412,34162460,34164508,34166556,34168538,34170499,34172509,34174449,34176497,34178426,34180344,34182340,34184388,34186436,34188484,34190532,34192580,34194628,34196676,34198724,34200772,34202820,34204868,34206916,34208964,34211012,34213011,34214959,34216915,34218963,34221011,34223059,34225107,34227155,34229203,34231159,34233207,34235255,34237303,34239351,34241399,34243447,34245382,34247430,34249478,34251526,34253516,34255564,34257612,34259660,34261708,34263756,34265804,34267852,34269900,34271948,34273996,34276044,34278092,34280100,34282148,34284196,34286244,34288292,34290340,34292388,34294436,34296484,34298532,34300580,34302628,34304676,34306682,34308730,34310778,34312826,34314874,34316922,34318970,34321018,34323066,34325114,34327162,34329168,34331216,34333264,34335312,34337360,34339408,34341456,34343504,34345552,34347600,34349601,34351649,34353697,34355745,34357793,34359841,34361889,34363937,34365985,34368033,34370036,34372084,34374132,34376180,34378228,34380276,34382324,34384346,34386402,34388450,34390498,34392546,34394594,34396642,34398690,34400696,34402744,34404792,34406840,34408888,34410936,34412984,34414991,34417039,34419087,34421135,34423183,34425231,34427279,34429278,34431326,34433374,34435422,34437404,34439452,34441385,34443263,34445311,34447359,34449407,34451278,34453232,34455280,34457243,34459291,34461339,34463387,34465391,34467439,34469487,34471535,34473583,34475631,34477679,34479678,34481726,34483774,34485822,34487870,34489812,34491860,34493908,34495956,34498004,34500009,34502057,34503995,34506043,34507992,34510040,34512088,34514089,34516137,34518185,34520193,34522241,34524289,34526337,34528334,34530382,34532430,34534299,34536347,34538395,34540443,34542491,34544539,34546587,34548635,34550683,34552680,34554728,34556776,34558824,34560872,34562920,34564968,34567016,34569024,34571008,34573056,34575053,34577101,34579099,34581147,34583091,34585139,34587187,34588726,34590774,34592718,34594766,34596814,34598862,34600910,34602958,34605006,34607054,34609102,34611150,34613198,34615246,34617294,34619342,34621390,34623391,34625439,34627487,34629535,34631583,34633631,34635679,34637727,34639775,34641823,34643825,34645873,34647921,34649969,34652017,34654065,34656113,34658161,34660209,34662257,34663686,34664892,34666940,34668894,34670942,34672717,34674765,34676813,34678861,34680909,34682957,34685005,34686978,34689026,34691074,34693122,34695170,34697218,34699266,34701268,34703316,34705364,34707412,34709460,34711508,34713556,34715604,34717603,34719651,34721699,34723747,34725795,34727843,34729839,34731887,34733935,34735983,34738031,34740079,34742075,34744123,34746171,34748219,34750104,34752152,34754200,34756248,34758296,34760344,34762392,34764440,34766488,34768492,34770540,34772588,34774636,34776692,34778740,34780742,34782790,34784838,34786844,34788892,34790940,34792988,34795036,34797084,34799132,34801003,34803051,34805099,34807147,34809195,34811243,34813108,34815156,34817204,34819252,34821300,34823348,34825396,34827444,34829492,34831368,34833416,34835464,34837512,34839385,34841433,34843481,34845529,34847577,34849625,34851673,34853721,34855769,34857817,34859865,34861913,34863961,34866009,34867952,34869821,34871869,34873917,34875965,34878013,34880021,34882069,34884117,34886165,34888213,34890221,34892269,34894317,34896365,34898413,34900413,34902370,34904371,34906419,34908467,34910244,34912292,34914340,34916388,34918436,34920403,34922283,34923785,34925833,34927881,34929929,34931806,34933854,34935902,34937950,34939998,34942046,34944094,34946142,34948145,34950193,34952149,34954156,34955996,34957983,34960031,34962079,34963950,34965998,34968046,34970094,34972142,34974190,34976238,34978193,34980241,34982289,34984337,34986385,34988433,34990440,34992488,34994364,34996412,34998414,35000462,35002334,35004391,35006439,35008487,35010535,35012583,35014631,35016679,35018727,35020775,35022823,35024871,35026875,35028923,35030971,35033019,35035067,35037115,35039163,35041211,35043259,35045267,35047315,35049363,35051411,35053459,35055507,35057555,35059559,35061607,35063478,35065349,35067397,35069445,35071493,35073541,35075589,35077597,35079645,35081693,35083741,35085789,35087837,35089885,35091933,35093935,35095983,35098031,35100079,35102127,35104175,35106223,35108228,35110276,35112324,35114372,35116429,35118477,35120525,35122529,35124577,35126625,35128673,35130721,35132769,35134817,35136821,35138869,35140917,35142915,35144963,35147011,35149059,35151107,35153155,35155203,35157251,35159299,35161347,35163356,35165404,35167452,35169500,35171548,35173596,35175644,35177692,35179740,35181788,35183836,35185846,35187894,35189942,35191990,35194038,35196086,35198134,35200182,35202230,35204278,35206278,35208326,35210374,35212422,35214470,35216518,35218566,35220614,35222662,35224710,35226758,35228806,35230854,35232902,35234901,35236949,35238997,35241045,35243093,35245141,35247141,35249189,35251237,35253285,35255293,35257199,35259073,35261055,35263024,35265072,35267120,35269118,35271166,35273214,35275262,35277310,35279358,35281406,35283454,35285502,35287504,35289552,35291600,35293648,35295696,35297744,35299745,35301793,35303841,35305889,35307937,35309936,35311984,35314032,35316080,35318128,35320130,35322178,35324226,35326212,35328260,35330308,35332265,35334313,35336361,35338409,35340457,35342505,35344553,35346601,35348649,35350697,35352699,35354747,35356795,35358843,35360891,35362939,35364987,35367035,35369083,35371131,35373129,35375177,35377225,35379273,35381321,35383369,35385417,35387465,35389513,35391561,35393609,35395611,35397659,35399707,35401755,35403803,35405851,35407899,35409906,35411954,35413916,35415964,35418012,35420060,35422108,35424107,35426155,35428046,35430094,35432142,35434190,35436247,35438295,35440352,35442400,35444448,35446496,35448544,35450592,35452640,35454697,35456745,35458793,35460766,35462814,35464862,35466910,35468850,35470898,35472843,35474807,35476855,35478903,35480951,35482999,35485047,35487095,35489143,35491191,35493141,35495189,35497237,35499083,35501081,35503129,35505177,35507150,35509198,35511246,35513294,35515342,35517390,35519438,35521486,35523462,35525510,35527558,35529606,35531654,35533702,35535659,35537232,35539280,35541226,35543195,35545243,35547291,35549339,35551387,35553435,35555413,35557419,35559467,35561477,35563525,35565448,35567496,35569544,35571470,35573518,35575566,35577614,35579517,35581565,35583613,35585661,35587709,35589702,35591750,35593752,35595800,35597857,35599745,35601389,35603437,35605435,35607483,35609531,35611583,35613564,35615612,35617660,35619708,35621756,35623751,35625799,35627847,35629895,35631866,35633914,35635962,35638010,35640058,35642115,35644115,35646047,35648095,35650143,35652191,35654239,35656287,35658344,35660392,35662440,35664488,35666536,35668535,35670583,35672631,35674619,35676667,35678667,35680715,35682763,35684811,35686859,35688907,35690955,35693003,35695051,35697099,35699147,35701195,35703243,35705291,35707339,35709387,35711435,35713483,35715531,35717579,35719580,35721628,35723676,35725724,35727772,35729820,35731868,35733916,35735964,35738012,35740060,35742108,35744156,35746204,35748252,35750300,35752348,35754396,35756444,35758492,35760540,35762588,35764636,35766684,35768732,35770780,35772783,35774831,35776879,35778927,35780975,35783023,35785071,35787119,35789167,35791162,35793210,35795258,35797306,35799354,35801402,35803450,35805498,35807546,35809539,35811587,35813635,35815683,35817731,35819779,35821827,35823875,35825923,35827971,35830019,35832067,35834115,35836163,35838211,35840259,35842307,35844355,35846403,35848451,35850499,35852547,35854545,35856593,35858641,35860689,35862690,35864738,35866738,35868786,35870834,35872833,35874881,35876929,35878980,35880891,35882877,35884925,35886788,35888836,35890884,35892766,35894531,35896579,35898627,35900675,35902723,35904771,35906768,35908816,35910864,35912912,35914960,35916956,35919004,35921052,35923100,35925148,35927196,35929244,35931292,35933293,35935341,35937389,35939437,35941485,35943533,35945581,35947629,35949686,35951688,35953736,35955784,35957832,35959880,35961877,35963925,35965973,35967963,35970011,35972009,35974014,35976062,35978110,35980158,35982109,35984157,35986205,35988253,35990301,35992349,35994351,35996407,35998451,36000390,36002383,36004431,36006479,36008527,36010516,36012564,36014612,36016602,36018650,36020644,36022692,36024691,36026739,36028787,36030835,36032883,36034931,36036979,36038973,36041021,36043069,36045117,36047165,36049213,36051261,36053309,36055357,36057405,36059403,36061460,36063508,36065441,36067489,36069537,36071585,36073633,36075681,36077680,36079728,36081776,36083824,36085822,36087870,36089918,36091966,36094014,36096062,36098110,36100158,36102206,36104254,36106302,36108350,36110398,36112446,36114494,36116491,36118539,36120587,36122635,36124630,36126678,36128726,36130774,36132822,36134870,36136918,36138966,36141014,36143062,36145110,36147158,36149206,36151254,36153302,36155346,36157361,36159409,36161457,36163505,36165553,36167601,36169649,36171697,36173697,36175745,36177793,36179841,36181889,36183874,36185922,36187970,36190018,36192066,36194114,36196162,36198210,36200258,36202250,36204298,36206346,36208394,36210442,36212490,36214538,36216534,36218582,36220630,36222678,36224643,36226642,36228690,36230738,36232786,36234834,36236882,36238930,36240978,36243026,36245074,36247122,36249170,36251218,36253266,36255314,36257362,36259410,36261412,36263460,36265508,36267556,36269604,36271652,36273700,36275748,36277796,36279787,36281835,36283883,36285931,36287979,36290027,36292075,36294132,36296082,36298130,36300178,36302226,36304274,36306322,36308370,36310374,36312422,36314470,36316518,36318566,36320614,36322662,36324710,36326758,36328756,36330804,36332852,36334900,36336948,36338996,36341044,36343092,36345140,36347188,36349236,36351284,36353272,36355320,36357368,36359416,36361464,36363512,36365560,36367608,36369656,36371704,36373752,36375800,36377848,36379896,36381944,36383939,36385987,36388035,36390083,36392131,36394179,36396227,36398275,36400323,36402371,36404419,36406476,36408484,36410350,36412398,36414446,36416441,36418489,36420537,36422585,36424633,36426681,36428729,36430777,36432825,36434873,36436921,36438969,36441017,36443065,36445113,36447161,36449209,36451206,36453254,36455302,36457350,36459398,36461446,36463494,36465492,36467540,36469588,36471636,36473631,36475679,36477677,36479725,36481773,36483764,36485812,36487860,36489908,36491965,36494021,36496019,36498067,36500115,36502163,36504211,36506206,36508254,36510302,36512350,36514398,36516446,36518494,36520542,36522590,36524638,36526686,36528734,36530782,36532830,36534878,36536926,36538974,36541022,36543016,36545064,36547112,36549160,36551208,36553256,36555304,36557352,36559400,36561448,36563496,36565544,36567592,36569640,36571688,36573456,36574535,36575657,36576851,36578031,36579841,36580813,36581536,36582549,36584597,36586645,36588081,36588115,36588149,36588183,36588217,36588251,36588285,36588767,36589137,36589621,36590153,36590752,36591476,36592121,36592624,36593206,36593781,36594412,36594976,36595651,36596304,36596936,36597619,36598267,36598937,36599716,36600585,36601322,36602091,36602813,36603830,36604886,36605833,36606767,36607678,36608636,36609614,36610545,36611547,36612546,36613481,36614447,36615268,36616184,36617525,36618715,36620012,36621149,36622478,36623751,36624903,36626045,36627190,36628356,36629501,36630679,36631826,36633006,36634147,36635121,36636350,36637744,36639115,36639953,36640734,36641522,36642383,36643671,36644905,36646205,36647503,36647818,36647861,36648012,36648058,36648280,36648377,36648497,36648545,36648593,36648641,36648689,36648811,36648860,36649052,36649233,36649280,36649327,36649422,36649469,36649516,36649563,36649610,36649721,36649763,36649804,36649851,36649975,36650022,36650066,36650245,36650295,36650345,36650393,36650438,36650481,36650580,36650626,36650738,36650786,36650834,36650882,36651014,36651060,36651106,36651152,36651199,36651310,36651355,36651400,36651445,36651490,36651549,36651629,36651674,36651719,36651761,36651801,36651913,36651963,36652013,36652124,36652166,36652276,36652329,36652382,36652431,36652477,36652581,36652620,36652665,36652711,36652820,36652866,36652912,36652958,36653004,36653050,36653166,36653213,36653260,36653356,36653401,36653446,36653491,36653536,36653640,36653702,36654429,36655603,36656106,36656147,36656682,36657814,36658432,36658476,36658831,36659972,36660729,36660870,36661687,36662487,36663241,36664109,36665028,36665808,36667022,36668252,36669063,36669901,36670824],\"sizes\":[1150,1124,895,1017,920,853,934,1100,965,979,875,947,900,1174,1168,1088,1128,867,1132,1301,1190,965,1092,1332,1404,1545,1498,1289,1357,1091,1261,1529,1246,1242,1128,1339,1377,1437,1514,1306,1264,1138,1153,1374,1373,1409,1540,1459,1033,1109,1203,1354,1411,1451,1568,1309,1074,1120,1159,1491,1379,1523,1529,1051,1084,1115,1237,1500,1471,1522,1429,1062,1263,1138,1435,1326,1198,1017,888,960,936,923,899,954,944,597,974,773,700,1010,910,919,960,1030,585,431,336,340,427,363,373,757,566,559,718,614,618,608,635,959,941,846,742,710,929,997,825,582,912,833,862,513,645,757,574,753,812,712,810,673,834,534,670,647,416,737,622,693,787,547,908,578,469,626,757,666,509,489,678,453,442,440,606,642,790,424,433,890,855,1168,508,480,507,753,745,892,680,659,654,779,784,513,870,831,616,621,687,866,700,489,532,814,696,819,971,993,815,838,515,845,901,861,886,876,861,837,826,916,769,809,874,827,889,825,1030,775,919,915,920,925,929,945,967,979,978,977,968,961,960,967,956,1005,888,837,803,803,868,843,804,822,820,696,847,850,878,688,822,719,792,705,692,579,1073,758,748,786,417,628,1983,1809,803,1137,2048,1332,607,1698,1933,882,943,1715,1341,1883,2048,2005,2014,2017,2033,2048,2012,2048,2033,2030,2048,2053,2041,2048,2052,2039,2054,1803,2048,2052,2048,2053,2048,2031,1569,340,448,406,1210,1200,1307,1225,902,887,1089,1078,1049,758,1105,1190,1202,978,2048,2057,2048,2055,2055,2048,2048,2056,2048,2048,2048,2048,2053,2057,1459,1552,1486,1346,1494,1311,1377,1491,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1895,2048,2048,2048,2048,2048,2048,2048,2048,1899,2048,2048,2048,2048,2048,2048,2022,1957,2048,2048,2048,2048,2048,2048,1899,2048,2048,2048,2048,2048,2048,1900,2048,2048,2048,2048,2048,2048,2048,2025,1935,2048,2048,2048,2048,2048,2048,2048,2048,2048,1201,2047,2048,2057,2048,2048,2048,2048,2048,2055,158,564,2024,2042,2048,2057,1883,1465,2057,1691,1342,1538,1170,208,220,309,220,249,213,220,214,212,231,214,1394,1649,1562,1798,1947,1904,1895,1870,1902,1655,1111,1418,1108,979,1031,1147,1041,1061,1093,1077,1183,1339,1137,1377,993,1078,1110,1031,1170,1356,1131,1233,1004,1155,1057,1061,1123,1133,1023,1045,1310,1190,1347,1046,1549,1632,1876,1904,2048,2048,2048,2048,2048,2048,2048,2029,1855,2048,2048,2048,2048,2014,1892,1931,1491,1167,831,553,501,1494,1981,2050,1737,1430,1217,1191,1108,1917,1997,1345,1206,1184,830,1913,1293,1441,1466,622,117,287,1397,2048,2052,1985,2048,2048,2035,2051,2044,1950,1537,1776,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,2056,2048,1920,1559,1800,1858,2048,2048,1921,2001,2048,2057,1856,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1885,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2046,2048,2040,2018,1985,1976,1347,1372,1417,1411,1386,1388,1480,1452,1535,1667,1660,1481,1466,1419,1317,1578,1685,1730,1728,1645,1637,1483,1464,1599,1640,1649,1663,1657,1563,1555,1437,1607,1885,1280,1348,1291,1204,1198,1213,1132,1235,1466,1431,1388,1314,1297,1232,1303,1458,1535,1662,1568,1572,1600,1535,1557,1589,1518,1526,1505,1456,1400,1375,1367,1477,1312,1255,1392,1266,1069,1254,1126,1262,1175,1190,1272,1113,1279,1905,2057,2030,1987,2027,2042,2011,2024,1975,2035,1998,2056,2042,1980,2048,2017,2024,2028,1979,2048,2049,1971,2033,2026,2048,2034,1975,2048,2035,1994,2048,2057,1982,2048,2034,1995,2048,2040,1973,2048,2048,2026,2028,2056,1970,2025,1981,2048,2048,2027,2048,2051,1863,1796,2048,2002,1879,1842,2048,1855,1788,2048,2048,2048,1875,1760,2044,1880,1782,2052,1779,1759,1866,1695,1609,1489,1297,1515,509,561,832,508,747,898,1305,919,937,863,1102,1148,993,1226,1031,688,907,1186,1313,1280,1245,1329,803,1046,996,1065,960,1041,562,536,606,622,591,575,979,782,774,898,981,1059,823,828,1002,817,947,794,858,840,832,1024,842,799,883,836,1017,644,716,774,711,1123,581,744,515,552,557,694,729,824,806,637,675,934,1181,785,948,882,937,960,519,1021,621,908,999,981,863,723,974,274,652,741,1010,402,547,847,708,666,550,629,705,915,801,649,627,592,1141,1215,1213,1249,1077,1195,1278,1422,1684,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,683,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1508,1532,1561,1547,1524,1503,1502,1567,1497,1511,1543,1640,1720,1776,1775,1733,1447,1739,1557,1706,1871,1761,1686,1864,1751,1820,1868,1759,1545,1883,1663,1701,1722,1573,1537,1698,1572,1814,1875,1670,1502,1355,1328,1241,1312,1449,1468,1467,1419,1469,1473,1484,1498,1394,1357,1432,1454,1969,1631,1495,1312,1512,1519,1566,1441,1464,1369,1171,1328,1533,1429,1183,1284,1421,1565,1419,1464,1441,1373,1396,1426,1506,1435,1498,1482,1466,1472,1474,1579,1498,1595,1437,1592,1549,1544,1527,1482,1409,1618,1568,1435,1445,1371,1603,1679,1650,1631,1623,1536,1589,1714,1602,1504,1651,1562,1818,1622,1094,1122,1134,1101,959,1012,1062,1084,1129,1178,1088,1223,1258,1345,1471,1487,1554,1607,1540,1600,1584,1453,1351,1585,1600,1523,1538,1417,1394,1419,1263,1328,1387,1237,1399,1458,1515,1530,1500,1516,1374,1240,1173,1011,1044,1053,1114,1168,1192,1013,886,1046,996,875,972,1024,1384,1874,1068,1075,1151,1100,978,971,1071,1097,1117,1226,1282,1308,1177,1500,1566,1503,1507,1502,1471,1594,1592,1507,1462,1611,1628,1377,1504,1521,1560,1649,1667,1835,1878,1869,1608,1766,1820,1759,1543,1655,1361,1404,1317,989,1082,1136,1077,1136,1187,1101,829,1011,1040,912,944,968,1127,2048,1664,1675,1675,1747,1784,1741,1730,1789,1784,1834,1814,1897,1761,1743,1794,1777,1824,1820,1823,1794,1880,1799,1759,1777,1765,1751,1774,1680,1787,1788,1751,1734,1788,1813,1768,1756,1755,1716,1732,1699,1743,1728,1725,1701,1622,1851,1878,1881,1844,1810,1832,1876,1865,1841,1770,1686,1560,930,1935,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2049,2019,2026,2043,2048,2057,2048,2048,2054,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2035,2015,2044,2048,2048,2055,2048,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2057,2043,2016,2034,2056,2057,2048,2056,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2010,2026,2046,2054,2057,2048,2054,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1660,582,625,623,657,685,714,841,993,1021,1022,877,1375,1434,1588,1647,1363,1275,1535,1647,1666,1787,1627,1582,1724,1665,1627,1773,1609,1615,1756,1706,1728,1799,1684,1614,1665,1756,1752,1781,1723,1348,1471,1356,1196,1205,1424,1310,1233,1267,1258,1358,1487,1584,1512,1559,1584,1677,2048,1405,1405,1495,1554,1472,1467,1550,1481,1451,1516,1630,1600,1395,1621,1656,1660,1699,1787,1721,1664,1703,1573,1582,1500,1568,1613,1609,1584,1610,1632,1578,1548,1551,1653,1610,1643,1595,1625,1573,1571,1621,1651,1598,1567,1252,1217,1490,1485,1393,1357,1493,1538,1610,1616,1447,1386,1504,2010,1684,1675,1643,1723,1751,1739,1754,1693,1680,1733,1796,1774,1480,1545,1668,1600,1672,1816,1718,1594,1703,1607,1535,1523,1582,1693,1574,1547,1540,1614,1653,1632,1609,1671,1652,1717,1734,1782,1668,1621,1619,1721,1615,1550,1346,1342,1712,1702,1636,1552,1701,1745,1773,1841,1701,1595,1674,1944,1665,1419,1393,1401,1433,1371,1448,1482,1334,1418,1486,1531,1157,1413,1548,1536,1512,1702,1642,1566,1636,1535,1457,1450,1561,1560,1573,1443,1505,1525,1560,1468,1510,1573,1524,1586,1579,1592,1639,1529,1531,1586,1487,1401,1264,911,1270,1345,1367,1261,1412,1472,1504,1538,1449,1315,1378,1664,1945,1185,1373,1358,1437,1475,1551,1478,1450,1422,1480,1453,1444,1470,1351,1374,845,870,1095,1308,1565,1636,1795,1843,1855,1876,1844,1744,1739,1381,1777,1780,1855,1882,1839,1802,1804,1790,1626,1408,1146,1034,1135,1399,1112,1325,1303,1133,1257,1236,1419,1517,1466,1490,1411,1399,1396,1359,672,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1528,1585,1586,1627,1600,1546,1539,1627,1584,1569,1609,1697,1765,1822,1795,1773,1474,1708,1585,1737,1893,1804,1773,1869,1853,1825,1879,1849,1740,1845,1685,1690,1772,1675,1657,1769,1617,1837,1910,1708,1484,1392,1356,1278,1354,1519,1478,1468,1531,1546,1504,1518,1588,1467,1449,1486,1482,2011,1620,1458,1448,1493,1506,1540,1534,1489,1517,1518,1604,1769,1839,1958,1981,2007,1989,2001,2013,2000,1971,1894,1788,1792,1893,1938,1857,1981,2020,1912,1846,1820,1799,1727,1734,1727,1825,1836,1905,1961,1991,2001,2010,1986,1870,1636,1519,1499,1525,1503,1509,1508,1503,1461,1441,1442,1432,1856,1573,1072,1100,1113,1101,985,1045,1078,1072,1142,1180,1113,1214,1276,1360,1472,1504,1569,1588,1537,1601,1579,1422,1383,1579,1612,1521,1542,1418,1414,1407,1274,1326,1389,1258,1418,1425,1503,1522,1505,1520,1349,1231,1185,999,1036,1026,1128,1153,1166,1014,879,1016,1020,911,948,1007,1440,1913,1536,1567,1558,1620,1590,1626,1668,1543,1609,1610,1683,1554,1424,1582,1573,1565,1685,1702,1572,1581,1609,1472,1487,1430,1608,1605,1454,1484,1564,1537,1563,1512,1550,1588,1602,1637,1668,1691,1550,1518,1668,1634,1512,1433,1172,1467,1560,1530,1436,1471,1609,1648,1711,1723,1553,1525,1656,2048,1330,1290,1270,1272,1308,1273,1381,1266,1227,1287,1337,1174,1355,1337,1465,1393,1427,1460,1396,1466,1515,1515,1489,1533,1569,1567,1670,1581,1599,1551,1589,1551,1528,1478,1634,1714,1633,1679,1683,1422,1363,1385,1365,1225,1241,1207,1260,1280,1156,1198,1185,1149,1221,1187,1272,1291,1272,2011,1070,827,762,897,934,787,677,913,860,862,774,781,1004,1119,1265,1230,1315,1285,1315,1460,1511,1575,1520,1660,1582,1647,1606,1607,1642,1621,1586,1532,1473,1479,1502,1554,1566,1450,1455,1444,1364,1339,1271,1179,1235,1138,1154,994,966,1035,1042,962,945,1002,1033,901,761,1567,1912,1681,1676,1722,1771,1738,1770,1757,1776,1817,1834,1867,1861,1754,1753,1793,1798,1837,1818,1794,1877,1828,1781,1752,1750,1751,1778,1704,1751,1832,1713,1764,1747,1851,1777,1773,1762,1747,1724,1705,1718,1772,1735,1713,1647,1762,1836,1892,1822,1830,1814,1879,1901,1858,1798,1695,1641,1744,2048,1929,1917,1901,1955,1905,1888,1914,1919,1865,1879,1926,1924,1801,1803,1749,1742,1762,1845,1802,1830,1779,1857,1837,1824,1810,1760,1737,1674,1592,1555,1692,1758,1813,1745,1761,1718,1683,1722,1688,1726,1759,1777,1794,1736,1817,1911,1891,1952,1827,1785,1879,1921,1928,1914,1903,1909,1875,2048,1979,1939,1997,1998,1995,2012,1989,1962,1922,1893,1996,2013,1981,1947,1884,1933,1996,1965,1959,1992,2008,2025,1922,1920,1907,1908,1918,1823,1733,1752,1825,1926,1921,1926,1954,1986,1958,1989,1931,1926,1997,1924,1814,1831,1851,1868,1847,1828,1807,1806,1851,1823,1729,1668,1599,1492,1413,2010,1735,1854,1891,1861,1821,1802,1815,1868,1771,1733,1589,1553,1404,1858,1886,1939,1792,1887,1864,1874,1908,1925,1800,1717,1620,1554,1404,1797,2013,1846,1825,1908,1928,1855,1762,1728,1548,1442,1560,1614,1613,1752,1864,1716,2013,1783,1825,1986,1649,1973,1970,1447,1391,1611,1521,1477,1888,1716,1261,1598,1587,1527,1556,1884,1431,1444,1685,1547,1547,1894,1563,1004,1099,968,1065,1139,1052,1159,1004,1019,1124,1128,1191,1075,1097,1104,1182,1172,1211,1202,1253,1294,1308,1305,1179,1190,1078,1043,1017,1012,1033,1070,1043,902,910,972,929,993,1012,1031,1046,1030,1024,997,895,1056,967,1029,1014,1096,1167,1106,1096,1063,995,993,879,1424,1862,1282,1268,1261,1256,1299,1310,1380,1310,1225,1305,1252,1129,1291,1297,1372,1298,1315,1314,1376,1476,1626,1622,1591,1432,1341,1392,1552,1553,1728,1693,1621,1448,1280,1368,1424,1476,1456,1517,1528,1357,1356,1389,1306,1247,1254,1280,1240,1172,1170,1215,1177,1160,1211,1223,1308,1254,1356,1108,912,880,835,858,1164,1145,911,918,919,974,920,648,1009,807,818,1277,1148,1453,1493,1446,1493,666,339,339,343,1479,1303,1231,1306,1062,1033,1189,1189,961,1229,1093,1194,1147,1083,1230,1056,1139,1090,1105,1129,1248,1048,1396,836,903,857,1058,816,1108,975,921,966,836,995,999,553,997,775,764,1293,1309,1516,1449,1488,1323,340,338,355,864,1234,1355,1257,1095,1104,934,1132,1142,1148,1084,1074,1338,1095,1083,1116,1042,1167,1166,1200,1115,1132,1275,1234,1315,1358,1206,764,726,702,802,1240,715,694,732,693,980,927,875,892,966,966,962,970,926,762,893,972,905,931,897,585,789,710,802,706,719,820,890,968,628,804,772,820,848,854,802,956,927,858,852,776,861,820,1182,772,721,998,813,833,1880,669,45,48,49,722,945,1134,1084,1364,1573,1284,1574,1835,1795,1677,1700,1680,860,1192,1550,1748,1789,1822,1752,1837,1815,1706,1590,1671,1695,1899,1835,1880,1848,1808,1749,1895,1865,1886,1852,1765,1618,1578,1548,1758,1408,1272,1325,1272,1217,1051,994,871,435,45,44,45,1154,1748,1293,1383,1193,1248,1400,1422,1340,1409,1312,1406,1481,1473,1395,1471,1431,1471,1497,1408,1554,1403,1370,1384,1392,1358,1152,1163,1355,1317,1334,1413,1379,1251,1288,1434,1364,1315,1331,1444,1533,1409,1527,1388,1377,1361,1423,1441,1470,1373,1316,1434,1243,1365,1382,1272,1193,1148,1451,1745,128,233,215,203,227,413,393,361,436,435,237,368,686,853,954,930,1126,1314,1636,1717,1792,1751,1802,1843,1830,1709,1678,1654,1707,1868,1830,1906,1862,1797,1789,1917,1857,1863,1890,1224,1008,908,856,748,481,355,386,333,420,316,404,198,194,158,222,169,219,2048,129,49,45,58,88,129,170,188,154,223,246,259,431,818,1009,992,1060,1379,1567,1585,1643,1639,1719,1761,1755,1703,1532,1568,1588,1695,1649,1730,1783,1717,1614,1642,1588,1639,1626,1310,933,1001,880,629,358,229,153,111,103,168,158,78,65,44,45,50,47,1071,1088,930,1402,1190,1173,1139,1592,917,1176,1009,1931,1498,1138,1310,1363,1384,1309,1989,1522,1264,1307,1366,1414,1368,1642,936,900,1016,1826,1173,819,894,1550,1485,1582,1635,1458,1597,1661,1556,1579,1513,1607,1577,1699,1440,1630,1602,1507,1472,1437,1405,1572,1470,1334,1137,1030,1306,1353,1198,1159,1497,1560,1433,1296,1291,1399,1484,1283,1250,1736,1570,1262,1612,1690,1509,1694,1747,1865,1239,1458,1728,1539,1590,1841,1804,1823,1181,1558,1733,1550,1703,1890,1866,1662,1226,1575,1730,1591,1764,1883,1894,1491,1280,1633,1745,1576,1669,1896,1893,1539,1357,1590,1738,1513,1656,1857,1906,1453,1310,1629,1678,1511,1695,1792,1851,1234,1486,1736,1552,1587,1754,1732,1658,1226,1564,1700,1526,1661,1791,1903,1321,1359,1678,1593,1549,1771,1845,1899,1464,1474,1397,1444,1507,1490,1473,1234,1067,845,764,847,889,869,1267,1687,1528,1411,1430,1390,1217,1395,1172,1278,1360,1311,1212,1071,954,878,636,1134,1807,1518,1381,1462,1385,1272,1398,1196,1250,1367,1339,1222,1126,922,902,644,946,1865,1456,1482,1285,1090,1237,1358,1333,1042,1136,1243,1059,1162,1207,1295,1249,1092,793,850,994,1708,1559,1429,1507,1360,1306,1373,1155,1267,1330,1291,1151,820,846,635,1040,1864,1509,1427,1454,1413,1286,1362,1263,1167,1360,1369,1299,1124,958,930,792,657,1448,1599,1327,1501,1611,1601,1553,1480,1705,1384,1505,1508,1651,1598,1391,1819,1470,1554,1438,1676,1608,1523,1602,1399,1576,1872,1613,1500,1365,1132,1246,1465,1411,1299,945,1031,1431,1743,1579,1557,1355,1265,1168,1488,1387,1233,1055,1263,1236,1333,938,1234,1710,1795,1767,1829,1678,1575,1429,1869,1908,1765,1764,1785,1959,1862,1104,861,1269,645,570,585,754,655,657,641,922,805,1029,806,789,827,787,798,950,873,905,987,825,893,951,874,1028,978,929,1049,656,687,612,719,769,835,915,883,837,875,790,831,872,1025,1083,704,922,885,878,1275,1478,871,1300,1440,2048,1521,1515,2048,1041,884,762,986,1019,1032,953,1034,1141,1270,1420,1639,1644,1665,1555,1349,1410,1476,1585,1655,1666,1683,1648,1597,1595,1509,1510,1438,1787,1841,1874,1828,1756,1779,1608,1407,1334,1359,1367,1291,1145,766,765,1547,744,693,977,1153,1421,1111,897,1096,935,938,675,795,884,973,978,1189,1133,1178,1279,1297,1184,1266,1394,1301,1393,1297,1343,1293,1010,884,693,510,493,627,890,879,802,831,906,1042,899,927,1035,1866,935,708,1028,1140,1120,1269,1382,1331,1258,1523,1460,1313,815,879,1110,1289,1416,1258,1230,1236,1115,1184,1167,1250,1320,1186,1272,1419,1286,1254,1338,1375,1329,1308,1246,1228,1212,1044,986,1096,1133,1261,1152,1538,1569,1206,1288,1341,1471,1446,1468,1649,1776,1796,1818,1825,1769,1733,1713,1616,1695,1748,1612,1660,1616,1667,1562,1484,1653,1674,1582,1565,1564,1594,1556,1397,1161,1051,1400,1619,1523,1582,1559,1458,1344,1442,1444,1908,45,48,47,45,44,85,416,675,756,845,930,978,975,1055,933,1147,1107,1261,1345,1164,1300,1336,1148,1222,1129,996,1223,1042,1221,1172,1028,932,947,800,640,722,654,345,45,44,48,49,47,778,1076,835,1310,897,1337,1370,1691,1565,1854,1383,951,653,1573,945,1002,1008,1003,951,1026,1018,994,1024,945,1008,1021,1007,951,1011,986,993,954,1017,1006,1024,1003,945,1008,1022,1021,953,1019,1009,1006,949,1028,1024,1015,949,1050,1488,1148,1165,1088,1090,1153,891,723,1392,1110,521,564,741,679,654,1195,1186,900,811,849,1149,1144,1062,746,888,877,893,1151,1288,1294,1266,1411,982,858,904,957,876,734,830,614,609,515,604,585,839,981,817,862,909,992,1063,769,940,971,873,926,844,936,768,886,950,816,795,923,788,840,628,757,758,673,1070,617,684,549,551,528,695,700,949,648,723,706,891,1245,730,892,945,938,896,672,943,680,855,868,1047,962,648,900,288,596,802,1053,340,583,983,663,710,548,656,716,987,783,621,610,578,1495,1809,2030,1866,1815,1695,1738,1717,1736,1759,1887,1945,1924,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,766,49,45,44,45,48,49,45,44,45,48,49,75,749,1004,1432,1403,1540,1572,1446,1545,1540,1599,1663,1695,1741,1743,1698,1699,1623,1677,1615,1641,1605,1614,1442,1303,1295,1144,1184,950,478,365,225,146,72,47,45,44,45,50,47,45,44,45,50,47,1061,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2057,1498,1202,1178,1183,1270,1126,1208,1181,1178,1250,1265,1331,1205,1319,1329,1353,1698,1593,1519,1416,1403,1434,1588,1448,1385,1564,1642,1518,1501,1497,1562,1506,1363,1394,1457,1457,1460,1293,1178,1323,1261,1276,1173,1056,881,1052,1022,1135,1009,822,707,697,832,711,632,676,624,1643,1749,1193,1044,1153,1020,1143,1302,1342,1123,1251,1142,1251,1340,1238,1536,1506,1775,1774,1652,1751,1778,1597,1567,1493,1572,1301,1577,1648,1498,1420,1622,1534,1631,1511,1695,1547,1410,1318,1359,1245,1195,1128,1051,1014,1064,924,982,961,1041,1075,953,880,706,619,395,465,377,1135,1587,733,670,623,680,680,712,671,642,693,670,722,643,1042,1581,1554,1543,1582,1646,1633,1542,1503,1430,1154,873,1166,1481,1452,1559,1533,1460,1509,1430,1337,1212,987,1132,1396,1513,1456,1464,1492,1381,1274,1034,729,689,647,687,658,721,706,673,682,659,684,655,966,1939,680,670,671,666,672,656,660,678,717,624,666,674,792,1345,1633,1591,1613,1733,1696,1578,1490,1413,1380,1314,1386,1321,1251,1339,1314,1366,1228,1229,1132,1643,1659,1651,1638,1667,1620,1533,1431,1151,1052,783,750,644,694,699,650,680,676,664,699,668,681,619,696,2046,514,441,528,620,646,749,905,867,1035,1078,1064,1136,1367,1513,1552,1591,1566,1547,1498,1457,1420,1462,1450,1461,1523,1452,1441,1398,1409,1264,1399,1411,1465,1627,1596,1526,1430,1274,1091,1213,1271,1232,1287,1218,1161,1090,1006,1000,1023,1044,1011,964,927,820,655,568,389,1565,929,327,486,556,663,736,840,859,890,1021,1016,1144,1227,1376,1540,1633,1683,1733,1658,1616,1483,1454,1338,1302,1318,1433,1429,1441,1428,1426,1502,1419,1454,1435,1436,1449,1569,1695,1624,1495,1308,1293,1208,1239,1210,1199,1256,1178,1061,1056,1068,1007,842,817,701,649,467,1210,1384,361,492,654,665,702,797,842,947,1094,1038,1058,1436,1545,1472,1477,1578,1484,1430,1242,1284,1340,1378,1351,1423,1401,1414,1337,1318,1382,1372,1373,1289,1330,1317,1286,1405,1516,1537,1626,1408,1478,1389,1362,1197,1201,1227,1180,1152,1068,1034,973,957,917,725,656,478,717,1652,1513,1817,1291,1626,1840,1216,1924,1530,1548,1394,890,1812,1092,1612,1700,1249,1784,1224,1638,1774,1596,1503,1623,1685,1629,1585,1572,1831,1603,1638,1607,1485,1775,1680,1510,1423,1466,1375,1521,1585,2005,1747,1775,1541,1460,1406,1400,1539,1678,1717,1769,1722,1786,1794,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,2048,2048,2048,2048,2048,2048,1985,2048,1979,2048,1982,1962,1971,2048,2056,2048,2048,1977,1412,1570,1013,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1834,1741,1797,1774,1774,1804,1770,1771,1770,1772,1747,1741,1715,1709,1645,1655,1644,1627,1646,1679,1643,1578,1634,1726,1729,1685,1726,1740,1745,1784,1735,1759,1747,1731,1664,1620,1704,1653,1694,1660,1651,1677,1717,1740,1724,1764,1715,1742,1780,1773,1752,1755,1741,1784,1761,1752,1773,1978,1697,1428,1491,1501,1550,1447,1530,1509,1423,1462,1593,1638,1427,1535,1677,1710,1664,1772,1776,1632,1730,1607,1581,1547,1510,1597,1608,1581,1614,1613,1618,1590,1546,1563,1610,1643,1588,1640,1567,1574,1573,1642,1631,1570,1417,1154,1409,1503,1478,1364,1486,1513,1590,1610,1537,1388,1471,1763,1900,1247,1222,1237,1241,1227,1288,1244,1271,1259,1277,1294,1562,1296,1292,1274,1321,1329,1322,1309,1232,1244,1282,1295,1234,1248,1236,1247,1269,1244,1210,1225,1182,1233,1227,1200,1235,1235,1238,1258,1236,1255,1269,1290,1298,1457,1373,1291,1281,1299,1309,1298,1304,1227,1282,1266,1251,1355,2048,1599,1628,1752,1641,1614,1629,1737,1764,1806,1759,1710,1716,1362,1212,1202,1320,1631,1618,1659,1778,1776,1741,1714,1709,1754,1734,1657,1740,1670,1783,1746,1711,1746,1756,1723,1779,1737,1791,1674,1571,1592,1487,1293,1344,1290,1511,1542,1560,1637,1614,1612,1678,1497,1515,1649,1583,1627,1317,821,1531,1722,1430,1763,1182,623,600,628,612,661,593,576,620,628,638,655,1399,493,536,639,559,474,384,407,907,1624,1683,1185,1038,1211,1058,1252,1574,1425,962,1148,1621,1488,1046,1044,1342,381,453,482,475,517,451,520,338,358,258,297,327,646,1622,974,1162,914,927,1222,1067,969,1239,1249,774,1090,842,908,1147,1121,1099,1321,1067,1064,797,1009,1262,1036,1240,840,1005,831,1093,870,1007,1125,1142,922,1089,1058,1142,1110,1114,1514,1882,1434,1660,1000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2057,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2038,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1396,733,756,908,946,1046,1124,1072,1124,1123,1094,958,815,742,1030,1337,1304,1428,1437,1530,1486,1524,1335,1479,1554,1616,1544,1509,1584,1672,1711,1665,1538,1498,1552,1562,1481,1490,1445,1279,1298,1213,1087,925,994,1068,1102,1055,1167,1241,1247,1083,991,846,742,811,786,1212,1909,1469,1415,1488,1569,1434,1501,1557,1452,1465,1547,1637,1489,1481,1652,1668,1656,1735,1791,1667,1710,1687,1559,1577,1489,1579,1612,1594,1572,1620,1626,1590,1549,1563,1631,1613,1616,1620,1596,1554,1565,1609,1650,1614,1502,1187,1324,1488,1478,1373,1405,1480,1586,1610,1609,1443,1406,1574,2048,524,613,637,567,684,741,722,870,997,984,1040,979,1231,1293,1325,1303,1296,1346,1414,1348,1490,1377,1432,1411,1508,1542,1413,1439,1444,1236,992,1025,880,1270,1318,1235,1207,1059,1027,930,1006,1054,810,964,1021,826,689,841,910,822,434,719,703,693,716,607,600,1805,1611,1501,1504,1620,1613,1586,1603,1620,1689,1612,1611,1678,1633,1644,1630,1642,1613,1627,1678,1717,1671,1697,1773,1770,1737,1662,1744,1780,1785,1776,1828,1891,1923,1871,1891,1869,1834,1780,1818,1797,1794,1827,1764,1821,1787,1792,1646,1527,1615,1643,1590,1513,1424,1561,1576,1661,1647,1714,1535,1513,1484,1516,1535,1512,1533,1289,734,719,564,655,736,752,663,624,582,579,659,669,716,632,730,758,681,732,807,766,739,569,522,499,1903,2043,1767,1745,1726,1668,1693,1706,1717,1726,1691,1694,1744,2036,1834,1749,1697,1679,1758,1736,1754,1333,989,964,1792,1637,1577,1924,1618,1483,1449,1492,1477,1457,1482,1491,1476,1497,617,603,549,634,667,464,545,544,652,561,586,593,609,506,367,394,526,469,190,474,581,366,316,513,198,583,670,1983,1906,1655,1653,1659,1688,1665,1666,1672,1691,1683,1695,1681,1752,2045,1649,1697,1668,1752,1753,1679,1713,1436,666,801,861,1907,1776,1697,1679,1608,1804,1711,1519,1471,1512,1509,1488,1498,1511,1496,1493,1500,1513,1487,1482,1509,1473,1506,1490,1499,1481,1488,919,423,458,512,651,647,498,691,605,461,380,496,542,467,405,361,456,560,605,602,642,717,606,610,687,593,530,612,460,381,430,640,353,450,380,556,464,370,641,390,503,388,605,539,588,650,349,481,493,438,490,521,252,484,517,418,472,328,283,431,1417,1976,2026,2025,1994,2042,1849,1699,1693,1686,1687,1708,1699,1710,1673,1685,1682,1708,1683,1685,1680,1692,1708,1688,1727,1725,1700,1707,1676,1717,1671,1714,1676,1802,2048,2048,1974,1673,1652,1673,1700,1758,1744,1648,1635,1743,1756,1695,1671,1687,1751,1739,1682,1661,1642,1700,1619,1141,902,907,791,818,689,992,1089,1009,1131,1196,1171,1021,1040,1052,995,897,868,1216,540,1929,1986,1933,1805,1635,1511,1526,1474,1499,1519,1506,1484,1451,1528,1480,1487,830,583,302,463,437,410,522,355,537,629,597,495,543,614,534,303,343,130,215,519,661,528,516,377,559,294,518,539,124,370,1089,2035,2035,1740,1713,1672,1709,1694,1701,1708,1679,1684,1758,1732,1684,1681,1950,2012,1720,1683,1683,1697,1736,1721,1699,1853,1709,1625,1164,930,1547,1234,1869,1824,1421,1629,1482,1488,1493,1487,1487,1490,1491,1460,1473,801,197,246,107,447,525,242,227,318,419,216,463,357,434,141,106,191,313,344,385,455,378,226,328,519,495,437,250,910,1999,2043,1798,1707,1693,1693,1685,1681,1688,1674,1677,1700,1719,1707,1746,2048,1931,1791,1872,1711,1731,1692,1703,1806,1855,1841,1761,668,533,819,939,921,1068,1672,1658,1767,1558,1504,1492,1499,1496,1480,1250,438,348,320,372,497,153,385,473,451,381,292,492,293,282,315,414,697,1965,1879,1692,1701,1671,1670,1699,1680,1705,1850,1928,1752,1708,1667,1728,1828,1830,1265,868,1575,1317,1690,1592,1498,1491,1489,817,610,421,486,524,481,569,489,498,312,311,425,1870,1715,1652,1656,1658,1674,1871,1663,1705,1633,1711,819,1788,1647,1536,1501,1474,1516,1505,1489,1499,1500,1484,1479,1522,1495,1499,1507,1496,1501,1499,790,504,476,360,310,461,463,440,337,372,513,522,435,407,404,370,478,460,398,383,226,170,312,318,321,214,190,271,366,311,213,360,317,352,256,460,321,316,389,324,387,440,449,302,426,232,273,382,300,396,505,444,406,1741,1969,1922,1961,2039,1651,1666,1664,1660,1682,1699,1676,1683,1684,1729,1681,1686,1670,1676,1677,1661,1675,1669,1684,1653,1677,1690,1680,1772,2048,2048,1728,1621,1631,1643,1642,1605,1830,1634,1736,1688,1704,1652,1582,1645,1661,1704,1625,1460,553,636,556,652,557,1001,1196,1579,1151,1165,1002,1176,1572,1387,1437,1482,1384,1305,1851,1830,1822,1821,1644,1586,1483,1456,1475,1488,1507,1482,1506,1491,1496,1501,1487,589,531,558,675,587,596,391,529,296,273,410,367,380,467,588,466,408,401,534,547,634,634,562,427,486,392,281,508,658,672,686,511,265,445,440,419,231,620,1996,1977,2029,1731,1710,1686,1692,1706,1692,1666,1698,1717,1695,1682,1747,1716,1708,1709,1703,1911,2048,1935,1772,1744,1734,1803,1799,1726,1830,1711,1745,1831,1757,1727,1806,975,904,885,1346,1610,1521,1679,1720,1858,1635,1560,1657,1654,1484,1486,1508,1487,1487,1500,1497,1478,1486,1499,1498,1498,1481,1483,1480,1462,1475,1476,1502,1514,1496,774,620,590,654,511,534,527,637,601,513,590,385,466,509,547,520,492,344,567,449,622,506,568,594,461,413,426,537,479,623,383,396,490,451,367,602,284,268,579,279,547,489,528,475,171,423,502,327,321,506,147,291,407,448,430,523,389,269,475,540,446,149,401,440,471,354,189,440,636,443,411,371,488,408,671,605,1514,2048,2048,2043,2056,2048,2048,1810,1736,1742,1749,1765,1782,1745,1721,1728,1711,1736,1734,1729,1699,1754,1758,1751,1759,1756,1748,1746,1761,1737,1739,1714,1759,1759,1776,1767,1742,1751,1774,1761,1720,1741,2029,2048,2048,2048,2026,1786,1792,1792,1832,1881,1838,1721,1821,1811,1796,1752,1740,1827,1829,1807,1809,1795,1831,1835,1886,1819,1690,1829,1868,1841,1859,1825,1857,1857,1822,1890,1804,1712,840,843,846,739,847,1194,1367,1544,1039,1330,1376,1441,963,860,860,1127,1340,1267,1310,1772,1967,1917,1791,1697,1532,1581,1578,1567,1583,1506,1476,1496,1521,1525,1497,1452,1453,1496,1499,1483,1475,1498,1510,1526,1472,1487,1510,1486,1495,1256,538,598,579,449,555,386,435,575,629,645,578,667,699,593,450,542,547,597,495,305,482,473,552,543,511,487,466,392,465,636,239,226,274,412,495,274,379,364,378,436,528,423,239,413,399,444,421,257,310,311,397,497,181,223,160,363,139,515,494,546,466,547,463,534,1424,2024,1907,1972,1979,1986,1688,1655,1691,1681,1663,1679,1722,1700,1688,1683,1659,1645,1668,1702,1704,1678,1701,1706,1685,1690,1668,1693,1682,1672,1688,1655,1669,1665,1963,2048,2048,1662,1685,1709,1732,1722,1830,1669,1699,1656,1735,1770,1741,1725,1707,1756,1722,1774,1653,1685,1771,1727,906,872,550,625,642,669,831,1075,1085,647,743,588,701,707,761,564,656,795,641,293,673,710,946,759,550,511,512,1561,761,1219,1660,1734,1799,1750,1743,1653,1602,1575,1599,1600,1467,1477,1489,1478,1480,1468,1482,1470,1479,1452,1496,1466,1478,1459,1476,1480,1477,1469,1469,1467,1485,1489,1481,1483,1491,1490,1473,1473,1439,1479,1456,1452,1462,1452,1472,1487,1455,1458,1477,1442,1493,1490,1491,1462,1465,1465,1482,1450,1468,1426,1417,1415,1459,1477,1500,1448,1455,1489,1460,1471,1471,1487,1482,1483,1468,1472,1451,1476,1473,1475,1480,1476,1460,1418,850,570,364,628,526,476,358,460,527,400,253,465,620,465,594,379,521,585,632,504,666,542,530,571,502,397,563,530,609,527,386,487,510,536,568,374,497,497,476,548,627,616,600,607,436,281,310,622,430,532,549,639,535,534,549,471,571,447,389,425,570,421,466,539,533,441,397,497,414,543,505,486,332,558,580,564,582,658,574,606,490,610,491,587,624,327,348,375,430,492,507,545,427,292,366,563,208,460,434,523,535,175,593,572,489,546,486,431,341,316,534,186,210,264,503,569,582,454,299,459,376,328,301,337,342,536,428,459,519,496,525,560,595,450,514,567,481,491,456,356,531,624,472,552,536,487,455,455,260,279,603,382,511,558,537,530,503,350,333,534,429,502,439,462,424,463,418,592,652,517,481,473,474,478,473,666,569,444,388,438,475,477,438,651,435,330,381,366,247,305,426,362,313,481,224,447,488,602,587,341,423,436,462,502,541,442,512,572,412,573,499,459,481,452,165,381,487,490,610,541,435,437,545,536,421,468,602,560,441,457,487,580,549,468,441,538,342,97,361,610,575,489,524,491,558,531,509,539,223,1706,1942,1938,1918,1928,1919,1990,2045,1944,2017,1951,1980,1982,1918,1991,1980,1958,1937,2052,2055,1649,1655,1631,1647,1691,1690,1723,1708,1698,1669,1695,1680,1691,1675,1679,1681,1672,1674,1688,1682,1673,1703,1676,1687,1692,1696,1686,1681,1673,1670,1687,1706,1683,1687,1680,1663,1701,1661,1695,1683,1680,1653,1648,1656,1682,1688,1675,1665,1676,1655,1635,1683,1690,1666,1672,1698,1698,1696,1683,1696,1685,1663,1685,1672,1634,1708,1705,1716,1660,1663,1650,1658,1694,1668,1651,1674,1667,1650,1667,1676,1677,1672,1681,1657,1665,1662,1731,1700,1689,1677,1671,1709,1689,1671,1674,1727,1686,1697,1681,1679,1664,1660,1675,1717,1678,1654,1719,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,1684,1553,1671,1738,1782,1746,1760,1666,1723,1713,1686,1635,1695,1728,1685,1720,1722,1722,1672,1725,1722,1733,1756,1665,1668,1666,1711,1722,1677,1665,1605,1652,1663,1707,1729,1593,1723,1729,1711,1729,1762,1725,1748,1675,1722,1639,1759,1742,1706,1656,1667,1750,1770,1563,1473,1570,1526,1734,1715,1663,1775,1810,1757,1716,1724,1669,1690,1817,1719,1579,1723,1772,1730,1810,1729,1691,1418,847,832,771,818,763,793,771,617,654,586,520,712,557,499,289,582,609,742,775,842,540,701,645,749,791,836,690,729,801,766,588,997,942,614,796,915,762,744,696,619,717,558,696,760,766,861,787,678,738,730,659,428,336,577,786,653,708,564,476,874,613,903,974,878,642,478,500,611,584,760,691,641,676,453,572,564,617,636,891,664,741,974,587,473,809,744,657,385,827,738,949,784,814,635,629,583,645,884,703,581,638,738,647,782,691,524,526,452,416,928,859,911,828,765,634,819,470,523,1014,795,663,666,789,654,615,704,812,696,580,640,655,594,609,752,651,407,305,301,328,281,320,437,310,284,326,310,277,367,439,535,599,651,294,558,567,630,728,628,604,589,827,666,638,692,926,747,445,282,487,486,282,452,393,224,496,439,285,281,308,179,447,601,372,662,654,722,456,290,195,246,280,175,139,221,278,1001,1769,1374,1840,1905,1902,1951,1925,1895,1967,1947,1926,1948,1937,1928,1889,1779,1905,1885,1817,1764,1492,1468,1474,1490,1483,1487,1490,1484,1501,1497,754,521,437,563,414,411,538,489,392,341,380,408,549,533,419,578,413,238,463,290,418,373,354,340,462,265,332,420,191,393,389,502,1550,1946,2033,1726,1693,1707,1704,1705,1735,1683,1708,1702,1694,1680,1683,1677,1668,1675,2021,2027,1695,1760,1717,1745,1796,1728,1767,1773,1748,1735,1694,1606,809,770,788,1500,1509,1349,1174,1362,1691,1699,1672,1534,1464,1503,1485,1433,1494,1482,1499,1493,1496,832,183,507,450,391,552,651,540,562,634,546,457,452,383,368,232,522,399,266,479,297,328,575,519,259,418,401,204,473,2015,2043,1897,1682,1693,1696,1719,1723,1679,1698,1694,1717,1694,1705,1696,1729,2048,1892,1622,1750,1827,1824,1800,1751,1741,1839,1772,1760,1802,1429,564,819,1095,880,1214,1485,1394,1632,1729,1688,1553,1622,1493,1498,1481,1494,1471,1499,1498,1506,1477,1463,1473,1470,1494,1464,1480,1472,1496,1482,1476,1501,1465,1469,1477,1477,1491,1466,1486,1492,1478,1489,1474,1493,1496,1498,1472,1496,1191,523,534,547,666,744,613,551,587,627,500,642,613,636,596,638,614,621,560,530,642,739,576,612,582,612,656,591,610,598,594,352,592,551,654,516,541,584,515,514,585,502,536,601,578,487,420,270,217,482,441,417,527,423,429,450,696,591,491,250,174,386,117,151,242,586,389,536,564,400,647,574,525,667,570,646,602,480,468,445,568,571,593,535,604,366,387,553,495,472,413,282,234,510,565,719,534,512,368,521,608,576,549,534,680,544,643,483,509,1007,2002,2006,1976,1995,1979,1941,1952,1965,2027,1802,1719,1717,1722,1707,1708,1712,1706,1709,1706,1691,1699,1674,1719,1713,1699,1681,1689,1677,1710,1671,1652,1664,1622,1683,1660,1689,1683,1699,1690,1687,1662,1700,1684,1702,1696,1698,1653,1672,1695,1685,1656,1670,1674,1671,1663,1842,2048,2048,2048,2048,1790,1758,1740,1723,1619,1715,1718,1818,1735,1811,1730,1702,1704,1690,1685,1686,1658,1712,1714,1728,1739,1675,1720,1751,1780,1639,1626,1674,1718,1696,1733,1629,1416,924,885,864,796,807,879,826,807,690,960,1019,972,769,957,824,1161,1326,1224,1104,947,1102,1228,1095,1267,1095,1384,1423,1439,1143,939,1301,1006,799,782,430,805,592,347,546,991,1044,995,1073,1212,763,772,606,718,1068,1251,879,985,1455,1618,1825,1860,1858,1861,1940,1929,1918,1931,1657,1548,1480,1486,1491,1500,1482,1490,1451,1486,1492,1481,1352,503,312,316,552,499,358,429,568,415,209,198,177,276,333,293,445,422,428,457,328,296,405,468,300,401,333,307,376,398,303,311,389,419,264,1927,1974,2020,1798,1694,1671,1689,1699,1682,1680,1704,1708,1713,1688,1698,1715,1693,1676,1936,2048,1687,1682,1750,1736,1741,1730,1811,1815,1721,1749,1691,1708,1014,664,1068,1524,1264,601,882,1297,1830,1832,1665,1606,1487,1477,1506,1475,1511,1519,1071,488,575,575,501,460,490,509,411,412,471,361,290,267,344,420,456,427,280,418,507,163,339,1736,1983,1750,1711,1716,1673,1696,1702,1652,1688,1698,1709,1903,1934,1739,1852,1734,1776,1769,1714,1816,1856,843,821,1388,1718,1432,1438,1547,1652,1557,1473,1377,1461,1477,1477,1502,1477,1466,1471,1488,1498,1511,1486,1494,1497,1487,689,485,460,601,583,476,499,493,437,633,535,503,530,637,337,369,439,393,336,390,624,434,405,437,279,176,447,624,595,574,558,556,414,593,482,271,603,271,630,581,473,425,536,437,557,1379,1984,2042,1989,1822,1705,1709,1694,1705,1666,1699,1672,1667,1748,1682,1685,1675,1699,1735,1727,1718,1739,1727,1722,1825,2048,2057,1686,1705,1696,1711,1775,1640,1706,1689,1617,1703,1787,1798,1708,1797,1773,1639,865,820,861,1288,1733,1388,1410,1529,1503,1571,1613,1877,1789,1639,1527,1377,1524,1512,1484,1467,1480,1484,1483,1473,1464,1476,1493,1501,1469,1487,837,511,649,533,495,344,504,592,578,389,392,450,398,475,257,307,516,565,481,500,537,482,552,397,305,244,176,377,532,408,282,142,136,287,335,219,306,466,470,332,532,279,230,352,283,1129,1962,1862,1991,1898,1690,1673,1694,1660,1684,1704,1683,1708,1664,1669,1654,1714,1692,1660,1686,1657,1683,1687,1690,1749,2048,2048,1741,1703,1738,1702,1740,1707,1789,1673,1686,1719,1630,1683,1703,1713,1760,1806,663,817,430,693,958,770,819,789,857,826,556,748,1356,1626,1743,1661,1660,1604,1607,1448,1499,1509,1497,1498,1517,1430,1468,1505,1482,1507,1521,1474,1496,1501,1493,1468,1445,1504,1506,1511,1067,524,618,382,323,498,488,558,522,544,424,363,532,591,180,390,671,505,473,456,419,435,179,165,313,619,515,485,582,528,500,465,389,406,420,523,573,559,283,412,482,347,375,340,150,161,473,552,372,567,469,338,432,431,457,316,345,244,207,392,388,395,430,452,491,215,519,365,481,411,602,2026,2031,1992,2004,2027,2029,1693,1708,1674,1668,1668,1702,1657,1665,1714,1690,1690,1693,1678,1697,1658,1680,1688,1692,1711,1701,1697,1672,1668,1649,1722,1719,1674,1684,1702,1721,1702,1877,2048,2048,2057,1683,1743,1604,1688,1720,1632,1708,1792,1734,1788,1673,1706,1746,1690,1734,1723,1716,1720,1668,1711,1823,1684,1713,1743,1848,1547,719,500,636,618,513,865,624,828,555,220,303,773,724,521,483,422,372,362,447,498,270,125,792,1342,663,1292,1589,1712,1834,1723,1789,1666,1386,1500,1491,1506,1515,1500,534,315,225,226,437,320,193,199,261,223,387,467,438,289,472,472,900,1982,1784,1696,1698,1717,1672,1677,1675,1721,1976,1767,1770,1804,1717,1631,1333,805,946,1251,1605,1712,1584,1582,1504,1514,1500,1472,1508,1495,1468,1504,1482,1480,1478,1488,1507,1501,1468,1491,1486,1155,573,618,640,420,521,519,537,523,524,560,568,452,574,595,569,525,511,397,568,574,567,539,511,595,420,441,512,625,395,475,433,440,449,466,487,414,470,474,483,333,608,426,579,614,495,627,561,412,480,585,474,404,624,470,474,573,597,587,593,818,2019,2027,2046,2024,1975,1705,1715,1706,1720,1682,1699,1709,1703,1700,1682,1675,1673,1697,1701,1710,1686,1717,1709,1684,1672,1658,1647,1715,1687,1727,1685,2038,2048,1934,1807,1712,1817,1694,1691,1693,1636,1778,1706,1900,1756,1830,1763,1653,1686,1847,1795,1657,875,732,834,776,684,1467,1738,1282,1235,1673,1763,1497,1407,925,1727,1870,1852,1773,1824,1686,1621,1374,1535,1504,1482,1497,1481,1481,1487,1473,1468,1510,1480,1453,1492,1493,1499,1520,1495,1504,1482,1490,1512,808,234,191,199,410,459,518,454,431,509,560,638,441,310,422,391,531,253,499,560,572,363,456,214,224,451,175,413,465,534,538,465,555,384,552,428,254,478,466,367,556,570,540,621,299,211,381,342,523,393,452,531,584,479,659,638,474,523,533,360,371,464,380,147,307,360,429,401,270,979,1999,2042,2016,2018,2045,1735,1689,1684,1714,1658,1662,1667,1679,1656,1695,1698,1664,1682,1683,1707,1707,1704,1679,1680,1698,1710,1698,1698,1693,1725,1697,1693,1694,1646,1710,1958,2048,2048,1940,1645,1746,1771,1694,1746,1611,1750,1747,1685,1750,1782,1798,1814,1679,1725,1736,1699,1707,1763,1657,1657,1598,1468,740,750,751,798,800,700,632,604,732,718,954,1024,1046,925,693,837,805,1055,1053,888,1081,977,1039,802,989,892,746,413,860,280,260,1231,1235,1639,1856,1819,1843,1814,1699,1511,1528,1520,1510,1484,1493,1485,1511,1497,1489,1513,1366,413,491,196,264,467,573,405,480,416,498,435,465,279,485,360,392,446,372,372,345,408,455,379,389,424,239,350,208,328,321,408,474,161,288,259,912,1996,1975,1932,1675,1681,1687,1684,1652,1688,1674,1686,1675,1662,1703,1680,1696,1707,1690,1892,2048,1864,1777,1739,1741,1713,1720,1708,1672,1654,1766,1738,1741,1707,1560,524,651,696,1077,1176,1055,912,1556,1897,1899,1731,1523,1553,1466,1505,1502,1491,1504,1499,1504,1492,1498,1487,1491,1516,1520,1501,1490,1478,1493,1497,1517,1493,1482,1504,1498,1484,1500,1525,1511,1465,1511,1513,1496,1465,1106,419,555,549,322,556,595,552,622,557,613,532,445,429,564,472,525,473,582,599,632,618,538,530,569,412,503,545,607,613,301,477,469,499,608,441,491,457,489,615,551,371,657,381,423,315,262,386,433,407,304,377,501,204,572,303,537,570,572,299,516,545,593,594,579,508,471,517,513,530,508,481,474,417,285,550,519,469,392,487,409,454,560,287,504,562,311,398,364,320,599,412,396,316,408,370,457,539,313,484,344,202,305,367,400,331,291,444,265,295,410,579,2005,2026,2049,1977,1982,2027,1996,2018,2048,1907,1684,1685,1677,1673,1695,1689,1675,1711,1725,1678,1730,1711,1728,1721,1723,1737,1738,1715,1710,1722,1708,1688,1712,1685,1693,1680,1676,1679,1704,1709,1705,1674,1669,1667,1667,1701,1712,1717,1734,1754,1726,1750,1672,1649,1707,1690,1693,1651,1684,1727,2048,2048,2048,2048,2048,1765,1723,1645,1698,1579,1682,1749,1731,1709,1820,1734,1771,1735,1748,1679,1708,1709,1728,1689,1645,1698,1587,1657,1735,1761,1681,1687,1657,1616,1672,1690,1731,1791,1661,1803,1667,1562,1676,1321,776,747,823,842,762,561,788,617,613,962,922,862,1006,701,403,658,584,832,966,414,763,549,726,742,632,593,624,649,174,593,910,791,827,990,1119,977,1001,874,920,782,497,834,1614,1517,1884,1787,1817,1884,1809,1792,1894,1812,1634,1624,1496,1501,1501,1489,1501,1488,1484,1492,1482,1482,653,415,538,516,385,506,450,490,372,384,327,421,61,125,235,536,521,649,555,514,625,461,306,60,150,464,271,400,282,325,60,170,1297,2048,2048,1860,1679,1685,1704,1699,1713,1731,1736,1691,1671,1689,1708,1715,1720,1884,2048,1909,1845,1788,1841,1749,1760,1761,1787,1713,1798,1828,1817,1407,790,697,943,892,649,1031,1297,876,1531,1609,1659,1497,1559,1556,1505,1472,1501,1492,1507,1472,1498,1484,1486,1496,1498,1484,1485,1380,279,303,277,375,359,452,332,410,328,202,460,509,522,582,520,486,475,290,313,418,356,317,428,421,506,255,405,339,336,445,384,353,456,388,400,463,386,181,1873,1956,2043,1888,1647,1680,1671,1717,1685,1698,1691,1719,1718,1698,1710,1669,1645,1647,1666,1640,1912,2048,1762,1636,1727,1869,1883,1847,1754,1803,1865,1862,1732,1671,1686,1346,608,651,703,680,341,407,348,403,381,334,460,435,1192,1383,814,324,1393,1487,1514,1523,1583,1769,1609,1635,1634,1482,1497,1528,1519,1533,1524,1520,1507,1509,1522,1503,1500,1513,1528,1496,1527,1507,1510,1504,1506,1525,1510,1524,1492,1524,1529,1515,1506,1554,1529,1519,1542,1523,1519,1539,1505,1495,1497,1504,1503,1496,1485,1468,1476,1498,1500,1500,950,559,378,619,429,477,636,520,334,700,688,672,724,691,690,698,652,645,636,643,722,736,556,663,607,405,566,570,604,550,709,647,646,640,645,641,603,613,517,634,545,506,714,583,513,651,508,526,547,530,608,589,646,563,604,571,564,528,544,526,567,659,409,420,658,474,584,621,549,660,568,615,618,539,596,473,653,674,523,520,534,637,416,575,538,507,677,576,426,492,660,599,611,677,610,691,725,660,675,640,729,686,725,578,523,680,625,649,616,500,517,635,602,555,646,629,532,611,584,603,594,578,583,478,418,419,551,592,546,530,587,535,556,471,473,644,540,573,441,469,473,578,476,519,566,300,436,596,502,515,487,407,628,2031,2055,2048,2050,2025,2041,2057,2056,2055,2057,2050,2040,2055,1759,1717,1678,1682,1713,1721,1720,1681,1697,1702,1702,1716,1690,1707,1703,1689,1721,1739,1725,1728,1740,1718,1754,1735,1754,1758,1742,1764,1728,1717,1703,1715,1702,1699,1710,1652,1667,1718,1722,1685,1701,1704,1700,1699,1727,1741,1742,1758,1763,1758,1740,1715,1709,1740,1736,1740,1735,1744,1756,1748,1726,1762,1735,1747,1723,1744,1935,2048,2048,2048,2048,2048,2048,2048,1755,1700,1622,1733,1765,1665,1704,1736,1745,1715,1758,1787,1838,1817,1813,1839,1774,1832,1754,1801,1759,1804,1710,1656,1659,1742,1725,1620,1583,1752,1733,1685,1746,1663,1744,1770,1840,1804,1820,1844,1829,1659,1728,1611,1642,1718,1827,1841,1778,1823,1862,1821,1795,1554,843,899,943,907,992,751,769,850,968,1008,1210,1363,1306,1144,1239,1177,1226,1268,1297,1209,1189,1261,964,721,745,906,908,902,1060,1197,1262,559,461,1225,1621,1496,1938,1821,1705,1898,1891,1863,1816,1823,1837,1838,1893,1587,1573,1513,1512,1479,1514,1491,1496,1493,1498,1493,669,69,252,235,47,183,264,368,263,380,301,320,156,345,308,204,148,89,400,422,499,129,418,523,374,453,270,204,512,1954,2038,1901,1679,1719,1693,1709,1710,1659,1686,1729,1719,1707,1690,1678,1671,2048,1965,1773,1761,1564,1813,1694,1802,1758,1768,1871,1821,1746,1101,562,1653,1506,1666,1538,1602,1594,1493,1194,1487,1506,931,467,435,510,547,500,476,1084,1805,1711,1667,1881,1730,1746,940,679,1243,1502,1486,1490,1499,1471,345,315,465,403,593,162,178,439,400,459,130,449,476,1530,1838,1669,1691,1691,1681,1677,1885,1704,1672,1754,1719,1687,671,1356,1737,1742,1590,1444,1509,1470,1513,1500,482,473,353,343,479,343,426,359,572,393,449,394,464,542,463,520,1870,1813,1669,1666,1681,1678,1678,1697,1874,1711,1717,1725,1717,1768,580,729,1163,886,1185,1636,1723,2048,2056,2047,2055,2056,1481,1591,1521,1270,863,805,802,841,906,684,1949,2015,1995,1919,1920,1022,660,1194,1184,1332,1356,1395,1357,1184,952,987,690,1127,1166,1130,1103,726,981,923,982,1073,1043,1023,1164,1082,1176,629,672,808,929,841,784,825,719,765,2048,1817,1036,1082,1028,958,992,1117,1072,1037,988,1077,1181,904,1111,1031,924,1016,776,910,734,806,868,1407,1415,1561,1372,1892,2057,2048,2037,1555,1805,2027,2048,2048,2057,1731,2048,1890,1711,2048,2048,2048,2048,2048,2048,2048,2048,2031,2031,2009,2017,2048,2038,1991,1869,1735,1787,2048,2048,2048,2048,2048,2048,2048,2050,2048,2048,2057,2034,1943,1904,1821,1590,1387,1992,1985,1731,1835,2042,2055,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2046,1717,958,1871,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2055,1852,1730,2048,2048,2048,1987,1690,1440,1294,1047,897,535,1350,2048,2057,2048,2048,2048,2048,2057,2048,2056,1996,1559,1134,1491,2048,2048,1970,1920,1785,1562,1357,948,708,354,134,1453,2055,2048,2057,2054,2048,2048,2048,2048,2048,2048,2048,2047,2052,1866,1696,1518,1225,1904,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2052,2015,2009,1775,1588,1176,835,1816,1829,2041,2028,2055,2055,1996,1789,1448,818,1840,2045,2048,2046,1750,2048,2055,1922,1160,25,221,49,41,2048,2048,2048,2048,2054,2048,2054,2046,1976,1996,2048,2057,2048,2010,2048,2048,2048,2048,2048,2048,2048,2055,2048,2053,1664,1770,2024,1553,1782,1860,2035,1749,1393,1398,1796,2013,2038,2048,2057,2055,2050,1927,1634,817,329,2056,2048,2048,2048,2055,2056,2055,2048,2048,2037,2023,1910,1832,1928,1739,1739,2048,2048,2057,2048,2048,2048,2057,2048,1916,2048,2057,2048,2048,2048,2048,2048,2048,1588,2045,1957,1950,1053,1982,2048,2054,1926,1595,2048,2048,2048,2048,2056,2048,2048,2048,2048,1995,1500,1415,1909,1960,2009,2049,2055,2041,2036,2037,2048,2054,2046,2031,2036,2020,1967,1986,2037,2050,2050,2037,2047,2025,2035,2045,2044,2039,2038,2023,1969,1817,1651,1465,1340,1176,1254,1151,1125,1019,1118,1011,1036,1036,823,876,743,745,579,417,305,199,147,66,43,1201,2032,2040,2048,2052,1988,1757,1712,1413,808,1752,2048,2048,2048,1981,2004,2048,2048,2043,1990,2048,2048,2048,1999,2048,2048,2048,2047,2047,2057,2048,2054,2042,2040,2055,1992,1962,1880,1748,1753,1709,1727,2051,2048,2057,2048,2055,2047,2002,1808,2053,2057,2057,2057,2048,2050,2056,1899,2055,2057,1944,1773,1614,2057,2054,1771,1572,2048,2057,2048,2048,2048,2048,2057,2048,2042,1963,1769,1574,1471,1360,1235,1179,2057,2048,2048,2057,2049,1946,1821,1360,450,680,1316,1663,1850,1951,1904,1935,1978,1974,1826,1642,1422,1244,779,432,1062,1962,2044,1757,1175,1192,2048,2048,2048,2048,2048,2048,2048,2048,1951,2026,2051,1951,1629,1269,1022,2057,2028,1528,1439,2048,2048,2048,2047,2048,2051,2048,2055,1965,1967,1499,2039,1958,1466,633,2021,2048,2048,2048,2048,2048,2048,1980,1772,2057,2048,2048,2048,2048,2048,2046,1248,1261,1725,2004,2054,2048,2048,1738,1196,2003,1848,2056,2048,2048,2057,2049,1922,1489,1168,831,597,386,322,121,1171,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1638,1728,2048,2048,2048,2048,2048,2048,2048,1683,230,973,1626,1869,2051,2056,2057,2048,2048,2048,2048,2048,2048,2048,1975,1700,1584,1397,1264,1105,1022,985,795,767,899,994,682,1401,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1440,908,683,1086,2057,2057,2048,2056,1815,1422,2048,1858,1446,1104,685,745,568,2055,1995,1452,430,1595,1874,1943,2057,2048,2048,2055,2047,2035,1668,1718,1775,2004,1888,2048,2057,2048,2048,2048,2057,2057,2057,2023,1794,1564,1077,700,1382,2000,2048,2048,2048,2048,2048,2048,2048,2048,2014,1817,1551,1231,904,511,269,1628,2056,2035,1912,1872,1692,1681,2019,2055,1851,1559,1318,1789,1698,1961,2044,1964,2002,1221,1843,1815,1869,1724,2048,1785,1883,1575,1404,1174,1344,2049,1939,1994,2008,1984,1951,1925,2048,2056,2032,1878,1171,946,2048,2048,2048,2048,2048,1701,654,2042,2048,2057,2048,1878,576,1273,2055,2046,2048,2048,2048,2048,2057,1966,2048,1616,1906,2048,1739,2048,2048,1650,1996,2057,1683,1259,1606,1864,605,1876,2048,2048,2048,1708,289,103,935,1954,2057,2048,2057,2048,2057,2055,1934,2048,2048,2001,2002,2053,1968,2048,2057,2049,2055,2033,2057,1853,1971,1671,1979,1411,1877,1246,1617,1646,1662,1263,1300,1832,2038,1738,1932,2048,2048,2057,2050,1614,1074,791,1051,2039,1350,1449,1837,2048,2048,2048,2048,2048,2057,2048,2048,2048,2056,1980,1846,1641,1423,1265,910,982,2048,2048,2048,2048,2048,1939,407,1952,2046,2048,2025,1914,2002,2050,2048,2048,2048,2048,2056,2053,2029,1846,1505,1050,515,2027,2048,2048,2048,1814,367,531,1959,2048,2048,2048,2048,2057,2048,2048,2023,1686,580,366,1160,1820,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2030,1939,1818,1766,1750,1598,1439,1309,1240,1226,1128,823,613,567,513,512,391,506,378,474,408,497,532,492,365,266,687,1210,1202,1237,1178,1074,969,884,758,556,345,163,94,736,1579,1801,2023,2048,2048,2040,2029,1989,1838,1938,1790,1996,1931,1852,1378,2029,2045,2045,2044,2024,2023,2042,2037,2018,2017,1976,2048,1897,1942,2053,2048,2048,1811,1735,2011,1843,1781,2047,1922,1265,1601,1933,2054,2048,1851,1930,2016,1769,1971,1946,2048,2048,2048,1867,2032,2043,1786,1473,1650,1417,1241,587,537,470,321,771,558,963,1593,1461,1423,1423,1256,1388,1590,1732,1790,1832,1899,1964,2029,2038,2055,2054,2048,2048,2057,2056,2057,2045,2041,1975,2001,1974,1943,1797,1708,1712,1681,1684,1563,1454,1434,1464,1431,1385,1282,1207,1215,1175,1170,1067,993,952,956,1260,1558,1477,1429,1459,1436,1531,1525,1561,1462,1547,1520,1575,1658,1626,1571,1590,1559,1512,1733,1670,1841,1701,1759,1807,1882,1893,1824,1966,1991,1931,2035,2045,2056,2054,2048,2048,2048,2019,1949,1802,1655,1300,968,1856,1835,2055,2048,2048,1883,334,464,2034,2057,2057,1390,2055,1593,1532,2048,1930,1222,2032,2048,2048,2048,1672,1918,2025,1736,1317,1843,2048,2048,2048,2057,2048,2031,1970,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2052,2048,2048,2048,2048,2051,1948,2002,2038,2048,2048,2045,2048,2048,2057,2048,2048,2048,1967,1126,2048,2053,2048,2055,2048,2043,2057,2000,1877,1908,1623,1613,1501,1596,1819,1686,1481,1407,1196,1031,620,877,2048,2048,2048,2048,2039,1799,1405,305,660,1717,2048,2049,1686,1638,1549,1879,1375,341,364,930,526,279,446,383,470,393,338,234,742,825,794,877,567,564,1170,786,605,1211,1418,1472,1428,1205,1183,760,849,812,532,315,271,551,409,668,1100,652,439,566,416,691,541,485,568,339,521,431,756,682,1029,802,1068,579,738,1052,574,736,1072,696,264,602,753,561,638,431,296,306,285,303,556,318,328,228,454,612,581,660,660,357,208,425,484,676,451,321,586,551,148,345,563,481,296,531,329,716,892,855,113,192,263,277,693,799,326,337,501,285,499,520,270,847,807,502,223,421,328,462,236,247,343,539,902,522,424,469,606,510,453,415,478,666,331,330,680,577,503,298,230,525,686,336,331,630,239,823,628,411,488,419,364,612,617,556,515,544,591,399,182,674,633,726,678,1057,1075,1124,1053,1183,1152,359,330,954,1118,1143,1004,500,1082,802,478,300,238,389,171,213,139,225,135,553,122,149,133,139,467,585,534,464,653,580,568,721,424,566,158,694,276,314,413,538,551,477,268,615,247,264,330,681,147,274,250,246,376,214,288,266,392,187,113,255,188,362,429,524,531,566,915,649,409,443,481,687,629,401,580,912,704,811,824,413,381,272,400,465,207,404,317,404,220,271,231,285,826,1127,632,343,837,411,544,413,267,506,675,380,375,180,458,929,596,919,667,398,703,194,440,175,300,220,307,515,655,560,504,504,712,593,610,362,60,527,664,696,704,444,302,483,362,356,372,951,1327,1237,1337,707,1150,1345,1662,937,252,119,251,539,353,182,122,349,384,399,493,390,975,930,814,214,427,339,185,344,202,205,214,347,502,421,523,457,437,506,464,707,392,551,374,378,432,348,455,254,215,399,360,224,306,302,215,240,569,353,314,184,145,642,242,414,299,553,461,550,290,195,410,461,231,393,548,360,520,788,405,303,611,663,278,770,509,239,126,242,159,152,236,429,165,162,167,173,312,225,190,343,160,426,557,389,205,277,224,265,476,677,322,498,363,187,234,151,420,422,612,185,295,379,197,190,391,100,382,470,248,192,340,128,306,102,113,407,609,500,408,358,312,240,276,205,474,370,105,693,729,398,498,425,378,410,734,709,975,772,675,923,1486,1058,1270,1362,1441,1449,1382,1542,1575,1469,1527,1552,1466,1508,1509,1587,1521,1561,1487,1472,1571,1455,1405,1321,1256,1207,1308,1383,1285,1215,1159,1078,1145,1589,1526,1737,1777,1735,1751,1691,1696,1704,1744,1696,1732,1714,1692,1748,1746,1757,1729,1743,1539,1666,1663,1653,1702,1701,1699,1721,1721,1678,1641,1667,1678,1610,1569,1650,1672,1802,1639,1714,1591,1650,1666,1701,1743,1776,1826,1799,1808,1841,1837,1736,1715,1675,1770,1797,1848,1784,1714,1662,1821,1759,1686,1808,1739,1715,1703,1596,1667,1500,1881,1597,1657,1595,1585,1613,1606,1689,1694,1707,1645,1715,1740,1672,1736,1722,1705,1676,1768,1707,1679,1707,1664,1669,1687,1626,1628,1607,1606,1589,1514,1495,1500,1848,1124,1141,859,826,482,1215,1417,1444,1435,1242,1056,1197,1186,1283,1403,1294,1310,1320,1241,1219,1087,944,780,842,861,840,657,695,977,1112,971,1224,1190,1866,1439,1448,1387,1419,1570,1421,1525,1468,1474,1370,1288,1238,1267,212,235,219,216,232,752,1388,1595,1348,981,1321,1206,902,1306,1441,1033,1577,1658,1223,1175,1546,1090,1771,1107,1639,1669,1609,1442,1696,1458,1214,1676,1297,1631,1489,1211,1709,1076,1557,1551,1526,1692,1400,1487,1451,1487,1769,1152,1350,1634,1711,1226,1594,1498,1493,1568,1651,1401,1328,1552,1533,1450,1729,1456,1727,1368,1361,1534,1473,1684,1410,1174,1734,1551,1508,1656,1297,1634,1024,1475,1473,1667,1404,1485,1573,1450,1462,1583,1310,1514,1325,1506,1414,1389,1295,1574,1379,1133,1406,1261,1553,1500,1597,1649,1703,1465,1286,1529,1464,1283,1703,1449,1565,1508,1550,1205,1687,1730,1392,1356,1874,1395,1732,1204,1595,1601,1349,1476,1387,1660,1730,1575,1765,1695,1523,1345,1746,1759,1637,1663,1237,1676,1542,1576,1510,1718,1485,1548,1791,1273,1720,1672,1709,1458,1783,1635,1786,1895,1886,1886,2057,2029,2034,2042,2017,2048,2022,2053,2016,2031,2048,2043,2048,2044,2010,2009,1899,2028,2011,2035,2050,2055,2042,2041,2041,2023,2025,2009,2043,2050,2027,2046,2055,2018,2025,2023,2013,2015,2000,2038,2044,2052,2026,2035,2051,2026,1990,1967,2013,2011,1979,2033,2022,2022,2018,2050,2027,2005,1993,2001,1997,1979,2006,2004,2013,2037,2053,2020,2005,2009,2003,1996,1982,2016,2004,2046,2055,2032,2048,1996,1998,2021,2028,2012,2039,2049,2041,2043,2040,2051,2040,2040,2030,2032,2019,1965,2027,2000,1957,1984,2005,1967,1936,2004,1984,1985,1950,1957,1966,1966,1988,1999,1949,1923,1975,1996,1959,1949,1990,1989,1976,1996,1958,1978,1974,1987,1998,1959,1957,2000,1972,2002,1952,1961,1983,2004,1972,2000,1979,1977,1990,1983,1992,1922,1979,1993,1986,1977,1981,1974,1974,1980,1997,1966,1963,2018,1996,2003,1989,2005,1992,2016,1984,1984,2011,1959,1935,2035,2021,1974,1896,1995,2027,1987,1973,2020,2016,2013,1982,2010,2036,1979,1991,2005,2008,2031,2032,2007,2008,2028,2025,2001,1989,1975,2011,2025,1993,1991,1915,1895,2041,2043,2028,1965,1966,1920,1906,1896,1801,1902,1926,1838,1819,1824,1980,1987,2003,1904,1846,1890,1935,1787,1880,1992,1932,1925,1977,1935,1878,1949,1893,1968,1873,1959,1925,1980,1880,1972,1826,1892,1877,1874,1902,1977,1947,1966,1981,1989,1776,1927,1822,2005,1839,1942,1922,1981,1937,1967,2033,1778,1937,1724,1998,1980,1890,1975,1892,1918,1926,1977,1905,1901,1967,2017,1748,1781,1828,1769,1796,1900,1842,1935,1765,1936,1826,1895,1954,1894,1959,1920,1881,1918,1873,1923,1871,1961,1829,1949,1991,1932,1945,1883,1946,1903,1890,1872,1904,1793,1882,1890,1890,1825,1744,1658,1587,1557,1721,1889,1710,1938,1980,1956,1975,1998,1982,1941,1983,1988,1958,1982,1992,1981,1447,1389,1416,1417,1437,1463,1587,1405,1605,1547,1523,1546,1727,1690,1524,1699,1983,2010,1899,2021,1944,1905,1908,1886,1983,1996,2010,1908,1977,1927,1888,1873,1888,2015,2028,1973,1971,1954,1986,1828,1928,1937,1979,1999,1936,2005,1955,1969,1805,1885,1972,1934,2021,1917,1986,1857,1938,1838,1886,1957,1951,2025,1912,1975,1933,1975,1814,1895,1979,1990,2009,1964,2001,1945,1906,1905,1889,1954,1982,1902,1966,1892,1983,1953,1902,1922,1767,1714,1647,1669,1675,1696,1730,1710,1703,1714,1649,1672,1714,1747,1726,1669,1669,1665,1692,1747,1706,1686,1630,1658,1674,1712,1686,1759,1732,1648,1575,1597,1690,1767,1658,1664,1611,1608,1651,1756,1751,1704,1665,1676,1598,1714,1817,1784,1663,1617,1657,1755,1837,1835,1813,1744,1743,1754,1832,1870,1816,1795,1829,1810,1731,1742,1807,1686,1625,1692,1779,1664,1648,1601,1791,1697,1619,1777,1829,1568,1674,1794,1611,1593,1715,1655,1664,1713,1833,1716,1674,1779,1829,1767,1675,1704,1818,1711,1737,1762,1745,1881,1946,1935,2015,1976,1951,1909,1971,1933,1948,1979,1970,1987,1986,2000,1991,1998,1994,1986,1977,1955,2005,1966,1998,2000,1976,1967,1979,1962,1967,1997,2020,2010,1985,1976,1992,1970,1973,1967,1973,1970,1986,1963,1964,1988,1976,1961,1963,1958,1967,1959,1981,1963,1970,1948,1983,1945,1963,1960,1955,1945,1966,1947,1968,1944,1967,1943,1966,1943,1965,1948,1965,1947,1964,1950,1967,1915,1911,1895,1935,1886,1912,1920,1904,1910,1914,1904,1907,1948,1887,1916,1905,1895,1930,1820,1971,1835,1834,1962,1823,1843,1961,1841,1818,1971,1855,1826,1959,1874,1836,1943,1881,1824,1929,1882,1821,1924,1901,1812,1879,1863,1782,1890,1831,1816,1892,1793,1846,1890,1819,1812,1885,1777,1839,1897,1764,1852,1893,1736,1872,1892,1790,1882,1868,1845,1912,1836,1847,1910,1814,1889,1881,1833,1915,1859,1837,1909,1825,1876,1899,1822,1907,1855,1910,1841,1868,1909,1848,1868,1905,1851,1872,1902,1850,1873,1901,1846,1876,1901,1850,1883,1897,1851,1885,1894,1852,1893,1909,1855,1865,1911,1859,1845,1922,1849,1830,1940,1861,1855,1909,1867,1862,1880,1875,1873,1865,1882,1885,1853,1890,1891,1874,1913,1904,1922,1918,1916,1915,1941,1919,1906,1917,1905,1922,1918,1916,1915,1945,1927,1988,1981,1987,2003,1984,1982,1973,1995,1987,1980,1980,1956,1906,1922,1902,1935,1893,1957,1848,1910,1904,1853,1949,1977,1929,1981,1934,1965,1942,1977,1951,1958,1966,1969,1947,1979,1966,1937,1990,1908,1960,1867,1911,1890,1885,1914,1851,1968,1825,1986,1839,1943,1876,1899,1887,1895,1941,1772,1921,1786,1920,1819,1877,1853,1835,1892,1797,1933,1799,1880,1860,1839,1866,1811,1918,1922,2045,2025,2025,2008,2012,2006,2023,2002,2051,2020,2051,2041,2026,2017,2009,1957,2029,1994,2031,2031,2044,2055,2027,2037,2024,1998,2028,2015,2050,2044,2052,2043,2041,2037,2030,1976,1868,2045,1991,2023,2048,2035,2035,2001,1978,2001,2002,1962,1969,2022,2034,2008,2033,2007,1999,1980,2023,1989,1953,1988,2022,2034,2014,2029,2023,1975,1996,2021,1985,1952,1983,2024,2038,2033,2038,2042,2018,2050,2005,2017,1974,1993,1988,2030,2034,2051,2054,2051,2045,2028,2024,2011,2029,2010,2048,2041,2035,2030,1962,1982,1977,2017,1982,1993,1988,1952,1994,1996,1958,1951,1972,1954,1996,1953,1964,2020,1949,1936,1994,1952,1811,1846,2022,1988,1986,2001,1990,1965,1969,1949,2043,1987,1943,1884,1899,1914,1990,1977,1879,1908,1983,1961,1946,1813,1909,1992,1985,1935,1827,1904,1968,1977,1874,1835,1936,1843,1865,1943,1972,1936,1981,1887,1856,1890,1862,1927,1901,1974,1953,1899,1887,1890,1872,1956,1962,1950,1926,1820,1934,1813,1928,2006,1936,1888,1842,1858,1879,1897,1931,1878,1903,1876,1857,1919,1892,1830,1916,1903,1833,1893,1795,1787,1981,1962,1924,1922,1941,1833,1841,1856,1829,1819,1893,1979,1942,1958,1937,1846,1870,1952,1970,1966,2016,2016,1988,1703,1980,2017,2009,2012,1982,1962,2010,2029,1969,2007,1913,2000,1995,2037,1942,1836,2007,2000,1986,1999,1813,1996,2012,2032,1985,1991,1948,1944,2010,2000,2003,2028,2039,2027,1989,2008,2009,2017,2014,1991,1970,1971,2031,2020,1908,1813,1799,1845,1990,2020,1988,1975,2016,1988,1981,1908,1968,1982,1901,1930,1960,1964,1930,1981,1992,2006,2012,1985,1964,1942,1995,1982,1983,1910,1912,1954,1957,1953,1844,1964,1953,1954,1844,1968,1968,1993,1962,2011,1992,1998,2030,1964,1909,1911,1953,1903,1922,1930,1966,1954,1925,1924,1991,2011,2012,1975,1982,1971,2015,2009,1974,1966,1996,1937,1968,1933,1949,1948,1980,1967,1980,1998,2030,2001,1979,1982,2002,2013,1962,1945,1962,1995,1939,1991,1887,1996,1974,2022,1964,1943,1989,2016,1985,1970,1948,1973,1994,2042,1915,2003,1999,1974,2023,1934,2002,2012,1971,2032,1962,1978,2007,1980,1941,1983,1985,2011,1969,1966,1914,1969,1963,1985,1922,1993,1954,1939,1959,1973,1990,2009,1937,1947,1982,1955,1937,1949,1953,1927,1889,1854,1946,1989,1922,1902,1980,1868,1948,1973,1886,1966,1974,1951,1960,2007,1923,1981,1972,1957,1974,1950,1997,2024,1996,2049,2023,1980,1997,2012,1965,2013,2030,2042,2045,2050,2003,1980,2008,1971,2017,2036,2032,2043,2001,2030,2026,2013,1997,2032,2047,2028,2051,2033,2013,1967,2021,1962,2029,2032,2040,2052,2047,2025,1973,2018,1974,2038,2031,2050,2051,2043,2017,1998,1940,1976,1810,1976,1960,2003,1979,2010,2039,2009,2006,1973,2005,1975,1796,1972,1965,1959,1989,1993,1955,1800,1961,1944,1966,1994,1992,1903,1846,1818,1753,1603,1699,1508,1620,1501,1578,1426,1580,1493,1272,1439,1452,1332,1210,1497,1285,1355,1195,1512,1107,1419,1278,846,1586,1313,1329,1178,1222,1562,828,1230,1423,1125,1560,1100,1330,1282,1161,1631,1127,1444,1506,1325,1563,1356,1514,1528,1469,1634,1234,1489,1522,1293,1482,1342,1348,1333,1134,1589,1246,1456,1219,840,1650,1388,1270,1198,1232,1611,848,1218,1452,1211,1582,1060,1301,1224,1438,1392,1367,1467,1515,1250,1637,1427,1508,1577,1298,1631,1291,1510,1518,1206,1612,1200,1372,1245,1444,1371,1305,1429,1195,907,1653,1392,1210,1216,1245,1599,772,1242,1444,1163,1591,1075,1334,1251,1429,1417,1383,1475,1483,1218,1613,1508,1454,1593,1389,1441,1415,1481,1415,1129,1613,1190,1473,1181,1580,1202,1274,1394,1083,1055,1494,1423,1092,1314,1482,1135,1006,1272,1320,1182,1412,1218,1370,1141,1550,1124,1425,1504,1323,1618,1382,1523,1508,1435,1620,1250,1444,1488,1401,1327,1476,1278,1376,1130,1599,1225,1494,1275,865,1613,1345,1349,1167,1294,1650,868,1191,1429,1267,1500,1119,1321,1228,1297,1563,1252,1504,1510,1233,1610,1358,1520,1573,1343,1659,1276,1508,1530,1254,1647,1180,1399,1288,1364,1417,1233,1412,1151,906,1633,1395,1233,1238,1351,1520,881,1272,1469,1177,1612,1072,1372,1205,1459,1397,1370,1499,1517,1223,1585,1460,1527,1631,1358,1561,1387,1589,1516,1119,1596,1203,1342,1261,1350,1368,1213,1440,1198,861,1579,1385,1222,1222,1292,1564,886,1256,1430,1111,1568,1067,1312,1255,1490,1295,1210,1480,1542,1360,1619,1458,1548,1566,1407,1621,1390,1565,1512,1157,1574,1343,1343,1305,1165,1558,1186,1419,1261,865,1605,1339,1327,1156,1228,1583,836,1224,1413,1195,1403,1160,1290,1393,1320,1614,1121,1496,1586,1435,1537,1459,1527,1459,1548,1622,1317,1453,1507,1352,1225,1622,1262,1379,1171,1623,1161,1493,1319,866,1572,1296,1340,1140,1277,1497,1092,1054,1346,1364,1258,1479,1191,1328,1191,1639,1227,1497,1466,1301,1620,1423,1583,1510,1494,1712,1288,1533,1535,1344,1284,1587,1337,1404,1152,1627,1169,1524,1333,887,1504,1283,1376,1118,1363,1265,1335,964,1333,1459,1306,1626,1054,1450,1295,1629,1225,1408,1534,1432,1322,1670,1648,1539,1628,1393,1703,1210,1213,1290,1392,1339,1879,1467,1438,1200,1333,1552,1456,1546,1758,1362,1323,1292,1556,1407,1493,1815,1431,1447,1287,1376,1480,1354,1412,1807,1488,1547,1294,1272,1471,1234,1349,1483,1616,1080,1231,1234,1631,1471,1303,1434,1544,1345,1520,1672,1801,1724,1890,1539,1921,1861,1824,1713,1892,1817,1833,1872,1379,1662,1697,1754,1725,1699,1653,1572,1260,969,1915,1987,1920,1775,1246,874,1804,1504,1805,1798,1895,1682,1897,1609,1603,1852,1638,1885,1877,1891,1777,1723,1737,1541,1954,1952,1724,1995,1949,1956,1845,1868,1761,1721,1822,1833,1900,1874,1671,1686,1620,1550,1864,1653,1619,1651,1536,1615,1440,1685,2020,2047,2001,1896,1984,2032,2010,1941,2002,2046,2019,1950,1998,2040,2023,1932,1976,1962,1937,1966,1949,1925,1910,1999,2022,2015,1996,2024,2024,2006,2002,1922,1894,2056,2045,2029,1944,1971,1882,1864,1951,1915,1920,1937,1900,1930,1871,1921,1878,1908,1937,1840,1897,1950,1861,1947,1917,1910,1902,1530,1358,1918,1667,1821,1424,1324,1242,1896,1581,1626,1678,1728,1548,1579,1578,1585,1460,1342,1724,1671,1406,1107,1639,1692,1407,1105,1978,1875,1788,1718,1799,1783,1662,1885,1806,1695,1672,1679,1733,1513,1846,1719,1369,1568,1506,1687,1401,1278,1278,1711,1526,1422,1178,1216,1757,1598,1674,1642,2027,1966,1973,1997,1961,1874,1718,1806,1870,1899,1865,1879,1902,1962,1846,1902,1884,1977,1891,1594,1939,1647,1418,1586,1625,1422,1389,1726,1466,1470,1618,1595,1727,1585,1617,1750,1643,1552,1789,1658,1584,1398,1592,1791,1685,1383,1252,1689,1251,1820,1859,1772,1655,1431,1427,1800,1556,1568,1593,1527,1746,1648,1468,1653,1660,1549,1608,1326,1537,1610,1560,1607,1309,1636,1534,1596,1640,1161,1542,1527,1471,1256,1132,1472,1195,1480,1248,1587,1084,1398,1448,1219,1512,1284,1273,1601,1484,1502,1814,1775,1664,1841,1826,1916,1827,1885,1839,1951,1508,1665,1629,1597,1612,1481,2007,1614,1574,1672,1700,1785,1591,1418,1602,1489,1580,1579,1426,1615,1421,1646,1473,1602,1433,1604,1521,1595,1453,1720,1894,1654,1958,1697,1887,1498,1612,1489,1598,1600,1995,1849,1854,1924,1862,1923,1851,1606,507,600,465,800,566,630,434,649,1373,2009,1967,1956,1942,1969,1969,1960,1932,1832,1639,1606,1654,1815,1584,1613,1546,1592,1790,1554,1755,1393,1505,1454,1493,1397,1405,1497,1552,1305,1228,1293,1511,1422,1511,1420,1336,1627,1481,1578,1452,1429,1376,1423,1438,1417,1341,1416,1765,1753,1795,1864,1897,1890,1834,1756,1760,1764,1664,1757,1807,1845,1769,1721,1691,1465,806,831,855,1087,1707,1687,1707,1619,1697,1583,1568,1657,1680,1707,1657,1734,1666,1761,1793,1862,1787,1694,1673,1447,1792,1457,1778,1536,1919,1604,1860,1794,1862,1718,1859,1803,1874,1211,1066,1038,1042,1083,1062,1065,1082,1501,1558,1563,1505,1585,1525,1544,1532,1566,1538,1477,1646,1600,1513,1067,1039,1049,1167,1448,1419,1780,1789,1583,1152,1275,1496,1304,1101,1502,1713,1234,1567,1622,1561,1564,1625,1607,1350,1232,868,1107,660,896,754,750,1490,1357,1231,518,832,547,532,762,556,902,735,938,528,728,687,680,853,489,837,716,929,509,533,924,695,868,446,807,611,803,267,268,527,207,639,238,591,262,197,527,167,551,188,503,38,419,262,233,556,221,1187,1430,1516,1212,1185,1235,1252,1150,953,991,969,976,942,992,1003,1393,1382,1378,1412,1481,1516,1410,1379,1397,1603,1471,1514,1574,1612,1571,1510,1483,1605,1393,1407,1415,1398,1411,1417,1450,1427,1392,1383,1430,1366,1278,942,944,929,1089,954,949,947,904,1086,918,979,905,1345,1400,1448,1369,1339,943,911,925,1082,1698,1565,1587,1589,1461,1554,1584,1588,1731,1370,1327,1352,1282,1292,1295,1378,1343,1609,1550,1534,1276,1337,1416,1267,1501,1605,1684,1552,1558,1588,1790,1681,1757,1581,1457,1227,1464,1429,1408,1239,1180,1477,1435,1538,1478,1380,1606,1431,1718,1671,1670,1655,1596,1649,1656,1649,1688,1666,1702,1657,1674,1520,1656,1639,1578,1669,1667,1661,1644,1621,1598,1669,1680,1545,1718,1677,1698,1678,1506,1635,1666,1592,1713,1666,1637,1630,1669,1845,1633,1621,1616,1818,1680,1670,1666,1656,1815,1568,1714,1597,1538,942,957,945,1087,1516,1530,1579,1488,1531,1303,1296,1331,1356,1141,1202,1250,1407,1140,987,993,1127,1344,1155,1098,1073,1197,1054,938,891,1502,1511,1505,1536,1537,1516,1527,1523,1543,1624,1411,1374,1384,1378,1397,1376,1352,1622,1534,1520,1526,1579,1563,1529,1525,1555,1750,1586,1604,1659,1628,1593,1605,1662,1730,1537,1458,1411,1373,1437,1451,1393,1428,1785,1775,1734,1684,1750,1734,1709,1697,1789,1835,1729,1694,1636,1735,1698,1682,1665,1695,1018,1176,1154,1103,1117,1056,1307,1140,1048,985,951,676,677,659,1115,1751,1685,1761,1669,1742,1684,1743,1660,1864,1750,1732,1653,1679,1680,1722,1723,1809,1810,1756,1797,1724,1778,1745,1769,1724,1876,1733,1732,1636,1661,1675,1699,1692,1736,1453,1511,1366,1472,1405,987,1017,997,1540,1856,1775,1841,1721,1838,1783,1863,1808,1618,1185,1212,1329,1705,1064,1004,1080,1691,1673,1603,1600,1653,1557,1642,1574,1695,1573,1465,1416,1426,1358,1477,1419,1422,1469,1648,1529,1549,1537,1498,1449,1445,1444,1612,1615,1636,1605,1554,1666,1617,1603,1667,1601,1457,1434,1487,1411,1454,1455,1414,1587,1864,1826,1843,1720,1868,1770,1859,1842,1712,1649,1606,1631,1541,1646,1608,1615,1698,1558,1475,1461,1410,1532,1471,1487,1501,1714,1818,1842,1871,1678,1877,1812,1859,1855,1623,1641,1619,1719,1523,1636,1601,1639,1650,1478,1419,1453,1373,1507,1470,1439,1495,1860,1802,1814,1885,1674,1831,1813,1855,1717,663,1706,1005,688,1166,673,684,1183,688,1034,1502,641,710,709,1419,1148,1155,1331,1289,849,1095,1211,1219,1267,1283,1557,1438,1350,1008,1266,1678,1572,1740,1644,1741,1553,1567,1696,1708,1028,1109,1480,1423,1536,1090,997,1009,1024,1392,1104,1126,1108,1141,1579,2021,2029,2003,2003,2024,2001,1991,2011,2028,2036,2003,2008,2013,2006,2014,1958,2017,2028,2016,2005,1986,2011,2018,1987,1991,2026,2025,2018,2008,2015,2010,2003,1942,2020,2049,1896,1925,1876,1916,1919,1854,1861,1874,1882,1885,1888,1824,1883,1825,1837,1897,1854,1661,1672,1669,1696,1669,1646,1601,1749,1664,1661,1655,1646,1650,1665,1635,1600,1698,1414,1427,1432,1412,1451,1417,1395,1428,1626,1407,1454,1650,1389,1452,1494,1678,1406,1476,1548,1608,1537,1382,1591,1549,1579,1319,1489,1364,1901,1781,1497,1632,1645,1552,1574,1520,1706,1620,1559,1587,1660,1755,1695,1566,1564,1677,1530,1580,1526,1571,1552,1541,1527,1524,1540,1463,1669,1582,1519,1668,1695,1614,1667,1726,1821,1523,1510,1964,1920,1699,1705,1811,1956,1917,1932,1977,1923,1959,1913,1923,1849,1823,1843,1905,1992,1840,1874,1826,1819,1756,1776,1771,1911,1983,1953,1960,1927,1921,1917,1928,1920,2000,1876,1893,1862,1815,1807,1835,1781,1888,2016,2001,1976,1981,1937,1949,1916,1941,2001,1814,1808,1757,1796,1762,1787,1724,1785,1887,1864,1805,1802,1821,1805,1828,1788,1828,1425,1440,1479,1404,1435,1418,1408,1388,1932,1981,1943,2029,1952,1925,1892,1922,1915,1924,1871,1973,1941,1942,1937,1888,1909,1924,1905,1934,1898,1527,1508,1597,1617,1567,1611,1512,1567,1935,1804,1791,1739,1782,1736,1732,1726,1781,1351,1325,1303,1339,1307,1322,1367,1347,1641,1481,1504,1529,1591,1513,1481,1446,1597,1595,1597,1630,1595,1634,1561,1632,1422,1307,1308,1225,1293,1156,1249,1435,1962,1883,1857,1901,1893,1896,1871,1893,1962,1904,1866,1866,1883,1888,1882,1866,1879,1628,1434,1425,1355,1437,1454,1477,1462,1649,1681,1727,1723,1734,1638,1585,1559,1535,1496,1526,1563,1626,1643,1756,1694,1664,1796,1447,1455,1469,1495,1406,1348,1420,1423,1677,1485,1515,1529,1130,1559,1473,1517,1577,1570,1514,1525,1479,1166,1469,1528,1508,1849,1964,1931,1910,1441,1407,1413,1336,1415,1412,1402,1402,1439,1135,1174,1062,716,1120,1181,1166,1435,1376,1463,1622,1903,1872,1878,1900,1913,1883,1904,1853,1571,1598,1433,1483,1477,1079,871,848,827,932,800,841,787,986,945,888,795,926,964,1026,981,1274,1339,1270,1271,1314,79,676,587,591,208,523,398,1022,1155,823,980,746,1370,878,1187,1103,373,173,494,391,907,1268,1530,1456,1903,1786,1771,1848,1837,1782,1764,1746,1828,1613,1654,1628,1586,1620,1631,1633,1523,1584,1328,1345,1317,1464,1658,1623,1700,1679,1673,1680,1659,1667,1671,1666,1642,1574,1462,1829,1851,1827,1743,1822,1838,1834,1769,1758,1453,1461,1452,1458,1869,1860,1853,1891,1839,1865,1853,1847,1856,1620,1797,1602,1145,1122,1105,1125,1843,2002,2007,1942,1939,1958,1930,1882,1880,1935,1962,1930,1931,1926,1909,1919,1968,1936,1648,1751,1747,1830,1793,1730,1626,1638,2056,2056,2054,2036,2048,2048,2048,2042,2054,2052,2053,2044,2047,2052,2045,2021,2053,1960,1892,1887,1820,1842,1860,1842,1847,1957,1862,1904,1870,1843,1831,1864,1852,1879,1628,1376,1092,713,874,741,661,534,790,838,896,639,340,812,872,836,491,509,781,904,786,387,669,802,845,684,396,1065,1151,1101,611,513,1169,1050,1213,553,549,1241,1041,1143,560,580,1223,1088,1081,895,1235,1408,1418,1644,1741,1060,1097,1130,1146,1167,1153,1068,1186,1128,1122,1105,1194,1131,1067,1014,1067,1637,1054,1093,1182,1131,1054,1066,1073,1015,1006,907,992,1036,965,859,759,889,1476,470,538,502,521,536,550,546,551,457,482,521,493,505,527,523,527,1126,1464,1485,1511,1526,1509,1491,1536,1452,1360,952,1008,1198,1683,1421,1412,1367,1283,1461,1613,1707,1656,1672,1629,1607,1629,1677,1659,1760,1490,1463,1527,1499,1458,1529,1489,1466,1211,1165,1179,1293,1345,1296,1368,1150,1308,1409,1425,1427,1512,1488,1579,1494,1580,1724,1010,1129,1136,1137,1145,1079,1066,1131,1130,1156,1141,1201,1107,1081,1036,1105,1628,1094,1114,1162,1113,1089,1086,1066,1006,999,918,981,1054,977,827,787,880,1470,457,519,494,520,532,523,563,542,449,469,506,498,515,545,537,520,1254,1790,1783,1792,1765,1821,1759,1856,1425,1418,1397,1378,1477,1355,1199,1153,1383,1653,1293,1273,1383,1519,1021,1034,1013,1268,1595,1706,1695,1581,1579,1198,1140,1156,1359,1313,1683,1684,1661,1617,1700,1681,1596,1616,1677,1327,1209,1502,1019,1896,1637,1985,1759,1774,1612,1695,1713,1682,1672,1763,1783,1593,1534,1504,1550,1563,1519,1575,1538,1413,1630,1607,1601,1585,1545,1586,1570,1636,1612,1663,1803,1652,1350,1649,1785,1681,1666,1183,1034,1137,1170,1104,1159,1052,1086,1092,1163,1092,1213,1174,1069,1048,1101,1415,712,1136,1162,1092,419,1168,1180,1141,909,888,1134,1213,1154,408,1086,1195,1173,911,908,1179,1240,1231,368,991,1256,1110,893,1047,1202,1201,1166,391,927,1221,1111,983,1040,1159,1179,1144,518,870,1213,1134,972,1570,1057,1068,1158,1116,1096,1053,1060,1028,1010,917,989,1076,950,827,748,892,1264,998,1244,1105,871,650,1089,1239,1131,1128,1073,1186,1236,1171,1254,1149,1111,1225,1166,1337,1112,1224,1146,1188,1204,1111,1239,1190,1280,1239,1078,930,1118,1273,1217,1068,981,1067,1353,1216,1016,1012,1135,1288,1115,1026,1025,1111,1372,417,554,927,1431,1711,1824,1861,1862,1734,1449,871,500,499,528,552,505,1406,1143,1174,1512,1246,1051,1305,1510,1171,1137,1494,1301,1050,1280,1718,1752,1899,1726,1746,1929,1703,1844,1781,1756,1853,1869,1733,1715,1902,1693,1830,1888,1694,1891,1736,1841,1749,1852,1746,1790,1852,1763,1756,1874,1734,1849,1771,1749,1921,1695,1832,1778,1888,1771,1856,1736,1735,1991,1676,1801,1895,1723,1802,1812,1829,1708,1855,1781,1754,1898,1725,1747,1891,1762,1779,1805,1750,2015,1825,1823,1666,1899,1732,1856,1796,1742,1893,1682,1827,1861,1793,1702,1036,1288,1160,1291,1238,1227,1208,1136,525,798,840,893,610,366,844,874,838,468,509,793,910,799,393,678,766,874,668,1421,1099,1082,1138,1146,1165,1138,1062,1149,1085,1179,1142,1221,1134,1091,1056,1143,1453,1408,1737,1037,1104,1151,1158,1032,1081,1094,1048,997,940,983,1044,1012,805,772,866,1219,1457,1408,1700,455,527,473,531,541,516,584,520,458,474,494,498,511,544,549,536,1261,1623,1655,1596,1670,1682,1638,1646,1682,1721,1791,1657,1629,1591,1625,1663,1646,92,799,1110,352,435,435,959,1776,2032,2049,2034,2023,1982,2025,1952,2020,2017,2023,2007,2006,2017,1983,2014,1992,1626,1442,1503,1654,1133,1118,1451,1123,1122,1121,1121,1120,1121,1254,142,134,1927,2007,1938,1882,1911,1880,1815,1872,1921,1880,1930,1909,1936,1979,1900,1867,1904,1943,1878,1789,2000,1938,1886,1881,1952,1911,1750,1775,1816,1772,1896,1904,1893,1840,1922,1901,1884,1874,1908,1913,1838,1833,1855,1899,1843,1546,1595,1448,1590,1642,1587,1564,1446,1508,1594,1607,1631,1604,1478,1571,1565,1534,1712,1564,1682,1570,1499,1849,1853,1792,1781,1831,1862,1848,1836,1855,1742,1327,1277,1340,1369,1315,1316,1301,1396,1546,1479,1468,1458,1474,1453,1459,1441,1623,1449,1462,1445,1485,1484,1464,1442,1466,1636,1461,1441,1471,1503,1482,1443,1436,1594,1459,1405,1405,1453,1479,1446,1429,1412,1600,1372,1390,1411,1491,1459,1406,1435,1605,1434,1382,1348,1484,1478,1412,1403,1404,1589,1373,1354,1422,1450,1477,1418,1401,1585,1474,1399,1451,1503,1465,1465,1442,1403,1633,1452,1420,1463,1475,1497,1461,1444,1450,1521,1323,1329,1380,1357,1367,1297,1234,1553,1341,1319,1347,1383,1337,1354,1324,1254,1565,1335,1297,1341,1359,1338,1320,1262,1539,1464,1452,1459,1485,1484,1494,1447,1396,1641,1409,1402,1490,1480,1497,1443,1386,1599,1440,1372,1408,1474,1467,1415,1435,1389,1609,1412,1384,1429,1479,1456,1435,1397,1472,1544,1379,1384,1416,1486,1451,1414,1405,1612,1465,1400,1429,1425,1463,1453,1419,1402,1798,1755,1836,1726,1868,1579,1753,1792,1831,1827,1773,1640,1715,1800,1748,1729,1798,1857,1819,1886,1828,1897,1843,1905,1836,1879,1836,1827,1766,1821,1824,1782,1760,1821,1941,1792,1779,1720,1781,1728,1765,1728,1789,1871,1808,1769,1748,1785,1754,1755,1770,1949,1887,1813,1827,1812,1794,1842,1789,1795,1888,1721,1785,1731,1737,1723,1754,1770,1853,1797,1836,1826,1823,1830,1760,1768,1789,1805,1803,1735,1751,1636,1605,1751,1728,1598,1801,1797,1732,1774,1654,1649,1663,1675,1804,1891,1667,1610,1627,1651,1693,1686,1680,1656,1785,1692,1638,1657,1706,1701,1686,1678,1797,1809,1756,1781,1788,1834,1795,1838,1783,1845,1784,1683,1750,1793,1791,1786,1768,1860,1755,1829,1879,1867,1888,1929,1905,1803,1802,1681,1685,1742,1765,1740,1803,1714,1803,1737,1664,1817,1808,1805,1842,1832,1731,1736,1399,1526,1513,1508,1514,1515,1507,1548,2046,1972,1931,2009,1993,1927,1993,1939,1911,1968,1986,2011,1950,1942,1984,1992,2022,1612,498,40,35,40,319,39,40,34,662,1861,1789,1822,1853,1828,1810,1772,1843,1772,1449,1463,1432,1449,1431,1421,1431,1589,1847,1836,1806,1745,1783,1767,1782,1809,1223,810,37,40,40,243,82,38,40,40,1076,1082,1757,1719,1741,1753,1759,1706,1719,1737,1771,1865,1036,1249,1447,1206,842,1573,1432,1242,1050,1805,1609,1648,515,40,32,40,319,39,40,32,556,1376,1445,1206,1212,1683,1660,1627,1695,1685,1670,1663,1616,1591,39,40,38,40,1103,359,114,1195,1841,2016,1733,1651,1597,1640,1683,1653,1712,1738,1687,1719,1743,1746,1730,1709,1701,1685,1727,1081,1136,406,1056,1821,1756,1725,1733,1730,1803,1671,1726,1868,1843,1823,1886,1776,1920,1796,1860,1878,1844,1678,1653,1751,1639,1804,1790,1707,1880,1787,1970,1777,1956,1812,1934,1865,1882,1955,1281,1180,1123,1040,1215,1442,1365,1361,1374,1397,1178,1179,1080,1149,1140,1283,1662,661,836,947,997,1399,1699,1168,783,630,852,1454,1618,1743,1565,869,1317,1652,1371,1205,947,756,957,734,482,937,1205,1381,1195,1232,1324,1369,1401,1321,1388,1931,1898,1875,1925,1843,1856,1894,1888,1854,1907,1933,1943,1833,1888,1879,1965,1211,950,925,975,1572,1956,1726,1904,1894,1145,1194,1191,1216,2021,2024,1993,2035,1938,1919,1886,1894,1946,2042,2035,2037,2057,1769,1825,1786,1849,1803,1802,1709,1807,1846,1946,1951,1925,1962,1603,1277,1315,1622,1315,1169,1286,1286,1336,1184,1261,1234,1601,1447,1231,1185,1691,1605,806,787,1550,1623,861,765,1248,1250,1134,728,993,1601,1624,1377,1409,1600,1847,1742,1795,1781,1828,1769,1853,1844,1826,1652,1668,1672,1739,1775,1776,1826,1742,1630,1441,1404,1440,1564,1461,1427,1436,1598,1512,1447,1491,1539,1589,1488,1486,1550,1903,1982,1950,1918,2021,1974,1985,1973,2007,1754,1776,1751,1762,1799,1576,1543,1576,1892,1902,1813,1893,1927,1772,1830,1761,1849,1959,1862,1831,1908,1866,1824,1782,1818,1898,1449,1533,1630,1618,1207,1241,1621,1312,1170,1280,1218,1697,1173,1234,1274,1827,1777,1788,1759,1789,1821,1794,1782,1793,1867,1835,1812,1817,1468,874,838,829,1003,1151,1160,1171,1156,1292,1215,1185,1237,1315,1396,1420,1301,1600,1839,1864,1849,1866,1860,1799,1855,1830,1951,1904,1932,1917,1928,1914,1923,1962,1902,1838,1860,1820,1730,1842,1824,1711,1597,1653,1774,1847,1848,1896,1888,1796,1891,1876,1485,1471,1406,1504,1548,1604,1773,1584,1544,1634,1646,1694,1686,1755,1758,1794,1803,1890,2046,2053,1959,1961,1987,1983,1977,1992,1939,1972,1914,1913,1136,1315,1386,1051,1725,1786,1738,1751,1726,1532,1624,1510,1651,1778,1761,1778,1732,1862,1785,1805,1762,1783,1688,1713,1721,1623,1667,1819,1799,1623,1185,1002,1055,1130,1360,905,884,920,1305,967,1222,925,1320,522,686,472,606,981,753,782,678,748,1169,1197,1218,988,1298,1372,1439,1405,1285,1453,1598,1635,1344,1416,1647,1531,1462,1722,1615,1661,1517,197,220,199,368,794,489,440,460,1723,2031,2048,2050,2030,2035,2050,2021,2019,1983,1956,1936,1973,1910,1909,1930,1913,1700,1436,1355,1487,1434,1118,1218,1121,1081,1452,1439,1401,1442,1735,1866,1809,1832,1884,1866,1796,1786,1890,1799,1737,1737,1769,1692,1771,1802,1698,1595,1414,1486,1450,1484,1429,1444,1591,1452,1845,1854,1874,1878,1591,1194,1229,1217,1606,1854,1798,1769,1859,1358,1449,1461,1406,1954,2038,2041,2019,2043,1995,2001,1974,1990,1527,1494,1501,1482,1756,1661,1669,1676,1970,1962,1993,2005,2008,1735,1709,1718,1805,2048,2048,2041,2057,1497,1290,1066,527,533,534,783,1190,1470,1457,1155,1233,1506,1391,1388,1289,1561,1508,1625,1452,1391,1689,1740,1797,1836,1627,1210,1331,1242,1355,965,972,1017,1126,865,929,1018,1039,963,2002,1968,1943,1939,2030,2013,1974,2016,1961,1560,1462,1634,1717,1650,1675,1698,1630,1807,1508,1533,1599,1833,1590,1726,1677,1692,1513,1698,1593,1452,1465,1595,1530,1434,1850,1913,1868,1840,1891,1887,1868,1867,1895,1640,1531,1438,1653,1976,1982,1972,1996,1975,1822,1792,1799,1836,1860,1928,1928,1826,1398,1470,1425,1359,1501,1491,1509,1487,1520,1550,1758,1694,1609,1473,1595,1530,1479,1751,1733,1628,1748,1686,1724,1666,1770,1676,1669,1534,1691,1676,1665,1648,1531,1691,1596,1584,1574,1477,1487,1771,1354,1726,1659,1496,1507,1533,1518,1508,1510,1656,1609,1328,1308,1347,1522,1613,1845,1405,1521,1683,1437,1737,1763,1686,1634,1577,1276,1218,1239,1298,1325,1222,1336,1728,1376,1477,1275,1391,1095,1160,1263,1214,1304,1417,1419,1375,1419,1598,1242,1271,1555,1743,1841,1685,1371,1165,992,905,917,1069,1158,1253,1275,1425,1644,1573,1656,1845,1459,1187,983,1015,936,694,879,1321,1121,1269,1256,1251,1295,1477,1679,1733,1862,1869,1752,1778,1726,1408,1274,1201,1325,1282,1303,1321,1267,1232,1268,1306,1300,1349,1716,1563,1693,1600,1522,1444,1668,1651,1639,1397,1233,1181,1309,1291,1223,1409,1469,1855,1447,1244,1396,1213,1228,1091,1264,1396,1601,1725,1632,1620,1430,1366,1458,1325,1828,1449,1425,1247,1255,1258,1170,1251,1399,1631,1713,1699,1673,1513,1635,1723,1502,1660,1547,996,257,1035,1563,1041,268,952,1557,1024,252,965,1566,1047,252,966,1531,1067,252,923,1539,1063,237,836,1210,1263,1288,1386,1360,1241,1354,1262,1405,1298,1284,1278,1463,1323,1292,1323,1326,1449,1422,1302,1244,1238,1242,1267,1235,1272,1565,1190,1138,1225,1228,1205,1167,1204,1241,1508,1258,1244,1300,1238,1239,1256,1269,1615,1739,1742,1760,1654,1669,1702,1806,1877,1179,1326,1345,1379,1300,1408,1247,1351,1362,1371,1361,1345,1351,1404,1395,1375,1842,1673,1612,1567,1649,1575,1509,1471,1253,1380,1407,1425,1582,1516,1444,1540,1687,1939,1665,1588,1586,1643,1591,1534,1520,1281,1418,1364,1406,1548,1491,1475,1532,1648,1910,1683,1611,1594,1652,1595,1571,1514,1293,1373,1364,1376,1534,1493,1507,1497,1622,1867,1726,1621,1615,1584,1599,1592,1492,1326,1336,1396,1378,1523,1516,1535,1476,1580,1825,1502,1206,1133,979,856,940,1104,947,1129,1184,1290,1216,980,961,1029,1074,1103,1598,1211,1183,1038,851,911,1068,983,1093,1130,1263,1208,1064,902,1027,1040,1079,1975,1934,1888,1950,1974,1995,1936,1934,1873,1839,1772,1810,1889,1916,1941,1944,1962,1470,1972,1924,1968,1990,1972,1970,1962,1982,1899,1759,1764,1773,1772,1747,1838,1765,1727,1788,1764,1781,1749,1724,1710,2019,1951,1889,1893,1900,1971,1560,697,887,1974,1966,2010,1977,1942,1977,1996,1954,2005,1956,1949,1979,1972,1974,1963,1945,1951,1780,1562,1560,1581,1569,1581,1563,1565,1668,1793,1632,1706,1558,1651,1836,1798,1837,1806,1667,1538,1553,1473,1707,1655,1736,1578,1732,1625,1700,1700,1776,1844,1839,1839,1883,1818,1652,1714,1566,1807,1834,1818,1835,1851,1552,1604,1588,1549,1683,1678,1737,1650,1759,1718,1794,1737,1814,1560,1565,1712,1723,1658,1566,1861,1622,1772,1669,1812,1659,1700,1582,1661,1721,1518,1535,1745,1660,1625,1391,1612,1936,1788,1039,1895,1924,1631,1762,1543,2028,2005,2012,1747,1418,1270,1191,1331,1214,1551,1590,1577,1516,1455,1504,1496,1489,1548,1452,1227,960,892,1014,1351,1085,970,1110,1073,1781,1823,1859,1886,1789,1856,1765,1793,1981,1726,1578,1631,1661,1709,1776,1776,1664,1863,1823,1877,1878,1769,1876,1770,1800,1949,1822,1604,1670,1649,1743,1785,1797,1684,1844,1793,1892,1792,1924,1776,1945,1784,1917,1988,1878,1998,1964,1891,1938,1985,1933,2006,1838,1681,1762,1816,1782,1827,1858,1824,1681,1627,1246,1307,1678,1560,1643,1159,1189,1069,1029,409,339,1269,1244,1280,1295,1335,1477,1259,1340,1281,1452,1356,1285,1351,1281,1429,1337,1292,1375,1303,1453,1588,1122,1466,1398,1871,1911,1968,2045,2037,2008,1985,1959,1979,1632,1590,1533,1471,1732,1561,1740,1743,1530,1747,1799,1591,1761,1555,1611,1617,1628,1655,1805,1910,1905,1814,1638,1742,1836,1947,1947,1853,1668,1753,1856,1928,1811,1741,1652,1874,1914,1899,1868,1612,1780,1919,1997,1938,1923,1708,1691,1886,1886,1872,1758,1292,989,964,1002,1445,1507,1590,1591,1638,1617,1698,1636,1612,1599,1832,1705,1733,1733,1605,1713,1622,1625,1680,1708,1927,1739,1712,1742,1719,1767,1725,1600,1722,1666,1750,1665,1621,1669,1623,1520,1988,1899,1857,1921,1947,1932,1875,1691,1773,1641,1679,1790,1943,1867,1898,1889,1906,1991,1930,1955,1941,1918,1813,1793,1780,1802,1900,1959,1874,1884,1922,1906,1854,1856,1631,1354,1248,1408,1688,1588,1656,1642,1913,1869,1839,1849,1851,1836,1831,1877,1877,1879,1892,1889,821,522,622,1008,1014,953,1317,1251,1308,975,1817,1699,1617,1570,1761,1579,1642,1691,1560,1491,1633,1451,1314,1270,1594,1675,1661,1714,1712,1711,1689,1610,1704,1346,1368,1559,1440,1550,1444,1515,1450,1499,1385,1325,1292,1881,1796,1824,1872,1859,1846,1863,1801,1894,1814,1829,1839,1923,1908,1867,1863,1877,1995,2011,1965,1912,1900,1877,1941,1908,1931,1893,1933,1903,1887,1855,1885,1895,1887,1753,1492,1472,1618,1636,1600,1594,1648,1613,1621,1641,1616,1761,1653,1645,1669,1647,1625,1653,1637,1725,1655,1667,1638,1646,1631,1634,1648,1633,1910,1869,1878,1830,1863,1872,1839,1861,1848,1912,1869,1829,1844,1847,1839,1841,1847,1952,1881,1846,1865,1866,1854,1843,1866,1875,1563,1396,1430,1413,1302,1444,1415,1583,1408,1299,1485,1467,1425,1419,1864,1872,1833,1815,1813,1838,1838,1928,1940,1655,1747,1710,1676,1704,1650,1833,1588,1726,1585,1722,1761,1717,1727,1765,1713,1609,1638,1897,1831,1845,1861,1597,1845,1879,1871,1829,1864,1647,1744,1766,1760,1800,1733,1643,1769,1669,1674,1822,1609,1743,1752,1817,1749,1777,1704,1670,1690,1625,1700,1725,1337,1229,1278,1187,1264,1289,1160,1405,1682,1542,1502,1628,1678,1554,1571,1581,1531,1565,1542,1577,1879,1876,1926,1868,1874,1602,1620,1420,1641,1748,1801,1792,1697,1757,1482,1480,1708,1697,1770,1470,1383,1489,1849,1901,1476,1460,1616,1449,1547,1540,1450,1686,1494,1479,1509,1538,1484,1595,1429,1475,1547,1472,1601,1480,1488,1507,1653,1566,1454,1553,1339,1479,1421,1525,1907,1844,1838,1794,1810,1817,1761,1728,1691,1577,1807,1698,1784,1779,1612,1764,1791,1622,1880,1935,1857,1882,1895,1745,1923,1721,1756,1762,1580,1765,1740,1790,1610,1752,1751,1772,1679,1800,1639,1859,1694,1656,1673,1638,1716,1717,1828,1648,1683,1674,1769,1692,1743,1656,1716,1723,1777,1514,1405,1687,1763,1657,1722,1775,1583,1465,1584,1515,1524,1397,1515,1507,1527,1642,1795,1700,1758,1789,1663,1701,1741,1640,1599,1700,1625,1708,1594,1609,1640,1715,1647,1644,1596,1702,1634,1653,1641,1655,1730,1620,1653,1626,1692,1613,1634,1610,1717,1632,1641,1645,1670,1696,1632,1620,1589,1766,1626,1701,1707,1784,1636,1625,1617,1725,1627,1613,1698,1693,1799,1611,1617,1636,1715,1675,1889,1756,1656,1635,1800,1780,1614,1738,1818,1794,1702,1925,1870,1877,1939,2005,1937,1936,1956,1991,1714,1856,1945,2006,1994,2015,1989,1814,1942,1824,1815,1921,2010,2024,2007,2003,1963,1945,1932,1908,1886,1905,1917,1942,1948,1974,1781,1888,1891,1890,1861,1726,1599,1644,1956,1761,1816,1571,1601,1634,1618,1552,1821,1428,1411,1317,1348,1394,1511,1517,1324,1429,1537,1475,1401,1448,1458,1524,1483,1434,1702,1751,1808,1672,1711,1701,1743,1733,1669,1712,1685,1750,1667,1672,1666,1695,1655,1714,1675,1681,1638,1739,1694,1636,1634,1739,1634,1649,1653,1753,1930,1886,1914,1929,1894,1922,1876,1891,1924,1789,1778,1792,1935,1999,1981,2040,2049,2041,2038,2020,2020,2040,2046,2042,2048,2051,2057,2037,2056,2048,1831,1846,1862,1922,1932,1887,1887,1891,1725,1465,1478,1387,1690,1623,1641,1524,1580,1646,1562,1619,1536,1419,1539,1615,1559,1543,1678,1410,1400,1561,1414,1779,1872,1786,1726,1654,1649,1846,1819,1861,1838,1800,1770,1676,1838,1838,1794,1646,2006,1983,2008,1907,1889,1934,1590,1673,1738,1745,1711,1776,1798,1745,1661,1782,1696,1682,1679,1643,1561,1514,1499,1515,1529,1542,1535,1514,1562,1502,1496,1521,1475,1552,1533,1506,1488,1484,1329,1296,1276,1214,1987,1943,1923,1876,1944,1959,1946,1946,1842,1347,1291,1313,1339,1331,1320,1311,1453,1626,1463,1476,1601,1651,1466,1597,1572,1725,1687,1659,1675,1638,1664,1635,1657,1711,1621,1245,1269,1308,1275,1315,1255,1192,1482,1226,1081,1033,1118,1210,1176,1013,1373,1484,1268,1295,1235,1243,1243,1259,1384,1351,1547,1309,1312,1334,1338,1303,1280,1342,1745,1576,1636,1733,1713,1615,1506,1235,1890,2004,1449,1070,1258,1185,1349,1082,1599,1958,1911,1564,1757,1810,1816,1738,1576,1946,1132,429,570,490,571,529,534,462,887,437,1115,1319,1443,1331,1196,1112,438,878,577,1408,1439,1523,1510,1393,1023,662,1436,1105,1422,1151,1486,1357,1189,1194,1827,1774,1706,1731,1809,263,114,1206,511,644,653,551,498,754,642,484,1299,939,938,1426,1408,1390,1435,1428,1566,1585,1712,1593,1627,1572,1604,1851,1556,1096,1139,1183,1270,1322,1261,1310,1273,1456,1527,1606,1636,1694,1575,1359,1388,1383,834,25,30,25,517,637,1266,662,1494,1632,1679,1599,1641,1171,1677,1493,1588,1517,1717,1912,1945,1899,1954,1893,1688,907,1176,1497,1317,946,955,1231,1328,1417,1424,1504,1536,1548,1640,1717,1755,1519,1602,1500,1566,1586,1509,1556,1732,2056,2051,2036,2010,1888,1947,2026,1948,1739,1926,1875,1957,2000,2042,1990,2037,1996,2028,1981,2036,2047,2033,1709,1852,2021,2022,2007,1928,1671,1588,1232,1234,1177,1467,2001,1897,1721,1759,1899,1871,1757,1790,1766,1852,1933,1966,1962,1968,1968,1964,2015,1859,1539,1548,1548,1506,1509,1589,1513,1511,1376,1402,1319,1331,1300,1319,1343,1563,2016,2005,1994,1968,1999,1951,1931,1936,2012,1812,1717,1654,1665,1717,1659,1246,219,467,1238,1305,1281,972,1027,949,1111,1186,1654,1703,1568,1716,1731,1667,1532,1580,1571,1620,1542,1587,1490,1487,1227,1371,1063,1161,1253,1330,1216,1355,1431,1525,1582,1598,1458,1455,1416,1242,954,1108,1579,1489,726,1180,1287,1390,1497,1452,1505,1471,1154,1297,1448,1517,1715,1721,1855,1830,1789,1789,1566,1638,1606,1653,1572,1615,1486,1580,1509,1444,1238,1415,1518,1568,1384,1371,1368,1410,1362,1235,473,626,441,781,1430,1542,1549,1537,1420,1476,1553,1464,1373,1311,1151,1184,1312,1409,1505,1352,1093,818,286,941,1740,1904,1794,1776,1561,1367,1015,1141,1554,1587,1560,1538,1571,1564,1540,1735,1753,1831,1722,1830,1764,1889,1755,1728,1409,1401,1362,1419,1432,1519,1660,1711,1544,1550,1486,1477,1551,1539,1470,1672,1910,1793,1544,1211,732,814,858,1224,1509,1586,1663,1719,1481,1605,1343,1333,1226,958,583,835,800,850,609,995,1420,1169,502,546,492,1045,1761,1652,1085,1124,1005,1190,1374,1348,1069,1163,941,1053,1422,1469,1422,1441,1433,1576,1680,1771,1637,1811,1874,1847,1562,1370,997,1178,1161,1188,955,1014,857,1124,988,1178,1230,1136,443,548,615,659,480,536,609,649,476,558,623,705,507,576,609,655,425,496,565,1108,1871,1654,1038,1137,1030,1133,1030,1095,1105,1377,1798,1653,1697,1709,1642,1671,1732,1531,1148,1358,1663,1667,1703,1764,1871,1387,267,392,275,360,192,297,256,355,55,265,25,186,151,282,279,279,249,699,1454,1506,1630,1501,1085,1134,1093,1122,1138,1362,1494,1532,1457,1652,1860,1876,1697,1707,1362,1620,1636,1651,1385,1441,1269,1284,1653,1555,1545,1224,1607,1466,1487,1471,1365,1274,1445,1467,1422,1519,1522,1512,1276,1144,1300,1337,1347,1223,1330,1067,1122,1022,1843,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2055,1884,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,1911,1963,2048,2048,1969,2048,2038,2015,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,1976,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2054,1888,2048,2048,2048,2048,1903,2048,1975,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2046,1912,1918,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,2027,1822,2048,2048,2048,2048,2057,2037,1844,2048,2048,2048,2048,2046,2027,1872,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,2048,2048,2048,2048,2048,2056,2048,2054,2052,2034,1738,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,2056,2048,2019,1828,1910,2048,1971,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2043,1869,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1893,2052,2048,2048,2048,1953,2048,2048,2048,2048,1958,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1968,2048,2048,2048,2055,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1984,2048,2048,1971,2048,1972,2048,1976,2048,1979,2048,1974,1808,1886,2023,2048,2035,1947,1889,2011,2057,2048,1978,1900,1973,2049,2057,2005,1839,1980,2056,2048,2018,1919,1941,2038,2057,2050,1941,1928,2021,2048,2048,1980,1907,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,1978,2048,2048,2048,2048,1974,2048,1973,1978,2048,1975,1979,2048,2048,2048,2048,1980,2048,2048,2048,2048,1982,1978,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,1977,2048,1975,1982,2048,1978,2048,2048,1977,2048,2048,1974,2048,1974,2048,1973,2048,1973,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,1972,2048,2048,1979,2048,2048,2048,2048,1980,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2048,2029,1930,1925,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2053,2048,2048,2049,2029,2014,2003,1888,1760,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1978,1976,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1980,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,1974,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1970,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,1976,2048,2048,1977,2048,2048,1974,2049,1943,2055,1969,1985,2048,1973,2048,1977,2048,1975,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,1978,2048,1971,1980,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,1982,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2036,2031,1764,1961,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2051,2036,1964,1821,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2056,2053,2048,1911,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2057,2048,2048,2048,2034,1832,2048,2048,2048,2048,2048,2048,1977,1977,1979,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2057,2057,1970,2048,2048,2048,2048,1984,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1937,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1938,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2006,1887,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,1781,2048,1977,2048,1976,2048,1976,2048,1971,2048,2048,2048,2048,2055,1893,2048,2048,2048,2048,2048,2048,1950,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,1976,1976,1972,1981,2048,1892,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,1976,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1989,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,1982,1972,2048,2048,2048,1989,2048,2048,1982,2048,1974,1974,1979,1990,1795,2048,1970,1980,2048,2048,2048,2048,2048,2055,2048,2048,2045,2004,1876,1883,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,1920,1956,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,1975,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2000,1957,2048,2048,2048,2048,2048,1826,2021,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,1896,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1383,1044,1514,1426,1427,1595,1180,1027,1337,1409,1447,1442,1584,1874,1877,1888,1877,1878,1824,2054,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1984,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,1972,2048,1971,1804,1361,1404,1763,1234,1163,1562,1381,1097,794,904,746,835,918,1476,2048,1053,25,25,947,2048,2057,162,25,535,1144,1211,884,1481,1498,723,909,899,888,2048,1943,2008,2048,2048,2048,2048,2048,1959,2048,2048,1939,2048,2048,2000,2048,2048,2048,2048,2048,2048,2006,1878,1986,2048,1897,2004,1953,2006,2001,2009,2048,2048,2048,2048,1947,1837,2048,2048,2048,2048,2006,2048,1869,2048,2048,2048,2000,2048,2002,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2002,2048,2048,1999,1875,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2008,2048,1877,2048,2048,2003,1890,1965,2048,1943,2048,1918,1933,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,1999,2048,1939,2048,1942,1975,1954,1940,1947,1869,1940,2048,2048,1951,2048,2048,2048,2008,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,1949,2048,2048,2048,2048,2048,2048,2048,1960,1963,2048,1879,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,1998,2048,2010,1979,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,1962,1941,1999,1933,2005,2048,2048,1869,1871,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,1815,1952,1938,2048,2004,1845,1833,2048,2048,2048,2048,2048,2004,2010,2048,1873,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,1940,2048,2048,1969,1753,1585,2048,2048,2048,2048,1933,2048,2048,2048,1948,2048,2048,1950,2048,2048,2000,1957,1987,1948,2048,2048,1747,2048,1875,2048,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1954,2048,2048,2048,2048,1872,2048,2048,1970,2048,1900,2048,1999,1998,1941,2048,1990,2048,2048,2048,2048,2048,2048,1994,2048,2002,2056,2048,2048,2048,2007,2048,2048,2048,2048,2048,1948,2048,2048,2006,2048,1918,2033,2048,2048,2048,2005,2048,2048,2048,2003,2048,2048,1933,2048,1948,2048,1956,1951,2008,1938,2048,1940,2048,2048,2048,1845,1965,1958,2002,2048,2048,2048,2048,2048,1943,2048,1879,2006,1967,1894,2048,2048,2048,2048,2048,2022,1998,2048,1999,1940,1887,1910,1943,2048,2048,2048,2048,2048,2048,1838,2048,2048,2048,2004,2048,2048,2048,1942,2048,1940,2048,1956,2048,2048,2006,2048,2048,2048,2001,2048,2048,2002,2048,2048,2048,2048,2048,1998,2048,2048,2001,2048,2048,2048,1871,2048,2048,2048,2048,2048,2000,2048,2048,2048,1987,2048,1948,2048,2002,1869,1942,2048,2048,1879,1926,2048,2048,2004,2048,2048,2004,2048,2000,2048,2055,2048,2048,2048,2048,2048,2048,1945,2048,2048,2048,2048,2048,1998,2048,1963,2048,2048,2048,2048,2057,1875,2048,2048,1811,1881,2048,2048,2048,2048,2048,1492,1608,2044,2048,2048,1949,2048,2048,2048,2001,2048,1820,2027,2048,1889,1860,2048,2045,1909,1873,2048,2048,2048,1957,1869,2048,2048,2048,2048,2048,1998,2048,2002,2027,2048,1955,2014,2048,2026,2027,2048,2048,1957,1943,1922,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2002,2048,2048,2048,1999,2048,2048,1209,2048,2048,2048,2048,2005,2048,2048,2048,2003,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2006,2048,2048,2048,1931,2048,2048,2048,2048,2008,2048,2048,2048,2005,2048,1956,2048,2048,2048,2048,2048,1686,1877,2048,2002,2048,1930,1934,1924,2048,2048,2048,2048,1878,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1879,2048,2048,1872,2057,2048,2048,1875,2048,2048,2048,2048,2048,2048,2048,1876,1879,1875,2048,1873,1502,2048,1924,2003,2048,2048,1942,2048,2048,1998,1940,2048,1869,2048,1999,2002,2048,1998,1944,2005,2048,1951,2048,2048,2048,2003,2048,2048,1951,2048,2048,2048,1940,2048,2048,1887,1857,2048,2048,2048,2048,2003,2048,2048,2048,2003,2048,2048,1953,2048,2048,1941,2048,1950,1940,2048,2048,1970,2048,2048,1939,2002,2048,1978,1934,2048,2048,2048,1927,1905,2048,2048,1879,2048,2048,1869,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2004,2048,2048,2048,2002,2048,1896,2048,2048,2048,2048,1982,1961,2010,1940,2048,1929,1918,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,1948,1956,2048,2048,2048,2048,2048,2048,1956,2048,2048,2048,2048,2048,2048,1935,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2022,2056,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1982,2048,1933,1878,2048,2048,2048,1871,1954,2048,1963,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,1942,2048,2048,2048,2048,2005,2048,1938,2048,1949,2048,2048,2001,2048,2048,2008,2048,2048,2048,1997,2048,2048,1869,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2008,1984,2048,1997,2048,1998,2048,1944,2048,2048,1539,2048,1944,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,1429,1206,2048,1954,2048,1775,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,1996,2048,2048,2048,1885,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2056,2048,2002,2048,2048,2006,2048,2048,2048,2048,2048,2048,1871,2048,2048,2048,2048,2048,1865,2048,2048,2048,2048,2048,2048,2048,2048,1876,2048,2048,2048,1873,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1943,1869,2048,2048,2048,2048,2008,2048,2048,2048,2048,2008,2048,2048,2048,2048,2000,1957,2001,2048,2048,1777,2048,2048,2048,2048,1967,1880,1502,2048,2048,2048,1877,2048,2048,2048,2048,2048,2048,2048,2003,2048,1956,2007,1840,1987,2048,2048,1871,2048,2048,2048,2048,2048,2048,1955,2048,2048,2048,2048,2048,2007,2048,1876,2048,2002,2048,1872,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2004,2048,1871,1871,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2057,2048,2048,2004,2048,2048,2048,2048,2048,2048,2004,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2000,2048,2048,2048,2008,1906,1874,1982,1969,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,1999,2048,2048,2048,2048,2002,2048,2048,1986,2048,2048,1957,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2007,2048,1962,2048,2048,2048,2048,1999,2048,1891,2048,2048,2048,2057,2048,2057,2048,2048,2048,2048,2048,2048,2057,2048,2048,1973,2048,2048,2048,1940,2048,1945,1964,2048,2048,2048,2048,2048,2048,2048,2048,1950,2048,2048,1846,1998,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1957,1573,2048,1946,1969,2048,2048,2048,2048,2048,1978,2006,2048,2010,2048,1923,2048,2048,1926,2048,2048,2048,1903,2048,2048,2048,2048,1993,2048,2002,2048,2057,1888,1644,2048,1998,2048,2048,2052,1981,2048,2048,2048,2048,1995,2048,2048,2048,1971,2048,2048,2048,2048,2057,2000,1932,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,1999,2048,2048,1988,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2001,2048,2000,2048,2048,1999,2048,2048,2051,1911,1986,2048,1863,2048,2048,1882,1765,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2057,2002,2048,2048,2048,2048,1997,2048,2048,1990,2048,1998,2005,2048,2048,2048,1951,2048,2048,2048,2048,2048,2002,2056,2044,1939,1993,2048,2048,2048,1989,2048,2048,1990,2048,1994,2048,1999,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2057,2048,1933,2048,2048,2048,2048,2048,1999,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2044,2015,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,1965,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,1991,2048,2048,2048,2048,2048,2048,2057,1950,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1988,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2008,1866,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,1995,2048,1998,2048,2048,1991,2048,2048,2048,2057,2056,1998,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1768,1079,1122,1194,1180,1810,972,723,1013,2048,2048,1436,34,34,34,34,34,34,482,370,484,532,599,724,645,503,582,575,631,564,675,653,632,683,648,670,779,869,737,769,722,1017,1056,947,934,911,958,978,931,1002,999,935,966,821,916,1341,1190,1297,1137,1329,1273,1152,1142,1145,1166,1145,1178,1147,1180,1141,974,1229,1394,1371,838,781,788,861,1288,1234,1300,1298,315,43,151,46,222,97,120,48,48,48,48,122,49,192,181,47,47,95,47,47,47,47,111,42,41,47,124,47,44,179,50,50,48,45,43,99,46,112,48,48,48,132,46,46,46,47,111,45,45,45,45,59,80,45,45,42,40,112,50,50,111,42,110,53,53,49,46,104,39,45,46,109,46,46,46,46,46,116,47,47,96,45,45,45,45,104,62,727,1174,503,41,535,1132,618,44,355,1141,757,141,817,800,754,868,919,780,1214,1230,811,838,923,414],\"successes\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,1,1,0,1,1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,1,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,1,1,0,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,0,0,1,0,0,1,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,1,0,0,1,0,0,0,1,0,1,1,0,1,1,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,1,0,1,0,1,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,1,1,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,1,0,1,0,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n;\r\n            compressedData['data'] = byteArray;\r\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\r\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\r\n            Module['removeRunDependency']('datafile_C:/Dev/edge-classic-web-player/src/edge-classic.data');\r\n      };\r\n      Module['addRunDependency']('datafile_C:/Dev/edge-classic-web-player/src/edge-classic.data');\r\n\r\n      if (!Module.preloadResults) Module.preloadResults = {};\r\n\r\n        function preloadFallback(error) {\r\n          console.error(error);\r\n          console.error('falling back to default preload behavior');\r\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\r\n        };\r\n\r\n        openDatabase(\r\n          function(db) {\r\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\r\n              function(useCached, metadata) {\r\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\r\n                if (useCached) {\r\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\r\n                } else {\r\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\r\n                    function(packageData) {\r\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\r\n                        function(error) {\r\n                          console.error(error);\r\n                          processPackageData(packageData);\r\n                        });\r\n                    }\r\n                  , preloadFallback);\r\n                }\r\n              }\r\n            , preloadFallback);\r\n          }\r\n        , preloadFallback);\r\n\r\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\r\n\r\n    }\r\n    if (Module['calledRun']) {\r\n      runWithFS();\r\n    } else {\r\n      if (!Module['preRun']) Module['preRun'] = [];\r\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\r\n    }\r\n\r\n    }\r\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge-defs.wad\", \"start\": 0, \"end\": 1672950}, {\"filename\": \"/edge_base/blasphemer_base.wad\", \"start\": 1672950, \"end\": 1947477}, {\"filename\": \"/edge_base/doom1_base.wad\", \"start\": 1947477, \"end\": 2679342}, {\"filename\": \"/edge_base/doom2_base.wad\", \"start\": 2679342, \"end\": 4188280}, {\"filename\": \"/edge_base/doom_base.wad\", \"start\": 4188280, \"end\": 6168892}, {\"filename\": \"/edge_base/freedoom1_base.wad\", \"start\": 6168892, \"end\": 6268776}, {\"filename\": \"/edge_base/freedoom2_base.wad\", \"start\": 6268776, \"end\": 6368156}, {\"filename\": \"/edge_base/hacx_base.wad\", \"start\": 6368156, \"end\": 7612194}, {\"filename\": \"/edge_base/harmony_base.wad\", \"start\": 7612194, \"end\": 8301329}, {\"filename\": \"/edge_base/heretic_base.wad\", \"start\": 8301329, \"end\": 9784099}, {\"filename\": \"/edge_base/plutonia_base.wad\", \"start\": 9784099, \"end\": 11201093}, {\"filename\": \"/edge_base/rekkr_base.wad\", \"start\": 11201093, \"end\": 11399310}, {\"filename\": \"/edge_base/tnt_base.wad\", \"start\": 11399310, \"end\": 12108993}, {\"filename\": \"/freedoom2.wad\", \"start\": 12108993, \"end\": 40653125}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 40653125, \"end\": 44336663}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 44336663, \"end\": 44700901}, {\"filename\": \"/soundfont/adplug.op2\", \"start\": 44700901, \"end\": 44712809}, {\"filename\": \"/soundfont/bonkers_for_bits.sf2\", \"start\": 44712809, \"end\": 44740813}, {\"filename\": \"/soundfont/bsdmidi.op2\", \"start\": 44740813, \"end\": 44752721}, {\"filename\": \"/soundfont/default.sf2\", \"start\": 44752721, \"end\": 48899161}, {\"filename\": \"/soundfont/dmxopl.op2\", \"start\": 48899161, \"end\": 48911069}, {\"filename\": \"/soundfont/dmxopl3.wopl\", \"start\": 48911069, \"end\": 49123138}, {\"filename\": \"/soundfont/freedoom.op2\", \"start\": 49123138, \"end\": 49135046}, {\"filename\": \"/soundfont/wadsmoosh.op2\", \"start\": 49135046, \"end\": 49146954}], \"remote_package_size\": 36675334, \"package_uuid\": \"sha256-9c20c54ac0ae2ff6d388510b9160d1703d69ddf8dc6549526dbcc3bffdefc660\"});\r\n\r\n  })();\r\n\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n  // Differentiate the Web Worker from the Node Worker case, as reading must\r\n  // be done differently.\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nread_ = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  }\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url, onload, onerror) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = () => {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  }\r\n\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n\r\n  setWindowTitle = (title) => document.title = title;\r\n} else\r\n{\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.warn.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = null;\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n\r\nif (Module['quit']) quit_ = Module['quit'];\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary;\r\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\nvar noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  abort('no native wasm support detected');\r\n}\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    // This build was created without ASSERTIONS defined.  `assert()` should not\r\n    // ever be called in this configuration but in case there are callers in\r\n    // the wild leave this simple abort() implemenation here for now.\r\n    abort(text);\r\n  }\r\n}\r\n\r\n// include: runtime_strings.js\r\n// runtime_strings.js: String related runtime functions that are part of both\r\n// MINIMAL_RUNTIME and regular runtime.\r\n\r\nvar UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\r\n\r\n/**\r\n * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n * array that contains uint8 values, returns a copy of that string as a\r\n * Javascript String object.\r\n * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n * @param {number} idx\r\n * @param {number=} maxBytesToRead\r\n * @return {string}\r\n */\r\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n  var endIdx = idx + maxBytesToRead;\r\n  var endPtr = idx;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n  // null terminator by itself.  Also, use the length info to avoid running tiny\r\n  // strings through TextDecoder, since .subarray() allocates garbage.\r\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n  // so that undefined means Infinity)\r\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n\r\n  if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n    return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n  }\r\n  var str = '';\r\n  // If building with TextDecoder, we have already computed the string length\r\n  // above, so test loop end condition against that\r\n  while (idx < endPtr) {\r\n    // For UTF8 byte structure, see:\r\n    // http://en.wikipedia.org/wiki/UTF-8#Description\r\n    // https://www.ietf.org/rfc/rfc2279.txt\r\n    // https://tools.ietf.org/html/rfc3629\r\n    var u0 = heapOrArray[idx++];\r\n    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n    var u1 = heapOrArray[idx++] & 63;\r\n    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n    var u2 = heapOrArray[idx++] & 63;\r\n    if ((u0 & 0xF0) == 0xE0) {\r\n      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n    } else {\r\n      u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n    }\r\n\r\n    if (u0 < 0x10000) {\r\n      str += String.fromCharCode(u0);\r\n    } else {\r\n      var ch = u0 - 0x10000;\r\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\n/**\r\n * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n *\r\n * @param {number} ptr\r\n * @param {number=} maxBytesToRead - An optional length that specifies the\r\n *   maximum number of bytes to read. You can omit this parameter to scan the\r\n *   string until the first \\0 byte. If maxBytesToRead is passed, and the string\r\n *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n * @return {string}\r\n */\r\nfunction UTF8ToString(ptr, maxBytesToRead) {\r\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n}\r\n\r\n/**\r\n * Copies the given Javascript String object 'str' to the given byte array at\r\n * address 'outIdx', encoded in UTF8 form and null-terminated. The copy will\r\n * require at most str.length*4+1 bytes of space in the HEAP.  Use the function\r\n * lengthBytesUTF8 to compute the exact number of bytes (excluding null\r\n * terminator) that this function will write.\r\n *\r\n * @param {string} str - The Javascript string to copy.\r\n * @param {ArrayBufferView|Array<number>} heap - The array to copy to. Each\r\n *                                               index in this array is assumed\r\n *                                               to be one 8-byte element.\r\n * @param {number} outIdx - The starting offset in the array to begin the copying.\r\n * @param {number} maxBytesToWrite - The maximum number of bytes this function\r\n *                                   can write to the array.  This count should\r\n *                                   include the null terminator, i.e. if\r\n *                                   maxBytesToWrite=1, only the null terminator\r\n *                                   will be written and nothing else.\r\n *                                   maxBytesToWrite=0 does not write any bytes\r\n *                                   to the output, not even the null\r\n *                                   terminator.\r\n * @return {number} The number of bytes written, EXCLUDING the null terminator.\r\n */\r\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n  // undefined and false each don't write out any bytes.\r\n  if (!(maxBytesToWrite > 0))\r\n    return 0;\r\n\r\n  var startIdx = outIdx;\r\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n    // unit, not a Unicode code point of the character! So decode\r\n    // UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n    // and https://www.ietf.org/rfc/rfc2279.txt\r\n    // and https://tools.ietf.org/html/rfc3629\r\n    var u = str.charCodeAt(i); // possibly a lead surrogate\r\n    if (u >= 0xD800 && u <= 0xDFFF) {\r\n      var u1 = str.charCodeAt(++i);\r\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n    }\r\n    if (u <= 0x7F) {\r\n      if (outIdx >= endIdx) break;\r\n      heap[outIdx++] = u;\r\n    } else if (u <= 0x7FF) {\r\n      if (outIdx + 1 >= endIdx) break;\r\n      heap[outIdx++] = 0xC0 | (u >> 6);\r\n      heap[outIdx++] = 0x80 | (u & 63);\r\n    } else if (u <= 0xFFFF) {\r\n      if (outIdx + 2 >= endIdx) break;\r\n      heap[outIdx++] = 0xE0 | (u >> 12);\r\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n      heap[outIdx++] = 0x80 | (u & 63);\r\n    } else {\r\n      if (outIdx + 3 >= endIdx) break;\r\n      heap[outIdx++] = 0xF0 | (u >> 18);\r\n      heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n      heap[outIdx++] = 0x80 | (u & 63);\r\n    }\r\n  }\r\n  // Null-terminate the pointer to the buffer.\r\n  heap[outIdx] = 0;\r\n  return outIdx - startIdx;\r\n}\r\n\r\n/**\r\n * Copies the given Javascript String object 'str' to the emscripten HEAP at\r\n * address 'outPtr', null-terminated and encoded in UTF8 form. The copy will\r\n * require at most str.length*4+1 bytes of space in the HEAP.\r\n * Use the function lengthBytesUTF8 to compute the exact number of bytes\r\n * (excluding null terminator) that this function will write.\r\n *\r\n * @return {number} The number of bytes written, EXCLUDING the null terminator.\r\n */\r\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n}\r\n\r\n/**\r\n * Returns the number of bytes the given Javascript string takes if encoded as a\r\n * UTF8 byte array, EXCLUDING the null terminator byte.\r\n *\r\n * @param {string} str - JavaScript string to operator on\r\n * @return {number} Length, in bytes, of the UTF8 encoded string.\r\n */\r\nfunction lengthBytesUTF8(str) {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n    // unit, not a Unicode code point of the character! So decode\r\n    // UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var c = str.charCodeAt(i); // possibly a lead surrogate\r\n    if (c <= 0x7F) {\r\n      len++;\r\n    } else if (c <= 0x7FF) {\r\n      len += 2;\r\n    } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n      len += 4; ++i;\r\n    } else {\r\n      len += 3;\r\n    }\r\n  }\r\n  return len;\r\n}\r\n\r\n// end include: runtime_strings.js\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// include: runtime_init_table.js\r\n// In regular non-RELOCATABLE mode the table is exported\r\n// from the wasm module and this will be assigned once\r\n// the exports are available.\r\nvar wasmTable;\r\n\r\n// end include: runtime_init_table.js\r\n// include: runtime_stack_check.js\r\n// end include: runtime_stack_check.js\r\n// include: runtime_assertions.js\r\n// end include: runtime_assertions.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nfunction keepRuntimeAlive() {\r\n  return noExitRuntime;\r\n}\r\n\r\nfunction preRun() {\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n\r\n  \r\nif (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  what += '. Build with -sASSERTIONS for more info.';\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n  return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\nfunction isFileURI(filename) {\r\n  return filename.startsWith('file://');\r\n}\r\n\r\n// end include: URIUtils.js\r\nvar wasmBinaryFile;\r\n  wasmBinaryFile = 'edge-classic.wasm';\r\n  if (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile);\r\n  }\r\n\r\nfunction getBinary(file) {\r\n  try {\r\n    if (file == wasmBinaryFile && wasmBinary) {\r\n      return new Uint8Array(wasmBinary);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(file);\r\n    }\r\n    throw \"both async and sync fetching of the wasm failed\";\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise() {\r\n  // If we don't have the binary yet, try to to load it asynchronously.\r\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n  // Cordova or Electron apps are typically loaded from a file:// url.\r\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n    if (typeof fetch == 'function'\r\n    ) {\r\n      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\r\n        if (!response['ok']) {\r\n          throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\r\n        }\r\n        return response['arrayBuffer']();\r\n      }).catch(function () {\r\n          return getBinary(wasmBinaryFile);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return Promise.resolve().then(function() { return getBinary(wasmBinaryFile); });\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  // prepare imports\r\n  var info = {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n\r\n    exports = Asyncify.instrumentWasmExports(exports);\r\n\r\n    Module['asm'] = exports;\r\n\r\n    wasmMemory = Module['asm']['memory'];\r\n    updateMemoryViews();\r\n\r\n    wasmTable = Module['asm']['__indirect_function_table'];\r\n\r\n    addOnInit(Module['asm']['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  function instantiateArrayBuffer(receiver) {\r\n    return getBinaryPromise().then(function(binary) {\r\n      return WebAssembly.instantiate(binary, info);\r\n    }).then(function (instance) {\r\n      return instance;\r\n    }).then(receiver, function(reason) {\r\n      err('failed to asynchronously prepare wasm: ' + reason);\r\n\r\n      abort(reason);\r\n    });\r\n  }\r\n\r\n  function instantiateAsync() {\r\n    if (!wasmBinary &&\r\n        typeof WebAssembly.instantiateStreaming == 'function' &&\r\n        !isDataURI(wasmBinaryFile) &&\r\n        typeof fetch == 'function') {\r\n      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\r\n        // Suppress closure warning here since the upstream definition for\r\n        // instantiateStreaming only allows Promise<Repsponse> rather than\r\n        // an actual Response.\r\n        // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n        /** @suppress {checkTypes} */\r\n        var result = WebAssembly.instantiateStreaming(response, info);\r\n\r\n        return result.then(\r\n          receiveInstantiationResult,\r\n          function(reason) {\r\n            // We expect the most common failure cause to be a bad MIME type for the binary,\r\n            // in which case falling back to ArrayBuffer instantiation should work.\r\n            err('wasm streaming compile failed: ' + reason);\r\n            err('falling back to ArrayBuffer instantiation');\r\n            return instantiateArrayBuffer(receiveInstantiationResult);\r\n          });\r\n      });\r\n    } else {\r\n      return instantiateArrayBuffer(receiveInstantiationResult);\r\n    }\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\r\n  // to any other async startup actions they are performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this path.\r\n  if (Module['instantiateWasm']) {\r\n    try {\r\n      var exports = Module['instantiateWasm'](info, receiveInstance);\r\n      exports = Asyncify.instrumentWasmExports(exports);\r\n      return exports;\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync().catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = {\r\n  595264: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \r\n 595320: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line: ${args}`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs(true, function (err) { if (err) { console.error(`Error mounting home dir ${err}`); return; } Module._I_WebMain($0, $1); }); },  \r\n 595910: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs($0, function (err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \r\n 596059: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \r\n 596206: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \r\n 596440: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \r\n 596933: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \r\n 597001: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \r\n 598653: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \r\n 599063: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \r\n 599668: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \r\n 600148: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \r\n 601320: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \r\n 602789: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \r\n 603778: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \r\n 603861: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \r\n 603930: () => { return window.innerWidth; },  \r\n 603960: () => { return window.innerHeight; },  \r\n 603991: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\r\n};\r\n\r\n\r\n\r\n// end include: preamble.js\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = 'Program terminated with exit(' + status + ')';\r\n      this.status = status;\r\n    }\r\n\r\n  function listenOnce(object, event, func) {\r\n      object.addEventListener(event, func, { 'once': true });\r\n    }\r\n  /** @param {Object=} elements */\r\n  function autoResumeAudioContext(ctx, elements) {\r\n      if (!elements) {\r\n        elements = [document, document.getElementById('canvas')];\r\n      }\r\n      ['keydown', 'mousedown', 'touchstart'].forEach(function(event) {\r\n        elements.forEach(function(element) {\r\n          if (element) {\r\n            listenOnce(element, event, () => {\r\n              if (ctx.state === 'suspended') ctx.resume();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  function callRuntimeCallbacks(callbacks) {\r\n      while (callbacks.length > 0) {\r\n        // Pass the module as the first argument.\r\n        callbacks.shift()(Module);\r\n      }\r\n    }\r\n\r\n  function dynCallLegacy(sig, ptr, args) {\r\n      var f = Module['dynCall_' + sig];\r\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\r\n    }\r\n  \r\n  var wasmTableMirror = [];\r\n  \r\n  function getWasmTableEntry(funcPtr) {\r\n      var func = wasmTableMirror[funcPtr];\r\n      if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n      }\r\n      return func;\r\n    }\r\n  /** @param {Object=} args */\r\n  function dynCall(sig, ptr, args) {\r\n      return dynCallLegacy(sig, ptr, args);\r\n    }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n      if (type.endsWith('*')) type = '*';\r\n      switch (type) {\r\n        case 'i1': return HEAP8[((ptr)>>0)];\r\n        case 'i8': return HEAP8[((ptr)>>0)];\r\n        case 'i16': return HEAP16[((ptr)>>1)];\r\n        case 'i32': return HEAP32[((ptr)>>2)];\r\n        case 'i64': return HEAP32[((ptr)>>2)];\r\n        case 'float': return HEAPF32[((ptr)>>2)];\r\n        case 'double': return HEAPF64[((ptr)>>3)];\r\n        case '*': return HEAPU32[((ptr)>>2)];\r\n        default: abort('invalid type for getValue: ' + type);\r\n      }\r\n      return null;\r\n    }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n      if (type.endsWith('*')) type = '*';\r\n      switch (type) {\r\n        case 'i1': HEAP8[((ptr)>>0)] = value; break;\r\n        case 'i8': HEAP8[((ptr)>>0)] = value; break;\r\n        case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n        case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n        case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\r\n        case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n        case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n        case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n        default: abort('invalid type for setValue: ' + type);\r\n      }\r\n    }\r\n\r\n  /** @constructor */\r\n  function ExceptionInfo(excPtr) {\r\n      this.excPtr = excPtr;\r\n      this.ptr = excPtr - 24;\r\n  \r\n      this.set_type = function(type) {\r\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\r\n      };\r\n  \r\n      this.get_type = function() {\r\n        return HEAPU32[(((this.ptr)+(4))>>2)];\r\n      };\r\n  \r\n      this.set_destructor = function(destructor) {\r\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\r\n      };\r\n  \r\n      this.get_destructor = function() {\r\n        return HEAPU32[(((this.ptr)+(8))>>2)];\r\n      };\r\n  \r\n      this.set_refcount = function(refcount) {\r\n        HEAP32[((this.ptr)>>2)] = refcount;\r\n      };\r\n  \r\n      this.set_caught = function (caught) {\r\n        caught = caught ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\r\n      };\r\n  \r\n      this.get_caught = function () {\r\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\r\n      };\r\n  \r\n      this.set_rethrown = function (rethrown) {\r\n        rethrown = rethrown ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\r\n      };\r\n  \r\n      this.get_rethrown = function () {\r\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\r\n      };\r\n  \r\n      // Initialize native structure fields. Should be called once after allocated.\r\n      this.init = function(type, destructor) {\r\n        this.set_adjusted_ptr(0);\r\n        this.set_type(type);\r\n        this.set_destructor(destructor);\r\n        this.set_refcount(0);\r\n        this.set_caught(false);\r\n        this.set_rethrown(false);\r\n      }\r\n  \r\n      this.add_ref = function() {\r\n        var value = HEAP32[((this.ptr)>>2)];\r\n        HEAP32[((this.ptr)>>2)] = value + 1;\r\n      };\r\n  \r\n      // Returns true if last reference released.\r\n      this.release_ref = function() {\r\n        var prev = HEAP32[((this.ptr)>>2)];\r\n        HEAP32[((this.ptr)>>2)] = prev - 1;\r\n        return prev === 1;\r\n      };\r\n  \r\n      this.set_adjusted_ptr = function(adjustedPtr) {\r\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\r\n      };\r\n  \r\n      this.get_adjusted_ptr = function() {\r\n        return HEAPU32[(((this.ptr)+(16))>>2)];\r\n      };\r\n  \r\n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\r\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\r\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\r\n      // itself.\r\n      this.get_exception_ptr = function() {\r\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\r\n        // exceptions support.\r\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\r\n        if (isPointer) {\r\n          return HEAPU32[((this.excPtr)>>2)];\r\n        }\r\n        var adjusted = this.get_adjusted_ptr();\r\n        if (adjusted !== 0) return adjusted;\r\n        return this.excPtr;\r\n      };\r\n    }\r\n  \r\n  var exceptionLast = 0;\r\n  \r\n  var uncaughtExceptionCount = 0;\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      var info = new ExceptionInfo(ptr);\r\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n      info.init(type, destructor);\r\n      exceptionLast = ptr;\r\n      uncaughtExceptionCount++;\r\n      throw ptr;\r\n    }\r\n\r\n  var PATH = {isAbs:(path) => path.charAt(0) === '/',splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },join:function() {\r\n        var paths = Array.prototype.slice.call(arguments);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:(l, r) => {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};\r\n  \r\n  function getRandomDevice() {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        var randomBuffer = new Uint8Array(1);\r\n        return () => { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };\r\n      } else\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      return () => abort(\"randomDevice\");\r\n    }\r\n  \r\n  \r\n  \r\n  var PATH_FS = {resolve:function() {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      }};\r\n  \r\n  \r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  var TTY = {ttys:[],init:function () {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process['stdin']['setEncoding']('utf8');\r\n        // }\r\n      },shutdown:function() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process['stdin']['pause']();\r\n        // }\r\n      },register:function(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },stream_ops:{open:function(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },close:function(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },fsync:function(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },write:function(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        }},default_tty_ops:{get_char:function(tty) {\r\n          if (!tty.input.length) {\r\n            var result = null;\r\n            if (typeof window != 'undefined' &&\r\n              typeof window.prompt == 'function') {\r\n              // Browser.\r\n              result = window.prompt('Input: ');  // returns null on cancel\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            } else if (typeof readline == 'function') {\r\n              // Command line.\r\n              result = readline();\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            }\r\n            if (!result) {\r\n              return null;\r\n            }\r\n            tty.input = intArrayFromString(result, true);\r\n          }\r\n          return tty.input.shift();\r\n        },put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }},default_tty1_ops:{put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }}};\r\n  \r\n  \r\n  function zeroMemory(address, size) {\r\n      HEAPU8.fill(0, address, address + size);\r\n      return address;\r\n    }\r\n  \r\n  function alignMemory(size, alignment) {\r\n      return Math.ceil(size / alignment) * alignment;\r\n    }\r\n  function mmapAlloc(size) {\r\n      abort();\r\n    }\r\n  var MEMFS = {ops_table:null,mount:function(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },createNode:function(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (!MEMFS.ops_table) {\r\n          MEMFS.ops_table = {\r\n            dir: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                lookup: MEMFS.node_ops.lookup,\r\n                mknod: MEMFS.node_ops.mknod,\r\n                rename: MEMFS.node_ops.rename,\r\n                unlink: MEMFS.node_ops.unlink,\r\n                rmdir: MEMFS.node_ops.rmdir,\r\n                readdir: MEMFS.node_ops.readdir,\r\n                symlink: MEMFS.node_ops.symlink\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek\r\n              }\r\n            },\r\n            file: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek,\r\n                read: MEMFS.stream_ops.read,\r\n                write: MEMFS.stream_ops.write,\r\n                allocate: MEMFS.stream_ops.allocate,\r\n                mmap: MEMFS.stream_ops.mmap,\r\n                msync: MEMFS.stream_ops.msync\r\n              }\r\n            },\r\n            link: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                readlink: MEMFS.node_ops.readlink\r\n              },\r\n              stream: {}\r\n            },\r\n            chrdev: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: FS.chrdev_stream_ops\r\n            }\r\n          };\r\n        }\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },getFileDataAsTypedArray:function(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },expandFileStorage:function(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },resizeFileStorage:function(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },node_ops:{getattr:function(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },mknod:function(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },rename:function(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n          old_node.parent = new_dir;\r\n        },unlink:function(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },rmdir:function(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },readdir:function(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key in node.contents) {\r\n            if (!node.contents.hasOwnProperty(key)) {\r\n              continue;\r\n            }\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },symlink:function(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },readlink:function(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },write:function(stream, buffer, offset, length, position, canOwn) {\r\n          // If the buffer is located in main memory (HEAP), and if\r\n          // memory can grow, we can't hold on to references of the\r\n          // memory buffer, as they may get invalidated. That means we\r\n          // need to do copy its contents.\r\n          if (buffer.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },llseek:function(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },allocate:function(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },mmap:function(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            // Try to avoid unnecessary slices.\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            HEAP8.set(contents, ptr);\r\n          }\r\n          return { ptr: ptr, allocated: allocated };\r\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        }}};\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  function asyncLoad(url, onload, onerror, noRunDep) {\r\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\r\n      readAsync(url, (arrayBuffer) => {\r\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep);\r\n      }, (event) => {\r\n        if (onerror) {\r\n          onerror();\r\n        } else {\r\n          throw 'Loading data file \"' + url + '\" failed.';\r\n        }\r\n      });\r\n      if (dep) addRunDependency(dep);\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  var IDBFS = {dbs:{},indexedDB:() => {\r\n        if (typeof indexedDB != 'undefined') return indexedDB;\r\n        var ret = null;\r\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        assert(ret, 'IDBFS used, but indexedDB not supported');\r\n        return ret;\r\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount) {\r\n        // reuse all of the core MEMFS functionality\r\n        return MEMFS.mount.apply(null, arguments);\r\n      },syncfs:(mount, populate, callback) => {\r\n        IDBFS.getLocalSet(mount, (err, local) => {\r\n          if (err) return callback(err);\r\n  \r\n          IDBFS.getRemoteSet(mount, (err, remote) => {\r\n            if (err) return callback(err);\r\n  \r\n            var src = populate ? remote : local;\r\n            var dst = populate ? local : remote;\r\n  \r\n            IDBFS.reconcile(src, dst, callback);\r\n          });\r\n        });\r\n      },quit:() => {\r\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\r\n        IDBFS.dbs = {};\r\n      },getDB:(name, callback) => {\r\n        // check the cache first\r\n        var db = IDBFS.dbs[name];\r\n        if (db) {\r\n          return callback(null, db);\r\n        }\r\n  \r\n        var req;\r\n        try {\r\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        if (!req) {\r\n          return callback(\"Unable to connect to IndexedDB\");\r\n        }\r\n        req.onupgradeneeded = (e) => {\r\n          var db = /** @type {IDBDatabase} */ (e.target.result);\r\n          var transaction = e.target.transaction;\r\n  \r\n          var fileStore;\r\n  \r\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n          } else {\r\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\r\n          }\r\n  \r\n          if (!fileStore.indexNames.contains('timestamp')) {\r\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          }\r\n        };\r\n        req.onsuccess = () => {\r\n          db = /** @type {IDBDatabase} */ (req.result);\r\n  \r\n          // add to the cache\r\n          IDBFS.dbs[name] = db;\r\n          callback(null, db);\r\n        };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },getLocalSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        function isRealDir(p) {\r\n          return p !== '.' && p !== '..';\r\n        };\r\n        function toAbsolute(root) {\r\n          return (p) => {\r\n            return PATH.join2(root, p);\r\n          }\r\n        };\r\n  \r\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n  \r\n        while (check.length) {\r\n          var path = check.pop();\r\n          var stat;\r\n  \r\n          try {\r\n            stat = FS.stat(path);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\r\n          }\r\n  \r\n          entries[path] = { 'timestamp': stat.mtime };\r\n        }\r\n  \r\n        return callback(null, { type: 'local', entries: entries });\r\n      },getRemoteSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        IDBFS.getDB(mount.mountpoint, (err, db) => {\r\n          if (err) return callback(err);\r\n  \r\n          try {\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\r\n            transaction.onerror = (e) => {\r\n              callback(this.error);\r\n              e.preventDefault();\r\n            };\r\n  \r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n            var index = store.index('timestamp');\r\n  \r\n            index.openKeyCursor().onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n  \r\n              if (!cursor) {\r\n                return callback(null, { type: 'remote', db: db, entries: entries });\r\n              }\r\n  \r\n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\r\n  \r\n              cursor.continue();\r\n            };\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        });\r\n      },loadLocalEntry:(path, callback) => {\r\n        var stat, node;\r\n  \r\n        try {\r\n          var lookup = FS.lookupPath(path);\r\n          node = lookup.node;\r\n          stat = FS.stat(path);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        if (FS.isDir(stat.mode)) {\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\r\n        } else if (FS.isFile(stat.mode)) {\r\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\r\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\r\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\r\n        } else {\r\n          return callback(new Error('node type not supported'));\r\n        }\r\n      },storeLocalEntry:(path, entry, callback) => {\r\n        try {\r\n          if (FS.isDir(entry['mode'])) {\r\n            FS.mkdirTree(path, entry['mode']);\r\n          } else if (FS.isFile(entry['mode'])) {\r\n            FS.writeFile(path, entry['contents'], { canOwn: true });\r\n          } else {\r\n            return callback(new Error('node type not supported'));\r\n          }\r\n  \r\n          FS.chmod(path, entry['mode']);\r\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },removeLocalEntry:(path, callback) => {\r\n        try {\r\n          var stat = FS.stat(path);\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            FS.rmdir(path);\r\n          } else if (FS.isFile(stat.mode)) {\r\n            FS.unlink(path);\r\n          }\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },loadRemoteEntry:(store, path, callback) => {\r\n        var req = store.get(path);\r\n        req.onsuccess = (event) => { callback(null, event.target.result); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },storeRemoteEntry:(store, path, entry, callback) => {\r\n        try {\r\n          var req = store.put(entry, path);\r\n        } catch (e) {\r\n          callback(e);\r\n          return;\r\n        }\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },removeRemoteEntry:(store, path, callback) => {\r\n        var req = store.delete(path);\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },reconcile:(src, dst, callback) => {\r\n        var total = 0;\r\n  \r\n        var create = [];\r\n        Object.keys(src.entries).forEach(function (key) {\r\n          var e = src.entries[key];\r\n          var e2 = dst.entries[key];\r\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\r\n            create.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        var remove = [];\r\n        Object.keys(dst.entries).forEach(function (key) {\r\n          if (!src.entries[key]) {\r\n            remove.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        if (!total) {\r\n          return callback(null);\r\n        }\r\n  \r\n        var errored = false;\r\n        var db = src.type === 'remote' ? src.db : dst.db;\r\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\r\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n  \r\n        function done(err) {\r\n          if (err && !errored) {\r\n            errored = true;\r\n            return callback(err);\r\n          }\r\n        };\r\n  \r\n        transaction.onerror = (e) => {\r\n          done(this.error);\r\n          e.preventDefault();\r\n        };\r\n  \r\n        transaction.oncomplete = (e) => {\r\n          if (!errored) {\r\n            callback(null);\r\n          }\r\n        };\r\n  \r\n        // sort paths in ascending order so directory entries are created\r\n        // before the files inside them\r\n        create.sort().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeLocalEntry(path, entry, done);\r\n            });\r\n          } else {\r\n            IDBFS.loadLocalEntry(path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeRemoteEntry(store, path, entry, done);\r\n            });\r\n          }\r\n        });\r\n  \r\n        // sort paths in descending order so files are deleted before their\r\n        // parent directories\r\n        remove.sort().reverse().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.removeLocalEntry(path, done);\r\n          } else {\r\n            IDBFS.removeRemoteEntry(store, path, done);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  var LZ4 = {DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function() {\r\n        if (LZ4.codec) return;\r\n        LZ4.codec = (function() {\r\n          /*\r\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\r\n  \r\n  based off of node-lz4, https://github.com/pierrec/node-lz4\r\n  \r\n  ====\r\n  Copyright (c) 2012 Pierre Curto\r\n  \r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n  \r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n  ====\r\n  \r\n  changes have the same license\r\n  */\r\n  \r\n  var MiniLZ4 = (function() {\r\n  \r\n  var exports = {};\r\n  \r\n  /**\r\n   * Decode a block. Assumptions: input contains all sequences of a \r\n   * chunk, output is large enough to receive the decoded data.\r\n   * If the output buffer is too small, an error will be thrown.\r\n   * If the returned value is negative, an error occured at the returned offset.\r\n   *\r\n   * @param {ArrayBufferView} input input data\r\n   * @param {ArrayBufferView} output output data\r\n   * @param {number=} sIdx\r\n   * @param {number=} eIdx\r\n   * @return {number} number of decoded bytes\r\n   * @private\r\n   */\r\n  exports.uncompress = function (input, output, sIdx, eIdx) {\r\n  \tsIdx = sIdx || 0\r\n  \teIdx = eIdx || (input.length - sIdx)\r\n  \t// Process each sequence in the incoming data\r\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\r\n  \t\tvar token = input[i++]\r\n  \r\n  \t\t// Literals\r\n  \t\tvar literals_length = (token >> 4)\r\n  \t\tif (literals_length > 0) {\r\n  \t\t\t// length of literals\r\n  \t\t\tvar l = literals_length + 240\r\n  \t\t\twhile (l === 255) {\r\n  \t\t\t\tl = input[i++]\r\n  \t\t\t\tliterals_length += l\r\n  \t\t\t}\r\n  \r\n  \t\t\t// Copy the literals\r\n  \t\t\tvar end = i + literals_length\r\n  \t\t\twhile (i < end) output[j++] = input[i++]\r\n  \r\n  \t\t\t// End of buffer?\r\n  \t\t\tif (i === n) return j\r\n  \t\t}\r\n  \r\n  \t\t// Match copy\r\n  \t\t// 2 bytes offset (little endian)\r\n  \t\tvar offset = input[i++] | (input[i++] << 8)\r\n  \r\n  \t\t// XXX 0 is an invalid offset value\r\n  \t\tif (offset === 0) return j\r\n  \t\tif (offset > j) return -(i-2)\r\n  \r\n  \t\t// length of match copy\r\n  \t\tvar match_length = (token & 0xf)\r\n  \t\tvar l = match_length + 240\r\n  \t\twhile (l === 255) {\r\n  \t\t\tl = input[i++]\r\n  \t\t\tmatch_length += l\r\n  \t\t}\r\n  \r\n  \t\t// Copy the match\r\n  \t\tvar pos = j - offset // position of the match copy in the current output\r\n  \t\tvar end = j + match_length + 4 // minmatch = 4\r\n  \t\twhile (j < end) output[j++] = output[pos++]\r\n  \t}\r\n  \r\n  \treturn j\r\n  }\r\n  \r\n  var\r\n  \tmaxInputSize\t= 0x7E000000\r\n  ,\tminMatch\t\t= 4\r\n  // uint32() optimization\r\n  ,\thashLog\t\t\t= 16\r\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\r\n  ,\thashSize\t\t= 1 << hashLog\r\n  \r\n  ,\tcopyLength\t\t= 8\r\n  ,\tlastLiterals\t= 5\r\n  ,\tmfLimit\t\t\t= copyLength + minMatch\r\n  ,\tskipStrength\t= 6\r\n  \r\n  ,\tmlBits  \t\t= 4\r\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\r\n  ,\trunBits \t\t= 8 - mlBits\r\n  ,\trunMask \t\t= (1 << runBits) - 1\r\n  \r\n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\r\n  \r\n  assert(hashShift === 16);\r\n  var hashTable = new Int16Array(1<<16);\r\n  var empty = new Int16Array(hashTable.length);\r\n  \r\n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\r\n  exports.compressBound = function (isize) {\r\n  \treturn isize > maxInputSize\r\n  \t\t? 0\r\n  \t\t: (isize + (isize/255) + 16) | 0\r\n  }\r\n  \r\n  /** @param {number=} sIdx\r\n  \t@param {number=} eIdx */\r\n  exports.compress = function (src, dst, sIdx, eIdx) {\r\n  \thashTable.set(empty);\r\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\r\n  }\r\n  \r\n  function compressBlock (src, dst, pos, sIdx, eIdx) {\r\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\r\n  \tvar dpos = sIdx\r\n  \tvar dlen = eIdx - sIdx\r\n  \tvar anchor = 0\r\n  \r\n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\r\n  \r\n  \t// Minimum of input bytes for compression (LZ4 specs)\r\n  \tif (src.length > mfLimit) {\r\n  \t\tvar n = exports.compressBound(src.length)\r\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\r\n  \r\n  \t\tvar \r\n  \t\t\tstep  = 1\r\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\r\n  \t\t// last 5 bytes must be literals\r\n  \t\t,\tsrcLength = src.length - mfLimit\r\n  \r\n  \t\twhile (pos + minMatch < srcLength) {\r\n  \t\t\t// Find a match\r\n  \t\t\t// min match of 4 bytes aka sequence\r\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\r\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\r\n  \t\t\t// compute hash for the current sequence\r\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\r\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\r\n  \t\t\t\t\t\t\t.multiply(hasher)\r\n  \t\t\t\t\t\t\t.shiftr(hashShift)\r\n  \t\t\t\t\t\t\t.toNumber() */\r\n  \t\t\t// get the position of the sequence matching the hash\r\n  \t\t\t// NB. since 2 different sequences may have the same hash\r\n  \t\t\t// it is double-checked below\r\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\r\n  \t\t\tvar ref = hashTable[hash] - 1\r\n  \t\t\t// save position of current sequence in hash table\r\n  \t\t\thashTable[hash] = pos + 1\r\n  \r\n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\r\n  \t\t\tif ( ref < 0 ||\r\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\r\n  \t\t\t\t(\r\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\r\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\r\n  \t\t\t\t)\r\n  \t\t\t) {\r\n  \t\t\t\t// increase step if nothing found within limit\r\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\r\n  \t\t\t\tpos += step\r\n  \t\t\t\tcontinue\r\n  \t\t\t}\r\n  \r\n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \r\n  \t\t\t// got a match\r\n  \t\t\tvar literals_length = pos - anchor\r\n  \t\t\tvar offset = pos - ref\r\n  \r\n  \t\t\t// minMatch already verified\r\n  \t\t\tpos += minMatch\r\n  \t\t\tref += minMatch\r\n  \r\n  \t\t\t// move to the end of the match (>=minMatch)\r\n  \t\t\tvar match_length = pos\r\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\r\n  \t\t\t\tpos++\r\n  \t\t\t\tref++\r\n  \t\t\t}\r\n  \r\n  \t\t\t// match length\r\n  \t\t\tmatch_length = pos - match_length\r\n  \r\n  \t\t\t// token\r\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\r\n  \r\n  \t\t\t// encode literals length\r\n  \t\t\tif (literals_length >= runMask) {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\r\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \t\t\t\tdst[dpos++] = len\r\n  \t\t\t} else {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\r\n  \t\t\t}\r\n  \r\n  \t\t\t// write literals\r\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\r\n  \t\t\t\tdst[dpos++] = src[anchor+i]\r\n  \t\t\t}\r\n  \r\n  \t\t\t// encode offset\r\n  \t\t\tdst[dpos++] = offset\r\n  \t\t\tdst[dpos++] = (offset >> 8)\r\n  \r\n  \t\t\t// encode match length\r\n  \t\t\tif (match_length >= mlMask) {\r\n  \t\t\t\tmatch_length -= mlMask\r\n  \t\t\t\twhile (match_length >= 255) {\r\n  \t\t\t\t\tmatch_length -= 255\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \r\n  \t\t\t\tdst[dpos++] = match_length\r\n  \t\t\t}\r\n  \r\n  \t\t\tanchor = pos\r\n  \t\t}\r\n  \t}\r\n  \r\n  \t// cannot compress input\r\n  \tif (anchor == 0) return 0\r\n  \r\n  \t// Write last literals\r\n  \t// encode literals length\r\n  \tliterals_length = src.length - anchor\r\n  \tif (literals_length >= runMask) {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (runMask << mlBits)\r\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\r\n  \t\t\tdst[dpos++] = 255\r\n  \t\t}\r\n  \t\tdst[dpos++] = ln\r\n  \t} else {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (literals_length << mlBits)\r\n  \t}\r\n  \r\n  \t// write literals\r\n  \tpos = anchor\r\n  \twhile (pos < src.length) {\r\n  \t\tdst[dpos++] = src[pos++]\r\n  \t}\r\n  \r\n  \treturn dpos\r\n  }\r\n  \r\n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\r\n  \r\n  exports.compressPackage = function(data, verify) {\r\n    if (verify) {\r\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\r\n    }\r\n    // compress the data in chunks\r\n    assert(data instanceof ArrayBuffer);\r\n    data = new Uint8Array(data);\r\n    console.log('compressing package of size ' + data.length);\r\n    var compressedChunks = [];\r\n    var successes = [];\r\n    var offset = 0;\r\n    var total = 0;\r\n    while (offset < data.length) {\r\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\r\n      //console.log('compress a chunk ' + [offset, total, data.length]);\r\n      offset += exports.CHUNK_SIZE;\r\n      var bound = exports.compressBound(chunk.length);\r\n      var compressed = new Uint8Array(bound);\r\n      var compressedSize = exports.compress(chunk, compressed);\r\n      if (compressedSize > 0) {\r\n        assert(compressedSize <= bound);\r\n        compressed = compressed.subarray(0, compressedSize);\r\n        compressedChunks.push(compressed);\r\n        total += compressedSize;\r\n        successes.push(1);\r\n        if (verify) {\r\n          var back = exports.uncompress(compressed, temp);\r\n          assert(back === chunk.length, [back, chunk.length]);\r\n          for (var i = 0; i < chunk.length; i++) {\r\n            assert(chunk[i] === temp[i]);\r\n          }\r\n        }\r\n      } else {\r\n        assert(compressedSize === 0);\r\n        // failure to compress :(\r\n        compressedChunks.push(chunk);\r\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\r\n        successes.push(0);\r\n      }\r\n    }\r\n    data = null; // XXX null out pack['data'] too?\r\n    var compressedData = {\r\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\r\n      'cachedOffset': total,\r\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\r\n      'cachedChunks': [null, null],\r\n      'offsets': [], // chunk# => start in compressed data\r\n      'sizes': [],\r\n      'successes': successes, // 1 if chunk is compressed\r\n    };\r\n    offset = 0;\r\n    for (var i = 0; i < compressedChunks.length; i++) {\r\n      compressedData['data'].set(compressedChunks[i], offset);\r\n      compressedData['offsets'][i] = offset;\r\n      compressedData['sizes'][i] = compressedChunks[i].length\r\n      offset += compressedChunks[i].length;\r\n    }\r\n    console.log('compressed package into ' + [compressedData['data'].length]);\r\n    assert(offset === total);\r\n    return compressedData;\r\n  };\r\n  \r\n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\r\n  \r\n  return exports;\r\n  \r\n  })();\r\n  \r\n  ;\r\n          return MiniLZ4;\r\n        })();\r\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\r\n      },loadPackage:function (pack, preloadPlugin) {\r\n        LZ4.init();\r\n        var compressedData = pack['compressedData'];\r\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\r\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\r\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\r\n          compressedData['cachedIndexes'][i] = -1;\r\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\r\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\r\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\r\n        }\r\n        pack['metadata'].files.forEach(function(file) {\r\n          var dir = PATH.dirname(file.filename);\r\n          var name = PATH.basename(file.filename);\r\n          FS.createPath('', dir, true, true);\r\n          var parent = FS.analyzePath(dir).object;\r\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\r\n            compressedData: compressedData,\r\n            start: file.start,\r\n            end: file.end,\r\n          });\r\n        });\r\n        // Preload files if necessary. This code is largely similar to\r\n        // createPreloadedFile in library_fs.js. However, a main difference here\r\n        // is that we only decompress the file if it can be preloaded.\r\n        // Abstracting out the common parts seems to be more effort than it is\r\n        // worth.\r\n        if (preloadPlugin) {\r\n          Browser.init();\r\n          pack['metadata'].files.forEach(function(file) {\r\n            var handled = false;\r\n            var fullname = file.filename;\r\n            Module['preloadPlugins'].forEach(function(plugin) {\r\n              if (handled) return;\r\n              if (plugin['canHandle'](fullname)) {\r\n                var dep = getUniqueRunDependency('fp ' + fullname);\r\n                addRunDependency(dep);\r\n                var finish = function() {\r\n                  removeRunDependency(dep);\r\n                }\r\n                var byteArray = FS.readFile(fullname);\r\n                plugin['handle'](byteArray, fullname, finish, finish);\r\n                handled = true;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\r\n        var node = FS.createNode(parent, name, mode);\r\n        node.mode = mode;\r\n        node.node_ops = LZ4.node_ops;\r\n        node.stream_ops = LZ4.stream_ops;\r\n        node.timestamp = (mtime || new Date).getTime();\r\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\r\n        if (mode === LZ4.FILE_MODE) {\r\n          node.size = contents.end - contents.start;\r\n          node.contents = contents;\r\n        } else {\r\n          node.size = 4096;\r\n          node.contents = {};\r\n        }\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n        }\r\n        return node;\r\n      },node_ops:{getattr:function(node) {\r\n          return {\r\n            dev: 1,\r\n            ino: node.id,\r\n            mode: node.mode,\r\n            nlink: 1,\r\n            uid: 0,\r\n            gid: 0,\r\n            rdev: undefined,\r\n            size: node.size,\r\n            atime: new Date(node.timestamp),\r\n            mtime: new Date(node.timestamp),\r\n            ctime: new Date(node.timestamp),\r\n            blksize: 4096,\r\n            blocks: Math.ceil(node.size / 4096),\r\n          };\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw new FS.ErrnoError(44);\r\n        },mknod:function (parent, name, mode, dev) {\r\n          throw new FS.ErrnoError(63);\r\n        },rename:function (oldNode, newDir, newName) {\r\n          throw new FS.ErrnoError(63);\r\n        },unlink:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },rmdir:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },readdir:function(node) {\r\n          throw new FS.ErrnoError(63);\r\n        },symlink:function(parent, newName, oldPath) {\r\n          throw new FS.ErrnoError(63);\r\n        },readlink:function(node) {\r\n          throw new FS.ErrnoError(63);\r\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\r\n          //out('LZ4 read ' + [offset, length, position]);\r\n          length = Math.min(length, stream.node.size - position);\r\n          if (length <= 0) return 0;\r\n          var contents = stream.node.contents;\r\n          var compressedData = contents.compressedData;\r\n          var written = 0;\r\n          while (written < length) {\r\n            var start = contents.start + position + written; // start index in uncompressed data\r\n            var desired = length - written;\r\n            //out('current read: ' + ['start', start, 'desired', desired]);\r\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\r\n            var compressedStart = compressedData['offsets'][chunkIndex];\r\n            var compressedSize = compressedData['sizes'][chunkIndex];\r\n            var currChunk;\r\n            if (compressedData['successes'][chunkIndex]) {\r\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\r\n              if (found >= 0) {\r\n                currChunk = compressedData['cachedChunks'][found];\r\n              } else {\r\n                // decompress the chunk\r\n                compressedData['cachedIndexes'].pop();\r\n                compressedData['cachedIndexes'].unshift(chunkIndex);\r\n                currChunk = compressedData['cachedChunks'].pop();\r\n                compressedData['cachedChunks'].unshift(currChunk);\r\n                if (compressedData['debug']) {\r\n                  out('decompressing chunk ' + chunkIndex);\r\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\r\n                }\r\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\r\n                //var t = Date.now();\r\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\r\n                //out('decompress time: ' + (Date.now() - t));\r\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\r\n              }\r\n            } else {\r\n              // uncompressed\r\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\r\n            }\r\n            var startInChunk = start % LZ4.CHUNK_SIZE;\r\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\r\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\r\n            var currWritten = endInChunk - startInChunk;\r\n            written += currWritten;\r\n          }\r\n          return written;\r\n        },write:function (stream, buffer, offset, length, position) {\r\n          throw new FS.ErrnoError(29);\r\n        },llseek:function (stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.size;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        }}};\r\n  var FS = {root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path, opts = {}) => {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },getPath:(node) => {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\r\n          }\r\n          path = path ? node.name + '/' + path : node.name;\r\n          node = node.parent;\r\n        }\r\n      },hashName:(parentid, name) => {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },hashAddNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },hashRemoveNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },lookupNode:(parent, name) => {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode, parent);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },createNode:(parent, name, mode, rdev) => {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },destroyNode:(node) => {\r\n        FS.hashRemoveNode(node);\r\n      },isRoot:(node) => {\r\n        return node === node.parent;\r\n      },isMountpoint:(node) => {\r\n        return !!node.mounted;\r\n      },isFile:(mode) => {\r\n        return (mode & 61440) === 32768;\r\n      },isDir:(mode) => {\r\n        return (mode & 61440) === 16384;\r\n      },isLink:(mode) => {\r\n        return (mode & 61440) === 40960;\r\n      },isChrdev:(mode) => {\r\n        return (mode & 61440) === 8192;\r\n      },isBlkdev:(mode) => {\r\n        return (mode & 61440) === 24576;\r\n      },isFIFO:(mode) => {\r\n        return (mode & 61440) === 4096;\r\n      },isSocket:(mode) => {\r\n        return (mode & 49152) === 49152;\r\n      },flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:(str) => {\r\n        var flags = FS.flagModes[str];\r\n        if (typeof flags == 'undefined') {\r\n          throw new Error('Unknown file open mode: ' + str);\r\n        }\r\n        return flags;\r\n      },flagsToPermissionString:(flag) => {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },nodePermissions:(node, perms) => {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },mayLookup:(dir) => {\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },mayCreate:(dir, name) => {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },mayDelete:(dir, name, isdir) => {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },mayOpen:(node, flags) => {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },MAX_OPEN_FDS:4096,nextfd:(fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\r\n        for (var fd = fd_start; fd <= fd_end; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },getStream:(fd) => FS.streams[fd],createStream:(stream, fd_start, fd_end) => {\r\n        if (!FS.FSStream) {\r\n          FS.FSStream = /** @constructor */ function() {\r\n            this.shared = { };\r\n          };\r\n          FS.FSStream.prototype = {};\r\n          Object.defineProperties(FS.FSStream.prototype, {\r\n            object: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.node; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.node = val; }\r\n            },\r\n            isRead: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 1; }\r\n            },\r\n            isWrite: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 0; }\r\n            },\r\n            isAppend: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 1024); }\r\n            },\r\n            flags: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.flags; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.flags = val; },\r\n            },\r\n            position : {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.position; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.position = val; },\r\n            },\r\n          });\r\n        }\r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        var fd = FS.nextfd(fd_start, fd_end);\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },closeStream:(fd) => {\r\n        FS.streams[fd] = null;\r\n      },chrdev_stream_ops:{open:(stream) => {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n        },llseek:() => {\r\n          throw new FS.ErrnoError(70);\r\n        }},major:(dev) => ((dev) >> 8),minor:(dev) => ((dev) & 0xff),makedev:(ma, mi) => ((ma) << 8 | (mi)),registerDevice:(dev, ops) => {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },getDevice:(dev) => FS.devices[dev],getMounts:(mount) => {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push.apply(check, m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },syncfs:(populate, callback) => {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },mount:(type, opts, mountpoint) => {\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type: type,\r\n          opts: opts,\r\n          mountpoint: mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },unmount:(mountpoint) => {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },lookup:(parent, name) => {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },mknod:(path, mode, dev) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },create:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdir:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdirTree:(path, mode) => {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },mkdev:(path, mode, dev) => {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },symlink:(oldpath, newpath) => {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },rename:(old_path, new_path) => {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existant directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },rmdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },readdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },unlink:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },readlink:(path) => {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },stat:(path, dontFollow) => {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },lstat:(path) => {\r\n        return FS.stat(path, true);\r\n      },chmod:(path, mode, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },lchmod:(path, mode) => {\r\n        FS.chmod(path, mode, true);\r\n      },fchmod:(fd, mode) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chmod(stream.node, mode);\r\n      },chown:(path, uid, gid, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },lchown:(path, uid, gid) => {\r\n        FS.chown(path, uid, gid, true);\r\n      },fchown:(fd, uid, gid) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chown(stream.node, uid, gid);\r\n      },truncate:(path, len) => {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },ftruncate:(fd, len) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },utime:(path, atime, mtime) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },open:(path, flags, mode) => {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n        if ((flags & 64)) {\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node: node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags: flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!FS.readFiles) FS.readFiles = {};\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },close:(stream) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },isClosed:(stream) => {\r\n        return stream.fd === null;\r\n      },llseek:(stream, offset, whence) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },read:(stream, buffer, offset, length, position) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },write:(stream, buffer, offset, length, position, canOwn) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },allocate:(stream, offset, length) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },mmap:(stream, length, position, prot, flags) => {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },msync:(stream, buffer, offset, length, mmapFlags) => {\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },munmap:(stream) => 0,ioctl:(stream, cmd, arg) => {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },readFile:(path, opts = {}) => {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf, 0);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },writeFile:(path, data, opts = {}) => {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },cwd:() => FS.currentPath,chdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },createDefaultDirectories:() => {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },createDefaultDevices:() => {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        var random_device = getRandomDevice();\r\n        FS.createDevice('/dev', 'random', random_device);\r\n        FS.createDevice('/dev', 'urandom', random_device);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },createSpecialDirectories:() => {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount: () => {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup: (parent, name) => {\r\n                var fd = +name;\r\n                var stream = FS.getStream(fd);\r\n                if (!stream) throw new FS.ErrnoError(8);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },createStandardStreams:() => {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (Module['stdin']) {\r\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (Module['stdout']) {\r\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (Module['stderr']) {\r\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n      },ensureErrnoError:() => {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\r\n          this.node = node;\r\n          this.setErrno = /** @this{Object} */ function(errno) {\r\n            this.errno = errno;\r\n          };\r\n          this.setErrno(errno);\r\n          this.message = 'FS error';\r\n  \r\n        };\r\n        FS.ErrnoError.prototype = new Error();\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n      },staticInit:() => {\r\n        FS.ensureErrnoError();\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n          'IDBFS': IDBFS,\r\n        };\r\n      },init:(input, output, error) => {\r\n        FS.init.initialized = true;\r\n  \r\n        FS.ensureErrnoError();\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        Module['stdin'] = input || Module['stdin'];\r\n        Module['stdout'] = output || Module['stdout'];\r\n        Module['stderr'] = error || Module['stderr'];\r\n  \r\n        FS.createStandardStreams();\r\n      },quit:() => {\r\n        FS.init.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },getMode:(canRead, canWrite) => {\r\n        var mode = 0;\r\n        if (canRead) mode |= 292 | 73;\r\n        if (canWrite) mode |= 146;\r\n        return mode;\r\n      },findObject:(path, dontResolveLastLink) => {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },analyzePath:(path, dontResolveLastLink) => {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },createPath:(parent, path, canRead, canWrite) => {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },createFile:(parent, name, properties, canRead, canWrite) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },createDataFile:(parent, name, data, canRead, canWrite, canOwn) => {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n        return node;\r\n      },createDevice:(parent, name, input, output) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open: (stream) => {\r\n            stream.seekable = false;\r\n          },\r\n          close: (stream) => {\r\n            // flush any pending line data\r\n            if (output && output.buffer && output.buffer.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read: (stream, buffer, offset, length, pos /* ignored */) => {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write: (stream, buffer, offset, length, pos) => {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },forceLoadFile:(obj) => {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else if (read_) {\r\n          // Command-line.\r\n          try {\r\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\r\n            //          read() will try to parse UTF8.\r\n            obj.contents = intArrayFromString(read_(obj.url), true);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        } else {\r\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\r\n        }\r\n      },createLazyFile:(parent, name, url, canRead, canWrite) => {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\r\n        /** @constructor */\r\n        function LazyUint8Array() {\r\n          this.lengthKnown = false;\r\n          this.chunks = []; // Loaded chunks. Index is the chunk number\r\n        }\r\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\r\n          if (idx > this.length-1 || idx < 0) {\r\n            return undefined;\r\n          }\r\n          var chunkOffset = idx % this.chunkSize;\r\n          var chunkNum = (idx / this.chunkSize)|0;\r\n          return this.getter(chunkNum)[chunkOffset];\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n          this.getter = getter;\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n          // Find length\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('HEAD', url, false);\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n          var header;\r\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n          var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n          if (!hasByteServing) chunkSize = datalength;\r\n  \r\n          // Function to get a range from the remote URL.\r\n          var doXHR = (from, to) => {\r\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, false);\r\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n            // Some hints to the browser that we want binary data.\r\n            xhr.responseType = 'arraybuffer';\r\n            if (xhr.overrideMimeType) {\r\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n            }\r\n  \r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            if (xhr.response !== undefined) {\r\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n            }\r\n            return intArrayFromString(xhr.responseText || '', true);\r\n          };\r\n          var lazyArray = this;\r\n          lazyArray.setDataGetter((chunkNum) => {\r\n            var start = chunkNum * chunkSize;\r\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n            }\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n            return lazyArray.chunks[chunkNum];\r\n          });\r\n  \r\n          if (usesGzip || !datalength) {\r\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n            datalength = this.getter(0).length;\r\n            chunkSize = datalength;\r\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n          }\r\n  \r\n          this._length = datalength;\r\n          this._chunkSize = chunkSize;\r\n          this.lengthKnown = true;\r\n        };\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          Object.defineProperties(lazyArray, {\r\n            length: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._length;\r\n              }\r\n            },\r\n            chunkSize: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._chunkSize;\r\n              }\r\n            }\r\n          });\r\n  \r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = function forceLoadLazyFile() {\r\n            FS.forceLoadFile(node);\r\n            return fn.apply(null, arguments);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr: ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      },createPreloadedFile:(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n        // TODO we should allow people to just pass in a complete filename instead\r\n        // of parent and name being that we just join them anyways\r\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\r\n        function processData(byteArray) {\r\n          function finish(byteArray) {\r\n            if (preFinish) preFinish();\r\n            if (!dontCreateFile) {\r\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n            }\r\n            if (onload) onload();\r\n            removeRunDependency(dep);\r\n          }\r\n          if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n            if (onerror) onerror();\r\n            removeRunDependency(dep);\r\n          })) {\r\n            return;\r\n          }\r\n          finish(byteArray);\r\n        }\r\n        addRunDependency(dep);\r\n        if (typeof url == 'string') {\r\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\r\n        } else {\r\n          processData(url);\r\n        }\r\n      },indexedDB:() => {\r\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n      },DB_NAME:() => {\r\n        return 'EM_FS_' + window.location.pathname;\r\n      },DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(paths, onload = (() => {}), onerror = (() => {})) => {\r\n        var indexedDB = FS.indexedDB();\r\n        try {\r\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\r\n        } catch (e) {\r\n          return onerror(e);\r\n        }\r\n        openRequest.onupgradeneeded = () => {\r\n          out('creating db');\r\n          var db = openRequest.result;\r\n          db.createObjectStore(FS.DB_STORE_NAME);\r\n        };\r\n        openRequest.onsuccess = () => {\r\n          var db = openRequest.result;\r\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\r\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n          var ok = 0, fail = 0, total = paths.length;\r\n          function finish() {\r\n            if (fail == 0) onload(); else onerror();\r\n          }\r\n          paths.forEach((path) => {\r\n            var putRequest = files.put(FS.analyzePath(path).object.contents, path);\r\n            putRequest.onsuccess = () => { ok++; if (ok + fail == total) finish() };\r\n            putRequest.onerror = () => { fail++; if (ok + fail == total) finish() };\r\n          });\r\n          transaction.onerror = onerror;\r\n        };\r\n        openRequest.onerror = onerror;\r\n      },loadFilesFromDB:(paths, onload = (() => {}), onerror = (() => {})) => {\r\n        var indexedDB = FS.indexedDB();\r\n        try {\r\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\r\n        } catch (e) {\r\n          return onerror(e);\r\n        }\r\n        openRequest.onupgradeneeded = onerror; // no database to load from\r\n        openRequest.onsuccess = () => {\r\n          var db = openRequest.result;\r\n          try {\r\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\r\n          } catch(e) {\r\n            onerror(e);\r\n            return;\r\n          }\r\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n          var ok = 0, fail = 0, total = paths.length;\r\n          function finish() {\r\n            if (fail == 0) onload(); else onerror();\r\n          }\r\n          paths.forEach((path) => {\r\n            var getRequest = files.get(path);\r\n            getRequest.onsuccess = () => {\r\n              if (FS.analyzePath(path).exists) {\r\n                FS.unlink(path);\r\n              }\r\n              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\r\n              ok++;\r\n              if (ok + fail == total) finish();\r\n            };\r\n            getRequest.onerror = () => { fail++; if (ok + fail == total) finish() };\r\n          });\r\n          transaction.onerror = onerror;\r\n        };\r\n        openRequest.onerror = onerror;\r\n      }};\r\n  var SYSCALLS = {DEFAULT_POLLMASK:5,calculateAt:function(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },doStat:function(func, path, buf) {\r\n        try {\r\n          var stat = func(path);\r\n        } catch (e) {\r\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\r\n            return -54;\r\n          }\r\n          throw e;\r\n        }\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(8))>>2)] = stat.ino;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(16))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(24))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(28))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(48))>>2)] = 4096;\r\n        HEAP32[(((buf)+(52))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble=Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (atime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble=Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (mtime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble=Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(96))>>2)] = (ctime % 1000) * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(104))>>2)] = tempI64[0],HEAP32[(((buf)+(108))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },doMsync:function(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },varargs:undefined,get:function() {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },getStreamFromFD:function(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) throw new FS.ErrnoError(8);\r\n        return stream;\r\n      }};\r\n  function ___syscall_chmod(path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.chmod(path, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fchmod(fd, mode) {\r\n  try {\r\n  \r\n      FS.fchmod(fd, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function setErrNo(value) {\r\n      HEAP32[((___errno_location())>>2)] = value;\r\n      return value;\r\n    }\r\n  \r\n  function ___syscall_fcntl64(fd, cmd, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (cmd) {\r\n        case 0: {\r\n          var arg = SYSCALLS.get();\r\n          if (arg < 0) {\r\n            return -28;\r\n          }\r\n          var newStream;\r\n          newStream = FS.createStream(stream, arg);\r\n          return newStream.fd;\r\n        }\r\n        case 1:\r\n        case 2:\r\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\r\n        case 3:\r\n          return stream.flags;\r\n        case 4: {\r\n          var arg = SYSCALLS.get();\r\n          stream.flags |= arg;\r\n          return 0;\r\n        }\r\n        case 5:\r\n        /* case 5: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\r\n          \r\n          var arg = SYSCALLS.get();\r\n          var offset = 0;\r\n          // We're always unlocked.\r\n          HEAP16[(((arg)+(offset))>>1)] = 2;\r\n          return 0;\r\n        }\r\n        case 6:\r\n        case 7:\r\n        /* case 6: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n        /* case 7: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n          \r\n          \r\n          return 0; // Pretend that the locking is successful.\r\n        case 16:\r\n        case 8:\r\n          return -28; // These are for sockets. We don't have them fully implemented yet.\r\n        case 9:\r\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\r\n          setErrNo(28);\r\n          return -1;\r\n        default: {\r\n          return -28;\r\n        }\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fstat64(fd, buf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function convertI32PairToI53Checked(lo, hi) {\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function ___syscall_ftruncate64(fd, length_low, length_high) {\r\n  try {\r\n  \r\n      var length = convertI32PairToI53Checked(length_low, length_high); if (isNaN(length)) return -61;\r\n      FS.ftruncate(fd, length);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_getcwd(buf, size) {\r\n  try {\r\n  \r\n      if (size === 0) return -28;\r\n      var cwd = FS.cwd();\r\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\r\n      if (size < cwdLengthInBytes) return -68;\r\n      stringToUTF8(cwd, buf, size);\r\n      return cwdLengthInBytes;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_getdents64(fd, dirp, count) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd)\r\n      if (!stream.getdents) {\r\n        stream.getdents = FS.readdir(stream.path);\r\n      }\r\n  \r\n      var struct_size = 280;\r\n      var pos = 0;\r\n      var off = FS.llseek(stream, 0, 1);\r\n  \r\n      var idx = Math.floor(off / struct_size);\r\n  \r\n      while (idx < stream.getdents.length && pos + struct_size <= count) {\r\n        var id;\r\n        var type;\r\n        var name = stream.getdents[idx];\r\n        if (name === '.') {\r\n          id = stream.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else if (name === '..') {\r\n          var lookup = FS.lookupPath(stream.path, { parent: true });\r\n          id = lookup.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else {\r\n          var child = FS.lookupNode(stream.node, name);\r\n          id = child.id;\r\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\r\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\r\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\r\n                 8;                             // DT_REG, regular file.\r\n        }\r\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\r\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\r\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\r\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\r\n        stringToUTF8(name, dirp + pos + 19, 256);\r\n        pos += struct_size;\r\n        idx += 1;\r\n      }\r\n      FS.llseek(stream, idx * struct_size, 0);\r\n      return pos;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_ioctl(fd, op, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (op) {\r\n        case 21509:\r\n        case 21505: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21510:\r\n        case 21511:\r\n        case 21512:\r\n        case 21506:\r\n        case 21507:\r\n        case 21508: {\r\n          if (!stream.tty) return -59;\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21519: {\r\n          if (!stream.tty) return -59;\r\n          var argp = SYSCALLS.get();\r\n          HEAP32[((argp)>>2)] = 0;\r\n          return 0;\r\n        }\r\n        case 21520: {\r\n          if (!stream.tty) return -59;\r\n          return -28; // not supported\r\n        }\r\n        case 21531: {\r\n          var argp = SYSCALLS.get();\r\n          return FS.ioctl(stream, op, argp);\r\n        }\r\n        case 21523: {\r\n          // TODO: in theory we should write to the winsize struct that gets\r\n          // passed in, but for now musl doesn't read anything on it\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21524: {\r\n          // TODO: technically, this ioctl call should change the window size.\r\n          // but, since emscripten doesn't have any concept of a terminal window\r\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        default: return -28; // not supported\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_lstat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.lstat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_mkdirat(dirfd, path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\r\n      // we want to create b in the context of this function\r\n      path = PATH.normalize(path);\r\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\r\n      FS.mkdir(path, mode, 0);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      var nofollow = flags & 256;\r\n      var allowEmpty = flags & 4096;\r\n      flags = flags & (~6400);\r\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_openat(dirfd, path, flags, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      var mode = varargs ? SYSCALLS.get() : 0;\r\n      return FS.open(path, flags, mode).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_rmdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.rmdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_stat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_unlinkat(dirfd, path, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (flags === 0) {\r\n        FS.unlink(path);\r\n      } else if (flags === 512) {\r\n        FS.rmdir(path);\r\n      } else {\r\n        abort('Invalid flags passed to unlinkat');\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var nowIsMonotonic = true;;\r\n  function __emscripten_get_now_is_monotonic() {\r\n      return nowIsMonotonic;\r\n    }\r\n\r\n  function readI53FromI64(ptr) {\r\n      return HEAPU32[ptr>>2] + HEAP32[ptr+4>>2] * 4294967296;\r\n    }\r\n  \r\n  function __isLeapYear(year) {\r\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\r\n    }\r\n  \r\n  var __MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\r\n  \r\n  var __MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\r\n  function __yday_from_date(date) {\r\n      var isLeapYear = __isLeapYear(date.getFullYear());\r\n      var monthDaysCumulative = (isLeapYear ? __MONTH_DAYS_LEAP_CUMULATIVE : __MONTH_DAYS_REGULAR_CUMULATIVE);\r\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\r\n  \r\n      return yday;\r\n    }\r\n  function __localtime_js(time, tmPtr) {\r\n      var date = new Date(readI53FromI64(time)*1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n  \r\n      var yday = __yday_from_date(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\r\n  \r\n      // Attention: DST is in December in South, and some regions don't have DST at all.\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\r\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\r\n    }\r\n\r\n  function __mktime_js(tmPtr) {\r\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\r\n                          HEAP32[(((tmPtr)+(16))>>2)],\r\n                          HEAP32[(((tmPtr)+(12))>>2)],\r\n                          HEAP32[(((tmPtr)+(8))>>2)],\r\n                          HEAP32[(((tmPtr)+(4))>>2)],\r\n                          HEAP32[((tmPtr)>>2)],\r\n                          0);\r\n  \r\n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\r\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\r\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\r\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\r\n      var guessedOffset = date.getTimezoneOffset();\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\r\n      if (dst < 0) {\r\n        // Attention: some regions don't have DST at all.\r\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\r\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\r\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\r\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\r\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\r\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\r\n      }\r\n  \r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n      var yday = __yday_from_date(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      // To match expected behavior, update fields from date\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\r\n  \r\n      return (date.getTime() / 1000)|0;\r\n    }\r\n\r\n  function allocateUTF8(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = _malloc(size);\r\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\r\n      return ret;\r\n    }\r\n  function __tzset_js(timezone, daylight, tzname) {\r\n      // TODO: Use (malleable) environment variables instead of system settings.\r\n      var currentYear = new Date().getFullYear();\r\n      var winter = new Date(currentYear, 0, 1);\r\n      var summer = new Date(currentYear, 6, 1);\r\n      var winterOffset = winter.getTimezoneOffset();\r\n      var summerOffset = summer.getTimezoneOffset();\r\n  \r\n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\r\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\r\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\r\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  \r\n      // timezone is specified as seconds west of UTC (\"The external variable\r\n      // `timezone` shall be set to the difference, in seconds, between\r\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n      // as returned by stdTimezoneOffset.\r\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\r\n  \r\n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\r\n  \r\n      function extractZone(date) {\r\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\r\n        return match ? match[1] : \"GMT\";\r\n      };\r\n      var winterName = extractZone(winter);\r\n      var summerName = extractZone(summer);\r\n      var winterNamePtr = allocateUTF8(winterName);\r\n      var summerNamePtr = allocateUTF8(summerName);\r\n      if (summerOffset < winterOffset) {\r\n        // Northern hemisphere\r\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\r\n      } else {\r\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\r\n      }\r\n    }\r\n\r\n  function _abort() {\r\n      abort('');\r\n    }\r\n\r\n  function _emscripten_set_main_loop_timing(mode, value) {\r\n      Browser.mainLoop.timingMode = mode;\r\n      Browser.mainLoop.timingValue = value;\r\n  \r\n      if (!Browser.mainLoop.func) {\r\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\r\n      }\r\n  \r\n      if (!Browser.mainLoop.running) {\r\n        \r\n        Browser.mainLoop.running = true;\r\n      }\r\n      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\r\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\r\n        };\r\n        Browser.mainLoop.method = 'timeout';\r\n      } else if (mode == 1 /*EM_TIMING_RAF*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'rAF';\r\n      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {\r\n        if (typeof setImmediate == 'undefined') {\r\n          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\r\n          var setImmediates = [];\r\n          var emscriptenMainLoopMessageId = 'setimmediate';\r\n          /** @param {Event} event */\r\n          var Browser_setImmediate_messageHandler = (event) => {\r\n            // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\r\n            // so check for both cases.\r\n            if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\r\n              event.stopPropagation();\r\n              setImmediates.shift()();\r\n            }\r\n          };\r\n          addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n          setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\r\n            setImmediates.push(func);\r\n            if (ENVIRONMENT_IS_WORKER) {\r\n              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\r\n              Module['setImmediates'].push(func);\r\n              postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\r\n            } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\r\n          })\r\n        }\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n          setImmediate(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'immediate';\r\n      }\r\n      return 0;\r\n    }\r\n  \r\n  var _emscripten_get_now;_emscripten_get_now = () => performance.now();\r\n  ;\r\n  \r\n  \r\n    /**\r\n     * @param {number=} arg\r\n     * @param {boolean=} noSetTiming\r\n     */\r\n  function setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) {\r\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\r\n  \r\n      Browser.mainLoop.func = browserIterationFunc;\r\n      Browser.mainLoop.arg = arg;\r\n  \r\n      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\r\n      function checkIsRunning() {\r\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\r\n          \r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      // We create the loop runner here but it is not actually running until\r\n      // _emscripten_set_main_loop_timing is called (which might happen a\r\n      // later time).  This member signifies that the current runner has not\r\n      // yet been started so that we can call runtimeKeepalivePush when it\r\n      // gets it timing set for the first time.\r\n      Browser.mainLoop.running = false;\r\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n        if (ABORT) return;\r\n        if (Browser.mainLoop.queue.length > 0) {\r\n          var start = Date.now();\r\n          var blocker = Browser.mainLoop.queue.shift();\r\n          blocker.func(blocker.arg);\r\n          if (Browser.mainLoop.remainingBlockers) {\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\r\n            if (blocker.counted) {\r\n              Browser.mainLoop.remainingBlockers = next;\r\n            } else {\r\n              // not counted, but move the progress along a tiny bit\r\n              next = next + 0.5; // do not steal all the next one's progress\r\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\r\n            }\r\n          }\r\n          out('main loop blocker \"' + blocker.name + '\" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);\r\n          Browser.mainLoop.updateStatus();\r\n  \r\n          // catches pause/resume main loop from blocker execution\r\n          if (!checkIsRunning()) return;\r\n  \r\n          setTimeout(Browser.mainLoop.runner, 0);\r\n          return;\r\n        }\r\n  \r\n        // catch pauses from non-main loop sources\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Implement very basic swap interval control\r\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n          // Not the scheduled time to render this frame - skip.\r\n          Browser.mainLoop.scheduler();\r\n          return;\r\n        } else if (Browser.mainLoop.timingMode == 0/*EM_TIMING_SETTIMEOUT*/) {\r\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\r\n        }\r\n  \r\n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\r\n        // VBO double-buffering and reduce GPU stalls.\r\n        GL.newRenderingFrameStarted();\r\n  \r\n        Browser.mainLoop.runIter(browserIterationFunc);\r\n  \r\n        // catch pauses from the main loop itself\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\r\n        // to queue the newest produced audio samples.\r\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\r\n        //       do not need to be hardcoded into this function, but can be more generic.\r\n        if (typeof SDL == 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (!noSetTiming) {\r\n        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);\r\n        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (simulateInfiniteLoop) {\r\n        throw 'unwind';\r\n      }\r\n    }\r\n  \r\n  function handleException(e) {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      quit_(1, e);\r\n    }\r\n  function callUserCallback(func) {\r\n      if (ABORT) {\r\n        return;\r\n      }\r\n      try {\r\n        func();\r\n      } catch (e) {\r\n        handleException(e);\r\n      }\r\n    }\r\n  \r\n  /** @param {number=} timeout */\r\n  function safeSetTimeout(func, timeout) {\r\n      \r\n      return setTimeout(function() {\r\n        \r\n        callUserCallback(func);\r\n      }, timeout);\r\n    }\r\n  \r\n  function warnOnce(text) {\r\n      if (!warnOnce.shown) warnOnce.shown = {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        err(text);\r\n      }\r\n    }\r\n  \r\n  \r\n  var Browser = {mainLoop:{running:false,scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function() {\r\n          Browser.mainLoop.scheduler = null;\r\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n        },resume:function() {\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n          var timingMode = Browser.mainLoop.timingMode;\r\n          var timingValue = Browser.mainLoop.timingValue;\r\n          var func = Browser.mainLoop.func;\r\n          Browser.mainLoop.func = null;\r\n          // do not set timing and call scheduler, we will do it on the next lines\r\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\r\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n          Browser.mainLoop.scheduler();\r\n        },updateStatus:function() {\r\n          if (Module['setStatus']) {\r\n            var message = Module['statusMessage'] || 'Please wait...';\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var expected = Browser.mainLoop.expectedBlockers;\r\n            if (remaining) {\r\n              if (remaining < expected) {\r\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\r\n              } else {\r\n                Module['setStatus'](message);\r\n              }\r\n            } else {\r\n              Module['setStatus']('');\r\n            }\r\n          }\r\n        },runIter:function(func) {\r\n          if (ABORT) return;\r\n          if (Module['preMainLoop']) {\r\n            var preRet = Module['preMainLoop']();\r\n            if (preRet === false) {\r\n              return; // |return false| skips a frame\r\n            }\r\n          }\r\n          callUserCallback(func);\r\n          if (Module['postMainLoop']) Module['postMainLoop']();\r\n        }},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function() {\r\n        if (!Module[\"preloadPlugins\"]) Module[\"preloadPlugins\"] = []; // needs to exist even in workers\r\n  \r\n        if (Browser.initted) return;\r\n        Browser.initted = true;\r\n  \r\n        try {\r\n          new Blob();\r\n          Browser.hasBlobConstructor = true;\r\n        } catch(e) {\r\n          Browser.hasBlobConstructor = false;\r\n          err(\"warning: no blob constructor, cannot create blobs with mimetypes\");\r\n        }\r\n        Browser.BlobBuilder = typeof MozBlobBuilder != \"undefined\" ? MozBlobBuilder : (typeof WebKitBlobBuilder != \"undefined\" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? err(\"warning: no BlobBuilder\") : null));\r\n        Browser.URLObject = typeof window != \"undefined\" ? (window.URL ? window.URL : window.webkitURL) : undefined;\r\n        if (!Module.noImageDecoding && typeof Browser.URLObject == 'undefined') {\r\n          err(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");\r\n          Module.noImageDecoding = true;\r\n        }\r\n  \r\n        // Support for plugins that can process preloaded files. You can add more of these to\r\n        // your app by creating and appending to Module.preloadPlugins.\r\n        //\r\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\r\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\r\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\r\n        // might create some side data structure for use later (like an Image element, etc.).\r\n  \r\n        var imagePlugin = {};\r\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\r\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\r\n        };\r\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n          var b = null;\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n              if (b.size !== byteArray.length) { // Safari bug #118630\r\n                // Safari's Blob can only take an ArrayBuffer\r\n                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\r\n              }\r\n            } catch(e) {\r\n              warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');\r\n            }\r\n          }\r\n          if (!b) {\r\n            var bb = new Browser.BlobBuilder();\r\n            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range\r\n            b = bb.getBlob();\r\n          }\r\n          var url = Browser.URLObject.createObjectURL(b);\r\n          var img = new Image();\r\n          img.onload = () => {\r\n            assert(img.complete, 'Image ' + name + ' could not be decoded');\r\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            preloadedImages[name] = canvas;\r\n            Browser.URLObject.revokeObjectURL(url);\r\n            if (onload) onload(byteArray);\r\n          };\r\n          img.onerror = (event) => {\r\n            out('Image ' + url + ' could not be decoded');\r\n            if (onerror) onerror();\r\n          };\r\n          img.src = url;\r\n        };\r\n        Module['preloadPlugins'].push(imagePlugin);\r\n  \r\n        var audioPlugin = {};\r\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\r\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\r\n        };\r\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n          var done = false;\r\n          function finish(audio) {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = audio;\r\n            if (onload) onload(byteArray);\r\n          }\r\n          function fail() {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = new Audio(); // empty shim\r\n            if (onerror) onerror();\r\n          }\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n            } catch(e) {\r\n              return fail();\r\n            }\r\n            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!\r\n            var audio = new Audio();\r\n            audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\r\n            audio.onerror = function audio_onerror(event) {\r\n              if (done) return;\r\n              err('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');\r\n              function encode64(data) {\r\n                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n                var PAD = '=';\r\n                var ret = '';\r\n                var leftchar = 0;\r\n                var leftbits = 0;\r\n                for (var i = 0; i < data.length; i++) {\r\n                  leftchar = (leftchar << 8) | data[i];\r\n                  leftbits += 8;\r\n                  while (leftbits >= 6) {\r\n                    var curr = (leftchar >> (leftbits-6)) & 0x3f;\r\n                    leftbits -= 6;\r\n                    ret += BASE[curr];\r\n                  }\r\n                }\r\n                if (leftbits == 2) {\r\n                  ret += BASE[(leftchar&3) << 4];\r\n                  ret += PAD + PAD;\r\n                } else if (leftbits == 4) {\r\n                  ret += BASE[(leftchar&0xf) << 2];\r\n                  ret += PAD;\r\n                }\r\n                return ret;\r\n              }\r\n              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\r\n              finish(audio); // we don't wait for confirmation this worked - but it's worth trying\r\n            };\r\n            audio.src = url;\r\n            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\r\n            safeSetTimeout(function() {\r\n              finish(audio); // try to use it even though it is not necessarily ready to play\r\n            }, 10000);\r\n          } else {\r\n            return fail();\r\n          }\r\n        };\r\n        Module['preloadPlugins'].push(audioPlugin);\r\n  \r\n        // Canvas event setup\r\n  \r\n        function pointerLockChange() {\r\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\r\n                                document['mozPointerLockElement'] === Module['canvas'] ||\r\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\r\n                                document['msPointerLockElement'] === Module['canvas'];\r\n        }\r\n        var canvas = Module['canvas'];\r\n        if (canvas) {\r\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\r\n          // Module['forcedAspectRatio'] = 4 / 3;\r\n  \r\n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\r\n                                      canvas['mozRequestPointerLock'] ||\r\n                                      canvas['webkitRequestPointerLock'] ||\r\n                                      canvas['msRequestPointerLock'] ||\r\n                                      (() => {});\r\n          canvas.exitPointerLock = document['exitPointerLock'] ||\r\n                                   document['mozExitPointerLock'] ||\r\n                                   document['webkitExitPointerLock'] ||\r\n                                   document['msExitPointerLock'] ||\r\n                                   (() => {}); // no-op if function does not exist\r\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n  \r\n          document.addEventListener('pointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\r\n  \r\n          if (Module['elementPointerLock']) {\r\n            canvas.addEventListener(\"click\", (ev) => {\r\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\r\n                Module['canvas'].requestPointerLock();\r\n                ev.preventDefault();\r\n              }\r\n            }, false);\r\n          }\r\n        }\r\n      },handledByPreloadPlugin:function(byteArray, fullname, finish, onerror) {\r\n        // Ensure plugins are ready.\r\n        Browser.init();\r\n  \r\n        var handled = false;\r\n        Module['preloadPlugins'].forEach(function(plugin) {\r\n          if (handled) return;\r\n          if (plugin['canHandle'](fullname)) {\r\n            plugin['handle'](byteArray, fullname, finish, onerror);\r\n            handled = true;\r\n          }\r\n        });\r\n        return handled;\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\r\n  \r\n        var ctx;\r\n        var contextHandle;\r\n        if (useWebGL) {\r\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\r\n          var contextAttributes = {\r\n            antialias: false,\r\n            alpha: false,\r\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\r\n          };\r\n  \r\n          if (webGLContextAttributes) {\r\n            for (var attribute in webGLContextAttributes) {\r\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\r\n            }\r\n          }\r\n  \r\n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\r\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\r\n          // Browser.createContext() should not even be emitted.\r\n          if (typeof GL != 'undefined') {\r\n            contextHandle = GL.createContext(canvas, contextAttributes);\r\n            if (contextHandle) {\r\n              ctx = GL.getContext(contextHandle).GLctx;\r\n            }\r\n          }\r\n        } else {\r\n          ctx = canvas.getContext('2d');\r\n        }\r\n  \r\n        if (!ctx) return null;\r\n  \r\n        if (setInModule) {\r\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\r\n  \r\n          Module.ctx = ctx;\r\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n          Module.useWebGL = useWebGL;\r\n          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n          Browser.init();\r\n        }\r\n        return ctx;\r\n      },destroyContext:function(canvas, useWebGL, setInModule) {},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer, resizeCanvas) {\r\n        Browser.lockPointer = lockPointer;\r\n        Browser.resizeCanvas = resizeCanvas;\r\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\r\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\r\n  \r\n        var canvas = Module['canvas'];\r\n        function fullscreenChange() {\r\n          Browser.isFullscreen = false;\r\n          var canvasContainer = canvas.parentNode;\r\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\r\n            canvas.exitFullscreen = Browser.exitFullscreen;\r\n            if (Browser.lockPointer) canvas.requestPointerLock();\r\n            Browser.isFullscreen = true;\r\n            if (Browser.resizeCanvas) {\r\n              Browser.setFullscreenCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          } else {\r\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\r\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n            canvasContainer.parentNode.removeChild(canvasContainer);\r\n  \r\n            if (Browser.resizeCanvas) {\r\n              Browser.setWindowedCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          }\r\n          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);\r\n          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);\r\n        }\r\n  \r\n        if (!Browser.fullscreenHandlersInstalled) {\r\n          Browser.fullscreenHandlersInstalled = true;\r\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\r\n        }\r\n  \r\n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\r\n        var canvasContainer = document.createElement(\"div\");\r\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n        canvasContainer.appendChild(canvas);\r\n  \r\n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\r\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\r\n                                            canvasContainer['mozRequestFullScreen'] ||\r\n                                            canvasContainer['msRequestFullscreen'] ||\r\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\r\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\r\n  \r\n        canvasContainer.requestFullscreen();\r\n      },exitFullscreen:function() {\r\n        // This is workaround for chrome. Trying to exit from fullscreen\r\n        // not in fullscreen state will cause \"TypeError: Document not active\"\r\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\r\n        if (!Browser.isFullscreen) {\r\n          return false;\r\n        }\r\n  \r\n        var CFS = document['exitFullscreen'] ||\r\n                  document['cancelFullScreen'] ||\r\n                  document['mozCancelFullScreen'] ||\r\n                  document['msExitFullscreen'] ||\r\n                  document['webkitCancelFullScreen'] ||\r\n            (function() {});\r\n        CFS.apply(document, []);\r\n        return true;\r\n      },nextRAF:0,fakeRequestAnimationFrame:function(func) {\r\n        // try to keep 60fps between calls to here\r\n        var now = Date.now();\r\n        if (Browser.nextRAF === 0) {\r\n          Browser.nextRAF = now + 1000/60;\r\n        } else {\r\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\r\n            Browser.nextRAF += 1000/60;\r\n          }\r\n        }\r\n        var delay = Math.max(Browser.nextRAF - now, 0);\r\n        setTimeout(func, delay);\r\n      },requestAnimationFrame:function(func) {\r\n        if (typeof requestAnimationFrame == 'function') {\r\n          requestAnimationFrame(func);\r\n          return;\r\n        }\r\n        var RAF = Browser.fakeRequestAnimationFrame;\r\n        RAF(func);\r\n      },safeSetTimeout:function(func, timeout) {\r\n        // Legacy function, this is used by the SDL2 port so we need to keep it\r\n        // around at least until that is updated.\r\n        // See https://github.com/libsdl-org/SDL/pull/6304\r\n        return safeSetTimeout(func, timeout);\r\n      },safeRequestAnimationFrame:function(func) {\r\n        \r\n        return Browser.requestAnimationFrame(function() {\r\n          \r\n          callUserCallback(func);\r\n        });\r\n      },getMimetype:function(name) {\r\n        return {\r\n          'jpg': 'image/jpeg',\r\n          'jpeg': 'image/jpeg',\r\n          'png': 'image/png',\r\n          'bmp': 'image/bmp',\r\n          'ogg': 'audio/ogg',\r\n          'wav': 'audio/wav',\r\n          'mp3': 'audio/mpeg'\r\n        }[name.substr(name.lastIndexOf('.')+1)];\r\n      },getUserMedia:function(func) {\r\n        if (!window.getUserMedia) {\r\n          window.getUserMedia = navigator['getUserMedia'] ||\r\n                                navigator['mozGetUserMedia'];\r\n        }\r\n        window.getUserMedia(func);\r\n      },getMovementX:function(event) {\r\n        return event['movementX'] ||\r\n               event['mozMovementX'] ||\r\n               event['webkitMovementX'] ||\r\n               0;\r\n      },getMovementY:function(event) {\r\n        return event['movementY'] ||\r\n               event['mozMovementY'] ||\r\n               event['webkitMovementY'] ||\r\n               0;\r\n      },getMouseWheelDelta:function(event) {\r\n        var delta = 0;\r\n        switch (event.type) {\r\n          case 'DOMMouseScroll':\r\n            // 3 lines make up a step\r\n            delta = event.detail / 3;\r\n            break;\r\n          case 'mousewheel':\r\n            // 120 units make up a step\r\n            delta = event.wheelDelta / 120;\r\n            break;\r\n          case 'wheel':\r\n            delta = event.deltaY\r\n            switch (event.deltaMode) {\r\n              case 0:\r\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\r\n                delta /= 100;\r\n                break;\r\n              case 1:\r\n                // DOM_DELTA_LINE: 3 lines make up a step\r\n                delta /= 3;\r\n                break;\r\n              case 2:\r\n                // DOM_DELTA_PAGE: A page makes up 80 steps\r\n                delta *= 80;\r\n                break;\r\n              default:\r\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\r\n            }\r\n            break;\r\n          default:\r\n            throw 'unrecognized mouse wheel event: ' + event.type;\r\n        }\r\n        return delta;\r\n      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event) { // event should be mousemove, mousedown or mouseup\r\n        if (Browser.pointerLock) {\r\n          // When the pointer is locked, calculate the coordinates\r\n          // based on the movement of the mouse.\r\n          // Workaround for Firefox bug 764498\r\n          if (event.type != 'mousemove' &&\r\n              ('mozMovementX' in event)) {\r\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\r\n          } else {\r\n            Browser.mouseMovementX = Browser.getMovementX(event);\r\n            Browser.mouseMovementY = Browser.getMovementY(event);\r\n          }\r\n  \r\n          // check if SDL is available\r\n          if (typeof SDL != \"undefined\") {\r\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\r\n          } else {\r\n            // just add the mouse delta to the current absolut mouse position\r\n            // FIXME: ideally this should be clamped against the canvas size and zero\r\n            Browser.mouseX += Browser.mouseMovementX;\r\n            Browser.mouseY += Browser.mouseMovementY;\r\n          }\r\n        } else {\r\n          // Otherwise, calculate the movement based on the changes\r\n          // in the coordinates.\r\n          var rect = Module[\"canvas\"].getBoundingClientRect();\r\n          var cw = Module[\"canvas\"].width;\r\n          var ch = Module[\"canvas\"].height;\r\n  \r\n          // Neither .scrollX or .pageXOffset are defined in a spec, but\r\n          // we prefer .scrollX because it is currently in a spec draft.\r\n          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\r\n          var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\r\n          var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\r\n  \r\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\r\n            var touch = event.touch;\r\n            if (touch === undefined) {\r\n              return; // the \"touch\" property is only defined in SDL\r\n  \r\n            }\r\n            var adjustedX = touch.pageX - (scrollX + rect.left);\r\n            var adjustedY = touch.pageY - (scrollY + rect.top);\r\n  \r\n            adjustedX = adjustedX * (cw / rect.width);\r\n            adjustedY = adjustedY * (ch / rect.height);\r\n  \r\n            var coords = { x: adjustedX, y: adjustedY };\r\n  \r\n            if (event.type === 'touchstart') {\r\n              Browser.lastTouches[touch.identifier] = coords;\r\n              Browser.touches[touch.identifier] = coords;\r\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\r\n              var last = Browser.touches[touch.identifier];\r\n              if (!last) last = coords;\r\n              Browser.lastTouches[touch.identifier] = last;\r\n              Browser.touches[touch.identifier] = coords;\r\n            }\r\n            return;\r\n          }\r\n  \r\n          var x = event.pageX - (scrollX + rect.left);\r\n          var y = event.pageY - (scrollY + rect.top);\r\n  \r\n          // the canvas might be CSS-scaled compared to its backbuffer;\r\n          // SDL-using content will want mouse coordinates in terms\r\n          // of backbuffer units.\r\n          x = x * (cw / rect.width);\r\n          y = y * (ch / rect.height);\r\n  \r\n          Browser.mouseMovementX = x - Browser.mouseX;\r\n          Browser.mouseMovementY = y - Browser.mouseY;\r\n          Browser.mouseX = x;\r\n          Browser.mouseY = y;\r\n        }\r\n      },resizeListeners:[],updateResizeListeners:function() {\r\n        var canvas = Module['canvas'];\r\n        Browser.resizeListeners.forEach(function(listener) {\r\n          listener(canvas.width, canvas.height);\r\n        });\r\n      },setCanvasSize:function(width, height, noUpdates) {\r\n        var canvas = Module['canvas'];\r\n        Browser.updateCanvasDimensions(canvas, width, height);\r\n        if (!noUpdates) Browser.updateResizeListeners();\r\n      },windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },setWindowedCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },updateCanvasDimensions:function(canvas, wNative, hNative) {\r\n        if (wNative && hNative) {\r\n          canvas.widthNative = wNative;\r\n          canvas.heightNative = hNative;\r\n        } else {\r\n          wNative = canvas.widthNative;\r\n          hNative = canvas.heightNative;\r\n        }\r\n        var w = wNative;\r\n        var h = hNative;\r\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\r\n          if (w/h < Module['forcedAspectRatio']) {\r\n            w = Math.round(h * Module['forcedAspectRatio']);\r\n          } else {\r\n            h = Math.round(w / Module['forcedAspectRatio']);\r\n          }\r\n        }\r\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\r\n           var factor = Math.min(screen.width / w, screen.height / h);\r\n           w = Math.round(w * factor);\r\n           h = Math.round(h * factor);\r\n        }\r\n        if (Browser.resizeCanvas) {\r\n          if (canvas.width  != w) canvas.width  = w;\r\n          if (canvas.height != h) canvas.height = h;\r\n          if (typeof canvas.style != 'undefined') {\r\n            canvas.style.removeProperty( \"width\");\r\n            canvas.style.removeProperty(\"height\");\r\n          }\r\n        } else {\r\n          if (canvas.width  != wNative) canvas.width  = wNative;\r\n          if (canvas.height != hNative) canvas.height = hNative;\r\n          if (typeof canvas.style != 'undefined') {\r\n            if (w != wNative || h != hNative) {\r\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\r\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\r\n            } else {\r\n              canvas.style.removeProperty( \"width\");\r\n              canvas.style.removeProperty(\"height\");\r\n            }\r\n          }\r\n        }\r\n      }};\r\n  \r\n  var EGL = {errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function(code) {\r\n        EGL.errorCode = code;\r\n      },chooseConfig:function(display, attribList, config, config_size, numConfigs) {\r\n        if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n          return 0;\r\n        }\r\n  \r\n        if (attribList) {\r\n          // read attribList if it is non-null\r\n          for (;;) {\r\n            var param = HEAP32[((attribList)>>2)];\r\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\r\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.alpha = (alphaSize > 0);\r\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\r\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.depth = (depthSize > 0);\r\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\r\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.stencil = (stencilSize > 0);\r\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples > 0);\r\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples == 1);\r\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\r\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\r\n            } else if (param == 0x3038 /*EGL_NONE*/) {\r\n                break;\r\n            }\r\n            attribList += 8;\r\n          }\r\n        }\r\n  \r\n        if ((!config || !config_size) && !numConfigs) {\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n        }\r\n        if (numConfigs) {\r\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\r\n        }\r\n        if (config && config_size > 0) {\r\n          HEAP32[((config)>>2)] = 62002;\r\n        }\r\n  \r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }};\r\n  function _eglBindAPI(api) {\r\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }\r\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\r\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n      return 0;\r\n    }\r\n\r\n  function _eglChooseConfig(display, attrib_list, configs, config_size, numConfigs) {\r\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\r\n    }\r\n\r\n  function __webgl_enable_ANGLE_instanced_arrays(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\r\n      if (ext) {\r\n        ctx['vertexAttribDivisor'] = function(index, divisor) { ext['vertexAttribDivisorANGLE'](index, divisor); };\r\n        ctx['drawArraysInstanced'] = function(mode, first, count, primcount) { ext['drawArraysInstancedANGLE'](mode, first, count, primcount); };\r\n        ctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function __webgl_enable_OES_vertex_array_object(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('OES_vertex_array_object');\r\n      if (ext) {\r\n        ctx['createVertexArray'] = function() { return ext['createVertexArrayOES'](); };\r\n        ctx['deleteVertexArray'] = function(vao) { ext['deleteVertexArrayOES'](vao); };\r\n        ctx['bindVertexArray'] = function(vao) { ext['bindVertexArrayOES'](vao); };\r\n        ctx['isVertexArray'] = function(vao) { return ext['isVertexArrayOES'](vao); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function __webgl_enable_WEBGL_draw_buffers(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\r\n      if (ext) {\r\n        ctx['drawBuffers'] = function(n, bufs) { ext['drawBuffersWEBGL'](n, bufs); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function __webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function __webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function __webgl_enable_WEBGL_multi_draw(ctx) {\r\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\r\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\r\n    }\r\n  \r\n  var GL = {counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode) {\r\n        if (!GL.lastError) {\r\n          GL.lastError = errorCode;\r\n        }\r\n      },getNewId:function(table) {\r\n        var ret = GL.counter++;\r\n        for (var i = table.length; i < ret; i++) {\r\n          table[i] = null;\r\n        }\r\n        return ret;\r\n      },MAX_TEMP_BUFFER_SIZE:2097152,numTempVertexBuffersPerSize:64,log2ceilLookup:function(i) {\r\n        return 32 - Math.clz32(i === 0 ? 0 : i - 1);\r\n      },generateTempBuffers:function(quads, context) {\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        context.tempVertexBufferCounters1 = [];\r\n        context.tempVertexBufferCounters2 = [];\r\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\r\n        context.tempVertexBuffers1 = [];\r\n        context.tempVertexBuffers2 = [];\r\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\r\n        context.tempIndexBuffers = [];\r\n        context.tempIndexBuffers.length = largestIndex+1;\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          context.tempIndexBuffers[i] = null; // Created on-demand\r\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\r\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\r\n          context.tempVertexBuffers1[i] = [];\r\n          context.tempVertexBuffers2[i] = [];\r\n          var ringbuffer1 = context.tempVertexBuffers1[i];\r\n          var ringbuffer2 = context.tempVertexBuffers2[i];\r\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\r\n          for (var j = 0; j < ringbufferLength; ++j) {\r\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\r\n          }\r\n        }\r\n  \r\n        if (quads) {\r\n          // GL_QUAD indexes can be precalculated\r\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\r\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\r\n          var quadIndexes = new Uint16Array(numIndexes);\r\n          var i = 0, v = 0;\r\n          while (1) {\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+1;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+3;\r\n            if (i >= numIndexes) break;\r\n            v += 4;\r\n          }\r\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n        }\r\n      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\r\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\r\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\r\n        var vbo = ringbuffer[nextFreeBufferIndex];\r\n        if (vbo) {\r\n          return vbo;\r\n        }\r\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\r\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\r\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\r\n        return ringbuffer[nextFreeBufferIndex];\r\n      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\r\n        if (ibo) {\r\n          return ibo;\r\n        }\r\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\r\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\r\n        return GL.currentContext.tempIndexBuffers[idx];\r\n      },newRenderingFrameStarted:function newRenderingFrameStarted() {\r\n        if (!GL.currentContext) {\r\n          return;\r\n        }\r\n        var vb = GL.currentContext.tempVertexBuffers1;\r\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\r\n        GL.currentContext.tempVertexBuffers2 = vb;\r\n        vb = GL.currentContext.tempVertexBufferCounters1;\r\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\r\n        GL.currentContext.tempVertexBufferCounters2 = vb;\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\r\n        }\r\n      },getSource:function(shader, count, string, length) {\r\n        var source = '';\r\n        for (var i = 0; i < count; ++i) {\r\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\r\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\r\n        }\r\n        return source;\r\n      },calcBufLength:function calcBufLength(size, type, stride, count) {\r\n        if (stride > 0) {\r\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\r\n        }\r\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\r\n        return size * typeSize * count;\r\n      },usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\r\n        GL.resetBufferBinding = false;\r\n  \r\n        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib\r\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\r\n          var cb = GL.currentContext.clientBuffers[i];\r\n          if (!cb.clientside || !cb.enabled) continue;\r\n  \r\n          GL.resetBufferBinding = true;\r\n  \r\n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\r\n          var buf = GL.getTempVertexBuffer(size);\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\r\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\r\n                                   0,\r\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\r\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\r\n        }\r\n      },postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\r\n        if (GL.resetBufferBinding) {\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\r\n        }\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) {\r\n  \r\n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,\r\n        // calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'\r\n        // context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and\r\n        // https://github.com/emscripten-core/emscripten/issues/13295.\r\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.\r\n        if (!canvas.getContextSafariWebGL2Fixed) {\r\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\r\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\r\n          function fixedGetContext(ver, attrs) {\r\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\r\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\r\n          }\r\n          canvas.getContext = fixedGetContext;\r\n        }\r\n  \r\n        var ctx =\r\n          (webGLContextAttributes.majorVersion > 1)\r\n          ?\r\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\r\n          :\r\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\r\n            // https://caniuse.com/#feat=webgl\r\n            );\r\n  \r\n        if (!ctx) return 0;\r\n  \r\n        var handle = GL.registerContext(ctx, webGLContextAttributes);\r\n  \r\n        return handle;\r\n      },registerContext:function(ctx, webGLContextAttributes) {\r\n        // without pthreads a context is just an integer ID\r\n        var handle = GL.getNewId(GL.contexts);\r\n  \r\n        var context = {\r\n          handle: handle,\r\n          attributes: webGLContextAttributes,\r\n          version: webGLContextAttributes.majorVersion,\r\n          GLctx: ctx\r\n        };\r\n  \r\n        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.\r\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\r\n        GL.contexts[handle] = context;\r\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\r\n          GL.initExtensions(context);\r\n        }\r\n  \r\n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\r\n        context.clientBuffers = [];\r\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\r\n          context.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0, vertexAttribPointerAdaptor: null };\r\n        }\r\n  \r\n        GL.generateTempBuffers(false, context);\r\n  \r\n        return handle;\r\n      },makeContextCurrent:function(contextHandle) {\r\n  \r\n        GL.currentContext = GL.contexts[contextHandle]; // Active Emscripten GL layer context object.\r\n        Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx; // Active WebGL context object.\r\n        return !(contextHandle && !GLctx);\r\n      },getContext:function(contextHandle) {\r\n        return GL.contexts[contextHandle];\r\n      },deleteContext:function(contextHandle) {\r\n        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\r\n        if (typeof JSEvents == 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.\r\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.\r\n        GL.contexts[contextHandle] = null;\r\n      },initExtensions:function(context) {\r\n        // If this function is called without a specific context object, init the extensions of the currently active context.\r\n        if (!context) context = GL.currentContext;\r\n  \r\n        if (context.initExtensionsDone) return;\r\n        context.initExtensionsDone = true;\r\n  \r\n        var GLctx = context.GLctx;\r\n  \r\n        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist.\r\n  \r\n        // Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)\r\n        __webgl_enable_ANGLE_instanced_arrays(GLctx);\r\n        __webgl_enable_OES_vertex_array_object(GLctx);\r\n        __webgl_enable_WEBGL_draw_buffers(GLctx);\r\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\r\n        __webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\r\n        __webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\r\n  \r\n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\r\n        // that's based on core APIs, and exposes only the queryCounterEXT()\r\n        // entrypoint.\r\n        if (context.version >= 2) {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\n        }\r\n  \r\n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\r\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\r\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\r\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\r\n        {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\r\n        }\r\n  \r\n        __webgl_enable_WEBGL_multi_draw(GLctx);\r\n  \r\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts.forEach(function(ext) {\r\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.\r\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\r\n            // Call .getExtension() to enable that extension permanently.\r\n            GLctx.getExtension(ext);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  function _eglCreateContext(display, config, hmm, contextAttribs) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n  \r\n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\r\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\r\n      var glesContextVersion = 1;\r\n      for (;;) {\r\n        var param = HEAP32[((contextAttribs)>>2)];\r\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\r\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\r\n        } else if (param == 0x3038 /*EGL_NONE*/) {\r\n          break;\r\n        } else {\r\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\r\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\r\n          return 0;\r\n        }\r\n        contextAttribs += 8;\r\n      }\r\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n  \r\n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\r\n      EGL.contextAttributes.minorVersion = 0;\r\n  \r\n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\r\n  \r\n      if (EGL.context != 0) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n  \r\n        // Run callbacks so that GL emulation works\r\n        GL.makeContextCurrent(EGL.context);\r\n        Module.useWebGL = true;\r\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n  \r\n        // Note: This function only creates a context, but it shall not make it active.\r\n        GL.makeContextCurrent(null);\r\n        return 62004; // Magic ID for Emscripten EGLContext\r\n      } else {\r\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n    }\r\n\r\n  function _eglCreateWindowSurface(display, config, win, attrib_list) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      // TODO: Examine attrib_list! Parameters that can be present there are:\r\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\r\n      // - EGL_VG_COLORSPACE (can't be set)\r\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 62006; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  \r\n  function _eglDestroyContext(display, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.deleteContext(EGL.context);\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.currentContext == context) {\r\n        EGL.currentContext = 0;\r\n      }\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  function _eglDestroySurface(display, surface) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 1;\r\n      }\r\n      if (EGL.currentReadSurface == surface) {\r\n        EGL.currentReadSurface = 0;\r\n      }\r\n      if (EGL.currentDrawSurface == surface) {\r\n        EGL.currentDrawSurface = 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  function _eglGetConfigAttrib(display, config, attribute, value) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      if (!value) {\r\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n        return 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      switch (attribute) {\r\n      case 0x3020: // EGL_BUFFER_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\r\n        return 1;\r\n      case 0x3021: // EGL_ALPHA_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\r\n        return 1;\r\n      case 0x3022: // EGL_BLUE_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3023: // EGL_GREEN_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3024: // EGL_RED_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3025: // EGL_DEPTH_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\r\n        return 1;\r\n      case 0x3026: // EGL_STENCIL_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\r\n        return 1;\r\n      case 0x3027: // EGL_CONFIG_CAVEAT\r\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3028: // EGL_CONFIG_ID\r\n        HEAP32[((value)>>2)] = 62002;\r\n        return 1;\r\n      case 0x3029: // EGL_LEVEL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\r\n        HEAP32[((value)>>2)] = 16777216;\r\n        return 1;\r\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302D: // EGL_NATIVE_RENDERABLE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3031: // EGL_SAMPLES\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\r\n        return 1;\r\n      case 0x3032: // EGL_SAMPLE_BUFFERS\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\r\n        return 1;\r\n      case 0x3033: // EGL_SURFACE_TYPE\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3034: // EGL_TRANSPARENT_TYPE\r\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\r\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\r\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\r\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\r\n        HEAP32[((value)>>2)] = -1;\r\n        return 1;\r\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\r\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 1;\r\n        return 1;\r\n      case 0x303D: // EGL_LUMINANCE_SIZE\r\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\r\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\r\n        HEAP32[((value)>>2)] = 0x308E;\r\n        return 1;\r\n      case 0x3040: // EGL_RENDERABLE_TYPE\r\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3042: // EGL_CONFORMANT\r\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      default:\r\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n  function _eglGetDisplay(nativeDisplayType) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      // Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user\r\n      //       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported\r\n      //       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.\r\n      // Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation\r\n      // \"emulates\" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.\r\n      // Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.\r\n  \r\n  //    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {\r\n          return 62000; // Magic ID for Emscripten 'default display'\r\n  //    }\r\n  //    else\r\n  //      return 0; // EGL_NO_DISPLAY\r\n    }\r\n\r\n  function _eglGetError() {\r\n      return EGL.errorCode;\r\n    }\r\n\r\n  function _eglInitialize(display, majorVersion, minorVersion) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (majorVersion) {\r\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\r\n      }\r\n      if (minorVersion) {\r\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\r\n      }\r\n      EGL.defaultDisplayInitialized = true;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  function _eglMakeCurrent(display, draw, read, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0 /* EGL_FALSE */;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      if (context != 0 && context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.makeContextCurrent(context ? EGL.context : null);\r\n  \r\n      EGL.currentContext = context;\r\n      EGL.currentDrawSurface = draw;\r\n      EGL.currentReadSurface = read;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  \r\n  function _eglQueryString(display, name) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\r\n      var ret;\r\n      switch (name) {\r\n        case 0x3053 /* EGL_VENDOR */: ret = allocateUTF8(\"Emscripten\"); break;\r\n        case 0x3054 /* EGL_VERSION */: ret = allocateUTF8(\"1.4 Emscripten EGL\"); break;\r\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = allocateUTF8(\"\"); break; // Currently not supporting any EGL extensions.\r\n        case 0x308D /* EGL_CLIENT_APIS */: ret = allocateUTF8(\"OpenGL_ES\"); break;\r\n        default:\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n      }\r\n      EGL.stringCache[name] = ret;\r\n      return ret;\r\n    }\r\n\r\n  function _eglSwapBuffers() {\r\n  \r\n      if (!EGL.defaultDisplayInitialized) {\r\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\r\n      } else if (!Module.ctx) {\r\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\r\n      } else if (Module.ctx.isContextLost()) {\r\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\r\n      } else {\r\n        // According to documentation this does an implicit flush.\r\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\r\n        // the flush was removed since this _may_ result in slowing code down.\r\n        //_glFlush();\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1 /* EGL_TRUE */;\r\n      }\r\n      return 0 /* EGL_FALSE */;\r\n    }\r\n\r\n  \r\n  function _eglSwapInterval(display, interval) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (interval == 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 0);\r\n      else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, interval);\r\n  \r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  function _eglTerminate(display) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      EGL.currentContext = 0;\r\n      EGL.currentReadSurface = 0;\r\n      EGL.currentDrawSurface = 0;\r\n      EGL.defaultDisplayInitialized = false;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  function _eglWaitClient() {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n  var _eglWaitGL = _eglWaitClient;\r\n\r\n  function _eglWaitNative(nativeEngineId) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  var readEmAsmArgsArray = [];\r\n  function readEmAsmArgs(sigPtr, buf) {\r\n      readEmAsmArgsArray.length = 0;\r\n      var ch;\r\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\r\n      // index into HEAP32.\r\n      buf >>= 2;\r\n      while (ch = HEAPU8[sigPtr++]) {\r\n        // Floats are always passed as doubles, and doubles and int64s take up 8\r\n        // bytes (two 32-bit slots) in memory, align reads to these:\r\n        buf += (ch != 105/*i*/) & buf;\r\n        readEmAsmArgsArray.push(\r\n          ch == 105/*i*/ ? HEAP32[buf] :\r\n         HEAPF64[buf++ >> 1]\r\n        );\r\n        ++buf;\r\n      }\r\n      return readEmAsmArgsArray;\r\n    }\r\n  function runEmAsmFunction(code, sigPtr, argbuf) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int(code, sigPtr, argbuf) {\r\n      return runEmAsmFunction(code, sigPtr, argbuf);\r\n    }\r\n\r\n  function runMainThreadEmAsm(code, sigPtr, argbuf, sync) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int_sync_on_main_thread(code, sigPtr, argbuf) {\r\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\r\n    }\r\n\r\n  function _emscripten_date_now() {\r\n      return Date.now();\r\n    }\r\n\r\n  function withStackSave(f) {\r\n      var stack = stackSave();\r\n      var ret = f();\r\n      stackRestore(stack);\r\n      return ret;\r\n    }\r\n  var JSEvents = {inEventHandler:0,removeAllEventListeners:function() {\r\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\r\n          JSEvents._removeHandler(i);\r\n        }\r\n        JSEvents.eventHandlers = [];\r\n        JSEvents.deferredCalls = [];\r\n      },registerRemoveEventListeners:function() {\r\n        if (!JSEvents.removeEventListenersRegistered) {\r\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\r\n          JSEvents.removeEventListenersRegistered = true;\r\n        }\r\n      },deferredCalls:[],deferCall:function(targetFunction, precedence, argsList) {\r\n        function arraysHaveEqualContent(arrA, arrB) {\r\n          if (arrA.length != arrB.length) return false;\r\n  \r\n          for (var i in arrA) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n          }\r\n          return true;\r\n        }\r\n        // Test if the given call was already queued, and if so, don't add it again.\r\n        for (var i in JSEvents.deferredCalls) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\r\n            return;\r\n          }\r\n        }\r\n        JSEvents.deferredCalls.push({\r\n          targetFunction: targetFunction,\r\n          precedence: precedence,\r\n          argsList: argsList\r\n        });\r\n  \r\n        JSEvents.deferredCalls.sort(function(x,y) { return x.precedence < y.precedence; });\r\n      },removeDeferredCalls:function(targetFunction) {\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\r\n            JSEvents.deferredCalls.splice(i, 1);\r\n            --i;\r\n          }\r\n        }\r\n      },canPerformEventHandlerRequests:function() {\r\n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\r\n      },runDeferredCalls:function() {\r\n        if (!JSEvents.canPerformEventHandlerRequests()) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          JSEvents.deferredCalls.splice(i, 1);\r\n          --i;\r\n          call.targetFunction.apply(null, call.argsList);\r\n        }\r\n      },eventHandlers:[],removeAllHandlersOnTarget:function(target, eventTypeString) {\r\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n          if (JSEvents.eventHandlers[i].target == target && \r\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\r\n             JSEvents._removeHandler(i--);\r\n           }\r\n        }\r\n      },_removeHandler:function(i) {\r\n        var h = JSEvents.eventHandlers[i];\r\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\r\n        JSEvents.eventHandlers.splice(i, 1);\r\n      },registerOrRemoveHandler:function(eventHandler) {\r\n        var jsEventHandler = function jsEventHandler(event) {\r\n          // Increment nesting count for the event handler.\r\n          ++JSEvents.inEventHandler;\r\n          JSEvents.currentEventHandler = eventHandler;\r\n          // Process any old deferred calls the user has placed.\r\n          JSEvents.runDeferredCalls();\r\n          // Process the actual event, calls back to user C code handler.\r\n          eventHandler.handlerFunc(event);\r\n          // Process any new deferred calls that were placed right now from this event handler.\r\n          JSEvents.runDeferredCalls();\r\n          // Out of event handler - restore nesting count.\r\n          --JSEvents.inEventHandler;\r\n        };\r\n        \r\n        if (eventHandler.callbackfunc) {\r\n          eventHandler.eventListenerFunc = jsEventHandler;\r\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\r\n          JSEvents.eventHandlers.push(eventHandler);\r\n          JSEvents.registerRemoveEventListeners();\r\n        } else {\r\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\r\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\r\n               JSEvents._removeHandler(i--);\r\n             }\r\n          }\r\n        }\r\n      },getNodeNameForTarget:function(target) {\r\n        if (!target) return '';\r\n        if (target == window) return '#window';\r\n        if (target == screen) return '#screen';\r\n        return (target && target.nodeName) ? target.nodeName : '';\r\n      },fullscreenEnabled:function() {\r\n        return document.fullscreenEnabled\r\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\r\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\r\n        || document.webkitFullscreenEnabled\r\n         ;\r\n      }};\r\n  \r\n  var currentFullscreenStrategy = {};\r\n  \r\n  \r\n  \r\n  \r\n  function maybeCStringToJsString(cString) {\r\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\r\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\r\n      // In other words, if cString > 2 then it's a pointer to a valid place in\r\n      // memory, and points to a C string.\r\n      return cString > 2 ? UTF8ToString(cString) : cString;\r\n    }\r\n  \r\n  var specialHTMLTargets = [0, document, window];\r\n  function findEventTarget(target) {\r\n      target = maybeCStringToJsString(target);\r\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\r\n      return domElement;\r\n    }\r\n  function findCanvasEventTarget(target) { return findEventTarget(target); }\r\n  function _emscripten_get_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      HEAP32[((width)>>2)] = canvas.width;\r\n      HEAP32[((height)>>2)] = canvas.height;\r\n    }\r\n  \r\n  function getCanvasElementSize(target) {\r\n      return withStackSave(function() {\r\n        var w = stackAlloc(8);\r\n        var h = w + 4;\r\n  \r\n        var targetInt = stackAlloc(target.id.length+1);\r\n        stringToUTF8(target.id, targetInt, target.id.length+1);\r\n        var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\r\n        var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\r\n        return size;\r\n      });\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return 0;\r\n    }\r\n  \r\n  function setCanvasElementSize(target, width, height) {\r\n      if (!target.controlTransferredOffscreen) {\r\n        target.width = width;\r\n        target.height = height;\r\n      } else {\r\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\r\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\r\n        withStackSave(function() {\r\n          var targetInt = stackAlloc(target.id.length+1);\r\n          stringToUTF8(target.id, targetInt, target.id.length+1);\r\n          _emscripten_set_canvas_element_size(targetInt, width, height);\r\n        });\r\n      }\r\n    }\r\n  function registerRestoreOldStyle(canvas) {\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var oldWidth = canvasSize[0];\r\n      var oldHeight = canvasSize[1];\r\n      var oldCssWidth = canvas.style.width;\r\n      var oldCssHeight = canvas.style.height;\r\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\r\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\r\n      // Firefox always has black background color.\r\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\r\n      var oldPaddingRight = canvas.style.paddingRight;\r\n      var oldPaddingTop = canvas.style.paddingTop;\r\n      var oldPaddingBottom = canvas.style.paddingBottom;\r\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\r\n      var oldMarginRight = canvas.style.marginRight;\r\n      var oldMarginTop = canvas.style.marginTop;\r\n      var oldMarginBottom = canvas.style.marginBottom;\r\n      var oldDocumentBodyMargin = document.body.style.margin;\r\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\r\n      var oldDocumentScroll = document.body.scroll; // IE\r\n      var oldImageRendering = canvas.style.imageRendering;\r\n  \r\n      function restoreOldStyle() {\r\n        var fullscreenElement = document.fullscreenElement\r\n          || document.webkitFullscreenElement\r\n          ;\r\n        if (!fullscreenElement) {\r\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\r\n  \r\n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\r\n  \r\n          setCanvasElementSize(canvas, oldWidth, oldHeight);\r\n  \r\n          canvas.style.width = oldCssWidth;\r\n          canvas.style.height = oldCssHeight;\r\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\r\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\r\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\r\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\r\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\r\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\r\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\r\n          canvas.style.paddingRight = oldPaddingRight;\r\n          canvas.style.paddingTop = oldPaddingTop;\r\n          canvas.style.paddingBottom = oldPaddingBottom;\r\n          canvas.style.marginLeft = oldMarginLeft; // IE11\r\n          canvas.style.marginRight = oldMarginRight;\r\n          canvas.style.marginTop = oldMarginTop;\r\n          canvas.style.marginBottom = oldMarginBottom;\r\n          document.body.style.margin = oldDocumentBodyMargin;\r\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\r\n          document.body.scroll = oldDocumentScroll; // IE\r\n          canvas.style.imageRendering = oldImageRendering;\r\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\r\n  \r\n          if (currentFullscreenStrategy.canvasResizedCallback) {\r\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n          }\r\n        }\r\n      }\r\n      document.addEventListener('fullscreenchange', restoreOldStyle);\r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  \r\n  function setLetterbox(element, topBottom, leftRight) {\r\n        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\r\n        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\r\n        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\r\n    }\r\n  \r\n  \r\n  function getBoundingClientRect(e) {\r\n      return specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\r\n    }\r\n  function JSEvents_resizeCanvasForFullscreen(target, strategy) {\r\n      var restoreOldStyle = registerRestoreOldStyle(target);\r\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\r\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\r\n      var rect = getBoundingClientRect(target);\r\n      var windowedCssWidth = rect.width;\r\n      var windowedCssHeight = rect.height;\r\n      var canvasSize = getCanvasElementSize(target);\r\n      var windowedRttWidth = canvasSize[0];\r\n      var windowedRttHeight = canvasSize[1];\r\n  \r\n      if (strategy.scaleMode == 3) {\r\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\r\n        cssWidth = windowedCssWidth;\r\n        cssHeight = windowedCssHeight;\r\n      } else if (strategy.scaleMode == 2) {\r\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\r\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\r\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\r\n          cssHeight = desiredCssHeight;\r\n        } else {\r\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\r\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\r\n          cssWidth = desiredCssWidth;\r\n        }\r\n      }\r\n  \r\n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\r\n      // padding a default white color. Do it only if user has not customized their own background color.\r\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\r\n      // IE11 does the same, but requires the color to be set in the document body.\r\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\r\n      // Firefox always shows black letterboxes independent of style color.\r\n  \r\n      target.style.width = cssWidth + 'px';\r\n      target.style.height = cssHeight + 'px';\r\n  \r\n      if (strategy.filteringMode == 1) {\r\n        target.style.imageRendering = 'optimizeSpeed';\r\n        target.style.imageRendering = '-moz-crisp-edges';\r\n        target.style.imageRendering = '-o-crisp-edges';\r\n        target.style.imageRendering = '-webkit-optimize-contrast';\r\n        target.style.imageRendering = 'optimize-contrast';\r\n        target.style.imageRendering = 'crisp-edges';\r\n        target.style.imageRendering = 'pixelated';\r\n      }\r\n  \r\n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\r\n      if (strategy.canvasResolutionScaleMode != 0) {\r\n        var newWidth = (cssWidth * dpiScale)|0;\r\n        var newHeight = (cssHeight * dpiScale)|0;\r\n        setCanvasElementSize(target, newWidth, newHeight);\r\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\r\n      }\r\n      return restoreOldStyle;\r\n    }\r\n  function JSEvents_requestFullscreen(target, strategy) {\r\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\r\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\r\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n      }\r\n  \r\n      if (target.requestFullscreen) {\r\n        target.requestFullscreen();\r\n      } else if (target.webkitRequestFullscreen) {\r\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else {\r\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\r\n      }\r\n  \r\n      currentFullscreenStrategy = strategy;\r\n  \r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n  \r\n  function _emscripten_exit_fullscreen() {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\r\n  \r\n      var d = specialHTMLTargets[1];\r\n      if (d.exitFullscreen) {\r\n        d.fullscreenElement && d.exitFullscreen();\r\n      } else if (d.webkitExitFullscreen) {\r\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\r\n      } else {\r\n        return -1;\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function requestPointerLock(target) {\r\n      if (target.requestPointerLock) {\r\n        target.requestPointerLock();\r\n      } else {\r\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\r\n        // or if the whole browser just doesn't support the feature.\r\n        if (document.body.requestPointerLock\r\n          ) {\r\n          return -3;\r\n        }\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  function _emscripten_exit_pointerlock() {\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(requestPointerLock);\r\n  \r\n      if (document.exitPointerLock) {\r\n        document.exitPointerLock();\r\n      } else {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_get_device_pixel_ratio() {\r\n      return devicePixelRatio;\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_get_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAPF64[((width)>>3)] = rect.width;\r\n      HEAPF64[((height)>>3)] = rect.height;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillGamepadEventData(eventStruct, e) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\r\n      for (var i = 0; i < e.axes.length; ++i) {\r\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\r\n        } else {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\r\n        }\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\r\n        } else {\r\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\r\n          /** @suppress {checkTypes} */\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\r\n        }\r\n      }\r\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\r\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\r\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\r\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\r\n      stringToUTF8(e.id, eventStruct + 1304, 64);\r\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\r\n    }\r\n  function _emscripten_get_gamepad_status(index, gamepadState) {\r\n  \r\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\r\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\r\n  \r\n      // NO_DATA is returned on a Gamepad index that was removed.\r\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\r\n      // This is because gamepads must keep their original position in the array.\r\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\r\n      if (!JSEvents.lastGamepadState[index]) return -7;\r\n  \r\n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _emscripten_get_num_gamepads() {\r\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\r\n      // Otherwise the following line will throw an exception.\r\n      return JSEvents.lastGamepadState.length;\r\n    }\r\n\r\n  function _emscripten_get_screen_size(width, height) {\r\n      HEAP32[((width)>>2)] = screen.width;\r\n      HEAP32[((height)>>2)] = screen.height;\r\n    }\r\n\r\n  function _emscripten_glActiveTexture(x0) { GLctx['activeTexture'](x0) }\r\n\r\n  function _emscripten_glAttachShader(program, shader) {\r\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n\r\n  function _emscripten_glBeginQuery(target, id) {\r\n      GLctx['beginQuery'](target, GL.queries[id]);\r\n    }\r\n\r\n  function _emscripten_glBeginQueryEXT(target, id) {\r\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\r\n    }\r\n\r\n  function _emscripten_glBeginTransformFeedback(x0) { GLctx['beginTransformFeedback'](x0) }\r\n\r\n  function _emscripten_glBindAttribLocation(program, index, name) {\r\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\r\n    }\r\n\r\n  function _emscripten_glBindBuffer(target, buffer) {\r\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\r\n        GLctx.currentArrayBufferBinding = buffer;\r\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\r\n        GLctx.currentElementArrayBufferBinding = buffer;\r\n      }\r\n  \r\n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\r\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is\r\n        // the proper API function to call.\r\n        GLctx.currentPixelPackBufferBinding = buffer;\r\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\r\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\r\n        // use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelUnpackBufferBinding = buffer;\r\n      }\r\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\r\n    }\r\n\r\n  function _emscripten_glBindBufferBase(target, index, buffer) {\r\n      GLctx['bindBufferBase'](target, index, GL.buffers[buffer]);\r\n    }\r\n\r\n  function _emscripten_glBindBufferRange(target, index, buffer, offset, ptrsize) {\r\n      GLctx['bindBufferRange'](target, index, GL.buffers[buffer], offset, ptrsize);\r\n    }\r\n\r\n  function _emscripten_glBindFramebuffer(target, framebuffer) {\r\n  \r\n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\r\n  \r\n    }\r\n\r\n  function _emscripten_glBindRenderbuffer(target, renderbuffer) {\r\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\r\n    }\r\n\r\n  function _emscripten_glBindSampler(unit, sampler) {\r\n      GLctx['bindSampler'](unit, GL.samplers[sampler]);\r\n    }\r\n\r\n  function _emscripten_glBindTexture(target, texture) {\r\n      GLctx.bindTexture(target, GL.textures[texture]);\r\n    }\r\n\r\n  function _emscripten_glBindTransformFeedback(target, id) {\r\n      GLctx['bindTransformFeedback'](target, GL.transformFeedbacks[id]);\r\n    }\r\n\r\n  function _emscripten_glBindVertexArray(vao) {\r\n      GLctx['bindVertexArray'](GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    }\r\n\r\n  function _emscripten_glBindVertexArrayOES(vao) {\r\n      GLctx['bindVertexArray'](GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    }\r\n\r\n  function _emscripten_glBlendColor(x0, x1, x2, x3) { GLctx['blendColor'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glBlendEquation(x0) { GLctx['blendEquation'](x0) }\r\n\r\n  function _emscripten_glBlendEquationSeparate(x0, x1) { GLctx['blendEquationSeparate'](x0, x1) }\r\n\r\n  function _emscripten_glBlendFunc(x0, x1) { GLctx['blendFunc'](x0, x1) }\r\n\r\n  function _emscripten_glBlendFuncSeparate(x0, x1, x2, x3) { GLctx['blendFuncSeparate'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx['blitFramebuffer'](x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\r\n\r\n  function _emscripten_glBufferData(target, size, data, usage) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        // If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would\r\n        // not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a\r\n        // backing storage of zero bytes.\r\n        if (data && size) {\r\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\r\n        } else {\r\n          GLctx.bufferData(target, size, usage);\r\n        }\r\n      } else {\r\n        // N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid\r\n        // randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.\r\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\r\n      }\r\n    }\r\n\r\n  function _emscripten_glBufferSubData(target, offset, size, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\r\n        return;\r\n      }\r\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\r\n    }\r\n\r\n  function _emscripten_glCheckFramebufferStatus(x0) { return GLctx['checkFramebufferStatus'](x0) }\r\n\r\n  function _emscripten_glClear(x0) { GLctx['clear'](x0) }\r\n\r\n  function _emscripten_glClearBufferfi(x0, x1, x2, x3) { GLctx['clearBufferfi'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glClearBufferfv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx['clearBufferfv'](buffer, drawbuffer, HEAPF32, value>>2);\r\n    }\r\n\r\n  function _emscripten_glClearBufferiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx['clearBufferiv'](buffer, drawbuffer, HEAP32, value>>2);\r\n    }\r\n\r\n  function _emscripten_glClearBufferuiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx['clearBufferuiv'](buffer, drawbuffer, HEAPU32, value>>2);\r\n    }\r\n\r\n  function _emscripten_glClearColor(x0, x1, x2, x3) { GLctx['clearColor'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glClearDepthf(x0) { GLctx['clearDepth'](x0) }\r\n\r\n  function _emscripten_glClearStencil(x0) { GLctx['clearStencil'](x0) }\r\n\r\n  function convertI32PairToI53(lo, hi) {\r\n      return (lo >>> 0) + hi * 4294967296;\r\n    }\r\n  function _emscripten_glClientWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\r\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\r\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\r\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n\r\n  function _emscripten_glColorMask(red, green, blue, alpha) {\r\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\r\n    }\r\n\r\n  function _emscripten_glCompileShader(shader) {\r\n      GLctx.compileShader(GL.shaders[shader]);\r\n    }\r\n\r\n  function _emscripten_glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx['compressedTexImage2D'](target, level, internalFormat, width, height, border, imageSize, data);\r\n        } else {\r\n          GLctx['compressedTexImage2D'](target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx['compressedTexImage2D'](target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n\r\n  function _emscripten_glCompressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx['compressedTexImage3D'](target, level, internalFormat, width, height, depth, border, imageSize, data);\r\n      } else {\r\n        GLctx['compressedTexImage3D'](target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n\r\n  function _emscripten_glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx['compressedTexSubImage2D'](target, level, xoffset, yoffset, width, height, format, imageSize, data);\r\n        } else {\r\n          GLctx['compressedTexSubImage2D'](target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx['compressedTexSubImage2D'](target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n\r\n  function _emscripten_glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx['compressedTexSubImage3D'](target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\r\n      } else {\r\n        GLctx['compressedTexSubImage3D'](target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n\r\n  function _emscripten_glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx['copyBufferSubData'](x0, x1, x2, x3, x4) }\r\n\r\n  function _emscripten_glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx['copyTexImage2D'](x0, x1, x2, x3, x4, x5, x6, x7) }\r\n\r\n  function _emscripten_glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx['copyTexSubImage2D'](x0, x1, x2, x3, x4, x5, x6, x7) }\r\n\r\n  function _emscripten_glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx['copyTexSubImage3D'](x0, x1, x2, x3, x4, x5, x6, x7, x8) }\r\n\r\n  function _emscripten_glCreateProgram() {\r\n      var id = GL.getNewId(GL.programs);\r\n      var program = GLctx.createProgram();\r\n      // Store additional information needed for each shader program:\r\n      program.name = id;\r\n      // Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\r\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\r\n      program.uniformIdCounter = 1;\r\n      GL.programs[id] = program;\r\n      return id;\r\n    }\r\n\r\n  function _emscripten_glCreateShader(shaderType) {\r\n      var id = GL.getNewId(GL.shaders);\r\n      GL.shaders[id] = GLctx.createShader(shaderType);\r\n  \r\n      return id;\r\n    }\r\n\r\n  function _emscripten_glCullFace(x0) { GLctx['cullFace'](x0) }\r\n\r\n  function _emscripten_glDeleteBuffers(n, buffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\r\n        var buffer = GL.buffers[id];\r\n  \r\n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\r\n        // correspond to existing buffer objects.\"\r\n        if (!buffer) continue;\r\n  \r\n        GLctx.deleteBuffer(buffer);\r\n        buffer.name = 0;\r\n        GL.buffers[id] = null;\r\n  \r\n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\r\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\r\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\r\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteFramebuffers(n, framebuffers) {\r\n      for (var i = 0; i < n; ++i) {\r\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\r\n        var framebuffer = GL.framebuffers[id];\r\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\r\n        GLctx.deleteFramebuffer(framebuffer);\r\n        framebuffer.name = 0;\r\n        GL.framebuffers[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteProgram(id) {\r\n      if (!id) return;\r\n      var program = GL.programs[id];\r\n      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteProgram(program);\r\n      program.name = 0;\r\n      GL.programs[id] = null;\r\n    }\r\n\r\n  function _emscripten_glDeleteQueries(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx['deleteQuery'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteRenderbuffers(n, renderbuffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\r\n        var renderbuffer = GL.renderbuffers[id];\r\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\r\n        GLctx.deleteRenderbuffer(renderbuffer);\r\n        renderbuffer.name = 0;\r\n        GL.renderbuffers[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteSamplers(n, samplers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\r\n        var sampler = GL.samplers[id];\r\n        if (!sampler) continue;\r\n        GLctx['deleteSampler'](sampler);\r\n        sampler.name = 0;\r\n        GL.samplers[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteShader(id) {\r\n      if (!id) return;\r\n      var shader = GL.shaders[id];\r\n      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteShader(shader);\r\n      GL.shaders[id] = null;\r\n    }\r\n\r\n  function _emscripten_glDeleteSync(id) {\r\n      if (!id) return;\r\n      var sync = GL.syncs[id];\r\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteSync(sync);\r\n      sync.name = 0;\r\n      GL.syncs[id] = null;\r\n    }\r\n\r\n  function _emscripten_glDeleteTextures(n, textures) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((textures)+(i*4))>>2)];\r\n        var texture = GL.textures[id];\r\n        if (!texture) continue; // GL spec: \"glDeleteTextures silently ignores 0s and names that do not correspond to existing textures\".\r\n        GLctx.deleteTexture(texture);\r\n        texture.name = 0;\r\n        GL.textures[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteTransformFeedbacks(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var transformFeedback = GL.transformFeedbacks[id];\r\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx['deleteTransformFeedback'](transformFeedback);\r\n        transformFeedback.name = 0;\r\n        GL.transformFeedbacks[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteVertexArrays(n, vaos) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx['deleteVertexArray'](GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDeleteVertexArraysOES(n, vaos) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx['deleteVertexArray'](GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDepthFunc(x0) { GLctx['depthFunc'](x0) }\r\n\r\n  function _emscripten_glDepthMask(flag) {\r\n      GLctx.depthMask(!!flag);\r\n    }\r\n\r\n  function _emscripten_glDepthRangef(x0, x1) { GLctx['depthRange'](x0, x1) }\r\n\r\n  function _emscripten_glDetachShader(program, shader) {\r\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n\r\n  function _emscripten_glDisable(x0) { GLctx['disable'](x0) }\r\n\r\n  function _emscripten_glDisableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = false;\r\n      GLctx.disableVertexAttribArray(index);\r\n    }\r\n\r\n  function _emscripten_glDrawArrays(mode, first, count) {\r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\r\n  \r\n      GLctx.drawArrays(mode, first, count);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings();\r\n    }\r\n\r\n  function _emscripten_glDrawArraysInstanced(mode, first, count, primcount) {\r\n      GLctx['drawArraysInstanced'](mode, first, count, primcount);\r\n    }\r\n\r\n  function _emscripten_glDrawArraysInstancedANGLE(mode, first, count, primcount) {\r\n      GLctx['drawArraysInstanced'](mode, first, count, primcount);\r\n    }\r\n\r\n  function _emscripten_glDrawArraysInstancedARB(mode, first, count, primcount) {\r\n      GLctx['drawArraysInstanced'](mode, first, count, primcount);\r\n    }\r\n\r\n  function _emscripten_glDrawArraysInstancedEXT(mode, first, count, primcount) {\r\n      GLctx['drawArraysInstanced'](mode, first, count, primcount);\r\n    }\r\n\r\n  function _emscripten_glDrawArraysInstancedNV(mode, first, count, primcount) {\r\n      GLctx['drawArraysInstanced'](mode, first, count, primcount);\r\n    }\r\n\r\n  var tempFixedLengthArray = [];\r\n  \r\n  function _emscripten_glDrawBuffers(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx['drawBuffers'](bufArray);\r\n    }\r\n\r\n  \r\n  function _emscripten_glDrawBuffersEXT(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx['drawBuffers'](bufArray);\r\n    }\r\n\r\n  \r\n  function _emscripten_glDrawBuffersWEBGL(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx['drawBuffers'](bufArray);\r\n    }\r\n\r\n  function _emscripten_glDrawElements(mode, count, type, indices) {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    }\r\n\r\n  function _emscripten_glDrawElementsInstanced(mode, count, type, indices, primcount) {\r\n      GLctx['drawElementsInstanced'](mode, count, type, indices, primcount);\r\n    }\r\n\r\n  function _emscripten_glDrawElementsInstancedANGLE(mode, count, type, indices, primcount) {\r\n      GLctx['drawElementsInstanced'](mode, count, type, indices, primcount);\r\n    }\r\n\r\n  function _emscripten_glDrawElementsInstancedARB(mode, count, type, indices, primcount) {\r\n      GLctx['drawElementsInstanced'](mode, count, type, indices, primcount);\r\n    }\r\n\r\n  function _emscripten_glDrawElementsInstancedEXT(mode, count, type, indices, primcount) {\r\n      GLctx['drawElementsInstanced'](mode, count, type, indices, primcount);\r\n    }\r\n\r\n  function _emscripten_glDrawElementsInstancedNV(mode, count, type, indices, primcount) {\r\n      GLctx['drawElementsInstanced'](mode, count, type, indices, primcount);\r\n    }\r\n\r\n  function _glDrawElements(mode, count, type, indices) {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    }\r\n  function _emscripten_glDrawRangeElements(mode, start, end, count, type, indices) {\r\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\r\n      // glFuncs[6][1] += ' drawRangeElements';\r\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\r\n      // we work around by ignoring the range.\r\n      _glDrawElements(mode, count, type, indices);\r\n    }\r\n\r\n  function _emscripten_glEnable(x0) { GLctx['enable'](x0) }\r\n\r\n  function _emscripten_glEnableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = true;\r\n      GLctx.enableVertexAttribArray(index);\r\n    }\r\n\r\n  function _emscripten_glEndQuery(x0) { GLctx['endQuery'](x0) }\r\n\r\n  function _emscripten_glEndQueryEXT(target) {\r\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\r\n    }\r\n\r\n  function _emscripten_glEndTransformFeedback() { GLctx['endTransformFeedback']() }\r\n\r\n  function _emscripten_glFenceSync(condition, flags) {\r\n      var sync = GLctx.fenceSync(condition, flags);\r\n      if (sync) {\r\n        var id = GL.getNewId(GL.syncs);\r\n        sync.name = id;\r\n        GL.syncs[id] = sync;\r\n        return id;\r\n      }\r\n      return 0; // Failed to create a sync object\r\n    }\r\n\r\n  function _emscripten_glFinish() { GLctx['finish']() }\r\n\r\n  function _emscripten_glFlush() { GLctx['flush']() }\r\n\r\n  function _emscripten_glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\r\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\r\n                                         GL.renderbuffers[renderbuffer]);\r\n    }\r\n\r\n  function _emscripten_glFramebufferTexture2D(target, attachment, textarget, texture, level) {\r\n      GLctx.framebufferTexture2D(target, attachment, textarget,\r\n                                      GL.textures[texture], level);\r\n    }\r\n\r\n  function _emscripten_glFramebufferTextureLayer(target, attachment, texture, level, layer) {\r\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\r\n    }\r\n\r\n  function _emscripten_glFrontFace(x0) { GLctx['frontFace'](x0) }\r\n\r\n  function __glGenObject(n, buffers, createFunction, objectTable\r\n      ) {\r\n      for (var i = 0; i < n; i++) {\r\n        var buffer = GLctx[createFunction]();\r\n        var id = buffer && GL.getNewId(objectTable);\r\n        if (buffer) {\r\n          buffer.name = id;\r\n          objectTable[id] = buffer;\r\n        } else {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n        }\r\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  \r\n  function _emscripten_glGenBuffers(n, buffers) {\r\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\r\n        );\r\n    }\r\n\r\n  \r\n  function _emscripten_glGenFramebuffers(n, ids) {\r\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\r\n        );\r\n    }\r\n\r\n  function _emscripten_glGenQueries(n, ids) {\r\n      __glGenObject(n, ids, 'createQuery', GL.queries\r\n        );\r\n    }\r\n\r\n  function _emscripten_glGenQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\r\n        if (!query) {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\r\n          return;\r\n        }\r\n        var id = GL.getNewId(GL.queries);\r\n        query.name = id;\r\n        GL.queries[id] = query;\r\n        HEAP32[(((ids)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n\r\n  \r\n  function _emscripten_glGenRenderbuffers(n, renderbuffers) {\r\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\r\n        );\r\n    }\r\n\r\n  function _emscripten_glGenSamplers(n, samplers) {\r\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\r\n        );\r\n    }\r\n\r\n  \r\n  function _emscripten_glGenTextures(n, textures) {\r\n      __glGenObject(n, textures, 'createTexture', GL.textures\r\n        );\r\n    }\r\n\r\n  function _emscripten_glGenTransformFeedbacks(n, ids) {\r\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\r\n        );\r\n    }\r\n\r\n  \r\n  function _emscripten_glGenVertexArrays(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n\r\n  \r\n  function _emscripten_glGenVertexArraysOES(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n\r\n  function _emscripten_glGenerateMipmap(x0) { GLctx['generateMipmap'](x0) }\r\n\r\n  function __glGetActiveAttribOrUniform(funcName, program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx[funcName](program, index);\r\n      if (info) { // If an error occurs, nothing will be written to length, size and type and name.\r\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n        if (size) HEAP32[((size)>>2)] = info.size;\r\n        if (type) HEAP32[((type)>>2)] = info.type;\r\n      }\r\n    }\r\n  \r\n  function _emscripten_glGetActiveAttrib(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\r\n    }\r\n\r\n  \r\n  function _emscripten_glGetActiveUniform(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\r\n    }\r\n\r\n  function _emscripten_glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName) {\r\n      program = GL.programs[program];\r\n  \r\n      var result = GLctx['getActiveUniformBlockName'](program, uniformBlockIndex);\r\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\r\n      if (uniformBlockName && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\r\n        var name = GLctx['getActiveUniformBlockName'](program, uniformBlockIndex);\r\n        HEAP32[((params)>>2)] = name.length+1;\r\n        return;\r\n      }\r\n  \r\n      var result = GLctx['getActiveUniformBlockParameter'](program, uniformBlockIndex, pname);\r\n      if (result === null) return; // If an error occurs, nothing should be written to params.\r\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\r\n        for (var i = 0; i < result.length; i++) {\r\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n        }\r\n      } else {\r\n        HEAP32[((params)>>2)] = result;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && uniformIndices == 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var ids = [];\r\n      for (var i = 0; i < uniformCount; i++) {\r\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\r\n      }\r\n  \r\n      var result = GLctx['getActiveUniforms'](program, ids, pname);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n\r\n  function _emscripten_glGetAttachedShaders(program, maxCount, count, shaders) {\r\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\r\n      var len = result.length;\r\n      if (len > maxCount) {\r\n        len = maxCount;\r\n      }\r\n      HEAP32[((count)>>2)] = len;\r\n      for (var i = 0; i < len; ++i) {\r\n        var id = GL.shaders.indexOf(result[i]);\r\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glGetAttribLocation(program, name) {\r\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n\r\n  function writeI53ToI64(ptr, num) {\r\n      HEAPU32[ptr>>2] = num;\r\n      HEAPU32[ptr+4>>2] = (num - HEAPU32[ptr>>2])/4294967296;\r\n    }\r\n  \r\n  function emscriptenWebGLGet(name_, p, type) {\r\n      // Guard against user passing a null pointer.\r\n      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.\r\n      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but\r\n      // better to report an error instead of doing anything random.\r\n      if (!p) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = undefined;\r\n      switch (name_) { // Handle a few trivial GLES values\r\n        case 0x8DFA: // GL_SHADER_COMPILER\r\n          ret = 1;\r\n          break;\r\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\r\n          if (type != 0 && type != 1) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n          }\r\n          return; // Do not write anything to the out pointer, since no binary formats are supported.\r\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\r\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\r\n          ret = 0;\r\n          break;\r\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\r\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),\r\n          // so implement it ourselves to allow C++ GLES2 code get the length.\r\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\r\n          ret = formats ? formats.length : 0;\r\n          break;\r\n  \r\n        case 0x821D: // GL_NUM_EXTENSIONS\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n            return;\r\n          }\r\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          var exts = GLctx.getSupportedExtensions() || [];\r\n          ret = 2 * exts.length; // each extension is duplicated, first in unprefixed WebGL form, and then a second time with \"GL_\" prefix.\r\n          break;\r\n        case 0x821B: // GL_MAJOR_VERSION\r\n        case 0x821C: // GL_MINOR_VERSION\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\r\n          break;\r\n      }\r\n  \r\n      if (ret === undefined) {\r\n        var result = GLctx.getParameter(name_);\r\n        switch (typeof result) {\r\n          case \"number\":\r\n            ret = result;\r\n            break;\r\n          case \"boolean\":\r\n            ret = result ? 1 : 0;\r\n            break;\r\n          case \"string\":\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          case \"object\":\r\n            if (result === null) {\r\n              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise\r\n              // can mean an invalid name_, which we need to report as an error\r\n              switch (name_) {\r\n                case 0x8894: // ARRAY_BUFFER_BINDING\r\n                case 0x8B8D: // CURRENT_PROGRAM\r\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\r\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\r\n                case 0x8CA7: // RENDERBUFFER_BINDING\r\n                case 0x8069: // TEXTURE_BINDING_2D\r\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\r\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\r\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\r\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\r\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\r\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\r\n                case 0x8919: // SAMPLER_BINDING\r\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\r\n                case 0x806A: // TEXTURE_BINDING_3D\r\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\r\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\r\n                  ret = 0;\r\n                  break;\r\n                }\r\n                default: {\r\n                  GL.recordError(0x500); // GL_INVALID_ENUM\r\n                  return;\r\n                }\r\n              }\r\n            } else if (result instanceof Float32Array ||\r\n                       result instanceof Uint32Array ||\r\n                       result instanceof Int32Array ||\r\n                       result instanceof Array) {\r\n              for (var i = 0; i < result.length; ++i) {\r\n                switch (type) {\r\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n              try {\r\n                ret = result.name | 0;\r\n              } catch(e) {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                err('GL_INVALID_ENUM in glGet' + type + 'v: Unknown object returned from WebGL getParameter(' + name_ + ')! (error: ' + e + ')');\r\n                return;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            err('GL_INVALID_ENUM in glGet' + type + 'v: Native code calling glGet' + type + 'v(' + name_ + ') and it returns ' + result + ' of type ' + typeof(result) + '!');\r\n            return;\r\n        }\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(p, ret); break;\r\n        case 0: HEAP32[((p)>>2)] = ret; break;\r\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\r\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\r\n      }\r\n    }\r\n  \r\n  function _emscripten_glGetBooleanv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 4);\r\n    }\r\n\r\n  function _emscripten_glGetBufferParameteri64v(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\r\n    }\r\n\r\n  function _emscripten_glGetBufferParameteriv(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\r\n    }\r\n\r\n  function _emscripten_glGetError() {\r\n      var error = GLctx.getError() || GL.lastError;\r\n      GL.lastError = 0/*GL_NO_ERROR*/;\r\n      return error;\r\n    }\r\n\r\n  \r\n  function _emscripten_glGetFloatv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 2);\r\n    }\r\n\r\n  function _emscripten_glGetFragDataLocation(program, name) {\r\n      return GLctx['getFragDataLocation'](GL.programs[program], UTF8ToString(name));\r\n    }\r\n\r\n  function _emscripten_glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {\r\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\r\n      if (result instanceof WebGLRenderbuffer ||\r\n          result instanceof WebGLTexture) {\r\n        result = result.name | 0;\r\n      }\r\n      HEAP32[((params)>>2)] = result;\r\n    }\r\n\r\n  function emscriptenWebGLGetIndexed(target, index, data, type) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var result = GLctx['getIndexedParameter'](target, index);\r\n      var ret;\r\n      switch (typeof result) {\r\n        case 'boolean':\r\n          ret = result ? 1 : 0;\r\n          break;\r\n        case 'number':\r\n          ret = result;\r\n          break;\r\n        case 'object':\r\n          if (result === null) {\r\n            switch (target) {\r\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                ret = 0;\r\n                break;\r\n              default: {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                return;\r\n              }\r\n            }\r\n          } else if (result instanceof WebGLBuffer) {\r\n            ret = result.name | 0;\r\n          } else {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          GL.recordError(0x500); // GL_INVALID_ENUM\r\n          return;\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(data, ret); break;\r\n        case 0: HEAP32[((data)>>2)] = ret; break;\r\n        case 2: HEAPF32[((data)>>2)] = ret; break;\r\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\r\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\r\n      }\r\n    }\r\n  function _emscripten_glGetInteger64i_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 1);\r\n    }\r\n\r\n  function _emscripten_glGetInteger64v(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 1);\r\n    }\r\n\r\n  function _emscripten_glGetIntegeri_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 0);\r\n    }\r\n\r\n  \r\n  function _emscripten_glGetIntegerv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 0);\r\n    }\r\n\r\n  function _emscripten_glGetInternalformativ(target, internalformat, pname, bufSize, params) {\r\n      if (bufSize < 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx['getInternalformatParameter'](target, internalformat, pname);\r\n      if (ret === null) return;\r\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\r\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\r\n      }\r\n    }\r\n\r\n  function _emscripten_glGetProgramBinary(program, bufSize, length, binaryFormat, binary) {\r\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n    }\r\n\r\n  function _emscripten_glGetProgramInfoLog(program, maxLength, length, infoLog) {\r\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n\r\n  function _emscripten_glGetProgramiv(program, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      if (program >= GL.counter) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getProgramInfoLog(program);\r\n        if (log === null) log = '(unknown error)';\r\n        HEAP32[((p)>>2)] = log.length + 1;\r\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\r\n        if (!program.maxUniformLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformLength;\r\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\r\n        if (!program.maxAttributeLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\r\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\r\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\r\n        if (!program.maxUniformBlockNameLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\r\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\r\n      }\r\n    }\r\n\r\n  \r\n  function _emscripten_glGetQueryObjecti64vEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx['getQueryParameter'](query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    }\r\n\r\n  function _emscripten_glGetQueryObjectivEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n\r\n  \r\n  function _emscripten_glGetQueryObjectui64vEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx['getQueryParameter'](query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    }\r\n\r\n  function _emscripten_glGetQueryObjectuiv(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx['getQueryParameter'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n\r\n  function _emscripten_glGetQueryObjectuivEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n\r\n  function _emscripten_glGetQueryiv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx['getQuery'](target, pname);\r\n    }\r\n\r\n  function _emscripten_glGetQueryivEXT(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\r\n    }\r\n\r\n  function _emscripten_glGetRenderbufferParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\r\n    }\r\n\r\n  function _emscripten_glGetSamplerParameterfv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx['getSamplerParameter'](GL.samplers[sampler], pname);\r\n    }\r\n\r\n  function _emscripten_glGetSamplerParameteriv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx['getSamplerParameter'](GL.samplers[sampler], pname);\r\n    }\r\n\r\n  function _emscripten_glGetShaderInfoLog(shader, maxLength, length, infoLog) {\r\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n\r\n  function _emscripten_glGetShaderPrecisionFormat(shaderType, precisionType, range, precision) {\r\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\r\n      HEAP32[((range)>>2)] = result.rangeMin;\r\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\r\n      HEAP32[((precision)>>2)] = result.precision;\r\n    }\r\n\r\n  function _emscripten_glGetShaderSource(shader, bufSize, length, source) {\r\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\r\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\r\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n\r\n  function _emscripten_glGetShaderiv(shader, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n        if (log === null) log = '(unknown error)';\r\n        // The GLES2 specification says that if the shader has an empty info log,\r\n        // a value of 0 is returned. Otherwise the log has a null char appended.\r\n        // (An empty string is falsey, so we can just check that instead of\r\n        // looking at log.length.)\r\n        var logLength = log ? log.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = logLength;\r\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\r\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\r\n        // source may be a null, or the empty string, both of which are falsey\r\n        // values that we report a 0 length for.\r\n        var sourceLength = source ? source.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = sourceLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\r\n      }\r\n    }\r\n\r\n  function stringToNewUTF8(jsString) {\r\n      var length = lengthBytesUTF8(jsString)+1;\r\n      var cString = _malloc(length);\r\n      stringToUTF8(jsString, cString, length);\r\n      return cString;\r\n    }\r\n  \r\n  function _emscripten_glGetString(name_) {\r\n      var ret = GL.stringCache[name_];\r\n      if (!ret) {\r\n        switch (name_) {\r\n          case 0x1F03 /* GL_EXTENSIONS */:\r\n            var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n            exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n            ret = stringToNewUTF8(exts.join(' '));\r\n            break;\r\n          case 0x1F00 /* GL_VENDOR */:\r\n          case 0x1F01 /* GL_RENDERER */:\r\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\r\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\r\n            var s = GLctx.getParameter(name_);\r\n            if (!s) {\r\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            }\r\n            ret = s && stringToNewUTF8(s);\r\n            break;\r\n  \r\n          case 0x1F02 /* GL_VERSION */:\r\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\r\n            // return GLES version string corresponding to the version of the WebGL context\r\n            if (GL.currentContext.version >= 2) glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\r\n            else\r\n            {\r\n              glVersion = 'OpenGL ES 2.0 (' + glVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glVersion);\r\n            break;\r\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\r\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\r\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\r\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\r\n            var ver_num = glslVersion.match(ver_re);\r\n            if (ver_num !== null) {\r\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\r\n              glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glslVersion);\r\n            break;\r\n          default:\r\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            // fall through\r\n        }\r\n        GL.stringCache[name_] = ret;\r\n      }\r\n      return ret;\r\n    }\r\n\r\n  function _emscripten_glGetStringi(name, index) {\r\n      if (GL.currentContext.version < 2) {\r\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n        return 0;\r\n      }\r\n      var stringiCache = GL.stringiCache[name];\r\n      if (stringiCache) {\r\n        if (index < 0 || index >= stringiCache.length) {\r\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n          return 0;\r\n        }\r\n        return stringiCache[index];\r\n      }\r\n      switch (name) {\r\n        case 0x1F03 /* GL_EXTENSIONS */:\r\n          var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n          exts = exts.map(function(e) { return stringToNewUTF8(e); });\r\n  \r\n          stringiCache = GL.stringiCache[name] = exts;\r\n          if (index < 0 || index >= stringiCache.length) {\r\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n            return 0;\r\n          }\r\n          return stringiCache[index];\r\n        default:\r\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n          return 0;\r\n      }\r\n    }\r\n\r\n  function _emscripten_glGetSynciv(sync, pname, bufSize, length, values) {\r\n      if (bufSize < 0) {\r\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\r\n        // so raise GL_INVALID_VALUE here as well.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!values) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\r\n      if (ret !== null) {\r\n        HEAP32[((values)>>2)] = ret;\r\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\r\n      }\r\n    }\r\n\r\n  function _emscripten_glGetTexParameterfv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n\r\n  function _emscripten_glGetTexParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n\r\n  function _emscripten_glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx['getTransformFeedbackVarying'](program, index);\r\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\r\n  \r\n      if (name && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n  \r\n      if (size) HEAP32[((size)>>2)] = info.size;\r\n      if (type) HEAP32[((type)>>2)] = info.type;\r\n    }\r\n\r\n  function _emscripten_glGetUniformBlockIndex(program, uniformBlockName) {\r\n      return GLctx['getUniformBlockIndex'](GL.programs[program], UTF8ToString(uniformBlockName));\r\n    }\r\n\r\n  function _emscripten_glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices) {\r\n      if (!uniformIndices) {\r\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\r\n        // if uniformIndices == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var names = [];\r\n      for (var i = 0; i < uniformCount; i++)\r\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\r\n  \r\n      var result = GLctx['getUniformIndices'](program, names);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n\r\n  /** @suppress {checkTypes} */\r\n  function jstoi_q(str) {\r\n      return parseInt(str);\r\n    }\r\n  \r\n  /** @noinline */\r\n  function webglGetLeftBracePos(name) {\r\n      return name.slice(-1) == ']' && name.lastIndexOf('[');\r\n    }\r\n  \r\n  function webglPrepareUniformLocationsBeforeFirstUse(program) {\r\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\r\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\r\n        i, j;\r\n  \r\n      // On the first time invocation of glGetUniformLocation on this shader program:\r\n      // initialize cache data structures and discover which uniforms are arrays.\r\n      if (!uniformLocsById) {\r\n        // maps GLint integer locations to WebGLUniformLocations\r\n        program.uniformLocsById = uniformLocsById = {};\r\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\r\n        program.uniformArrayNamesById = {};\r\n  \r\n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n          var u = GLctx.getActiveUniform(program, i);\r\n          var nm = u.name;\r\n          var sz = u.size;\r\n          var lb = webglGetLeftBracePos(nm);\r\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\r\n  \r\n          // Assign a new location.\r\n          var id = program.uniformIdCounter;\r\n          program.uniformIdCounter += sz;\r\n          // Eagerly get the location of the uniformArray[0] base element.\r\n          // The remaining indices >0 will be left for lazy evaluation to\r\n          // improve performance. Those may never be needed to fetch, if the\r\n          // application fills arrays always in full starting from the first\r\n          // element of the array.\r\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\r\n  \r\n          // Store placeholder integers in place that highlight that these\r\n          // >0 index locations are array indices pending population.\r\n          for(j = 0; j < sz; ++j) {\r\n            uniformLocsById[id] = j;\r\n            program.uniformArrayNamesById[id++] = arrayName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  \r\n  function _emscripten_glGetUniformLocation(program, name) {\r\n  \r\n      name = UTF8ToString(name);\r\n  \r\n      if (program = GL.programs[program]) {\r\n        webglPrepareUniformLocationsBeforeFirstUse(program);\r\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\r\n        var arrayIndex = 0;\r\n        var uniformBaseName = name;\r\n  \r\n        // Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that\r\n        // arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.\r\n        // However, user might call glGetUniformLocation(program, \"colors\") for an array, so we cannot discover based on the user\r\n        // input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays\r\n        // is to enumerate over all the active uniforms in the program.\r\n        var leftBrace = webglGetLeftBracePos(name);\r\n  \r\n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\r\n        if (leftBrace > 0) {\r\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\r\n          uniformBaseName = name.slice(0, leftBrace);\r\n        }\r\n  \r\n        // Have we cached the location of this uniform before?\r\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName]; // A pair [array length, GLint of the uniform location]\r\n  \r\n        // If an uniform with this name exists, and if its index is within the array limits (if it's even an array),\r\n        // query the WebGLlocation, or return an existing cached location.\r\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\r\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\r\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\r\n            return arrayIndex;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,\r\n        // so report GL_INVALID_VALUE in both cases.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n      }\r\n      return -1;\r\n    }\r\n\r\n  function webglGetUniformLocation(location) {\r\n      var p = GLctx.currentProgram;\r\n  \r\n      if (p) {\r\n        var webglLoc = p.uniformLocsById[location];\r\n        // p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.\r\n  \r\n        // If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index\r\n        // we should bind to.\r\n        if (typeof webglLoc == 'number') {\r\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? '[' + webglLoc + ']' : ''));\r\n        }\r\n        // Else an already cached WebGLUniformLocation, return it.\r\n        return webglLoc;\r\n      } else {\r\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n      }\r\n    }\r\n  \r\n  \r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetUniform(program, location, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      webglPrepareUniformLocationsBeforeFirstUse(program);\r\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\r\n      if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  function _emscripten_glGetUniformfv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 2);\r\n    }\r\n\r\n  \r\n  function _emscripten_glGetUniformiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n\r\n  function _emscripten_glGetUniformuiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n\r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetVertexAttrib(index, pname, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\r\n      }\r\n      var data = GLctx.getVertexAttrib(index, pname);\r\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\r\n        HEAP32[((params)>>2)] = data && data[\"name\"];\r\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  function _emscripten_glGetVertexAttribIiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    }\r\n\r\n  function _emscripten_glGetVertexAttribIuiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    }\r\n\r\n  function _emscripten_glGetVertexAttribPointerv(index, pname, pointer) {\r\n      if (!pointer) {\r\n        // GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense\r\n        // if pointer == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\r\n      }\r\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\r\n    }\r\n\r\n  \r\n  function _emscripten_glGetVertexAttribfv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\r\n    }\r\n\r\n  \r\n  function _emscripten_glGetVertexAttribiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\r\n    }\r\n\r\n  function _emscripten_glHint(x0, x1) { GLctx['hint'](x0, x1) }\r\n\r\n  function _emscripten_glInvalidateFramebuffer(target, numAttachments, attachments) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx['invalidateFramebuffer'](target, list);\r\n    }\r\n\r\n  function _emscripten_glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx['invalidateSubFramebuffer'](target, list, x, y, width, height);\r\n    }\r\n\r\n  function _emscripten_glIsBuffer(buffer) {\r\n      var b = GL.buffers[buffer];\r\n      if (!b) return 0;\r\n      return GLctx.isBuffer(b);\r\n    }\r\n\r\n  function _emscripten_glIsEnabled(x0) { return GLctx['isEnabled'](x0) }\r\n\r\n  function _emscripten_glIsFramebuffer(framebuffer) {\r\n      var fb = GL.framebuffers[framebuffer];\r\n      if (!fb) return 0;\r\n      return GLctx.isFramebuffer(fb);\r\n    }\r\n\r\n  function _emscripten_glIsProgram(program) {\r\n      program = GL.programs[program];\r\n      if (!program) return 0;\r\n      return GLctx.isProgram(program);\r\n    }\r\n\r\n  function _emscripten_glIsQuery(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx['isQuery'](query);\r\n    }\r\n\r\n  function _emscripten_glIsQueryEXT(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\r\n    }\r\n\r\n  function _emscripten_glIsRenderbuffer(renderbuffer) {\r\n      var rb = GL.renderbuffers[renderbuffer];\r\n      if (!rb) return 0;\r\n      return GLctx.isRenderbuffer(rb);\r\n    }\r\n\r\n  function _emscripten_glIsSampler(id) {\r\n      var sampler = GL.samplers[id];\r\n      if (!sampler) return 0;\r\n      return GLctx['isSampler'](sampler);\r\n    }\r\n\r\n  function _emscripten_glIsShader(shader) {\r\n      var s = GL.shaders[shader];\r\n      if (!s) return 0;\r\n      return GLctx.isShader(s);\r\n    }\r\n\r\n  function _emscripten_glIsSync(sync) {\r\n      return GLctx.isSync(GL.syncs[sync]);\r\n    }\r\n\r\n  function _emscripten_glIsTexture(id) {\r\n      var texture = GL.textures[id];\r\n      if (!texture) return 0;\r\n      return GLctx.isTexture(texture);\r\n    }\r\n\r\n  function _emscripten_glIsTransformFeedback(id) {\r\n      return GLctx['isTransformFeedback'](GL.transformFeedbacks[id]);\r\n    }\r\n\r\n  function _emscripten_glIsVertexArray(array) {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx['isVertexArray'](vao);\r\n    }\r\n\r\n  function _emscripten_glIsVertexArrayOES(array) {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx['isVertexArray'](vao);\r\n    }\r\n\r\n  function _emscripten_glLineWidth(x0) { GLctx['lineWidth'](x0) }\r\n\r\n  function _emscripten_glLinkProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.linkProgram(program);\r\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\r\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\r\n      program.uniformSizeAndIdsByName = {};\r\n  \r\n    }\r\n\r\n  function _emscripten_glPauseTransformFeedback() { GLctx['pauseTransformFeedback']() }\r\n\r\n  function _emscripten_glPixelStorei(pname, param) {\r\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\r\n        GL.unpackAlignment = param;\r\n      }\r\n      GLctx.pixelStorei(pname, param);\r\n    }\r\n\r\n  function _emscripten_glPolygonOffset(x0, x1) { GLctx['polygonOffset'](x0, x1) }\r\n\r\n  function _emscripten_glProgramBinary(program, binaryFormat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n\r\n  function _emscripten_glProgramParameteri(program, pname, value) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n\r\n  function _emscripten_glQueryCounterEXT(id, target) {\r\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\r\n    }\r\n\r\n  function _emscripten_glReadBuffer(x0) { GLctx['readBuffer'](x0) }\r\n\r\n  function computeUnpackAlignedImageSize(width, height, sizePerPixel, alignment) {\r\n      function roundedToNextMultipleOf(x, y) {\r\n        return (x + y - 1) & -y;\r\n      }\r\n      var plainRowSize = width * sizePerPixel;\r\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\r\n      return height * alignedRowSize;\r\n    }\r\n  \r\n  function __colorChannelsInGlTextureFormat(format) {\r\n      // Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.\r\n      // Also omit the most common size value (1) from the list, which is assumed by formats not on the list.\r\n      var colorChannels = {\r\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\r\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\r\n        5: 3,\r\n        6: 4,\r\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\r\n        8: 2,\r\n        29502: 3,\r\n        29504: 4,\r\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\r\n        26917: 2,\r\n        26918: 2,\r\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\r\n        29846: 3,\r\n        29847: 4\r\n      };\r\n      return colorChannels[format - 0x1902]||1;\r\n    }\r\n  \r\n  function heapObjectForWebGLType(type) {\r\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\r\n      // smaller values for the heap, for shorter generated code size.\r\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\r\n      // (since most types are HEAPU16)\r\n      type -= 0x1400;\r\n      if (type == 0) return HEAP8;\r\n  \r\n      if (type == 1) return HEAPU8;\r\n  \r\n      if (type == 2) return HEAP16;\r\n  \r\n      if (type == 4) return HEAP32;\r\n  \r\n      if (type == 6) return HEAPF32;\r\n  \r\n      if (type == 5\r\n        || type == 28922\r\n        || type == 28520\r\n        || type == 30779\r\n        || type == 30782\r\n        )\r\n        return HEAPU32;\r\n  \r\n      return HEAPU16;\r\n    }\r\n  \r\n  function heapAccessShiftForWebGLHeap(heap) {\r\n      return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\r\n    }\r\n  \r\n  function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {\r\n      var heap = heapObjectForWebGLType(type);\r\n      var shift = heapAccessShiftForWebGLHeap(heap);\r\n      var byteSize = 1<<shift;\r\n      var sizePerPixel = __colorChannelsInGlTextureFormat(format) * byteSize;\r\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\r\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\r\n    }\r\n  \r\n  \r\n  \r\n  function _emscripten_glReadPixels(x, y, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelPackBufferBinding) {\r\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\r\n        } else {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\r\n      if (!pixelData) {\r\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n        return;\r\n      }\r\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\r\n    }\r\n\r\n  function _emscripten_glReleaseShaderCompiler() {\r\n      // NOP (as allowed by GLES 2.0 spec)\r\n    }\r\n\r\n  function _emscripten_glRenderbufferStorage(x0, x1, x2, x3) { GLctx['renderbufferStorage'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx['renderbufferStorageMultisample'](x0, x1, x2, x3, x4) }\r\n\r\n  function _emscripten_glResumeTransformFeedback() { GLctx['resumeTransformFeedback']() }\r\n\r\n  function _emscripten_glSampleCoverage(value, invert) {\r\n      GLctx.sampleCoverage(value, !!invert);\r\n    }\r\n\r\n  function _emscripten_glSamplerParameterf(sampler, pname, param) {\r\n      GLctx['samplerParameterf'](GL.samplers[sampler], pname, param);\r\n    }\r\n\r\n  function _emscripten_glSamplerParameterfv(sampler, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx['samplerParameterf'](GL.samplers[sampler], pname, param);\r\n    }\r\n\r\n  function _emscripten_glSamplerParameteri(sampler, pname, param) {\r\n      GLctx['samplerParameteri'](GL.samplers[sampler], pname, param);\r\n    }\r\n\r\n  function _emscripten_glSamplerParameteriv(sampler, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx['samplerParameteri'](GL.samplers[sampler], pname, param);\r\n    }\r\n\r\n  function _emscripten_glScissor(x0, x1, x2, x3) { GLctx['scissor'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glShaderBinary() {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n\r\n  function _emscripten_glShaderSource(shader, count, string, length) {\r\n      var source = GL.getSource(shader, count, string, length);\r\n  \r\n      GLctx.shaderSource(GL.shaders[shader], source);\r\n    }\r\n\r\n  function _emscripten_glStencilFunc(x0, x1, x2) { GLctx['stencilFunc'](x0, x1, x2) }\r\n\r\n  function _emscripten_glStencilFuncSeparate(x0, x1, x2, x3) { GLctx['stencilFuncSeparate'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glStencilMask(x0) { GLctx['stencilMask'](x0) }\r\n\r\n  function _emscripten_glStencilMaskSeparate(x0, x1) { GLctx['stencilMaskSeparate'](x0, x1) }\r\n\r\n  function _emscripten_glStencilOp(x0, x1, x2) { GLctx['stencilOp'](x0, x1, x2) }\r\n\r\n  function _emscripten_glStencilOpSeparate(x0, x1, x2, x3) { GLctx['stencilOpSeparate'](x0, x1, x2, x3) }\r\n\r\n  \r\n  \r\n  \r\n  function _emscripten_glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\r\n    }\r\n\r\n  \r\n  function _emscripten_glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx['texImage3D'](target, level, internalFormat, width, height, depth, border, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx['texImage3D'](target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx['texImage3D'](target, level, internalFormat, width, height, depth, border, format, type, null);\r\n      }\r\n    }\r\n\r\n  function _emscripten_glTexParameterf(x0, x1, x2) { GLctx['texParameterf'](x0, x1, x2) }\r\n\r\n  function _emscripten_glTexParameterfv(target, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.texParameterf(target, pname, param);\r\n    }\r\n\r\n  function _emscripten_glTexParameteri(x0, x1, x2) { GLctx['texParameteri'](x0, x1, x2) }\r\n\r\n  function _emscripten_glTexParameteriv(target, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.texParameteri(target, pname, param);\r\n    }\r\n\r\n  function _emscripten_glTexStorage2D(x0, x1, x2, x3, x4) { GLctx['texStorage2D'](x0, x1, x2, x3, x4) }\r\n\r\n  function _emscripten_glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx['texStorage3D'](x0, x1, x2, x3, x4, x5) }\r\n\r\n  \r\n  \r\n  \r\n  function _emscripten_glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = null;\r\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\r\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\r\n    }\r\n\r\n  \r\n  function _emscripten_glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx['texSubImage3D'](target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx['texSubImage3D'](target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx['texSubImage3D'](target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\r\n      }\r\n    }\r\n\r\n  function _emscripten_glTransformFeedbackVaryings(program, count, varyings, bufferMode) {\r\n      program = GL.programs[program];\r\n      var vars = [];\r\n      for (var i = 0; i < count; i++)\r\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\r\n  \r\n      GLctx['transformFeedbackVaryings'](program, vars, bufferMode);\r\n    }\r\n\r\n  \r\n  function _emscripten_glUniform1f(location, v0) {\r\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\r\n    }\r\n\r\n  \r\n  var miniTempWebGLFloatBuffers = [];\r\n  \r\n  function _emscripten_glUniform1fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\r\n    }\r\n\r\n  \r\n  function _emscripten_glUniform1i(location, v0) {\r\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\r\n    }\r\n\r\n  \r\n  var __miniTempWebGLIntBuffers = [];\r\n  \r\n  function _emscripten_glUniform1iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = __miniTempWebGLIntBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\r\n    }\r\n\r\n  function _emscripten_glUniform1ui(location, v0) {\r\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\r\n    }\r\n\r\n  function _emscripten_glUniform1uiv(location, count, value) {\r\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\r\n    }\r\n\r\n  \r\n  function _emscripten_glUniform2f(location, v0, v1) {\r\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniform2fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\r\n    }\r\n\r\n  \r\n  function _emscripten_glUniform2i(location, v0, v1) {\r\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniform2iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = __miniTempWebGLIntBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\r\n    }\r\n\r\n  function _emscripten_glUniform2ui(location, v0, v1) {\r\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n\r\n  function _emscripten_glUniform2uiv(location, count, value) {\r\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\r\n    }\r\n\r\n  \r\n  function _emscripten_glUniform3f(location, v0, v1, v2) {\r\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniform3fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\r\n    }\r\n\r\n  \r\n  function _emscripten_glUniform3i(location, v0, v1, v2) {\r\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniform3iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = __miniTempWebGLIntBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\r\n    }\r\n\r\n  function _emscripten_glUniform3ui(location, v0, v1, v2) {\r\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n\r\n  function _emscripten_glUniform3uiv(location, count, value) {\r\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\r\n    }\r\n\r\n  \r\n  function _emscripten_glUniform4f(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniform4fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 4 * count; i += 4) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\r\n    }\r\n\r\n  \r\n  function _emscripten_glUniform4i(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniform4iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = __miniTempWebGLIntBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\r\n    }\r\n\r\n  function _emscripten_glUniform4ui(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n\r\n  function _emscripten_glUniform4uiv(location, count, value) {\r\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\r\n    }\r\n\r\n  function _emscripten_glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding) {\r\n      program = GL.programs[program];\r\n  \r\n      GLctx['uniformBlockBinding'](program, uniformBlockIndex, uniformBlockBinding);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniformMatrix2fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n\r\n  function _emscripten_glUniformMatrix2x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n\r\n  function _emscripten_glUniformMatrix2x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniformMatrix3fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 32) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[9*count-1];\r\n        for (var i = 0; i < 9*count; i += 9) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\r\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\r\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\r\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\r\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\r\n      }\r\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n\r\n  function _emscripten_glUniformMatrix3x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n\r\n  function _emscripten_glUniformMatrix3x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_glUniformMatrix4fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 18) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[16*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 16 * count; i += 16) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n          view[i + 4] = heap[dst + 4];\r\n          view[i + 5] = heap[dst + 5];\r\n          view[i + 6] = heap[dst + 6];\r\n          view[i + 7] = heap[dst + 7];\r\n          view[i + 8] = heap[dst + 8];\r\n          view[i + 9] = heap[dst + 9];\r\n          view[i + 10] = heap[dst + 10];\r\n          view[i + 11] = heap[dst + 11];\r\n          view[i + 12] = heap[dst + 12];\r\n          view[i + 13] = heap[dst + 13];\r\n          view[i + 14] = heap[dst + 14];\r\n          view[i + 15] = heap[dst + 15];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\r\n      }\r\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n\r\n  function _emscripten_glUniformMatrix4x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n\r\n  function _emscripten_glUniformMatrix4x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n\r\n  function _emscripten_glUseProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.useProgram(program);\r\n      // Record the currently active program so that we can access the uniform\r\n      // mapping table of that program.\r\n      GLctx.currentProgram = program;\r\n    }\r\n\r\n  function _emscripten_glValidateProgram(program) {\r\n      GLctx.validateProgram(GL.programs[program]);\r\n    }\r\n\r\n  function _emscripten_glVertexAttrib1f(x0, x1) { GLctx['vertexAttrib1f'](x0, x1) }\r\n\r\n  function _emscripten_glVertexAttrib1fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\r\n    }\r\n\r\n  function _emscripten_glVertexAttrib2f(x0, x1, x2) { GLctx['vertexAttrib2f'](x0, x1, x2) }\r\n\r\n  function _emscripten_glVertexAttrib2fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\r\n    }\r\n\r\n  function _emscripten_glVertexAttrib3f(x0, x1, x2, x3) { GLctx['vertexAttrib3f'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glVertexAttrib3fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\r\n    }\r\n\r\n  function _emscripten_glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx['vertexAttrib4f'](x0, x1, x2, x3, x4) }\r\n\r\n  function _emscripten_glVertexAttrib4fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribDivisor(index, divisor) {\r\n      GLctx['vertexAttribDivisor'](index, divisor);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribDivisorANGLE(index, divisor) {\r\n      GLctx['vertexAttribDivisor'](index, divisor);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribDivisorARB(index, divisor) {\r\n      GLctx['vertexAttribDivisor'](index, divisor);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribDivisorEXT(index, divisor) {\r\n      GLctx['vertexAttribDivisor'](index, divisor);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribDivisorNV(index, divisor) {\r\n      GLctx['vertexAttribDivisor'](index, divisor);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx['vertexAttribI4i'](x0, x1, x2, x3, x4) }\r\n\r\n  function _emscripten_glVertexAttribI4iv(index, v) {\r\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx['vertexAttribI4ui'](x0, x1, x2, x3, x4) }\r\n\r\n  function _emscripten_glVertexAttribI4uiv(index, v) {\r\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribIPointer(index, size, type, stride, ptr) {\r\n      GLctx['vertexAttribIPointer'](index, size, type, stride, ptr);\r\n    }\r\n\r\n  function _emscripten_glVertexAttribPointer(index, size, type, normalized, stride, ptr) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      if (!GLctx.currentArrayBufferBinding) {\r\n        cb.size = size;\r\n        cb.type = type;\r\n        cb.normalized = normalized;\r\n        cb.stride = stride;\r\n        cb.ptr = ptr;\r\n        cb.clientside = true;\r\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\r\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\r\n        };\r\n        return;\r\n      }\r\n      cb.clientside = false;\r\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\r\n    }\r\n\r\n  function _emscripten_glViewport(x0, x1, x2, x3) { GLctx['viewport'](x0, x1, x2, x3) }\r\n\r\n  function _emscripten_glWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n\r\n  function _emscripten_has_asyncify() {\r\n      return 1;\r\n    }\r\n\r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.copyWithin(dest, src, src + num);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function doRequestFullscreen(target, strategy) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      if (!target.requestFullscreen\r\n        && !target.webkitRequestFullscreen\r\n        ) {\r\n        return -3;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (strategy.deferUntilInEventHandler) {\r\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return JSEvents_requestFullscreen(target, strategy);\r\n    }\r\n  \r\n  \r\n  function _emscripten_request_fullscreen_strategy(target, deferUntilInEventHandler, fullscreenStrategy) {\r\n      var strategy = {\r\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n        deferUntilInEventHandler: deferUntilInEventHandler,\r\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\r\n      };\r\n  \r\n      return doRequestFullscreen(target, strategy);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_request_pointerlock(target, deferUntilInEventHandler) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (!target.requestPointerLock\r\n        ) {\r\n        return -1;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (deferUntilInEventHandler) {\r\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return requestPointerLock(target);\r\n    }\r\n\r\n  function getHeapMax() {\r\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n      // for any code that deals with heap sizes, which would require special\r\n      // casing all heap size related code to treat 0 specially.\r\n      return 2147483648;\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var b = wasmMemory.buffer;\r\n      try {\r\n        // round size grow request up to wasm page size (fixed 64KB per spec)\r\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size\r\n        updateMemoryViews();\r\n        return 1 /*success*/;\r\n      } catch(e) {\r\n      }\r\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\r\n      // anyhow)\r\n    }\r\n  function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = HEAPU8.length;\r\n      requestedSize = requestedSize >>> 0;\r\n      // With multithreaded builds, races can happen (another thread might increase the size\r\n      // in between), so return a failure, and let the caller retry.\r\n  \r\n      // Memory resize rules:\r\n      // 1.  Always increase heap size to at least the requested size, rounded up\r\n      //     to next page multiple.\r\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n      //     geometrically: increase the heap size according to\r\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n      //     linearly: increase the heap size by at least\r\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n      // 4.  If we were unable to allocate as much memory, it may be due to\r\n      //     over-eager decision to excessively reserve due to (3) above.\r\n      //     Hence if an allocation fails, cut down on the amount of excess\r\n      //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  \r\n      // A limit is set for how much we can grow. We should not exceed that\r\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n      var maxHeapSize = getHeapMax();\r\n      if (requestedSize > maxHeapSize) {\r\n        return false;\r\n      }\r\n  \r\n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n  \r\n      // Loop through potential heap size increases. If we attempt a too eager\r\n      // reservation that fails, cut down on the attempted size and reserve a\r\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\r\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\r\n  \r\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  \r\n        var replacement = emscripten_realloc_buffer(newSize);\r\n        if (replacement) {\r\n  \r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n  function _emscripten_sample_gamepad_data() {\r\n      return (JSEvents.lastGamepadState = (navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null)))\r\n        ? 0 : -1;\r\n    }\r\n\r\n  \r\n  function registerBeforeUnloadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {\r\n      var beforeUnloadEventHandlerFunc = function(e = event) {\r\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\r\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\r\n        \r\n        if (confirmationMessage) {\r\n          confirmationMessage = UTF8ToString(confirmationMessage);\r\n        }\r\n        if (confirmationMessage) {\r\n          e.preventDefault();\r\n          e.returnValue = confirmationMessage;\r\n          return confirmationMessage;\r\n        }\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: beforeUnloadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_beforeunload_callback_on_thread(userData, callbackfunc, targetThread) {\r\n      if (typeof onbeforeunload == 'undefined') return -1;\r\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\r\n      // and there is no time to start proxying it anywhere.\r\n      if (targetThread !== 1) return -5;\r\n      registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function registerFocusEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc( 256 );\r\n  \r\n      var focusEventHandlerFunc = function(e = event) {\r\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\r\n        var id = e.target.id ? e.target.id : '';\r\n  \r\n        var focusEvent = JSEvents.focusEvent;\r\n        stringToUTF8(nodeName, focusEvent + 0, 128);\r\n        stringToUTF8(id, focusEvent + 128, 128);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: focusEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_blur_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n\r\n  \r\n  function _emscripten_set_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      target.style.width = width + \"px\";\r\n      target.style.height = height + \"px\";\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_focus_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function fillFullscreenChangeEventData(eventStruct) {\r\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\r\n      var isFullscreen = !!fullscreenElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\r\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\r\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\r\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\r\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\r\n      var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 8, 128);\r\n      stringToUTF8(id, eventStruct + 136, 128);\r\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\r\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\r\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\r\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\r\n      if (isFullscreen) {\r\n        JSEvents.previousFullscreenElement = fullscreenElement;\r\n      }\r\n    }\r\n  \r\n  function registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc( 280 );\r\n  \r\n      var fullscreenChangeEventhandlerFunc = function(e = event) {\r\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\r\n  \r\n        fillFullscreenChangeEventData(fullscreenChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: fullscreenChangeEventhandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_fullscreenchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\r\n  \r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function registerGamepadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc( 1432 );\r\n  \r\n      var gamepadEventHandlerFunc = function(e = event) {\r\n        var gamepadEvent = JSEvents.gamepadEvent;\r\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: gamepadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_gamepadconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_gamepaddisconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function registerKeyEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc( 176 );\r\n  \r\n      var keyEventHandlerFunc = function(e) {\r\n  \r\n        var keyEventData = JSEvents.keyEvent;\r\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\r\n  \r\n        var idx = keyEventData >> 2;\r\n  \r\n        HEAP32[idx + 2] = e.location;\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        HEAP32[idx + 7] = e.repeat;\r\n        HEAP32[idx + 8] = e.charCode;\r\n        HEAP32[idx + 9] = e.keyCode;\r\n        HEAP32[idx + 10] = e.which;\r\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\r\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\r\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\r\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: keyEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_keydown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keypress_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keyup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {\r\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\r\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillMouseEventData(eventStruct, e, target) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\r\n      var idx = eventStruct >> 2;\r\n      HEAP32[idx + 2] = e.screenX;\r\n      HEAP32[idx + 3] = e.screenY;\r\n      HEAP32[idx + 4] = e.clientX;\r\n      HEAP32[idx + 5] = e.clientY;\r\n      HEAP32[idx + 6] = e.ctrlKey;\r\n      HEAP32[idx + 7] = e.shiftKey;\r\n      HEAP32[idx + 8] = e.altKey;\r\n      HEAP32[idx + 9] = e.metaKey;\r\n      HEAP16[idx*2 + 20] = e.button;\r\n      HEAP16[idx*2 + 21] = e.buttons;\r\n  \r\n      HEAP32[idx + 11] = e[\"movementX\"]\r\n        ;\r\n  \r\n      HEAP32[idx + 12] = e[\"movementY\"]\r\n        ;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAP32[idx + 13] = e.clientX - rect.left;\r\n      HEAP32[idx + 14] = e.clientY - rect.top;\r\n  \r\n    }\r\n  \r\n  function registerMouseEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc( 72 );\r\n      target = findEventTarget(target);\r\n  \r\n      var mouseEventHandlerFunc = function(e = event) {\r\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\r\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: mouseEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_mousedown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseenter_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseleave_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mousemove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function fillPointerlockChangeEventData(eventStruct) {\r\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\r\n      var isPointerlocked = !!pointerLockElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\r\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\r\n      var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 4, 128);\r\n      stringToUTF8(id, eventStruct + 132, 128);\r\n    }\r\n  \r\n  function registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc( 260 );\r\n  \r\n      var pointerlockChangeEventHandlerFunc = function(e = event) {\r\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\r\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: pointerlockChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  /** @suppress {missingProperties} */\r\n  function _emscripten_set_pointerlockchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\r\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\r\n        return -1;\r\n      }\r\n  \r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function registerUiEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc( 36 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var uiEventHandlerFunc = function(e = event) {\r\n        if (e.target != target) {\r\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\r\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\r\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\r\n          // causing a new scroll, etc..\r\n          return;\r\n        }\r\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\r\n        if (!b) {\r\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\r\n          return;\r\n        }\r\n        var uiEvent = JSEvents.uiEvent;\r\n        HEAP32[((uiEvent)>>2)] = e.detail;\r\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\r\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\r\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\r\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\r\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\r\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\r\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\r\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: uiEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_resize_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function registerTouchEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc( 1696 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var touchEventHandlerFunc = function(e) {\r\n        var t, touches = {}, et = e.touches;\r\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches, \r\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\r\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\r\n  \r\n        for (var i = 0; i < et.length; ++i) {\r\n          t = et[i];\r\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\r\n          // changed/target states we may have set from previous frame.\r\n          t.isChanged = t.onTarget = 0;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the changedTouches list.\r\n        for (var i = 0; i < e.changedTouches.length; ++i) {\r\n          t = e.changedTouches[i];\r\n          t.isChanged = 1;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the targetTouches list.\r\n        for (var i = 0; i < e.targetTouches.length; ++i) {\r\n          touches[e.targetTouches[i].identifier].onTarget = 1;\r\n        }\r\n  \r\n        var touchEvent = JSEvents.touchEvent;\r\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\r\n        var idx = touchEvent>>2; // Pre-shift the ptr to index to HEAP32 to save code size\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        idx += 7; // Advance to the start of the touch array.\r\n        var targetRect = getBoundingClientRect(target);\r\n        var numTouches = 0;\r\n        for (var i in touches) {\r\n          t = touches[i];\r\n          HEAP32[idx + 0] = t.identifier;\r\n          HEAP32[idx + 1] = t.screenX;\r\n          HEAP32[idx + 2] = t.screenY;\r\n          HEAP32[idx + 3] = t.clientX;\r\n          HEAP32[idx + 4] = t.clientY;\r\n          HEAP32[idx + 5] = t.pageX;\r\n          HEAP32[idx + 6] = t.pageY;\r\n          HEAP32[idx + 7] = t.isChanged;\r\n          HEAP32[idx + 8] = t.onTarget;\r\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\r\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\r\n  \r\n          idx += 13;\r\n  \r\n          if (++numTouches > 31) {\r\n            break;\r\n          }\r\n        }\r\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: touchEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_touchcancel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchend_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchmove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchstart_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillVisibilityChangeEventData(eventStruct) {\r\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\r\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\r\n  \r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = document.hidden;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\r\n    }\r\n  \r\n  function registerVisibilityChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc( 8 );\r\n  \r\n      var visibilityChangeEventHandlerFunc = function(e = event) {\r\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\r\n  \r\n        fillVisibilityChangeEventData(visibilityChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: visibilityChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_visibilitychange_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerWheelEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc( 104 );\r\n  \r\n      // The DOM Level 3 events spec event 'wheel'\r\n      var wheelHandlerFunc = function(e = event) {\r\n        var wheelEvent = JSEvents.wheelEvent;\r\n        fillMouseEventData(wheelEvent, e, target);\r\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\r\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\r\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\r\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: wheelHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_wheel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      target = findEventTarget(target);\r\n      if (typeof target.onwheel != 'undefined') {\r\n        registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\r\n        return 0;\r\n      } else {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n  function _emscripten_set_window_title(title) {\r\n      setWindowTitle(UTF8ToString(title));\r\n    }\r\n\r\n  function _emscripten_sleep(ms) {\r\n      // emscripten_sleep() does not return a value, but we still need a |return|\r\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\r\n      // returns a Promise instead of nothing, and that Promise is what tells the\r\n      // wasm VM to pause the stack.\r\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\r\n    }\r\n\r\n  var ENV = {};\r\n  \r\n  function getExecutableName() {\r\n      return thisProgram || './this.program';\r\n    }\r\n  function getEnvStrings() {\r\n      if (!getEnvStrings.strings) {\r\n        // Default values.\r\n        // Browser language detection #8751\r\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\r\n        var env = {\r\n          'USER': 'web_user',\r\n          'LOGNAME': 'web_user',\r\n          'PATH': '/',\r\n          'PWD': '/',\r\n          'HOME': '/home/web_user',\r\n          'LANG': lang,\r\n          '_': getExecutableName()\r\n        };\r\n        // Apply the user-provided values, if any.\r\n        for (var x in ENV) {\r\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n          // explicitly set to be so. We allow user code to do that to\r\n          // force variables with default values to remain unset.\r\n          if (ENV[x] === undefined) delete env[x];\r\n          else env[x] = ENV[x];\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n          strings.push(x + '=' + env[x]);\r\n        }\r\n        getEnvStrings.strings = strings;\r\n      }\r\n      return getEnvStrings.strings;\r\n    }\r\n  \r\n  /** @param {boolean=} dontAddNull */\r\n  function writeAsciiToMemory(str, buffer, dontAddNull) {\r\n      for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\r\n      }\r\n      // Null-terminate the pointer to the HEAP.\r\n      if (!dontAddNull) HEAP8[((buffer)>>0)] = 0;\r\n    }\r\n  \r\n  function _environ_get(__environ, environ_buf) {\r\n      var bufSize = 0;\r\n      getEnvStrings().forEach(function(string, i) {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\r\n        writeAsciiToMemory(string, ptr);\r\n        bufSize += string.length + 1;\r\n      });\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n      var strings = getEnvStrings();\r\n      HEAPU32[((penviron_count)>>2)] = strings.length;\r\n      var bufSize = 0;\r\n      strings.forEach(function(string) {\r\n        bufSize += string.length + 1;\r\n      });\r\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _proc_exit(code) {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        if (Module['onExit']) Module['onExit'](code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    }\r\n  /** @param {boolean|number=} implicit */\r\n  function exitJS(status, implicit) {\r\n      EXITSTATUS = status;\r\n  \r\n      _proc_exit(status);\r\n    }\r\n  var _exit = exitJS;\r\n\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  function _fd_fdstat_get(fd, pbuf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      // All character devices are terminals (other things a Linux system would\r\n      // assume is a character device, like the mouse, we have special APIs for).\r\n      var type = stream.tty ? 2 :\r\n                 FS.isDir(stream.mode) ? 3 :\r\n                 FS.isLink(stream.mode) ? 7 :\r\n                 4;\r\n      HEAP8[((pbuf)>>0)] = type;\r\n      // TODO HEAP16[(((pbuf)+(2))>>1)] = ?;\r\n      // TODO (tempI64 = [?>>>0,(tempDouble=?,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\r\n      // TODO (tempI64 = [?>>>0,(tempDouble=?,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doReadv(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n  try {\r\n  \r\n      var offset = convertI32PairToI53Checked(offset_low, offset_high); if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doWritev(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function _glGetFloatv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 2);\r\n    }\r\n\r\n  \r\n  function __arraySum(array, index) {\r\n      var sum = 0;\r\n      for (var i = 0; i <= index; sum += array[i++]) {\r\n        // no-op\r\n      }\r\n      return sum;\r\n    }\r\n  \r\n  \r\n  var __MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\r\n  \r\n  var __MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n  function __addDays(date, days) {\r\n      var newDate = new Date(date.getTime());\r\n      while (days > 0) {\r\n        var leap = __isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\r\n  \r\n        if (days > daysInCurrentMonth-newDate.getDate()) {\r\n          // we spill over to next month\r\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\r\n          newDate.setDate(1);\r\n          if (currentMonth < 11) {\r\n            newDate.setMonth(currentMonth+1)\r\n          } else {\r\n            newDate.setMonth(0);\r\n            newDate.setFullYear(newDate.getFullYear()+1);\r\n          }\r\n        } else {\r\n          // we stay in current month\r\n          newDate.setDate(newDate.getDate()+days);\r\n          return newDate;\r\n        }\r\n      }\r\n  \r\n      return newDate;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function writeArrayToMemory(array, buffer) {\r\n      HEAP8.set(array, buffer);\r\n    }\r\n  function _strftime(s, maxsize, format, tm) {\r\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\r\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\r\n  \r\n      var tm_zone = HEAP32[(((tm)+(40))>>2)];\r\n  \r\n      var date = {\r\n        tm_sec: HEAP32[((tm)>>2)],\r\n        tm_min: HEAP32[(((tm)+(4))>>2)],\r\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\r\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\r\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\r\n        tm_year: HEAP32[(((tm)+(20))>>2)],\r\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\r\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\r\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\r\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\r\n      };\r\n  \r\n      var pattern = UTF8ToString(format);\r\n  \r\n      // expand format\r\n      var EXPANSION_RULES_1 = {\r\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\r\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\r\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\r\n        '%h': '%b',                       // Equivalent to %b\r\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\r\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\r\n        '%T': '%H:%M:%S',                 // Replaced by the time\r\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\r\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\r\n        // Modified Conversion Specifiers\r\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\r\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\r\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\r\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\r\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\r\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\r\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\r\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\r\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\r\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\r\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\r\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\r\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\r\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\r\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\r\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\r\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\r\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\r\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\r\n      };\r\n      for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\r\n      }\r\n  \r\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  \r\n      function leadingSomething(value, digits, character) {\r\n        var str = typeof value == 'number' ? value.toString() : (value || '');\r\n        while (str.length < digits) {\r\n          str = character[0]+str;\r\n        }\r\n        return str;\r\n      }\r\n  \r\n      function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, '0');\r\n      }\r\n  \r\n      function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n        }\r\n  \r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\r\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\r\n            compare = sgn(date1.getDate()-date2.getDate());\r\n          }\r\n        }\r\n        return compare;\r\n      }\r\n  \r\n      function getFirstWeekStartDate(janFourth) {\r\n          switch (janFourth.getDay()) {\r\n            case 0: // Sunday\r\n              return new Date(janFourth.getFullYear()-1, 11, 29);\r\n            case 1: // Monday\r\n              return janFourth;\r\n            case 2: // Tuesday\r\n              return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3: // Wednesday\r\n              return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4: // Thursday\r\n              return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5: // Friday\r\n              return new Date(janFourth.getFullYear()-1, 11, 31);\r\n            case 6: // Saturday\r\n              return new Date(janFourth.getFullYear()-1, 11, 30);\r\n          }\r\n      }\r\n  \r\n      function getWeekBasedYear(date) {\r\n          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\r\n  \r\n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\r\n  \r\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n  \r\n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            // this date is after the start of the first week of this year\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n              return thisDate.getFullYear()+1;\r\n            }\r\n            return thisDate.getFullYear();\r\n          }\r\n          return thisDate.getFullYear()-1;\r\n      }\r\n  \r\n      var EXPANSION_RULES_2 = {\r\n        '%a': function(date) {\r\n          return WEEKDAYS[date.tm_wday].substring(0,3);\r\n        },\r\n        '%A': function(date) {\r\n          return WEEKDAYS[date.tm_wday];\r\n        },\r\n        '%b': function(date) {\r\n          return MONTHS[date.tm_mon].substring(0,3);\r\n        },\r\n        '%B': function(date) {\r\n          return MONTHS[date.tm_mon];\r\n        },\r\n        '%C': function(date) {\r\n          var year = date.tm_year+1900;\r\n          return leadingNulls((year/100)|0,2);\r\n        },\r\n        '%d': function(date) {\r\n          return leadingNulls(date.tm_mday, 2);\r\n        },\r\n        '%e': function(date) {\r\n          return leadingSomething(date.tm_mday, 2, ' ');\r\n        },\r\n        '%g': function(date) {\r\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\r\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\r\n          // January 4th, which is also the week that includes the first Thursday of the year, and\r\n          // is also the first week that contains at least four days in the year.\r\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\r\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\r\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\r\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\r\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\r\n  \r\n          return getWeekBasedYear(date).toString().substring(2);\r\n        },\r\n        '%G': function(date) {\r\n          return getWeekBasedYear(date);\r\n        },\r\n        '%H': function(date) {\r\n          return leadingNulls(date.tm_hour, 2);\r\n        },\r\n        '%I': function(date) {\r\n          var twelveHour = date.tm_hour;\r\n          if (twelveHour == 0) twelveHour = 12;\r\n          else if (twelveHour > 12) twelveHour -= 12;\r\n          return leadingNulls(twelveHour, 2);\r\n        },\r\n        '%j': function(date) {\r\n          // Day of the year (001-366)\r\n          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\r\n        },\r\n        '%m': function(date) {\r\n          return leadingNulls(date.tm_mon+1, 2);\r\n        },\r\n        '%M': function(date) {\r\n          return leadingNulls(date.tm_min, 2);\r\n        },\r\n        '%n': function() {\r\n          return '\\n';\r\n        },\r\n        '%p': function(date) {\r\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n            return 'AM';\r\n          }\r\n          return 'PM';\r\n        },\r\n        '%S': function(date) {\r\n          return leadingNulls(date.tm_sec, 2);\r\n        },\r\n        '%t': function() {\r\n          return '\\t';\r\n        },\r\n        '%u': function(date) {\r\n          return date.tm_wday || 7;\r\n        },\r\n        '%U': function(date) {\r\n          var days = date.tm_yday + 7 - date.tm_wday;\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%V': function(date) {\r\n          // Replaced by the week number of the year (Monday as the first day of the week)\r\n          // as a decimal number [01,53]. If the week containing 1 January has four\r\n          // or more days in the new year, then it is considered week 1.\r\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\r\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\r\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\r\n          // If 1 Jan is just 1-3 days past Monday, the previous week\r\n          // is also in this year.\r\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n            val++;\r\n          }\r\n          if (!val) {\r\n            val = 52;\r\n            // If 31 December of prev year a Thursday, or Friday of a\r\n            // leap year, then the prev year has 53 weeks.\r\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n            if (dec31 == 4 || (dec31 == 5 && __isLeapYear(date.tm_year%400-1))) {\r\n              val++;\r\n            }\r\n          } else if (val == 53) {\r\n            // If 1 January is not a Thursday, and not a Wednesday of a\r\n            // leap year, then this year has only 52 weeks.\r\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n            if (jan1 != 4 && (jan1 != 3 || !__isLeapYear(date.tm_year)))\r\n              val = 1;\r\n          }\r\n          return leadingNulls(val, 2);\r\n        },\r\n        '%w': function(date) {\r\n          return date.tm_wday;\r\n        },\r\n        '%W': function(date) {\r\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%y': function(date) {\r\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\r\n          return (date.tm_year+1900).toString().substring(2);\r\n        },\r\n        '%Y': function(date) {\r\n          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\r\n          return date.tm_year+1900;\r\n        },\r\n        '%z': function(date) {\r\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\r\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\r\n          var off = date.tm_gmtoff;\r\n          var ahead = off >= 0;\r\n          off = Math.abs(off) / 60;\r\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\r\n          off = (off / 60)*100 + (off % 60);\r\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\r\n        },\r\n        '%Z': function(date) {\r\n          return date.tm_zone;\r\n        },\r\n        '%%': function() {\r\n          return '%';\r\n        }\r\n      };\r\n  \r\n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\r\n      // re-inject them after processing.\r\n      pattern = pattern.replace(/%%/g, '\\0\\0')\r\n      for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\r\n        }\r\n      }\r\n      pattern = pattern.replace(/\\0\\0/g, '%')\r\n  \r\n      var bytes = intArrayFromString(pattern, false);\r\n      if (bytes.length > maxsize) {\r\n        return 0;\r\n      }\r\n  \r\n      writeArrayToMemory(bytes, s);\r\n      return bytes.length-1;\r\n    }\r\n\r\n  function _strftime_l(s, maxsize, format, tm, loc) {\r\n      return _strftime(s, maxsize, format, tm); // no locale support yet\r\n    }\r\n\r\n\r\n\r\n  function allocateUTF8OnStack(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = stackAlloc(size);\r\n      stringToUTF8Array(str, HEAP8, ret, size);\r\n      return ret;\r\n    }\r\n\r\n\r\n  function runAndAbortIfError(func) {\r\n      try {\r\n        return func();\r\n      } catch (e) {\r\n        abort(e);\r\n      }\r\n    }\r\n  \r\n  \r\n  function sigToWasmTypes(sig) {\r\n      var typeNames = {\r\n        'i': 'i32',\r\n        // i64 values will be split into two i32s.\r\n        'j': 'i32',\r\n        'f': 'f32',\r\n        'd': 'f64',\r\n        'p': 'i32',\r\n      };\r\n      var type = {\r\n        parameters: [],\r\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n      };\r\n      for (var i = 1; i < sig.length; ++i) {\r\n        type.parameters.push(typeNames[sig[i]]);\r\n        if (sig[i] === 'j') {\r\n          type.parameters.push('i32');\r\n        }\r\n      }\r\n      return type;\r\n    }\r\n  \r\n  function runtimeKeepalivePush() {\r\n    }\r\n  \r\n  function runtimeKeepalivePop() {\r\n    }\r\n  var Asyncify = {instrumentWasmImports:function(imports) {\r\n        var ASYNCIFY_IMPORTS = [\"invoke_*\",\"emscripten_sleep\",\"emscripten_wget\",\"emscripten_wget_data\",\"emscripten_idb_load\",\"emscripten_idb_store\",\"emscripten_idb_delete\",\"emscripten_idb_exists\",\"emscripten_idb_load_blob\",\"emscripten_idb_store_blob\",\"SDL_Delay\",\"emscripten_scan_registers\",\"emscripten_lazy_load_code\",\"emscripten_fiber_swap\",\"fd_sync\",\"__wasi_fd_sync\",\"_emval_await\",\"_dlopen_js\",\"__asyncjs__*\"];\r\n        for (var x in imports) {\r\n          (function(x) {\r\n            var original = imports[x];\r\n            var sig = original.sig;\r\n            if (typeof original == 'function') {\r\n              var isAsyncifyImport = ASYNCIFY_IMPORTS.indexOf(x) >= 0 ||\r\n                                     x.startsWith('__asyncjs__');\r\n            }\r\n          })(x);\r\n        }\r\n      },instrumentWasmExports:function(exports) {\r\n        var ret = {};\r\n        for (var x in exports) {\r\n          (function(x) {\r\n            var original = exports[x];\r\n            if (typeof original == 'function') {\r\n              ret[x] = function() {\r\n                Asyncify.exportCallStack.push(x);\r\n                try {\r\n                  return original.apply(null, arguments);\r\n                } finally {\r\n                  if (!ABORT) {\r\n                    var y = Asyncify.exportCallStack.pop();\r\n                    assert(y === x);\r\n                    Asyncify.maybeStopUnwind();\r\n                  }\r\n                }\r\n              };\r\n            } else {\r\n              ret[x] = original;\r\n            }\r\n          })(x);\r\n        }\r\n        return ret;\r\n      },State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(funcName) {\r\n        var id = Asyncify.callStackNameToId[funcName];\r\n        if (id === undefined) {\r\n          id = Asyncify.callStackId++;\r\n          Asyncify.callStackNameToId[funcName] = id;\r\n          Asyncify.callStackIdToName[id] = funcName;\r\n        }\r\n        return id;\r\n      },maybeStopUnwind:function() {\r\n        if (Asyncify.currData &&\r\n            Asyncify.state === Asyncify.State.Unwinding &&\r\n            Asyncify.exportCallStack.length === 0) {\r\n          // We just finished unwinding.\r\n          // Be sure to set the state before calling any other functions to avoid\r\n          // possible infinite recursion here (For example in debug pthread builds\r\n          // the dbg() function itself can call back into WebAssembly to get the\r\n          // current pthread_self() pointer).\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          \r\n          // Keep the runtime alive so that a re-wind can be done later.\r\n          runAndAbortIfError(_asyncify_stop_unwind);\r\n          if (typeof Fibers != 'undefined') {\r\n            Fibers.trampoline();\r\n          }\r\n        }\r\n      },whenDone:function() {\r\n        return new Promise((resolve, reject) => {\r\n          Asyncify.asyncPromiseHandlers = {\r\n            resolve: resolve,\r\n            reject: reject\r\n          };\r\n        });\r\n      },allocateData:function() {\r\n        // An asyncify data structure has three fields:\r\n        //  0  current stack pos\r\n        //  4  max stack pos\r\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\r\n        //\r\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\r\n        // We also embed a stack in the same memory region here, right next to the structure.\r\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\r\n        var ptr = _malloc(12 + Asyncify.StackSize);\r\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\r\n        Asyncify.setDataRewindFunc(ptr);\r\n        return ptr;\r\n      },setDataHeader:function(ptr, stack, stackSize) {\r\n        HEAP32[((ptr)>>2)] = stack;\r\n        HEAP32[(((ptr)+(4))>>2)] = stack + stackSize;\r\n      },setDataRewindFunc:function(ptr) {\r\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\r\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\r\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\r\n      },getDataRewindFunc:function(ptr) {\r\n        var id = HEAP32[(((ptr)+(8))>>2)];\r\n        var name = Asyncify.callStackIdToName[id];\r\n        var func = Module['asm'][name];\r\n        return func;\r\n      },doRewind:function(ptr) {\r\n        var start = Asyncify.getDataRewindFunc(ptr);\r\n        // Once we have rewound and the stack we no longer need to artificially\r\n        // keep the runtime alive.\r\n        \r\n        return start();\r\n      },handleSleep:function(startAsync) {\r\n        if (ABORT) return;\r\n        if (Asyncify.state === Asyncify.State.Normal) {\r\n          // Prepare to sleep. Call startAsync, and see what happens:\r\n          // if the code decided to call our callback synchronously,\r\n          // then no async operation was in fact begun, and we don't\r\n          // need to do anything.\r\n          var reachedCallback = false;\r\n          var reachedAfterCallback = false;\r\n          startAsync((handleSleepReturnValue = 0) => {\r\n            if (ABORT) return;\r\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\r\n            reachedCallback = true;\r\n            if (!reachedAfterCallback) {\r\n              // We are happening synchronously, so no need for async.\r\n              return;\r\n            }\r\n            Asyncify.state = Asyncify.State.Rewinding;\r\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.resume();\r\n            }\r\n            var asyncWasmReturnValue, isError = false;\r\n            try {\r\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\r\n            } catch (err) {\r\n              asyncWasmReturnValue = err;\r\n              isError = true;\r\n            }\r\n            // Track whether the return value was handled by any promise handlers.\r\n            var handled = false;\r\n            if (!Asyncify.currData) {\r\n              // All asynchronous execution has finished.\r\n              // `asyncWasmReturnValue` now contains the final\r\n              // return value of the exported async WASM function.\r\n              //\r\n              // Note: `asyncWasmReturnValue` is distinct from\r\n              // `Asyncify.handleSleepReturnValue`.\r\n              // `Asyncify.handleSleepReturnValue` contains the return\r\n              // value of the last C function to have executed\r\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\r\n              // contains the return value of the exported WASM function\r\n              // that may have called C functions that\r\n              // call `Asyncify.handleSleep()`.\r\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\r\n              if (asyncPromiseHandlers) {\r\n                Asyncify.asyncPromiseHandlers = null;\r\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\r\n                handled = true;\r\n              }\r\n            }\r\n            if (isError && !handled) {\r\n              // If there was an error and it was not handled by now, we have no choice but to\r\n              // rethrow that error into the global scope where it can be caught only by\r\n              // `onerror` or `onunhandledpromiserejection`.\r\n              throw asyncWasmReturnValue;\r\n            }\r\n          });\r\n          reachedAfterCallback = true;\r\n          if (!reachedCallback) {\r\n            // A true async operation was begun; start a sleep.\r\n            Asyncify.state = Asyncify.State.Unwinding;\r\n            // TODO: reuse, don't alloc/free every sleep\r\n            Asyncify.currData = Asyncify.allocateData();\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.pause();\r\n            }\r\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\r\n          }\r\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\r\n          // Stop a resume.\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          runAndAbortIfError(_asyncify_stop_rewind);\r\n          _free(Asyncify.currData);\r\n          Asyncify.currData = null;\r\n          // Call all sleep callbacks now that the sleep-resume is all done.\r\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\r\n        } else {\r\n          abort('invalid state: ' + Asyncify.state);\r\n        }\r\n        return Asyncify.handleSleepReturnValue;\r\n      },handleAsync:function(startAsync) {\r\n        return Asyncify.handleSleep((wakeUp) => {\r\n          // TODO: add error handling as a second param when handleSleep implements it.\r\n          startAsync().then(wakeUp);\r\n        });\r\n      }};\r\n\r\n\r\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\r\n    if (!parent) {\r\n      parent = this;  // root node sets parent to itself\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev;\r\n  };\r\n  var readMode = 292/*292*/ | 73/*73*/;\r\n  var writeMode = 146/*146*/;\r\n  Object.defineProperties(FSNode.prototype, {\r\n   read: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & readMode) === readMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= readMode : this.mode &= ~readMode;\r\n    }\r\n   },\r\n   write: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & writeMode) === writeMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n    }\r\n   },\r\n   isFolder: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isDir(this.mode);\r\n    }\r\n   },\r\n   isDevice: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isChrdev(this.mode);\r\n    }\r\n   }\r\n  });\r\n  FS.FSNode = FSNode;\r\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\r\n\r\n      // exports\r\n      Module[\"requestFullscreen\"] = function Module_requestFullscreen(lockPointer, resizeCanvas) { Browser.requestFullscreen(lockPointer, resizeCanvas) };\r\n      Module[\"requestAnimationFrame\"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };\r\n      Module[\"setCanvasSize\"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };\r\n      Module[\"pauseMainLoop\"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };\r\n      Module[\"resumeMainLoop\"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };\r\n      Module[\"getUserMedia\"] = function Module_getUserMedia() { Browser.getUserMedia() };\r\n      Module[\"createContext\"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };\r\n      var preloadedImages = {};\r\n      var preloadedAudios = {};;\r\nvar GLctx;;\r\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\r\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\nvar __miniTempWebGLIntBuffersStorage = new Int32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  __miniTempWebGLIntBuffers[i] = __miniTempWebGLIntBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\n// include: base64Utils.js\r\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\r\n\r\n// This code was written by Tyler Akins and has been placed in the\r\n// public domain.  It would be nice if you left this header intact.\r\n// Base64 code from Tyler Akins -- http://rumkin.com\r\n\r\n/**\r\n * Decodes a base64 string.\r\n * @param {string} input The string to decode.\r\n */\r\nvar decodeBase64 = typeof atob == 'function' ? atob : function (input) {\r\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n  var output = '';\r\n  var chr1, chr2, chr3;\r\n  var enc1, enc2, enc3, enc4;\r\n  var i = 0;\r\n  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n  do {\r\n    enc1 = keyStr.indexOf(input.charAt(i++));\r\n    enc2 = keyStr.indexOf(input.charAt(i++));\r\n    enc3 = keyStr.indexOf(input.charAt(i++));\r\n    enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  } while (i < input.length);\r\n  return output;\r\n};\r\n\r\n// Converts a string of base64 into a byte array.\r\n// Throws error on invalid input.\r\nfunction intArrayFromBase64(s) {\r\n\r\n  try {\r\n    var decoded = decodeBase64(s);\r\n    var bytes = new Uint8Array(decoded.length);\r\n    for (var i = 0 ; i < decoded.length ; ++i) {\r\n      bytes[i] = decoded.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  } catch (_) {\r\n    throw new Error('Converting base64 string to bytes failed.');\r\n  }\r\n}\r\n\r\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\r\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\r\nfunction tryParseAsDataURI(filename) {\r\n  if (!isDataURI(filename)) {\r\n    return;\r\n  }\r\n\r\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\r\n}\r\n\r\n\r\n// end include: base64Utils.js\r\nvar wasmImports = {\r\n  \"__cxa_throw\": ___cxa_throw,\r\n  \"__syscall_chmod\": ___syscall_chmod,\r\n  \"__syscall_fchmod\": ___syscall_fchmod,\r\n  \"__syscall_fcntl64\": ___syscall_fcntl64,\r\n  \"__syscall_fstat64\": ___syscall_fstat64,\r\n  \"__syscall_ftruncate64\": ___syscall_ftruncate64,\r\n  \"__syscall_getcwd\": ___syscall_getcwd,\r\n  \"__syscall_getdents64\": ___syscall_getdents64,\r\n  \"__syscall_ioctl\": ___syscall_ioctl,\r\n  \"__syscall_lstat64\": ___syscall_lstat64,\r\n  \"__syscall_mkdirat\": ___syscall_mkdirat,\r\n  \"__syscall_newfstatat\": ___syscall_newfstatat,\r\n  \"__syscall_openat\": ___syscall_openat,\r\n  \"__syscall_rmdir\": ___syscall_rmdir,\r\n  \"__syscall_stat64\": ___syscall_stat64,\r\n  \"__syscall_unlinkat\": ___syscall_unlinkat,\r\n  \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\r\n  \"_localtime_js\": __localtime_js,\r\n  \"_mktime_js\": __mktime_js,\r\n  \"_tzset_js\": __tzset_js,\r\n  \"abort\": _abort,\r\n  \"eglBindAPI\": _eglBindAPI,\r\n  \"eglChooseConfig\": _eglChooseConfig,\r\n  \"eglCreateContext\": _eglCreateContext,\r\n  \"eglCreateWindowSurface\": _eglCreateWindowSurface,\r\n  \"eglDestroyContext\": _eglDestroyContext,\r\n  \"eglDestroySurface\": _eglDestroySurface,\r\n  \"eglGetConfigAttrib\": _eglGetConfigAttrib,\r\n  \"eglGetDisplay\": _eglGetDisplay,\r\n  \"eglGetError\": _eglGetError,\r\n  \"eglInitialize\": _eglInitialize,\r\n  \"eglMakeCurrent\": _eglMakeCurrent,\r\n  \"eglQueryString\": _eglQueryString,\r\n  \"eglSwapBuffers\": _eglSwapBuffers,\r\n  \"eglSwapInterval\": _eglSwapInterval,\r\n  \"eglTerminate\": _eglTerminate,\r\n  \"eglWaitGL\": _eglWaitGL,\r\n  \"eglWaitNative\": _eglWaitNative,\r\n  \"emscripten_asm_const_int\": _emscripten_asm_const_int,\r\n  \"emscripten_asm_const_int_sync_on_main_thread\": _emscripten_asm_const_int_sync_on_main_thread,\r\n  \"emscripten_date_now\": _emscripten_date_now,\r\n  \"emscripten_exit_fullscreen\": _emscripten_exit_fullscreen,\r\n  \"emscripten_exit_pointerlock\": _emscripten_exit_pointerlock,\r\n  \"emscripten_get_device_pixel_ratio\": _emscripten_get_device_pixel_ratio,\r\n  \"emscripten_get_element_css_size\": _emscripten_get_element_css_size,\r\n  \"emscripten_get_gamepad_status\": _emscripten_get_gamepad_status,\r\n  \"emscripten_get_now\": _emscripten_get_now,\r\n  \"emscripten_get_num_gamepads\": _emscripten_get_num_gamepads,\r\n  \"emscripten_get_screen_size\": _emscripten_get_screen_size,\r\n  \"emscripten_glActiveTexture\": _emscripten_glActiveTexture,\r\n  \"emscripten_glAttachShader\": _emscripten_glAttachShader,\r\n  \"emscripten_glBeginQuery\": _emscripten_glBeginQuery,\r\n  \"emscripten_glBeginQueryEXT\": _emscripten_glBeginQueryEXT,\r\n  \"emscripten_glBeginTransformFeedback\": _emscripten_glBeginTransformFeedback,\r\n  \"emscripten_glBindAttribLocation\": _emscripten_glBindAttribLocation,\r\n  \"emscripten_glBindBuffer\": _emscripten_glBindBuffer,\r\n  \"emscripten_glBindBufferBase\": _emscripten_glBindBufferBase,\r\n  \"emscripten_glBindBufferRange\": _emscripten_glBindBufferRange,\r\n  \"emscripten_glBindFramebuffer\": _emscripten_glBindFramebuffer,\r\n  \"emscripten_glBindRenderbuffer\": _emscripten_glBindRenderbuffer,\r\n  \"emscripten_glBindSampler\": _emscripten_glBindSampler,\r\n  \"emscripten_glBindTexture\": _emscripten_glBindTexture,\r\n  \"emscripten_glBindTransformFeedback\": _emscripten_glBindTransformFeedback,\r\n  \"emscripten_glBindVertexArray\": _emscripten_glBindVertexArray,\r\n  \"emscripten_glBindVertexArrayOES\": _emscripten_glBindVertexArrayOES,\r\n  \"emscripten_glBlendColor\": _emscripten_glBlendColor,\r\n  \"emscripten_glBlendEquation\": _emscripten_glBlendEquation,\r\n  \"emscripten_glBlendEquationSeparate\": _emscripten_glBlendEquationSeparate,\r\n  \"emscripten_glBlendFunc\": _emscripten_glBlendFunc,\r\n  \"emscripten_glBlendFuncSeparate\": _emscripten_glBlendFuncSeparate,\r\n  \"emscripten_glBlitFramebuffer\": _emscripten_glBlitFramebuffer,\r\n  \"emscripten_glBufferData\": _emscripten_glBufferData,\r\n  \"emscripten_glBufferSubData\": _emscripten_glBufferSubData,\r\n  \"emscripten_glCheckFramebufferStatus\": _emscripten_glCheckFramebufferStatus,\r\n  \"emscripten_glClear\": _emscripten_glClear,\r\n  \"emscripten_glClearBufferfi\": _emscripten_glClearBufferfi,\r\n  \"emscripten_glClearBufferfv\": _emscripten_glClearBufferfv,\r\n  \"emscripten_glClearBufferiv\": _emscripten_glClearBufferiv,\r\n  \"emscripten_glClearBufferuiv\": _emscripten_glClearBufferuiv,\r\n  \"emscripten_glClearColor\": _emscripten_glClearColor,\r\n  \"emscripten_glClearDepthf\": _emscripten_glClearDepthf,\r\n  \"emscripten_glClearStencil\": _emscripten_glClearStencil,\r\n  \"emscripten_glClientWaitSync\": _emscripten_glClientWaitSync,\r\n  \"emscripten_glColorMask\": _emscripten_glColorMask,\r\n  \"emscripten_glCompileShader\": _emscripten_glCompileShader,\r\n  \"emscripten_glCompressedTexImage2D\": _emscripten_glCompressedTexImage2D,\r\n  \"emscripten_glCompressedTexImage3D\": _emscripten_glCompressedTexImage3D,\r\n  \"emscripten_glCompressedTexSubImage2D\": _emscripten_glCompressedTexSubImage2D,\r\n  \"emscripten_glCompressedTexSubImage3D\": _emscripten_glCompressedTexSubImage3D,\r\n  \"emscripten_glCopyBufferSubData\": _emscripten_glCopyBufferSubData,\r\n  \"emscripten_glCopyTexImage2D\": _emscripten_glCopyTexImage2D,\r\n  \"emscripten_glCopyTexSubImage2D\": _emscripten_glCopyTexSubImage2D,\r\n  \"emscripten_glCopyTexSubImage3D\": _emscripten_glCopyTexSubImage3D,\r\n  \"emscripten_glCreateProgram\": _emscripten_glCreateProgram,\r\n  \"emscripten_glCreateShader\": _emscripten_glCreateShader,\r\n  \"emscripten_glCullFace\": _emscripten_glCullFace,\r\n  \"emscripten_glDeleteBuffers\": _emscripten_glDeleteBuffers,\r\n  \"emscripten_glDeleteFramebuffers\": _emscripten_glDeleteFramebuffers,\r\n  \"emscripten_glDeleteProgram\": _emscripten_glDeleteProgram,\r\n  \"emscripten_glDeleteQueries\": _emscripten_glDeleteQueries,\r\n  \"emscripten_glDeleteQueriesEXT\": _emscripten_glDeleteQueriesEXT,\r\n  \"emscripten_glDeleteRenderbuffers\": _emscripten_glDeleteRenderbuffers,\r\n  \"emscripten_glDeleteSamplers\": _emscripten_glDeleteSamplers,\r\n  \"emscripten_glDeleteShader\": _emscripten_glDeleteShader,\r\n  \"emscripten_glDeleteSync\": _emscripten_glDeleteSync,\r\n  \"emscripten_glDeleteTextures\": _emscripten_glDeleteTextures,\r\n  \"emscripten_glDeleteTransformFeedbacks\": _emscripten_glDeleteTransformFeedbacks,\r\n  \"emscripten_glDeleteVertexArrays\": _emscripten_glDeleteVertexArrays,\r\n  \"emscripten_glDeleteVertexArraysOES\": _emscripten_glDeleteVertexArraysOES,\r\n  \"emscripten_glDepthFunc\": _emscripten_glDepthFunc,\r\n  \"emscripten_glDepthMask\": _emscripten_glDepthMask,\r\n  \"emscripten_glDepthRangef\": _emscripten_glDepthRangef,\r\n  \"emscripten_glDetachShader\": _emscripten_glDetachShader,\r\n  \"emscripten_glDisable\": _emscripten_glDisable,\r\n  \"emscripten_glDisableVertexAttribArray\": _emscripten_glDisableVertexAttribArray,\r\n  \"emscripten_glDrawArrays\": _emscripten_glDrawArrays,\r\n  \"emscripten_glDrawArraysInstanced\": _emscripten_glDrawArraysInstanced,\r\n  \"emscripten_glDrawArraysInstancedANGLE\": _emscripten_glDrawArraysInstancedANGLE,\r\n  \"emscripten_glDrawArraysInstancedARB\": _emscripten_glDrawArraysInstancedARB,\r\n  \"emscripten_glDrawArraysInstancedEXT\": _emscripten_glDrawArraysInstancedEXT,\r\n  \"emscripten_glDrawArraysInstancedNV\": _emscripten_glDrawArraysInstancedNV,\r\n  \"emscripten_glDrawBuffers\": _emscripten_glDrawBuffers,\r\n  \"emscripten_glDrawBuffersEXT\": _emscripten_glDrawBuffersEXT,\r\n  \"emscripten_glDrawBuffersWEBGL\": _emscripten_glDrawBuffersWEBGL,\r\n  \"emscripten_glDrawElements\": _emscripten_glDrawElements,\r\n  \"emscripten_glDrawElementsInstanced\": _emscripten_glDrawElementsInstanced,\r\n  \"emscripten_glDrawElementsInstancedANGLE\": _emscripten_glDrawElementsInstancedANGLE,\r\n  \"emscripten_glDrawElementsInstancedARB\": _emscripten_glDrawElementsInstancedARB,\r\n  \"emscripten_glDrawElementsInstancedEXT\": _emscripten_glDrawElementsInstancedEXT,\r\n  \"emscripten_glDrawElementsInstancedNV\": _emscripten_glDrawElementsInstancedNV,\r\n  \"emscripten_glDrawRangeElements\": _emscripten_glDrawRangeElements,\r\n  \"emscripten_glEnable\": _emscripten_glEnable,\r\n  \"emscripten_glEnableVertexAttribArray\": _emscripten_glEnableVertexAttribArray,\r\n  \"emscripten_glEndQuery\": _emscripten_glEndQuery,\r\n  \"emscripten_glEndQueryEXT\": _emscripten_glEndQueryEXT,\r\n  \"emscripten_glEndTransformFeedback\": _emscripten_glEndTransformFeedback,\r\n  \"emscripten_glFenceSync\": _emscripten_glFenceSync,\r\n  \"emscripten_glFinish\": _emscripten_glFinish,\r\n  \"emscripten_glFlush\": _emscripten_glFlush,\r\n  \"emscripten_glFramebufferRenderbuffer\": _emscripten_glFramebufferRenderbuffer,\r\n  \"emscripten_glFramebufferTexture2D\": _emscripten_glFramebufferTexture2D,\r\n  \"emscripten_glFramebufferTextureLayer\": _emscripten_glFramebufferTextureLayer,\r\n  \"emscripten_glFrontFace\": _emscripten_glFrontFace,\r\n  \"emscripten_glGenBuffers\": _emscripten_glGenBuffers,\r\n  \"emscripten_glGenFramebuffers\": _emscripten_glGenFramebuffers,\r\n  \"emscripten_glGenQueries\": _emscripten_glGenQueries,\r\n  \"emscripten_glGenQueriesEXT\": _emscripten_glGenQueriesEXT,\r\n  \"emscripten_glGenRenderbuffers\": _emscripten_glGenRenderbuffers,\r\n  \"emscripten_glGenSamplers\": _emscripten_glGenSamplers,\r\n  \"emscripten_glGenTextures\": _emscripten_glGenTextures,\r\n  \"emscripten_glGenTransformFeedbacks\": _emscripten_glGenTransformFeedbacks,\r\n  \"emscripten_glGenVertexArrays\": _emscripten_glGenVertexArrays,\r\n  \"emscripten_glGenVertexArraysOES\": _emscripten_glGenVertexArraysOES,\r\n  \"emscripten_glGenerateMipmap\": _emscripten_glGenerateMipmap,\r\n  \"emscripten_glGetActiveAttrib\": _emscripten_glGetActiveAttrib,\r\n  \"emscripten_glGetActiveUniform\": _emscripten_glGetActiveUniform,\r\n  \"emscripten_glGetActiveUniformBlockName\": _emscripten_glGetActiveUniformBlockName,\r\n  \"emscripten_glGetActiveUniformBlockiv\": _emscripten_glGetActiveUniformBlockiv,\r\n  \"emscripten_glGetActiveUniformsiv\": _emscripten_glGetActiveUniformsiv,\r\n  \"emscripten_glGetAttachedShaders\": _emscripten_glGetAttachedShaders,\r\n  \"emscripten_glGetAttribLocation\": _emscripten_glGetAttribLocation,\r\n  \"emscripten_glGetBooleanv\": _emscripten_glGetBooleanv,\r\n  \"emscripten_glGetBufferParameteri64v\": _emscripten_glGetBufferParameteri64v,\r\n  \"emscripten_glGetBufferParameteriv\": _emscripten_glGetBufferParameteriv,\r\n  \"emscripten_glGetError\": _emscripten_glGetError,\r\n  \"emscripten_glGetFloatv\": _emscripten_glGetFloatv,\r\n  \"emscripten_glGetFragDataLocation\": _emscripten_glGetFragDataLocation,\r\n  \"emscripten_glGetFramebufferAttachmentParameteriv\": _emscripten_glGetFramebufferAttachmentParameteriv,\r\n  \"emscripten_glGetInteger64i_v\": _emscripten_glGetInteger64i_v,\r\n  \"emscripten_glGetInteger64v\": _emscripten_glGetInteger64v,\r\n  \"emscripten_glGetIntegeri_v\": _emscripten_glGetIntegeri_v,\r\n  \"emscripten_glGetIntegerv\": _emscripten_glGetIntegerv,\r\n  \"emscripten_glGetInternalformativ\": _emscripten_glGetInternalformativ,\r\n  \"emscripten_glGetProgramBinary\": _emscripten_glGetProgramBinary,\r\n  \"emscripten_glGetProgramInfoLog\": _emscripten_glGetProgramInfoLog,\r\n  \"emscripten_glGetProgramiv\": _emscripten_glGetProgramiv,\r\n  \"emscripten_glGetQueryObjecti64vEXT\": _emscripten_glGetQueryObjecti64vEXT,\r\n  \"emscripten_glGetQueryObjectivEXT\": _emscripten_glGetQueryObjectivEXT,\r\n  \"emscripten_glGetQueryObjectui64vEXT\": _emscripten_glGetQueryObjectui64vEXT,\r\n  \"emscripten_glGetQueryObjectuiv\": _emscripten_glGetQueryObjectuiv,\r\n  \"emscripten_glGetQueryObjectuivEXT\": _emscripten_glGetQueryObjectuivEXT,\r\n  \"emscripten_glGetQueryiv\": _emscripten_glGetQueryiv,\r\n  \"emscripten_glGetQueryivEXT\": _emscripten_glGetQueryivEXT,\r\n  \"emscripten_glGetRenderbufferParameteriv\": _emscripten_glGetRenderbufferParameteriv,\r\n  \"emscripten_glGetSamplerParameterfv\": _emscripten_glGetSamplerParameterfv,\r\n  \"emscripten_glGetSamplerParameteriv\": _emscripten_glGetSamplerParameteriv,\r\n  \"emscripten_glGetShaderInfoLog\": _emscripten_glGetShaderInfoLog,\r\n  \"emscripten_glGetShaderPrecisionFormat\": _emscripten_glGetShaderPrecisionFormat,\r\n  \"emscripten_glGetShaderSource\": _emscripten_glGetShaderSource,\r\n  \"emscripten_glGetShaderiv\": _emscripten_glGetShaderiv,\r\n  \"emscripten_glGetString\": _emscripten_glGetString,\r\n  \"emscripten_glGetStringi\": _emscripten_glGetStringi,\r\n  \"emscripten_glGetSynciv\": _emscripten_glGetSynciv,\r\n  \"emscripten_glGetTexParameterfv\": _emscripten_glGetTexParameterfv,\r\n  \"emscripten_glGetTexParameteriv\": _emscripten_glGetTexParameteriv,\r\n  \"emscripten_glGetTransformFeedbackVarying\": _emscripten_glGetTransformFeedbackVarying,\r\n  \"emscripten_glGetUniformBlockIndex\": _emscripten_glGetUniformBlockIndex,\r\n  \"emscripten_glGetUniformIndices\": _emscripten_glGetUniformIndices,\r\n  \"emscripten_glGetUniformLocation\": _emscripten_glGetUniformLocation,\r\n  \"emscripten_glGetUniformfv\": _emscripten_glGetUniformfv,\r\n  \"emscripten_glGetUniformiv\": _emscripten_glGetUniformiv,\r\n  \"emscripten_glGetUniformuiv\": _emscripten_glGetUniformuiv,\r\n  \"emscripten_glGetVertexAttribIiv\": _emscripten_glGetVertexAttribIiv,\r\n  \"emscripten_glGetVertexAttribIuiv\": _emscripten_glGetVertexAttribIuiv,\r\n  \"emscripten_glGetVertexAttribPointerv\": _emscripten_glGetVertexAttribPointerv,\r\n  \"emscripten_glGetVertexAttribfv\": _emscripten_glGetVertexAttribfv,\r\n  \"emscripten_glGetVertexAttribiv\": _emscripten_glGetVertexAttribiv,\r\n  \"emscripten_glHint\": _emscripten_glHint,\r\n  \"emscripten_glInvalidateFramebuffer\": _emscripten_glInvalidateFramebuffer,\r\n  \"emscripten_glInvalidateSubFramebuffer\": _emscripten_glInvalidateSubFramebuffer,\r\n  \"emscripten_glIsBuffer\": _emscripten_glIsBuffer,\r\n  \"emscripten_glIsEnabled\": _emscripten_glIsEnabled,\r\n  \"emscripten_glIsFramebuffer\": _emscripten_glIsFramebuffer,\r\n  \"emscripten_glIsProgram\": _emscripten_glIsProgram,\r\n  \"emscripten_glIsQuery\": _emscripten_glIsQuery,\r\n  \"emscripten_glIsQueryEXT\": _emscripten_glIsQueryEXT,\r\n  \"emscripten_glIsRenderbuffer\": _emscripten_glIsRenderbuffer,\r\n  \"emscripten_glIsSampler\": _emscripten_glIsSampler,\r\n  \"emscripten_glIsShader\": _emscripten_glIsShader,\r\n  \"emscripten_glIsSync\": _emscripten_glIsSync,\r\n  \"emscripten_glIsTexture\": _emscripten_glIsTexture,\r\n  \"emscripten_glIsTransformFeedback\": _emscripten_glIsTransformFeedback,\r\n  \"emscripten_glIsVertexArray\": _emscripten_glIsVertexArray,\r\n  \"emscripten_glIsVertexArrayOES\": _emscripten_glIsVertexArrayOES,\r\n  \"emscripten_glLineWidth\": _emscripten_glLineWidth,\r\n  \"emscripten_glLinkProgram\": _emscripten_glLinkProgram,\r\n  \"emscripten_glPauseTransformFeedback\": _emscripten_glPauseTransformFeedback,\r\n  \"emscripten_glPixelStorei\": _emscripten_glPixelStorei,\r\n  \"emscripten_glPolygonOffset\": _emscripten_glPolygonOffset,\r\n  \"emscripten_glProgramBinary\": _emscripten_glProgramBinary,\r\n  \"emscripten_glProgramParameteri\": _emscripten_glProgramParameteri,\r\n  \"emscripten_glQueryCounterEXT\": _emscripten_glQueryCounterEXT,\r\n  \"emscripten_glReadBuffer\": _emscripten_glReadBuffer,\r\n  \"emscripten_glReadPixels\": _emscripten_glReadPixels,\r\n  \"emscripten_glReleaseShaderCompiler\": _emscripten_glReleaseShaderCompiler,\r\n  \"emscripten_glRenderbufferStorage\": _emscripten_glRenderbufferStorage,\r\n  \"emscripten_glRenderbufferStorageMultisample\": _emscripten_glRenderbufferStorageMultisample,\r\n  \"emscripten_glResumeTransformFeedback\": _emscripten_glResumeTransformFeedback,\r\n  \"emscripten_glSampleCoverage\": _emscripten_glSampleCoverage,\r\n  \"emscripten_glSamplerParameterf\": _emscripten_glSamplerParameterf,\r\n  \"emscripten_glSamplerParameterfv\": _emscripten_glSamplerParameterfv,\r\n  \"emscripten_glSamplerParameteri\": _emscripten_glSamplerParameteri,\r\n  \"emscripten_glSamplerParameteriv\": _emscripten_glSamplerParameteriv,\r\n  \"emscripten_glScissor\": _emscripten_glScissor,\r\n  \"emscripten_glShaderBinary\": _emscripten_glShaderBinary,\r\n  \"emscripten_glShaderSource\": _emscripten_glShaderSource,\r\n  \"emscripten_glStencilFunc\": _emscripten_glStencilFunc,\r\n  \"emscripten_glStencilFuncSeparate\": _emscripten_glStencilFuncSeparate,\r\n  \"emscripten_glStencilMask\": _emscripten_glStencilMask,\r\n  \"emscripten_glStencilMaskSeparate\": _emscripten_glStencilMaskSeparate,\r\n  \"emscripten_glStencilOp\": _emscripten_glStencilOp,\r\n  \"emscripten_glStencilOpSeparate\": _emscripten_glStencilOpSeparate,\r\n  \"emscripten_glTexImage2D\": _emscripten_glTexImage2D,\r\n  \"emscripten_glTexImage3D\": _emscripten_glTexImage3D,\r\n  \"emscripten_glTexParameterf\": _emscripten_glTexParameterf,\r\n  \"emscripten_glTexParameterfv\": _emscripten_glTexParameterfv,\r\n  \"emscripten_glTexParameteri\": _emscripten_glTexParameteri,\r\n  \"emscripten_glTexParameteriv\": _emscripten_glTexParameteriv,\r\n  \"emscripten_glTexStorage2D\": _emscripten_glTexStorage2D,\r\n  \"emscripten_glTexStorage3D\": _emscripten_glTexStorage3D,\r\n  \"emscripten_glTexSubImage2D\": _emscripten_glTexSubImage2D,\r\n  \"emscripten_glTexSubImage3D\": _emscripten_glTexSubImage3D,\r\n  \"emscripten_glTransformFeedbackVaryings\": _emscripten_glTransformFeedbackVaryings,\r\n  \"emscripten_glUniform1f\": _emscripten_glUniform1f,\r\n  \"emscripten_glUniform1fv\": _emscripten_glUniform1fv,\r\n  \"emscripten_glUniform1i\": _emscripten_glUniform1i,\r\n  \"emscripten_glUniform1iv\": _emscripten_glUniform1iv,\r\n  \"emscripten_glUniform1ui\": _emscripten_glUniform1ui,\r\n  \"emscripten_glUniform1uiv\": _emscripten_glUniform1uiv,\r\n  \"emscripten_glUniform2f\": _emscripten_glUniform2f,\r\n  \"emscripten_glUniform2fv\": _emscripten_glUniform2fv,\r\n  \"emscripten_glUniform2i\": _emscripten_glUniform2i,\r\n  \"emscripten_glUniform2iv\": _emscripten_glUniform2iv,\r\n  \"emscripten_glUniform2ui\": _emscripten_glUniform2ui,\r\n  \"emscripten_glUniform2uiv\": _emscripten_glUniform2uiv,\r\n  \"emscripten_glUniform3f\": _emscripten_glUniform3f,\r\n  \"emscripten_glUniform3fv\": _emscripten_glUniform3fv,\r\n  \"emscripten_glUniform3i\": _emscripten_glUniform3i,\r\n  \"emscripten_glUniform3iv\": _emscripten_glUniform3iv,\r\n  \"emscripten_glUniform3ui\": _emscripten_glUniform3ui,\r\n  \"emscripten_glUniform3uiv\": _emscripten_glUniform3uiv,\r\n  \"emscripten_glUniform4f\": _emscripten_glUniform4f,\r\n  \"emscripten_glUniform4fv\": _emscripten_glUniform4fv,\r\n  \"emscripten_glUniform4i\": _emscripten_glUniform4i,\r\n  \"emscripten_glUniform4iv\": _emscripten_glUniform4iv,\r\n  \"emscripten_glUniform4ui\": _emscripten_glUniform4ui,\r\n  \"emscripten_glUniform4uiv\": _emscripten_glUniform4uiv,\r\n  \"emscripten_glUniformBlockBinding\": _emscripten_glUniformBlockBinding,\r\n  \"emscripten_glUniformMatrix2fv\": _emscripten_glUniformMatrix2fv,\r\n  \"emscripten_glUniformMatrix2x3fv\": _emscripten_glUniformMatrix2x3fv,\r\n  \"emscripten_glUniformMatrix2x4fv\": _emscripten_glUniformMatrix2x4fv,\r\n  \"emscripten_glUniformMatrix3fv\": _emscripten_glUniformMatrix3fv,\r\n  \"emscripten_glUniformMatrix3x2fv\": _emscripten_glUniformMatrix3x2fv,\r\n  \"emscripten_glUniformMatrix3x4fv\": _emscripten_glUniformMatrix3x4fv,\r\n  \"emscripten_glUniformMatrix4fv\": _emscripten_glUniformMatrix4fv,\r\n  \"emscripten_glUniformMatrix4x2fv\": _emscripten_glUniformMatrix4x2fv,\r\n  \"emscripten_glUniformMatrix4x3fv\": _emscripten_glUniformMatrix4x3fv,\r\n  \"emscripten_glUseProgram\": _emscripten_glUseProgram,\r\n  \"emscripten_glValidateProgram\": _emscripten_glValidateProgram,\r\n  \"emscripten_glVertexAttrib1f\": _emscripten_glVertexAttrib1f,\r\n  \"emscripten_glVertexAttrib1fv\": _emscripten_glVertexAttrib1fv,\r\n  \"emscripten_glVertexAttrib2f\": _emscripten_glVertexAttrib2f,\r\n  \"emscripten_glVertexAttrib2fv\": _emscripten_glVertexAttrib2fv,\r\n  \"emscripten_glVertexAttrib3f\": _emscripten_glVertexAttrib3f,\r\n  \"emscripten_glVertexAttrib3fv\": _emscripten_glVertexAttrib3fv,\r\n  \"emscripten_glVertexAttrib4f\": _emscripten_glVertexAttrib4f,\r\n  \"emscripten_glVertexAttrib4fv\": _emscripten_glVertexAttrib4fv,\r\n  \"emscripten_glVertexAttribDivisor\": _emscripten_glVertexAttribDivisor,\r\n  \"emscripten_glVertexAttribDivisorANGLE\": _emscripten_glVertexAttribDivisorANGLE,\r\n  \"emscripten_glVertexAttribDivisorARB\": _emscripten_glVertexAttribDivisorARB,\r\n  \"emscripten_glVertexAttribDivisorEXT\": _emscripten_glVertexAttribDivisorEXT,\r\n  \"emscripten_glVertexAttribDivisorNV\": _emscripten_glVertexAttribDivisorNV,\r\n  \"emscripten_glVertexAttribI4i\": _emscripten_glVertexAttribI4i,\r\n  \"emscripten_glVertexAttribI4iv\": _emscripten_glVertexAttribI4iv,\r\n  \"emscripten_glVertexAttribI4ui\": _emscripten_glVertexAttribI4ui,\r\n  \"emscripten_glVertexAttribI4uiv\": _emscripten_glVertexAttribI4uiv,\r\n  \"emscripten_glVertexAttribIPointer\": _emscripten_glVertexAttribIPointer,\r\n  \"emscripten_glVertexAttribPointer\": _emscripten_glVertexAttribPointer,\r\n  \"emscripten_glViewport\": _emscripten_glViewport,\r\n  \"emscripten_glWaitSync\": _emscripten_glWaitSync,\r\n  \"emscripten_has_asyncify\": _emscripten_has_asyncify,\r\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"emscripten_request_fullscreen_strategy\": _emscripten_request_fullscreen_strategy,\r\n  \"emscripten_request_pointerlock\": _emscripten_request_pointerlock,\r\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"emscripten_sample_gamepad_data\": _emscripten_sample_gamepad_data,\r\n  \"emscripten_set_beforeunload_callback_on_thread\": _emscripten_set_beforeunload_callback_on_thread,\r\n  \"emscripten_set_blur_callback_on_thread\": _emscripten_set_blur_callback_on_thread,\r\n  \"emscripten_set_canvas_element_size\": _emscripten_set_canvas_element_size,\r\n  \"emscripten_set_element_css_size\": _emscripten_set_element_css_size,\r\n  \"emscripten_set_focus_callback_on_thread\": _emscripten_set_focus_callback_on_thread,\r\n  \"emscripten_set_fullscreenchange_callback_on_thread\": _emscripten_set_fullscreenchange_callback_on_thread,\r\n  \"emscripten_set_gamepadconnected_callback_on_thread\": _emscripten_set_gamepadconnected_callback_on_thread,\r\n  \"emscripten_set_gamepaddisconnected_callback_on_thread\": _emscripten_set_gamepaddisconnected_callback_on_thread,\r\n  \"emscripten_set_keydown_callback_on_thread\": _emscripten_set_keydown_callback_on_thread,\r\n  \"emscripten_set_keypress_callback_on_thread\": _emscripten_set_keypress_callback_on_thread,\r\n  \"emscripten_set_keyup_callback_on_thread\": _emscripten_set_keyup_callback_on_thread,\r\n  \"emscripten_set_main_loop\": _emscripten_set_main_loop,\r\n  \"emscripten_set_mousedown_callback_on_thread\": _emscripten_set_mousedown_callback_on_thread,\r\n  \"emscripten_set_mouseenter_callback_on_thread\": _emscripten_set_mouseenter_callback_on_thread,\r\n  \"emscripten_set_mouseleave_callback_on_thread\": _emscripten_set_mouseleave_callback_on_thread,\r\n  \"emscripten_set_mousemove_callback_on_thread\": _emscripten_set_mousemove_callback_on_thread,\r\n  \"emscripten_set_mouseup_callback_on_thread\": _emscripten_set_mouseup_callback_on_thread,\r\n  \"emscripten_set_pointerlockchange_callback_on_thread\": _emscripten_set_pointerlockchange_callback_on_thread,\r\n  \"emscripten_set_resize_callback_on_thread\": _emscripten_set_resize_callback_on_thread,\r\n  \"emscripten_set_touchcancel_callback_on_thread\": _emscripten_set_touchcancel_callback_on_thread,\r\n  \"emscripten_set_touchend_callback_on_thread\": _emscripten_set_touchend_callback_on_thread,\r\n  \"emscripten_set_touchmove_callback_on_thread\": _emscripten_set_touchmove_callback_on_thread,\r\n  \"emscripten_set_touchstart_callback_on_thread\": _emscripten_set_touchstart_callback_on_thread,\r\n  \"emscripten_set_visibilitychange_callback_on_thread\": _emscripten_set_visibilitychange_callback_on_thread,\r\n  \"emscripten_set_wheel_callback_on_thread\": _emscripten_set_wheel_callback_on_thread,\r\n  \"emscripten_set_window_title\": _emscripten_set_window_title,\r\n  \"emscripten_sleep\": _emscripten_sleep,\r\n  \"environ_get\": _environ_get,\r\n  \"environ_sizes_get\": _environ_sizes_get,\r\n  \"exit\": _exit,\r\n  \"fd_close\": _fd_close,\r\n  \"fd_fdstat_get\": _fd_fdstat_get,\r\n  \"fd_read\": _fd_read,\r\n  \"fd_seek\": _fd_seek,\r\n  \"fd_write\": _fd_write,\r\n  \"glGetFloatv\": _glGetFloatv,\r\n  \"strftime\": _strftime,\r\n  \"strftime_l\": _strftime_l\r\n};\r\nvar asm = createWasm();\r\n/** @type {function(...*):?} */\r\nvar ___wasm_call_ctors = function() {\r\n  return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _free = function() {\r\n  return (_free = Module[\"asm\"][\"free\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _malloc = function() {\r\n  return (_malloc = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___errno_location = function() {\r\n  return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebMain = Module[\"_I_WebMain\"] = function() {\r\n  return (_I_WebMain = Module[\"_I_WebMain\"] = Module[\"asm\"][\"I_WebMain\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _main = Module[\"_main\"] = function() {\r\n  return (_main = Module[\"_main\"] = Module[\"asm\"][\"__main_argc_argv\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___dl_seterr = function() {\r\n  return (___dl_seterr = Module[\"asm\"][\"__dl_seterr\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _memcpy = function() {\r\n  return (_memcpy = Module[\"asm\"][\"memcpy\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_set_limits = function() {\r\n  return (_emscripten_stack_set_limits = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_base = function() {\r\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_end = function() {\r\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackSave = function() {\r\n  return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackRestore = function() {\r\n  return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackAlloc = function() {\r\n  return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_is_pointer_type = function() {\r\n  return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"dynCall_vi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"dynCall_viiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"dynCall_iii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"dynCall_ii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vif = Module[\"dynCall_vif\"] = function() {\r\n  return (dynCall_vif = Module[\"dynCall_vif\"] = Module[\"asm\"][\"dynCall_vif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vffff = Module[\"dynCall_vffff\"] = function() {\r\n  return (dynCall_vffff = Module[\"dynCall_vffff\"] = Module[\"asm\"][\"dynCall_vffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dynCall_vii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"dynCall_iiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"dynCall_viii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfff = Module[\"dynCall_vfff\"] = function() {\r\n  return (dynCall_vfff = Module[\"dynCall_vfff\"] = Module[\"asm\"][\"dynCall_vfff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"dynCall_v\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viif = Module[\"dynCall_viif\"] = function() {\r\n  return (dynCall_viif = Module[\"dynCall_viif\"] = Module[\"asm\"][\"dynCall_viif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiid = Module[\"dynCall_iiid\"] = function() {\r\n  return (dynCall_iiid = Module[\"dynCall_iiid\"] = Module[\"asm\"][\"dynCall_iiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vf = Module[\"dynCall_vf\"] = function() {\r\n  return (dynCall_vf = Module[\"dynCall_vf\"] = Module[\"asm\"][\"dynCall_vf\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vff = Module[\"dynCall_vff\"] = function() {\r\n  return (dynCall_vff = Module[\"dynCall_vff\"] = Module[\"asm\"][\"dynCall_vff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\r\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"dynCall_iiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iji = Module[\"dynCall_iji\"] = function() {\r\n  return (dynCall_iji = Module[\"dynCall_iji\"] = Module[\"asm\"][\"dynCall_iji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = function() {\r\n  return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"dynCall_iijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return (dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"dynCall_viiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"dynCall_i\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfi = Module[\"dynCall_vfi\"] = function() {\r\n  return (dynCall_vfi = Module[\"dynCall_vfi\"] = Module[\"asm\"][\"dynCall_vfi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viff = Module[\"dynCall_viff\"] = function() {\r\n  return (dynCall_viff = Module[\"dynCall_viff\"] = Module[\"asm\"][\"dynCall_viff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vifff = Module[\"dynCall_vifff\"] = function() {\r\n  return (dynCall_vifff = Module[\"dynCall_vifff\"] = Module[\"asm\"][\"dynCall_vifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viffff = Module[\"dynCall_viffff\"] = function() {\r\n  return (dynCall_viffff = Module[\"dynCall_viffff\"] = Module[\"asm\"][\"dynCall_viffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifi = Module[\"dynCall_viifi\"] = function() {\r\n  return (dynCall_viifi = Module[\"dynCall_viifi\"] = Module[\"asm\"][\"dynCall_viifi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifff = Module[\"dynCall_viifff\"] = function() {\r\n  return (dynCall_viifff = Module[\"dynCall_viifff\"] = Module[\"asm\"][\"dynCall_viifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifffii = Module[\"dynCall_viifffii\"] = function() {\r\n  return (dynCall_viifffii = Module[\"dynCall_viifffii\"] = Module[\"asm\"][\"dynCall_viifffii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = function() {\r\n  return (dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = Module[\"asm\"][\"dynCall_viiiifiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_diii = Module[\"dynCall_diii\"] = function() {\r\n  return (dynCall_diii = Module[\"dynCall_diii\"] = Module[\"asm\"][\"dynCall_diii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiid = Module[\"dynCall_viiid\"] = function() {\r\n  return (dynCall_viiid = Module[\"dynCall_viiid\"] = Module[\"asm\"][\"dynCall_viiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = function() {\r\n  return (dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = Module[\"asm\"][\"dynCall_viiiddd\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vid = Module[\"dynCall_vid\"] = function() {\r\n  return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"dynCall_vid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiffi = Module[\"dynCall_viiffi\"] = function() {\r\n  return (dynCall_viiffi = Module[\"dynCall_viiffi\"] = Module[\"asm\"][\"dynCall_viiffi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = function() {\r\n  return (dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = Module[\"asm\"][\"dynCall_iiiifii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = function() {\r\n  return (dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = Module[\"asm\"][\"dynCall_iiiiif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vijji = Module[\"dynCall_vijji\"] = function() {\r\n  return (dynCall_vijji = Module[\"dynCall_vijji\"] = Module[\"asm\"][\"dynCall_vijji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function() {\r\n  return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\r\n  return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = function() {\r\n  return (dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = Module[\"asm\"][\"dynCall_iiiiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\r\n  return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\r\n  return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\r\n  return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_unwind = function() {\r\n  return (_asyncify_start_unwind = Module[\"asm\"][\"asyncify_start_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_unwind = function() {\r\n  return (_asyncify_stop_unwind = Module[\"asm\"][\"asyncify_stop_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_rewind = function() {\r\n  return (_asyncify_start_rewind = Module[\"asm\"][\"asyncify_start_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_rewind = function() {\r\n  return (_asyncify_stop_rewind = Module[\"asm\"][\"asyncify_stop_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule[\"addRunDependency\"] = addRunDependency;\r\nModule[\"removeRunDependency\"] = removeRunDependency;\r\nModule[\"FS_createPath\"] = FS.createPath;\r\nModule[\"FS_createDataFile\"] = FS.createDataFile;\r\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\nModule[\"FS_createLazyFile\"] = FS.createLazyFile;\r\nModule[\"FS_createDevice\"] = FS.createDevice;\r\nModule[\"FS_unlink\"] = FS.unlink;\r\nModule[\"LZ4\"] = LZ4;\r\n\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain(args = []) {\r\n\r\n  var entryFunction = _main;\r\n\r\n  args.unshift(thisProgram);\r\n\r\n  var argc = args.length;\r\n  var argv = stackAlloc((argc + 1) * 4);\r\n  var argv_ptr = argv >> 2;\r\n  args.forEach((arg) => {\r\n    HEAP32[argv_ptr++] = allocateUTF8OnStack(arg);\r\n  });\r\n  HEAP32[argv_ptr] = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // In PROXY_TO_PTHREAD builds, we should never exit the runtime below, as\r\n    // execution is asynchronously handed off to a pthread.\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\n/** @type {function(Array=)} */\r\nfunction run(args = arguments_) {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  preRun();\r\n\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = true;\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n    if (shouldRunNow) callMain(args);\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n\r\n// end include: postamble.js\r\n\r\n\r\n  return createEdgeModule.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = createEdgeModule;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return createEdgeModule; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"createEdgeModule\"] = createEdgeModule;\r\n"],"sourceRoot":""}